<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ouuan.moe/tag/Web</id>
    <title>ouuan's blog: 标签: Web</title>
    <updated>2023-03-04T03:42:29.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>ouuan</name>
        <uri>https://github.com/ouuan</uri>
    </author>
    <link rel="alternate" href="https://ouuan.moe/tag/Web"/>
    <link rel="self" href="https://ouuan.moe/tag/Web/feed.atom"/>
    <subtitle>标签: Web - ouuan 的博客。</subtitle>
    <icon>https://ouuan.moe/favicon.ico</icon>
    <rights>Copyright © 2022 - 2024 ouuan
Licensed under CC BY-SA 4.0</rights>
    <entry>
        <title type="html"><![CDATA[当你的技术栈与软工交集为空（x]]></title>
        <id>https://ouuan.moe/post/2023/03/thuse</id>
        <link href="https://ouuan.moe/post/2023/03/thuse"/>
        <updated>2023-03-04T03:42:29.000Z</updated>
        <summary type="html"><![CDATA[


<p>很好<span class="mojikumi-line-end">，</span>你已经学会了 Vue<span class="mojikumi-line-end">、</span>Rust<span class="mojikumi-line-end">、</span>Actix<span class="mojikumi-line-end">、</span>GitHub Actions<span class="mojikumi-line-end">、</span>pnpm<span class="mojikumi-line-end">、</span>Vitest<span class="mojikumi-line-end">、</span>Caddy</p>
<p>现在你可以使用 React<span class="mojikumi-line-end">、</span>Python<span class="mojikumi-line-end">、</span>Django<span class="mojikumi-line-end">、</span>GitLab CI<span class="mojikumi-line-end">、</span>yarn<span class="mojikumi-line-end">、</span>Jest<span class="mojikumi-line-end">、</span>Nginx 来完成软工作业了<span class="mojikumi-line-start">（</span></p>
]]></summary>
        <content type="html"><![CDATA[


<p>很好<span class="mojikumi-line-end">，</span>你已经学会了 Vue<span class="mojikumi-line-end">、</span>Rust<span class="mojikumi-line-end">、</span>Actix<span class="mojikumi-line-end">、</span>GitHub Actions<span class="mojikumi-line-end">、</span>pnpm<span class="mojikumi-line-end">、</span>Vitest<span class="mojikumi-line-end">、</span>Caddy</p>
<p>现在你可以使用 React<span class="mojikumi-line-end">、</span>Python<span class="mojikumi-line-end">、</span>Django<span class="mojikumi-line-end">、</span>GitLab CI<span class="mojikumi-line-end">、</span>yarn<span class="mojikumi-line-end">、</span>Jest<span class="mojikumi-line-end">、</span>Nginx 来完成软工作业了<span class="mojikumi-line-start">（</span></p>

<p><picture><source type="image/webp" srcset="/assets/tech-stack.2c5179c8.webp"><img srcset="/assets/tech-stack.4ab32981.jpeg" loading="lazy" src="/assets/tech-stack.4ab32981.jpeg" width="500" height="626" alt="技术栈交集为空的 meme"></picture></p>
<p><span class="mojikumi-line-start">（</span>其实这里面比较有问题的就只有 React<span class="mojikumi-line-end">，</span>其他都还好<span class="mojikumi-line-end">，</span><s>只是数量多凑一点 meme 效果更好</s><span class="mojikumi-line-end">）</span></p>
<h2 id="小作业" class="heading"><a href="#小作业" class="heading-anchor" aria-label="章节： 小作业" tabindex="-1"></a><span>小作业</span></h2>
<h3 id="django-后端小作业" class="heading"><a href="#django-后端小作业" class="heading-anchor" aria-label="章节： Django 后端小作业" tabindex="-1"></a><span>Django 后端小作业</span></h3>
<p>每一处需要修改的代码都列出来了<span class="mojikumi-line-end">，</span>还有详细的注释告诉你要干什么<span class="mojikumi-line-end">。</span>Django 完全没学<span class="mojikumi-line-end">，</span>就根据提示查了一处文档<span class="mojikumi-line-end">，</span>代码的整体逻辑也没搞清楚<span class="mojikumi-line-end">。</span></p>
<p>感觉写完之后理解了 ChatGPT<span class="mojikumi-line-end">，</span>看着注释和示例补全代码根本就不需要学会如何写代码嘛<span class="mojikumi-line-start">（</span></p>
<h3 id="学-react" class="heading"><a href="#学-react" class="heading-anchor" aria-label="章节： 学 React" tabindex="-1"></a><span>学 React</span></h3>
<p>小作业应该不需要怎么学 React<span class="mojikumi-line-end">，</span>但还是把 <a href="https://beta.reactjs.org/learn">Learn React (Beta)</a> 完整过了一遍<span class="mojikumi-line-end">。</span></p>
<p>之前都在 Twitter 上云 React<span class="mojikumi-line-end">，</span>学了之后终于有喜欢 Vue 的自信了<span class="mojikumi-line-start">（</span><s>所以说 X 自信就是要允许 Y 才能有<span class="mojikumi-line-end">，</span>以 X 自信为名打压 Y 到底是什么操作</s></p>
<a id="vue-用户初学-react-感到不适的一些点" name="vue-用户初学-react-感到不适的一些点" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>Vue 用户初学 React 感到不适的一些点</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ul>
<li>我希望 HTML 放在统一<span class="mojikumi-line-end">、</span>独立的位置<span class="mojikumi-line-end">，</span>不分散在多处<span class="mojikumi-line-end">，</span>不和 JS 代码在结构上混在一起<span class="mojikumi-line-end">。</span></li>
<li><code>v-if</code> 要用 if-else / <code>?:</code> / <code>&#x26;&#x26;</code> 实现<span class="mojikumi-line-end">：</span>我不希望在 JSX 外部写 if-else<span class="mojikumi-line-end">；</span>表达式的括号可能引入额外的缩进<span class="mojikumi-line-end">；</span><code>?:</code> 实现多级 else if 可能看不清<span class="mojikumi-line-end">；</span>修改代码时不像 <code>v-if</code> 只需要添加一行不影响其他行<span class="mojikumi-line-end">。</span>总之就是感觉很丑<span class="mojikumi-line-start">（</span></li>
<li><code>v-for</code> 要自己使用 JS 计算得到<span class="mojikumi-line-end">。</span></li>
<li>不支持 named slot<span class="mojikumi-line-start">（</span>可以用 prop 替代但感觉不是很优雅<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>event handler 不能 <code>count += 1</code> 必须 <code>() => count += 1</code><span class="mojikumi-line-end">。</span></li>
<li>虽然只是个语法糖<span class="mojikumi-line-end">，</span>但似乎没有 <code>v-model</code> 等价物<span class="mojikumi-line-end">。</span></li>
<li>没有 event modifier (<code>@<wbr>click<wbr>.<wbr>stop</code>)<span class="mojikumi-line-end">，</span>需要手动 <code>e<wbr>.<wbr>stopPropagation<wbr>()</code><span class="mojikumi-line-end">。</span></li>
<li>需要用 setter function 来修改 state<span class="mojikumi-line-end">，</span><code>useState</code> 返回两个变量<span class="mojikumi-line-end">。</span></li>
<li>state 是 snapshot<span class="mojikumi-line-end">，</span>反直觉<span class="mojikumi-line-end">。</span>教程里说这样可以避免一些 timing mistake<span class="mojikumi-line-end">，</span>但我感觉在 Vue 里一般只要传值而不是 ref 就行？确实有一定意义但我还是更希望符合直觉<span class="mojikumi-line-end">。</span></li>
<li>修改 object / array state 很麻烦<span class="mojikumi-line-end">，</span>使用 Immer 的话似乎就和 Vue 差不多了<span class="mojikumi-line-end">。</span></li>
<li>state 绑定在树的每个位置上<span class="mojikumi-line-end">，</span>而非存在 component 里<span class="mojikumi-line-end">。</span></li>
<li><code>useMemo</code> 需要手动指定依赖<span class="mojikumi-line-end">，</span><code>computed</code> 不需要<span class="mojikumi-line-end">。</span></li>
</ul><p>本来想把 <code>useEffect</code> 也列出来<span class="mojikumi-line-end">，</span>但 React 的 <a href="https://beta.reactjs.org/learn/lifecycle-of-reactive-effects#thinking-from-the-effects-perspective">这种设计思路</a> 似乎也有一定道理<span class="mojikumi-line-end">。</span></p><p>但当我写出 <code>useEffect<wbr>(() => () => <wbr>clearInterval<wbr>(<wbr>timerRef<wbr>.<wbr>current<wbr>), [])</code> 的时候我还是不明白了<span class="mojikumi-line-end">，</span>这也能<span class="mojikumi-line-start">“</span>从 Effect 的角度思考<span class="mojikumi-line-end">”</span>吗<span class="mojikumi-line-end">，</span>给个 <code>onUnmounted</code> 不好吗<span class="mojikumi-line-end">。</span></p></div></details></aside>
<a id="高情商与低情商" name="高情商与低情商" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>高情商与低情商</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>我在群里问了个问题<span class="mojikumi-line-end">，</span>结果助教全都跑来加我好友<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-start">（</span></p><p>那我也不客气了<span class="mojikumi-line-end">，</span>上来就问为什么换成 React<span class="mojikumi-line-end">，</span>bksw<span class="mojikumi-line-start">（</span></p><p><picture><source type="image/webp" srcset="/assets/eq.9ae66d49.webp"><img srcset="/assets/eq.a2547205.png" loading="lazy" src="/assets/eq.a2547205.png" width="383" height="850" alt="和助教的消息记录"></picture></p><p><s>不难看出<span class="mojikumi-line-end">，</span>这里面情商最低的是我</s></p></div></details></aside>
<h3 id="react-next-js-前端小作业" class="heading"><a href="#react-next-js-前端小作业" class="heading-anchor" aria-label="章节： React (Next.js) 前端小作业" tabindex="-1"></a><span>React (Next.js) 前端小作业</span></h3>
<p>上来就看到 ESLint 是 4 空格缩进<span class="mojikumi-line-end">、</span>优先双引号<span class="mojikumi-line-end">，</span>这能忍吗<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">。</span>特意去确认了一下<span class="mojikumi-line-end">，</span>除了前端助教参与的几个项目<span class="mojikumi-line-end">，</span>随便找一个项目都是 2 空格缩进<span class="mojikumi-line-end">、</span>优先单引号<span class="mojikumi-line-start">（</span></p>
<p>再一写代码<span class="mojikumi-line-end">，</span>发现不对劲<span class="mojikumi-line-end">，</span>这个 ESLint 有啥 rule 啊<span class="mojikumi-line-end">，</span>怎么怎么写都没 lint error<span class="mojikumi-line-end">，</span>给我整不会了<span class="mojikumi-line-start">（</span></p>
<p>于是直接上了 <a href="https://github.com/ouuan/eslint-config"><code>@<wbr>ouuan<wbr>/<wbr>eslint<wbr>-<wbr>config<wbr>-<wbr>ts</code></a><span class="mojikumi-line-end">，</span>理论上来说我应该整一个给 tsx 用的 config<span class="mojikumi-line-end">，</span>但 ts 的 config 配合上小作业模板原有的应该也凑合着能用吧<span class="mojikumi-line-start">（</span></p>
<p>写完后的感觉和 Django 小作业差不多<span class="mojikumi-line-end">，</span>React 都白学了<span class="mojikumi-line-end">，</span>啥都不会就能写完<span class="mojikumi-line-start">（</span></p>
<blockquote>
<p>这是你前端小作业的最后一个 Step 了<span class="mojikumi-line-end">，</span>如果你已经完成了<span class="mojikumi-line-end">，</span>我相信你已经充分掌握了 Next.js 的入门知识<span class="mojikumi-line-end">。</span></p>
<p>事实上这份前端小作业几乎可以作为大作业的起始框架<span class="mojikumi-line-end">。</span>除了 Next.js 框架本身<span class="mojikumi-line-end">，</span>其包含了<span class="mojikumi-line-end">：</span></p>
<ul>
<li>代码风格检查与修正插件 ESLint<span class="mojikumi-line-end">，</span>配置文件为 <code>.<wbr>eslintrc<wbr>.<wbr>json</code></li>
<li>单元测试框架 Jest</li>
</ul>
</blockquote>
<p>不是<span class="mojikumi-line-end">，</span>你是认真的吗<span class="mojikumi-line-end">，</span>先不谈学会多少能算是<span class="mojikumi-line-start">《</span>充分掌握了入门知识<span class="mojikumi">》</span><span class="mojikumi-line-end">，</span>这个 eslintrc 真的能用吗<span class="mojikumi-line-start">（</span></p>
<p>第二天早上起来再看了下代码<span class="mojikumi-line-end">，</span>发现组件 unmount 时没有 <code>clearInterval</code><span class="mojikumi-line-end">，</span>而这需要在允许<span class="mojikumi-line-start">（</span>推荐<span class="mojikumi-line-end">）</span>的代码范围之外进行修改<span class="mojikumi-line-end">，</span>怎么回事<span class="mojikumi-line-start">（</span></p>
<p>网络请求也是<span class="mojikumi-line-end">，</span>unmount 时没有 abort / ignore<span class="mojikumi-line-end">，</span>但要改的话交互逻辑也会有些变化<span class="mojikumi-line-end">，</span>就懒得修了<span class="mojikumi-line-end">，</span>一个简陋的小作业而已<span class="mojikumi-line-start">（</span></p>
<h3 id="cicd-小作业" class="heading"><a href="#cicd-小作业" class="heading-anchor" aria-label="章节： CI/CD 小作业" tabindex="-1"></a><span>CI/CD 小作业</span></h3>
<p><a href="https://tuna.moe/event/2023/welcome-and-ipsec/">前一天的 Power TUNA</a> 上还有人问为什么 TUNA 有很多海外流量<span class="mojikumi-line-end">，</span>第二天就看到了在 Dockerfile 里硬编码 TUNA<span class="mojikumi-line-start">（</span></p>
<h3 id="为子目录设置-commit-邮箱" class="heading"><a href="#为子目录设置-commit-邮箱" class="heading-anchor" aria-label="章节： 为子目录设置 commit 邮箱" tabindex="-1"></a><span>为子目录设置 commit 邮箱</span></h3>
<p>作业经常会需要<span class="mojikumi-line-start">（</span>或者说最好需要<span class="mojikumi-line-end">）</span>使用一些与平时不同的 commit 邮箱<span class="mojikumi-line-end">，</span>而 SECoder 的邮箱验证似乎还坏了<span class="mojikumi-line-end">，</span>就更需要了<span class="mojikumi-line-end">。</span></p>
<p>以前碰到这种需求我都在每个 repo 设 local git config<span class="mojikumi-line-end">，</span>但在软工可能有好几个 repo<span class="mojikumi-line-end">，</span>不仅麻烦而且可能忘记<span class="mojikumi-line-end">，</span>就需要更好的解决方案<span class="mojikumi-line-end">。</span></p>
<p>其实简单搜一下就很容易搜到<span class="mojikumi-line-end">，</span>毕竟这是个很常见的需求<span class="mojikumi-line-end">：</span></p>
<ul>
<li>
<p>在 <code>~/.<wbr>gitconfig</code> 中添加</p>
<section class="code-block relative my-6 shadow" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-c675dba6>plain text</h4><ile-root id="ile-1"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-1--></div><div class="dark:hidden" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>
<span><span style="color: #403f53">    path = ~/some/path/.gitconfig</span></span></samp></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>
<span><span style="color: #d6deeb">    path = ~/some/path/.gitconfig</span></span></samp></pre></div></section>
</li>
<li>
<p>在 <code>~/<wbr>some<wbr>/<wbr>path<wbr>/.<wbr>gitconfig</code> 中添加</p>
<section class="code-block relative my-6 shadow" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-c675dba6>plain text</h4><ile-root id="ile-2"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-2--></div><div class="dark:hidden" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">[user]</span></span>
<span><span style="color: #403f53">    email = 2021000000@secoder.net</span></span></samp></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">[user]</span></span>
<span><span style="color: #d6deeb">    email = 2021000000@secoder.net</span></span></samp></pre></div></section>
</li>
</ul>
<h3 id="小作业的一些锅" class="heading"><a href="#小作业的一些锅" class="heading-anchor" aria-label="章节： 小作业的一些锅" tabindex="-1"></a><span>小作业的一些锅</span></h3>
<p>deploy 之后发现一堆锅<span class="mojikumi-line-end">，</span>它们不影响我的小作业得分<span class="mojikumi-line-end">，</span>只会影响我能不能交上数学课作业<span class="mojikumi-line-end">，</span>但我还是修了<span class="mojikumi-line-end">，</span>数学课作业则是没写完就交了<span class="mojikumi-line-start">（</span></p>
<p>说到这就得怀念程设训练了<span class="mojikumi-line-end">，</span>还有 5 分的<span class="mojikumi-line-start">“</span>课堂参与<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>额外加在 100 分之外<span class="mojikumi-line-end">，</span>回答几个同学的提问<span class="mojikumi-line-end">、</span>开一些 issue 帮忙修锅就拿满了<span class="mojikumi-line-end">，</span><s>虽然最后这 5 分对 A+ 毫无帮助<span class="mojikumi-line-end">，</span>要是能移到软工就好了</s><span class="mojikumi-line-end">。</span></p>
<h4 id="next-js-static-html-export-有-dynamic-route-时报错" class="heading"><a href="#next-js-static-html-export-有-dynamic-route-时报错" class="heading-anchor" aria-label="章节： Next.js static HTML export 有 dynamic route 时报错" tabindex="-1"></a><span>Next.js static HTML export 有 dynamic route 时报错</span></h4>
<p>在 Next.js 13.0.7 之前<span class="mojikumi-line-end">，</span>具体来说是 <a href="https://github.com/vercel/next.js/releases/tag/v13.0.7-canary.5">13.0.7-canary.5</a> 之前<span class="mojikumi-line-end">，</span>通过 <code>next export</code> 得到 static HTML export 后<span class="mojikumi-line-end">，</span>如果访问一个能匹配上 dynamic route 的 static route<span class="mojikumi-line-end">，</span>会报<span class="mojikumi-line-start">“</span>Application error: a client-side exception has occurred<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>有 <code>pages<wbr>/[<wbr>id<wbr>].<wbr>tsx</code> 和 <code>pages<wbr>/<wbr>list<wbr>.<wbr>tsx</code> 时<span class="mojikumi-line-end">，</span>访问 <code>/list.html</code> 就会报错<span class="mojikumi-line-end">。</span></p>
<p>简单看了一下这个版本的 changelog<span class="mojikumi-line-end">，</span>有几个疑似和这个 bug 相关的<span class="mojikumi-line-end">，</span>但我没能确认具体是哪个<span class="mojikumi-line-end">。</span>本来想在本地 build Next.js 来进一步确认<span class="mojikumi-line-end">，</span>但我一 build 就报一万个类型错误<span class="mojikumi-line-end">，</span>搞了半天也没搞好<span class="mojikumi-line-end">，</span>就放弃了<span class="mojikumi-line-end">。</span>反正 bump 一下就修好了<span class="mojikumi-line-end">，</span><s>开课前为啥不 bump 一下啊</s><span class="mojikumi-line-end">。</span></p>
<h4 id="next-js-static-html-export-的-nginx-路由配置" class="heading"><a href="#next-js-static-html-export-的-nginx-路由配置" class="heading-anchor" aria-label="章节： Next.js static HTML export 的 Nginx 路由配置" tabindex="-1"></a><span>Next.js static HTML export 的 Nginx 路由配置</span></h4>
<p>感觉网上搜到的一些 Nginx 路由配置都很迷惑<span class="mojikumi-line-end">：</span><code>$uri</code> 是匹配不到 HTML 文件的<span class="mojikumi-line-end">，</span>需要 <code>$uri.html</code><span class="mojikumi-line-end">；</span><code>$uri/</code> 则可能匹配到目录<span class="mojikumi-line-end">，</span>导致 403<span class="mojikumi-line-end">；</span>动态路由如果不专门写路由配置的话<span class="mojikumi-line-end">，</span>就不能直接访问到正确的 HTML<span class="mojikumi-line-end">，</span>static HTML export 的作用就没有了<span class="mojikumi-line-end">，</span>而且<span class="mojikumi-line-end">，</span>fallback 到 <code>/<wbr>index<wbr>.<wbr>html</code> 可能导致加载一些不需要的页面内容和 JS<span class="mojikumi-line-end">，</span>实际上比直接 SPA 更劣<span class="mojikumi-line-end">。</span></p>
<h4 id="用户名格式检查" class="heading"><a href="#用户名格式检查" class="heading-anchor" aria-label="章节： 用户名格式检查" tabindex="-1"></a><span>用户名格式检查</span></h4>
<p>说来惭愧<span class="mojikumi-line-end">，</span>我一开始也没意识到用户名没校验格式的问题<span class="mojikumi-line-end">，</span>还是配路由的时候才想到用户名里会不会有 slash<span class="mojikumi-line-end">。</span></p>
<p>现在要修的话确实麻烦<span class="mojikumi-line-end">，</span>所以只要归结为<span class="mojikumi-line-start">《</span>由于小作业的简化<span class="mojikumi-line-end">》</span>就好了<span class="mojikumi-line-start">（</span></p>
<h4 id="忘记关测试用-docker-container" class="heading"><a href="#忘记关测试用-docker-container" class="heading-anchor" aria-label="章节： 忘记关测试用 Docker container" tabindex="-1"></a><span><s>忘记关测试用 Docker container</s></span></h4>
<p>第二天早上起来一看<span class="mojikumi-line-end">，</span>Plausible 特别卡<span class="mojikumi-line-end">，</span>再一看<span class="mojikumi-line-end">，</span>load avg 都快两位数了<span class="mojikumi-line-end">，</span>原来是在 VPS 上测试后端部署忘关了 🌚 不要随便在生产环境顺便测小作业<span class="mojikumi-line-start">（</span></p>
<h3 id="玩小作业" class="heading"><a href="#玩小作业" class="heading-anchor" aria-label="章节： 玩小作业" tabindex="-1"></a><span>玩小作业</span></h3>
<p>把 game of life 当成冬日绘板画画<span class="mojikumi-line-end">，</span>动态更新时钟<span class="mojikumi-line-end">，</span>从 LifeWiki 获取随机 pattern<span class="mojikumi-line-end">，</span>这是一个作业写不完的人能干的出来的吗<span class="mojikumi-line-end">，</span>共享后端是这样用的吗<span class="mojikumi-line-start">（</span></p>
<p>第二天早上起来一看<span class="mojikumi-line-start">（</span><s>怎么每段都有个第二天早上起来</s><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>大家都在画些啥<span class="mojikumi-line-end">，</span>我还是太保守了<span class="mojikumi-line-start">（</span></p>
<h3 id="回答同学提问" class="heading"><a href="#回答同学提问" class="heading-anchor" aria-label="章节： 回答同学提问" tabindex="-1"></a><span>回答同学提问</span></h3>
<p>软工的公开提问貌似只能在微信群<span class="mojikumi-line-end">，</span>而且助教有十几个<span class="mojikumi-line-end">，</span>回复速度实在是太快了<span class="mojikumi-line-end">。</span>程设训练的时候我还能偶尔抢在助教之前回答问题<span class="mojikumi-line-end">，</span>现在根本做不到<span class="mojikumi-line-start">（</span></p>
<h3 id="偷窥同学代码" class="heading"><a href="#偷窥同学代码" class="heading-anchor" aria-label="章节： 偷窥同学代码" tabindex="-1"></a><span>偷窥同学代码</span></h3>
<p>偶然间发现 SonarQube 上可以看到同学的代码<span class="mojikumi-line-end">，</span>因为我的小作业已经交了而且分都给了<span class="mojikumi-line-end">，</span>所以我就放心大胆地偷窥了<span class="mojikumi-line-start">（</span></p>
<p>本来想给助教报告一下问题等权限修复<span class="mojikumi-line-end">，</span>结果说是懒得修了<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">《</span>希望没多少人发现<span class="mojikumi">》</span><span class="mojikumi-line-end">，</span><s>导致我甚至不能在迟交 ddl 之前在博客吐槽</s><span class="mojikumi-line-start">（</span>要是下学期还不修<span class="mojikumi-line-end">，</span>大家都学会了这个操作<span class="mojikumi-line-end">，</span>那只能说不是我的锅了<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>那我只好趁机来认真看一看同学们都写了一些什么奇妙代码<span class="mojikumi-line-start">（</span></p>
<ul>
<li>
<p>冗余的类型标注<span class="mojikumi-line-start">（</span>看到文档里讲 TS 的时候举例全是冗余类型标注时<span class="mojikumi-line-end">，</span>我就知道同学们肯定会写一万个 <code>let count: number = 0</code><span class="mojikumi-line-end">）</span></p>
</li>
<li>
<p>只需条件修改 prop 时<span class="mojikumi-line-end">，</span>条件渲染 prop 不同的两个组件</p>
</li>
<li>
<p>手写八遍而不是使用 <code>for</code> 来遍历网格的邻居</p>
</li>
<li>
<p>更新 React state 时即使结果是常量依然使用回调函数</p>
</li>
<li>
<p>回调函数写成 <code>() => { foo(); }</code> 而不是 <code>foo</code></p>
</li>
<li>
<p>冗余的 <code>flex<wbr>-<wbr>direction<wbr>: <wbr>row</code></p>
</li>
<li>
<p>复制二维数组<span class="mojikumi-line-end">，</span>有看到用 <code>for</code> 一个个 <code>push</code> 的<span class="mojikumi-line-end">，</span>也有看到直接 <code>JSON<wbr>.<wbr>parse<wbr>(<wbr>JSON<wbr>.<wbr>stringify<wbr>)</code> 的<span class="mojikumi-line-end">；</span>正确写法应该是 <code>old<wbr>.<wbr>map<wbr>((<wbr>row<wbr>) => <wbr>row<wbr>.<wbr>slice<wbr>())</code><span class="mojikumi-line-end">。</span>数组大小为 1000x1000 时<span class="mojikumi-line-end">，</span>在 Firefox 中<span class="mojikumi-line-end">，</span>这两种写法的用时都大约是 <code>map</code> &#x26; <code>slice</code> 的 10 倍<span class="mojikumi-line-end">，</span>在 Chrome 中<span class="mojikumi-line-end">，</span>一个个 <code>push</code> 的用时是 <code>map</code> &#x26; <code>slice</code> 的 3 倍<span class="mojikumi-line-end">，</span><code>JSON<wbr>.<wbr>parse<wbr>(<wbr>JSON<wbr>.<wbr>stringify<wbr>)</code> 的用时是 40 倍<span class="mojikumi-line-end">。</span>而且<span class="mojikumi-line-end">，</span>由于小作业中需要的是复制其他所有<span class="mojikumi-line-end">，</span>但修改一个<span class="mojikumi-line-end">，</span>很多同学在 <code>for</code> 里面写 <code>if</code><span class="mojikumi-line-end">，</span>这样效率更低<span class="mojikumi-line-end">，</span>应该把 <code>if</code> 写在 <code>for</code> 外面<span class="mojikumi-line-end">。</span></p>
<p>但是还看到一种写法<span class="mojikumi-line-end">，</span>只深复制修改了的那一行<span class="mojikumi-line-end">，</span>其他行浅复制<span class="mojikumi-line-end">。</span>草<span class="mojikumi-line-end">，</span>这样确实性能更好<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p>依赖于效果为 toggle 的按钮不会在 toggle 完成前被点击两次<span class="mojikumi-line-end">：</span></p>
<ul>
<li>问题背景<span class="mojikumi-line-end">：</span>一个 start 按钮和一个 stop 按钮<span class="mojikumi-line-end">，</span>修改一个 <code>playing</code> 的 state<span class="mojikumi-line-end">，</span>处于 playing 状态时需要一个 <code>setInterval</code></li>
<li>问题 1<span class="mojikumi-line-end">：</span>在 start / stop 时将 <code>playing</code> 修改为 <code>!playing</code> 而非 <code>true</code>/<code>false</code></li>
<li>问题 2<span class="mojikumi-line-end">：</span>只在 stop 时 <code>clearInterval</code><span class="mojikumi-line-end">，</span>没有在 start 时 <code>clearInterval</code></li>
</ul>
<p>正常的交互很难做到 toggle 完成前被点击两次<span class="mojikumi-line-end">，</span>基本上只能通过在 console 连续调用两次 <code>click</code> 实现<span class="mojikumi-line-end">，</span>但最好还是不要依赖于这一点<span class="mojikumi-line-end">。</span></p>
</li>
</ul>
<h3 id="node-js-和浏览器的不同-timer" class="heading"><a href="#node-js-和浏览器的不同-timer" class="heading-anchor" aria-label="章节： Node.js 和浏览器的不同 timer" tabindex="-1"></a><span>Node.js 和浏览器的不同 timer</span></h3>
<p>队友问了一个神奇的 bug<span class="mojikumi-line-end">，</span>说是 <code>clearInterval</code> clear 不掉<span class="mojikumi-line-end">，</span>我看了半天都没发现问题<span class="mojikumi-line-end">，</span>最后发现开头有个 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class="mojikumi-line-end">。</span></p>
<p>之前还真没注意过<span class="mojikumi-line-end">，</span>timer 有 Node.js 和浏览器两个版本<span class="mojikumi-line-end">，</span>Node.js 的 <code>setInterval</code> 返回的是一个 object<span class="mojikumi-line-end">，</span>浏览器返回的是一个 <code>number</code><span class="mojikumi-line-end">。</span></p>
<ul>
<li>直接写 <code>setInterval</code> 时<span class="mojikumi-line-end">，</span>在 TypeScript 中会被认为返回 <code>NodeJS<wbr>.<wbr>Timer</code><span class="mojikumi-line-end">，</span>而实际运行时在哪运行就用哪个版本的函数<span class="mojikumi-line-end">。</span></li>
<li>如果写的是 <code>window<wbr>.<wbr>setInterval</code><span class="mojikumi-line-end">，</span>在 TypeScript 中会被认为返回 <code>number</code><span class="mojikumi-line-end">，</span>在 Node.js 中运行会报错<span class="mojikumi-line-end">。</span></li>
<li>如果是 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class="mojikumi-line-end">，</span>即使是在浏览器中运行也会使用 Node.js 版本的函数<span class="mojikumi-line-end">。</span></li>
</ul>
<p>这里比较重要的是 <code>setInterval</code> 和 <code>clearInterval</code> 要配套<span class="mojikumi-line-end">，</span>不能一个用 Node.js 的一个用浏览器的<span class="mojikumi-line-end">，</span>否则会 clear 不掉甚至报错<span class="mojikumi-line-end">。</span></p>
<p>一般来说直接写<span class="mojikumi-line-start">（</span>不 <code>window.</code> 也不 <code>import from 'timers'</code><span class="mojikumi-line-end">）</span>就是最好的<span class="mojikumi-line-end">，</span>虽然看起来 TypeScript 会将 <code>number</code> 误认为是 <code>NodeJS<wbr>.<wbr>Timer</code><span class="mojikumi-line-end">，</span>但这个 <code>number</code> 本来就不该被当作一个 <code>number</code> 来使用<span class="mojikumi-line-end">，</span>这样的 typing 反而是好的<span class="mojikumi-line-end">。</span></p>
<p>这里如果再仔细研究一下可以单独写一篇博客了<span class="mojikumi-line-end">，</span>但还是算了吧<span class="mojikumi-line-start">（</span></p>
<h3 id="小作业即将截止" class="heading"><a href="#小作业即将截止" class="heading-anchor" aria-label="章节： 小作业即将截止" tabindex="-1"></a><span>小作业即将截止</span></h3>
<blockquote>
<p>小作业 将于 3 月 16 日<span class="mojikumi-line-start">（</span>周四<span class="mojikumi-line-end">）</span>23:59 截止<span class="mojikumi-line-end">。</span></p>
<p>请注意截止时间不是 21:55<span class="mojikumi-line-end">。</span></p>
<p>……</p>
</blockquote>
<p>后面省略的几句也是模仿的 DSA<span class="mojikumi-line-end">，</span><s>DNS</s> <span class="heimu">前几天某位助教答疑的时候把 dns typo 成了 dna</span> DNA 动了<span class="mojikumi-line-end">，</span>好评<span class="mojikumi-line-end">，</span>但开头这个对偶的 ddl 绷不住了<span class="mojikumi-line-start">（</span></p>
<h2 id="大作业" class="heading"><a href="#大作业" class="heading-anchor" aria-label="章节： 大作业" tabindex="-1"></a><span>大作业</span></h2>
<h3 id="组队" class="heading"><a href="#组队" class="heading-anchor" aria-label="章节： 组队" tabindex="-1"></a><span>组队</span></h3>
<p>在另外一个通识课上体验了一下差点没组上队<span class="mojikumi-line-start">（</span>虽然后来得知还有不少人比我更晚组上队<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>最后完全 rand 组队<span class="mojikumi-line-end">。</span>所以真的很感谢上学期就找我来组队的队友<span class="mojikumi-line-end">。</span></p>
<h3 id="起队名" class="heading"><a href="#起队名" class="heading-anchor" aria-label="章节： 起队名" tabindex="-1"></a><span>起队名</span></h3>
<blockquote>
<p>HardToName / 起个名好难队</p>
</blockquote>
<p><s>这是什么引用啊</s></p>
<p>队友提出了三个队名<span class="mojikumi-line-end">：</span>啊对对队<span class="mojikumi-line-end">、</span>BUG 全调队<span class="mojikumi-line-end">、</span>[redacted] 队<span class="mojikumi-line-end">。</span>前两个都被占了<span class="mojikumi-line-end">，</span>后一个太魔幻了<span class="mojikumi-line-end">，</span>于是最后还是用的我提出的队名<span class="mojikumi-line-end">：</span>lazy / 这个队特别懒<span class="mojikumi-line-end">，</span>什么都没留下~</p>
<p><span class="mojikumi-line-start">（</span>这 SECoder 怎么还在用这个很有年代感的个人描述 placeholder 啊<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/lazy-placeholder.65e936a3.webp"><img srcset="/assets/lazy-placeholder.aba50ccc.png" loading="lazy" src="/assets/lazy-placeholder.aba50ccc.png" width="1873" height="597" alt="学生列表，满屏都是“这个人特别懒，什么都没留下~”"></picture></p>
<p>俗话说得好<span class="mojikumi-line-end">，</span>贱名好养活<span class="mojikumi-line-end">，</span><s>取名叫 lazy 一定摆不起来<span class="mojikumi-line-start">（</span></s></p>
<p>其实本来还想过利用五个人的名字缩写之类的组一个队名<span class="mojikumi-line-end">，</span>但人脑去想一个符合要求且有意思的队名太难了<span class="mojikumi-line-end">，</span>输入法给出的候选词也没啥意思<span class="mojikumi-line-end">，</span>所以我还尝试了用 ChatGPT 来生成<span class="mojikumi-line-end">，</span>本来只是以为它会生成一些没意思的队名<span class="mojikumi-line-end">，</span>没想到它生成出来的队名不仅没意思<span class="mojikumi-line-end">，</span>而且拼音首字母甚至字数都完全不符合要求<span class="mojikumi-line-end">，</span>无论怎么拷打都认错不改 🌚</p>
<h3 id="分工-技术栈" class="heading"><a href="#分工-技术栈" class="heading-anchor" aria-label="章节： 分工 &#x26; 技术栈" tabindex="-1"></a><span>分工 &#x26; 技术栈</span></h3>
<p>听说代码可能要求有队友审核<span class="mojikumi-line-end">，</span>所以放弃了一个人写前端<span class="mojikumi-line-start">（</span>可能来个人写测试<span class="mojikumi-line-end">）</span>的想法<span class="mojikumi-line-start">（</span></p>
<p>几乎是理所当然地就决定了用 Vue<span class="mojikumi-line-end">，</span>没有一点反对<span class="mojikumi-line-end">，</span>感觉这个不需要学 React 的 React 小作业<s>没有九分也有十分的功劳</s><span class="mojikumi-line-end">。</span></p>
<p>给队友布置学习任务的时候感觉<span class="mojikumi-line-end">，</span>我好像也不会多少东西<span class="mojikumi-line-end">，</span>像是前端的测试以及 Nuxt 都还得学<span class="mojikumi-line-end">，</span>JS/TS/Vue 说到底也就那么点东西<span class="mojikumi-line-end">，</span>我的优势可能主要还是在经验方面<span class="mojikumi-line-end">，</span>但其实也没写过什么复杂的前后端交互<span class="mojikumi-line-end">，</span>大作业和博客 / Codle 这种东西还是差别挺大<span class="mojikumi-line-end">，</span>写这个博客的时候很多时间也是花在一些 blog-specific 的不重要的细节上<span class="mojikumi-line-end">。</span><s>说的我都有点慌了<span class="mojikumi-line-start">（</span></s></p>
<p><a href="https://archive.ph/6o0gs">咕了一周</a>的 Nuxt 3.3 终于在大作业开始前发出来了<span class="mojikumi-line-end">，</span>避免了刚开始写不久就要 bump minor version<span class="mojikumi-line-end">。</span>yysy 我选的这些技术栈还是挺最新最热的<span class="mojikumi-line-end">，</span><s>要是真的出锅了都不知道怎么向队友交代<span class="mojikumi-line-start">（</span></s></p>
<p>紧接着就看到 TypeScript 5.0 也发了<span class="mojikumi-line-end">，</span>更新更热了<span class="mojikumi-line-end">，</span>害怕<span class="mojikumi-line-start">（</span></p>
<h3 id="摇号" class="heading"><a href="#摇号" class="heading-anchor" aria-label="章节： 摇号" tabindex="-1"></a><span>摇号</span></h3>
<blockquote>
<p>3月14日24:00后进行项目志愿的摇号</p>
</blockquote>
<p>结果还真是<span class="mojikumi-line-start">“</span>24:00<strong>后</strong><span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>手动 ddl 🌚</p>
<p>本来晚上 11 点还看到我们队的一志愿的一志愿数量从 7 变成了 6<span class="mojikumi-line-end">，</span>就是 2/3 的概率抽上<span class="mojikumi-line-end">，</span>结果早上起来一看还是掉了<span class="mojikumi-line-end">，</span>寄<span class="mojikumi-line-end">。</span>这下和不是队友的室友一个选题了<span class="mojikumi-line-end">。</span>好在例会还是 4-3<span class="mojikumi-line-end">，</span>要是 4-4 的话整个下午就消失了<span class="mojikumi-line-start">（</span></p>
<h3 id="大例会-1" class="heading"><a href="#大例会-1" class="heading-anchor" aria-label="章节： 大例会 1" tabindex="-1"></a><span>大例会 1</span></h3>
<p>第一次例会竟然就要写分工以及完整的进度安排<span class="mojikumi-line-end">，</span>虽然说是随便画饼也没事<span class="mojikumi-line-end">，</span>但还是感觉不太敏捷<span class="mojikumi-line-start">（</span></p>
<p>顺便练习了一下 <a href="https://sli.dev/">Slidev</a><span class="mojikumi-line-end">，</span>在本机莫名 export 失败了<span class="mojikumi-line-end">，</span>结果扔到 VPS 上就成功了<span class="mojikumi-line-end">，</span>神秘<span class="mojikumi-line-end">。</span>但在 VPS 上还得装上中文字体<span class="mojikumi-line-end">，</span>并且配字体设置<span class="mojikumi-line-end">。</span></p>
<p>无奖竞猜<span class="mojikumi-line-end">，</span>下面这些队名都是啥<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span></p>
<blockquote>
<p>下午的展示顺序是</p>
<ol start="0">
<li>我</li>
<li>蛋白质</li>
<li>迷</li>
<li>对对对</li>
<li>懒</li>
</ol>
</blockquote>
<a id="答案" name="答案" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-info-circle-outline text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Info: </span><span data-v-a2ab257f>答案</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h5 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-info-circle-outline text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Info: </span><span data-v-a2ab257f><s>给你一次再想一想的机会</s></span></h5><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ol>
<li>青蛙补充蛋白质</li>
<li>迷失分析LAS</li>
<li>阿对对队</li>
<li>这个队特别懒<span class="mojikumi-line-end">，</span>什么都没留下~</li>
</ol></div></details></aside></div></details></aside>
<p>感觉这个第一次例会总体上传达的意思就是<span class="mojikumi-line-end">，</span>看起来难的功能要想简单点<span class="mojikumi-line-end">，</span>差不多得了<span class="mojikumi-line-start">（</span></p>
<h3 id="大作业第一周" class="heading"><a href="#大作业第一周" class="heading-anchor" aria-label="章节： 大作业第一周" tabindex="-1"></a><span>大作业第一周</span></h3>
<h4 id="需求细化" class="heading"><a href="#需求细化" class="heading-anchor" aria-label="章节： 需求细化" tabindex="-1"></a><span>需求细化</span></h4>
<p>第一次例会上是我提的问题最多<span class="mojikumi-line-end">，</span>之后也基本上只有我在群里问需求细节问题<span class="mojikumi-line-end">。</span>回答大部分都是两种之一<span class="mojikumi-line-end">，</span>要么是<span class="mojikumi-line-start">“</span>这样也可以<span class="mojikumi-line-end">，</span>但那样也可以<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>要么是<span class="mojikumi-line-start">“</span>这样更好<span class="mojikumi-line-end">，</span>但没分<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span>程设训练的时候也是这样<span class="mojikumi-line-end">，</span>似乎是我的问题<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>正常的想法是不是应该是只要不说清楚就可以混过去<span class="mojikumi-line-end">，</span>而不是害怕没搞清楚而写错<span class="mojikumi-line-start">（</span></p>
<h4 id="四个阶段" class="heading"><a href="#四个阶段" class="heading-anchor" aria-label="章节： 四个阶段" tabindex="-1"></a><span>四个阶段</span></h4>
<p>第一周总体上分成四个阶段<span class="mojikumi-line-end">：</span></p>
<ol>
<li>设计任务计划<span class="mojikumi-line-end">，</span>编写让队友知道要干什么的文档和 issue</li>
<li>ping &#x26; push 队友</li>
<li>回答队友提问 &#x26; 指出队友代码里的问题</li>
<li>马上就要例会了<span class="mojikumi-line-end">，</span>放弃指导队友<span class="mojikumi-line-end">，</span>上手自己写<span class="mojikumi-line-start">（</span></li>
</ol>
<p>感觉最后总的工作量还是超过了自己一个人把所有活干完<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>希望以后能好一点<span class="mojikumi-line-end">，</span>要一直是这样其他课真寄了<span class="mojikumi-line-end">。</span>而且我本来就没打算管后端<span class="mojikumi-line-end">，</span>就没学 Django<span class="mojikumi-line-end">，</span>结果不仅要搞一点后端的规划设计<span class="mojikumi-line-end">，</span>回答队友提问<span class="mojikumi-line-end">，</span>还得赶着 ddl 硬上写代码<span class="mojikumi-line-end">，</span>开发环境都没配好<span class="mojikumi-line-end">。</span></p>
<h4 id="数据库配置" class="heading"><a href="#数据库配置" class="heading-anchor" aria-label="章节： 数据库配置" tabindex="-1"></a><span>数据库配置</span></h4>
<p>你见过只能挂载目录<span class="mojikumi-line-end">，</span>不能设置环境变量<span class="mojikumi-line-end">，</span>也不能挂载单个文件的 Docker 容器管理吗<span class="mojikumi-line-start">（</span></p>
<p>这个 SECoder 实在是有些过于离谱<span class="mojikumi-line-end">，</span>最后只能把环境变量写在 Dockerfile 里<span class="mojikumi-line-end">，</span>用 build 出来的数据库镜像<span class="mojikumi-line-end">。</span></p>
<h4 id="小例会-1" class="heading"><a href="#小例会-1" class="heading-anchor" aria-label="章节： 小例会 1" tabindex="-1"></a><span>小例会 1</span></h4>
<p>主要就是聊了一下数据库和 API 的设计<span class="mojikumi-line-end">，</span>也没检查 CI/CD<span class="mojikumi-line-end">，</span>结束之后才想起来架构设计也没说<span class="mojikumi-line-end">。</span>毕竟是小例会<span class="mojikumi-line-end">，</span>确实比较轻松<span class="mojikumi-line-end">，</span>感觉上午白着急把数据库跑起来了<span class="mojikumi-line-start">（</span></p>
<h3 id="大作业第二周" class="heading"><a href="#大作业第二周" class="heading-anchor" aria-label="章节： 大作业第二周" tabindex="-1"></a><span>大作业第二周</span></h3>
<h4 id="secoder-ssh-卡住" class="heading"><a href="#secoder-ssh-卡住" class="heading-anchor" aria-label="章节： SECoder SSH 卡住" tabindex="-1"></a><span>SECoder SSH 卡住</span></h4>
<p>之前就偶尔碰到 SECoder SSH 卡住的情况<span class="mojikumi-line-end">，</span>今天发现是回了寝室连有线网就卡住<span class="mojikumi-line-end">，</span>换成 Tsinghua Secure 就不卡了<span class="mojikumi-line-end">，</span>怀疑和 IP 切换有关<span class="mojikumi-line-end">，</span>不是很懂<span class="mojikumi-line-end">。</span></p>
<h4 id="nuxt-与-typescript-5-0" class="heading"><a href="#nuxt-与-typescript-5-0" class="heading-anchor" aria-label="章节： Nuxt 与 TypeScript 5.0" tabindex="-1"></a><span>Nuxt 与 TypeScript 5.0</span></h4>
<p>之前还说有点太新太热了<span class="mojikumi-line-end">，</span>果然一堆锅<span class="mojikumi-line-end">。</span></p>
<p>之前一直随机报错 <code>The "path" argument must be of type string. Received an instance of Array</code><span class="mojikumi-line-end">，</span>后来发现是我直接用了最新最热的 <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/#supporting-multiple-configuration-files-in-extends">tsconfig 里 <code>extends</code> 写数组</a><span class="mojikumi-line-end">，</span>然后 Nuxt 读取 tsconfig 的时候寄了<span class="mojikumi-line-end">。</span>改成单个 <code>extends</code> 或者把 Nuxt 更新到 edge channel 就 ok 了<span class="mojikumi-line-end">。</span></p>
<p>另外还碰到 <a href="https://github.com/nuxt/nuxt/issues/15113">一个 bug</a><span class="mojikumi-line-end">，</span>只能把路径改成英文<span class="mojikumi-line-end">。</span></p>
<h4 id="npmmirror-更新不及时" class="heading"><a href="#npmmirror-更新不及时" class="heading-anchor" aria-label="章节： npmmirror 更新不及时" tabindex="-1"></a><span>npmmirror 更新不及时</span></h4>
<p>CI 挂在了奇怪的地方<span class="mojikumi-line-end">，</span>是 npmmirror 更新不及时<span class="mojikumi-line-end">，</span>一个刚更新几分钟的包下不下来<span class="mojikumi-line-end">。</span>npmmirror 的首页写的是每 10min 更新一次<span class="mojikumi-line-end">，</span>但我等了它半小时还没更新<span class="mojikumi-line-end">。</span>然后看到 npmmirror 上每个包的页面上有一个<span class="mojikumi-line-start">“</span>SYNC<span class="mojikumi-line-end">”</span>按钮<span class="mojikumi-line-end">，</span>点一下就可以更新<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-start">（</span></p>
<h4 id="pnpm-v8" class="heading"><a href="#pnpm-v8" class="heading-anchor" aria-label="章节： pnpm v8" tabindex="-1"></a><span>pnpm v8</span></h4>
<p>感觉这个软工就和最新最热扯不开关系了<span class="mojikumi-line-start">（</span></p>
<p>碰到一个非常神秘的<span class="mojikumi-line-end">，</span>一个 up-to-date with master 的 MR 在合并之后挂 CI<span class="mojikumi-line-end">，</span>说是 lock file 有问题<span class="mojikumi-line-end">。</span>本来我都没想管了<span class="mojikumi-line-end">，</span>结果晚上发现博客也挂 CI 了<span class="mojikumi-line-end">，</span>再一看<span class="mojikumi-line-end">，</span>原来是 pnpm 发布 v8 了<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-end">。</span></p>
<h4 id="nuxt-dev-报错-“body-is-unusable”" class="heading"><a href="#nuxt-dev-报错-“body-is-unusable”" class="heading-anchor" aria-label="章节： nuxt dev 报错 “Body is unusable”" tabindex="-1"></a><span>nuxt dev 报错 <span class="mojikumi">“</span>Body is unusable<span class="mojikumi-line-end">”</span></span></h4>
<p><a href="https://github.com/nuxt/nuxt/issues/19245">Body is unusable (undici) · Issue #19245 · nuxt/nuxt</a> 是一个非常玄学的 issue<span class="mojikumi-line-end">，</span>我在部署到 SECoder 的时候遇到了<span class="mojikumi-line-end">，</span>队友在 WSL2 上遇到了<span class="mojikumi-line-end">，</span>但我在本地<span class="mojikumi-line-start">（</span>Arch Linux<span class="mojikumi-line-end">）</span>没遇到过<span class="mojikumi-line-end">。</span>我让队友试着在 Docker 里跑 dev<span class="mojikumi-line-end">，</span>似乎和 issue 里描述的一样<span class="mojikumi-line-end">，</span>偶尔会遇到<span class="mojikumi-line-end">，</span>但重试一下就好了<span class="mojikumi-line-end">；</span>而且 WSL2 里加载非常慢<span class="mojikumi-line-end">，</span>直接在 Windows 上运行 Docker 会快很多<span class="mojikumi-line-end">。</span></p>
<p>HMR 需要 WebSocket<span class="mojikumi-line-end">，</span>于是在 Docker 里跑 dev 的时候发现 Vite 默认的 ws 端口是 24678<span class="mojikumi-line-end">，</span>唤醒了一些远古的回忆<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">；</span>结果去搜索引擎确认 <s>自己的 DNA 没有刻错</s> 的时候搜到的全是<span class="mojikumi-line-start">“</span>原神<span class="mojikumi-line-start">‘</span>港口驶过几艘船<span class="mojikumi-line-end">，</span>二四六七八<span class="mojikumi-line-end">’</span>任务攻略<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>绷不住了<span class="mojikumi-line-start">（</span></p>
<h4 id="大例会-2" class="heading"><a href="#大例会-2" class="heading-anchor" aria-label="章节： 大例会 2" tabindex="-1"></a><span>大例会 2</span></h4>
<p>例会前 CI 一直在排长队<span class="mojikumi-line-end">，</span>一开始还只用多等一会儿<span class="mojikumi-line-end">，</span>后来甚至会等待超时而直接挂掉<span class="mojikumi-line-end">，</span>差点没部署上<span class="mojikumi-line-start">（</span></p>
<p>最后发现我们部署的 dev 环境可用 prod 环境不可用<span class="mojikumi-line-end">，</span>直接用的 dev 环境做演示<span class="mojikumi-line-end">，</span>没人问为什么地址里有个 dev<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">；</span>后来发现确实是暴力改掉 migration 后数据库没重启的问题<span class="mojikumi-line-end">，</span>但我是一开始试图重启了但还是挂<span class="mojikumi-line-end">，</span>以为是其他问题<span class="mojikumi-line-end">，</span>但实际上是 SECoder 的容器重启需要等待<span class="mojikumi-line-end">，</span>而且不知道为什么有时候等好久也没重启成功<span class="mojikumi-line-end">，</span>非常玄学<span class="mojikumi-line-end">。</span></p>
<p>其他队都看上去做了很多功能<span class="mojikumi-line-end">，</span>我们能演示的只有注册登录<span class="mojikumi-line-end">。</span>虽然我们的注册登录确实相对来说更加完善<span class="mojikumi-line-end">，</span>而其他队的其他功能也一堆问题<span class="mojikumi-line-end">，</span>但感觉在差不多得了的氛围下<span class="mojikumi-line-end">，</span>似乎还是赶上进度更重要<span class="mojikumi-line-end">。</span></p>
<h3 id="大作业第三周" class="heading"><a href="#大作业第三周" class="heading-anchor" aria-label="章节： 大作业第三周" tabindex="-1"></a><span>大作业第三周</span></h3>
<h4 id="nitro-proxy-与-set-cookie" class="heading"><a href="#nitro-proxy-与-set-cookie" class="heading-anchor" aria-label="章节： Nitro proxy 与 set-cookie" tabindex="-1"></a><span>Nitro proxy 与 set-cookie</span></h4>
<p>说来实在是绷不住<span class="mojikumi-line-end">。</span></p>
<p>我在一个未登录时返回 403 的 API 设置 CSRF cookie<span class="mojikumi-line-end">，</span>在前后端对接测试时发现这个 <code>set-cookie</code> 在经过前端 proxy 之后就没了<span class="mojikumi-line-end">，</span>于是我以为是 Nitro 的 proxy 不转发 <code>set-cookie</code><span class="mojikumi-line-end">，</span>又马上要例会了<span class="mojikumi-line-end">，</span>就赶紧换成了 Nginx 反代<span class="mojikumi-line-end">。</span></p>
<p>例会结束后<span class="mojikumi-line-end">，</span>我从 Nitro 源码翻到 h3 源码<span class="mojikumi-line-end">，</span>再翻到 undici 的 issue<span class="mojikumi-line-end">，</span>发现 <a href="https://github.com/nodejs/undici/issues/1262">Undici strips out set-cookie headers, even when "credentials: 'include'" is set</a><span class="mojikumi-line-end">，</span>又用 <a href="https://httpbin.org/cookies/set/cookie/test">https<wbr>://<wbr>httpbin<wbr>.<wbr>org<wbr>/<wbr>cookies<wbr>/<wbr>set<wbr>/<wbr>cookie<wbr>/<wbr>test</a> 进行测试发现真的没有 <code>set-cookie</code><span class="mojikumi-line-end">，</span>还以为找到原因了<span class="mojikumi-line-end">。</span>但又发现 <a href="https://github.com/nodejs/undici/pull/1469">feat: remove headers filtering</a><span class="mojikumi-line-end">，</span>感觉很奇怪<span class="mojikumi-line-end">。</span></p>
<p>于是我再仔细看了一下<span class="mojikumi-line-end">，</span>发现 <a href="https://httpbin.org/cookies/set/cookie/test">https<wbr>://<wbr>httpbin<wbr>.<wbr>org<wbr>/<wbr>cookies<wbr>/<wbr>set<wbr>/<wbr>cookie<wbr>/<wbr>test</a> 返回的是 302<span class="mojikumi-line-end">，</span>而重定向之后就没有 <code>set-cookie</code> 了<span class="mojikumi-line-end">。</span>而一开始那个 API 没有返回 <code>set-cookie</code> 则是因为它返回的不是 200<span class="mojikumi-line-end">，</span>改成 200 就正常了<span class="mojikumi-line-end">。</span>但凡我测试了一个返回 200 的也不至于..</p>
<p>上午因为这个问题差点没在例会前部署好<span class="mojikumi-line-end">，</span>例会后一直研究到晚上<span class="mojikumi-line-end">，</span>几乎是搞了一整天<span class="mojikumi-line-end">，</span>破防了<span class="mojikumi-line-start">（</span></p>
<h4 id="姓游就要用尤大的-vue，yóu-だけにっ！" class="heading"><a href="#姓游就要用尤大的-vue，yóu-だけにっ！" class="heading-anchor" aria-label="章节： 姓游就要用尤大的 Vue，yóu だけにっ！" tabindex="-1"></a><span><s>姓游就要用尤大的 Vue<span class="mojikumi-line-end">，</span>yóu だけにっ！</s></span></h4>
<p>突然发现另一个队长姓游的队也用的 Vue<span class="mojikumi-line-end">，</span>而其他队暂时没发现有用 Vue 的<span class="mojikumi-line-start">（</span>我暂时只找到了 1/4 队伍的域名<span class="mojikumi-line-end">，</span>剩下有找不到的也有懒得找的<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span><s>难道是因为和尤大一样姓 yóu 吗<span class="mojikumi-line-end">，</span>这下<a href="https://zh.moegirl.org.cn/%E5%AE%AB%E4%B8%8B%E7%88%B1"><span class="text-aisan">爱姐</span></a>狂喜了<span class="mojikumi-line-start">（</span></s></p>
<h4 id="undici-发送带-content-length-0-的-delete-请求" class="heading"><a href="#undici-发送带-content-length-0-的-delete-请求" class="heading-anchor" aria-label="章节： undici 发送带 Content-Length: 0 的 DELETE 请求" tabindex="-1"></a><span>undici 发送带 <code>Content<wbr>-<wbr>Length<wbr>: <wbr>0</code> 的 DELETE 请求</span></h4>
<p>这是第 114514 次被 undici 背刺了<span class="mojikumi-line-end">，</span>具体请看 <a href="https://github.com/nodejs/undici/issues/2046">Sending a DELETE request with "Content-Length: 0" fails with a RequestContentLengthMismatchError · Issue #2046 · nodejs/undici</a><span class="mojikumi-line-end">。</span></p>
<p>而这个 <code>Content<wbr>-<wbr>Length<wbr>: <wbr>0</code> 是由已经没在维护的 <a href="https://github.com/http-party/node-http-proxy"><code>http-proxy</code></a> 加上的<span class="mojikumi-line-end">。</span>不知为何<span class="mojikumi-line-end">，</span>甚至不是给其他 method 加 Content-Length 的时候忘记排除 DELETE 了<span class="mojikumi-line-end">，</span>而是专门给 DELETE 加的<span class="mojikumi-line-end">。</span>更神秘的是<span class="mojikumi-line-end">，</span>这段代码是在十年前只有一百多行的 <a href="https://github.com/http-party/node-http-proxy/commit/4d131567211bcefc6ef0b0592d374fef7bd5abd8#diff-0855adca187963032d89850159dc18eacfb9f206c036887e19b1877e69cc0ac1R20">initial commit</a> 就加上了<span class="mojikumi-line-end">。</span>反正给这段打个 patch 就好了<span class="mojikumi-line-end">。</span></p>
<h4 id="secoder-commit-统计" class="heading"><a href="#secoder-commit-统计" class="heading-anchor" aria-label="章节： SECoder commit 统计" tabindex="-1"></a><span>SECoder commit 统计</span></h4>
<p>之前还在想 SECoder 的数据统计什么时候开<span class="mojikumi-line-end">，</span>没想到一开吓一跳<span class="mojikumi-line-start">（</span></p>
<p>它似乎是统计了所有 commit<span class="mojikumi-line-end">，</span>包括没 merge 到 master 的以及被 force-push 覆盖掉的<span class="mojikumi-line-end">，</span>结果我差不多到了 rk2 的两倍<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>但要是只算 master 的话其实进 top10 都还差一点<span class="mojikumi-line-end">。</span>应该主要是搭前端代码框架的时候<span class="mojikumi-line-end">，</span>有 20 多个 commit rebase 了好几次<span class="mojikumi-line-end">，</span>后来也经常 force-push 修小的 typo<span class="mojikumi-line-end">。</span>这么说来 GitHub 只统计 master 还是挺好的<span class="mojikumi-line-end">，</span>虽然我个人项目也经常会在 master 上疯狂 force-push<span class="mojikumi-line-start">（</span></p>
<p>但是 SECoder 没有 MR 评论数量的统计<span class="mojikumi-line-end">，</span>其实我觉得这个才是我应该霸榜的地方<span class="mojikumi-line-start">（</span></p>
<h3 id="大作业第四周" class="heading"><a href="#大作业第四周" class="heading-anchor" aria-label="章节： 大作业第四周" tabindex="-1"></a><span>大作业第四周</span></h3>
<p>期中周事比较多<span class="mojikumi-line-end">，</span>稍微有点拖<span class="mojikumi-line-end">，</span>于是寄了<span class="mojikumi-line-end">。</span></p>
<blockquote>
<p>整体开发过程中存在大量开发进度不协调的问题<span class="mojikumi-line-end">：</span>前后端对接不协调<span class="mojikumi-line-end">，</span>开发新功能与审核<span class="mojikumi-line-end">、</span>测试之间不协调<span class="mojikumi-line-end">，</span>没有按测试需要的拓扑顺序进行开发导致先开发的功能要等着后面的功能才能测试<span class="mojikumi-line-end">，</span>对开发计划认识不统一<span class="mojikumi-line-end">，</span>还没修完当周计划的锅就开始写之后的功能……</p>
</blockquote>
<p>我本来以为后端搭起基本框架之后我就不用管了<span class="mojikumi-line-end">，</span>可以让队友自己搞<span class="mojikumi-line-end">，</span>结果到了最后才发现全是锅<span class="mojikumi-line-end">。</span>虽然队友有各种奇妙操作<span class="mojikumi-line-end">，</span>但不得不说很多都是我可以提早发现来避免的<span class="mojikumi-line-end">，</span>还有很多是沟通上出了问题<span class="mojikumi-line-end">，</span>并且我自己的活也干得有点晚<span class="mojikumi-line-end">。</span>这毕竟是软工而不是大号程设训练<span class="mojikumi-line-end">，</span>只能承认<span class="mojikumi-line-end">，</span>我软工是真的菜<span class="mojikumi-line-end">，</span>做好规划安排以及与人沟通协作的基本能力非常欠缺<span class="mojikumi-line-end">。</span></p>
<p><s>要是有万能的<a href="https://zh.moegirl.org.cn/%E5%AE%AB%E6%A3%AE%E8%91%B5">喵森</a>来协调大家的开发进度就好了</s><span class="mojikumi-line-end">；</span><span class="heimu">软工中的总集篇<span class="mojikumi-line-end">：</span>要是部署挂了赶紧换一个旧版镜像<span class="mojikumi-line-end">，</span>可以说是没写完而不是部署挂了<span class="mojikumi-line-end">，</span>就可以只扣 1 分而不是 2 分了<span class="mojikumi-line-end">。</span></span> 突然想到的<span class="mojikumi-line-end">，</span>但这么一想<span class="mojikumi-line-end">，</span>好想在软工结束后的暑假二周目一下白箱<span class="mojikumi-line-end">，</span><s>现在先拜一拜喵森吧<span class="mojikumi-line-start">（</span></s></p>
<p>只不过还有一个问题<span class="mojikumi-line-end">，</span>Python 实在是<span class="mojikumi-line-end">，</span>真的能比 Rust 写的快吗<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>虽然看队友写了很多奇妙错误<span class="mojikumi-line-end">，</span>但要是没有类型检查之类的<span class="mojikumi-line-start">（</span>Python 可以一定程度上检查<span class="mojikumi-line-end">，</span>但看起来队友并没有做<span class="mojikumi-line-end">）</span>我大概也能写出不少 🌚</p>
<h3 id="大作业第五周" class="heading"><a href="#大作业第五周" class="heading-anchor" aria-label="章节： 大作业第五周" tabindex="-1"></a><span>大作业第五周</span></h3>
<h4 id="nuxt-v3-3-3-起-nuxt-vitest-报错" class="heading"><a href="#nuxt-v3-3-3-起-nuxt-vitest-报错" class="heading-anchor" aria-label="章节： Nuxt v3.3.3 起 nuxt-vitest 报错" tabindex="-1"></a><span>Nuxt v3.3.3 起 nuxt-vitest 报错</span></h4>
<p><a href="https://github.com/danielroe/nuxt-vitest/issues/122">Nuxt v3.3.3 causes tests to fail (Unhandled Errors) · Issue #122 · danielroe/nuxt-vitest</a></p>
<p>想着大例会结束后是升级依赖的好时机<span class="mojikumi-line-end">，</span>结果一 bump 测试挂了<span class="mojikumi-line-end">。</span>去 git bisect 了一下 Nuxt<span class="mojikumi-line-end">，</span>Nuxt 的构建比 Next 轻松多了<span class="mojikumi-line-end">，</span>又快又不报错<span class="mojikumi-line-end">。</span>bisect 出来之后本来还在想没时间也没头绪继续研究下去了<span class="mojikumi-line-end">，</span>这个 issue 也已经一周了<span class="mojikumi-line-end">，</span>不知道作者会不会继续咕着<span class="mojikumi-line-end">。</span>结果晚上一看<span class="mojikumi-line-end">，</span>被点了个心<span class="mojikumi-line-end">，</span>开了个 PR<span class="mojikumi-line-end">，</span>再一看<span class="mojikumi-line-end">，</span>原来 bisect 出来的那个 PR 就是 nuxt-vitest 的作者写的<span class="mojikumi-line-end">，</span>我都没发现<span class="mojikumi-line-start">（</span></p>
<h4 id="nspace-内-key-会失效" class="heading"><a href="#nspace-内-key-会失效" class="heading-anchor" aria-label="章节： NSpace 内 key 会失效" tabindex="-1"></a><span>NSpace 内 key 会失效</span></h4>
<p><a href="https://www.naiveui.com/zh-CN/os-theme/components/space"><code>&#x3C;n-space></code></a> 会给每个 child 套一个 <code>&#x3C;div></code><span class="mojikumi-line-end">，</span>于是 <code>key</code> 都失效了<span class="mojikumi-line-end">，</span>如果在 <code>&#x3C;n-space></code> 里面用 <code>v-for</code> 就可能不停地 remount<span class="mojikumi-line-end">，</span>调了一晚上<span class="mojikumi-line-start">（</span></p>
<p>这东西是真不如手写 flex<span class="mojikumi-line-end">。</span></p>
<h4 id="小例会-3" class="heading"><a href="#小例会-3" class="heading-anchor" aria-label="章节： 小例会 3" tabindex="-1"></a><span>小例会 3</span></h4>
<p>比较水<span class="mojikumi-line-end">，</span>只不过助教说他当年搞了个云服务器<span class="mojikumi-line-end">，</span>出问题了就把反代换成云服务器<span class="mojikumi-line-end">，</span>感觉很有道理<span class="mojikumi-line-start">（</span></p>
<h3 id="大作业第六周" class="heading"><a href="#大作业第六周" class="heading-anchor" aria-label="章节： 大作业第六周" tabindex="-1"></a><span>大作业第六周</span></h3>
<p>大家这周都比较摆<span class="mojikumi-line-end">，</span>我还去修了不少后端的锅<span class="mojikumi-line-end">。</span>太久没管后端<span class="mojikumi-line-end">，</span>对代码复用<span class="mojikumi-line-end">、</span>测试的完善程度<span class="mojikumi-line-end">、</span>QuerySet 的编写<span class="mojikumi-line-end">、</span>请求参数的校验等问题感到了一些震惊<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>但确实是没力气去修<span class="mojikumi-line-start">（</span></p>
<p>响应式设计还作为自选需求被提了出来<span class="mojikumi-line-end">，</span>要是打算加这个需求一开始不就应该有吗<span class="mojikumi-line-end">，</span>这也不是什么需要由同学想到的功能<span class="mojikumi-line-end">，</span>我看需求列表没有就默认也不会作为自选需求了<span class="mojikumi-line-end">，</span>刚开课的时候还找助教吐槽没有响应式分数<span class="mojikumi-line-end">。</span>响应式设计要 mobile first<span class="mojikumi-line-end">，</span>能这么晚加吗<span class="mojikumi-line-end">。</span></p>
<p>劝大家还是别太信需求列表<span class="mojikumi-line-end">，</span>该卷还得卷<span class="mojikumi-line-end">，</span>自己提自选需求总比快结束了被别人提强太多<span class="mojikumi-line-end">。</span></p>
<h3 id="大作业第-79-周" class="heading"><a href="#大作业第-79-周" class="heading-anchor" aria-label="章节： 大作业第 7~9 周" tabindex="-1"></a><span>大作业第 7~9 周</span></h3>
<p>草<span class="mojikumi-line-end">，</span>我有软工<span class="mojikumi-line-end">，</span>没有能加分的课<span class="mojikumi-line-end">，</span>为什么要打智能体<span class="mojikumi-line-start">（</span></p>
<h4 id="《gif-图片搜索网站》" class="heading"><a href="#《gif-图片搜索网站》" class="heading-anchor" aria-label="章节： 《GIF 图片搜索网站》" tabindex="-1"></a><span><span class="mojikumi-line-start">《</span>GIF 图片搜索网站<span class="mojikumi-line-end">》</span></span></h4>
<p>来点 PRJ2 笑话<span class="mojikumi-line-end">：</span>GIF 图片搜索网站<span class="mojikumi-line-end">，</span>每个队都是最后两三周才开始写搜索功能<span class="mojikumi-line-start">（</span></p>
<h3 id="大作业后面几周" class="heading"><a href="#大作业后面几周" class="heading-anchor" aria-label="章节： 大作业后面几周" tabindex="-1"></a><span>大作业后面几周</span></h3>
<p>没力气写游记了<span class="mojikumi-line-end">，</span>这个课快从世界上消失吧<span class="mojikumi-line-start">（</span></p>]]></content>
        <category label="Web" term="https://ouuan.moe/tag/Web"/>
        <category label="学习记录" term="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[一些博客排版优化小 trick]]></title>
        <id>https://ouuan.moe/post/2023/02/typography-tricks</id>
        <link href="https://ouuan.moe/post/2023/02/typography-tricks"/>
        <updated>2023-02-09T15:19:45.000Z</updated>
        <summary type="html"><![CDATA[

<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class="mojikumi">（</span><s>hopefully</s><span class="mojikumi">）</span> 排版<span class="mojikumi-line-end">，</span>在这整理一下<span class="mojikumi-line-end">，</span>分享出来<span class="mojikumi-line-end">，</span>也是怕几年<span class="mojikumi-line-start">（</span><s>几天</s><span class="mojikumi-line-end">）</span>后想不起来这些奇怪的东西是在干什么<span class="mojikumi-line-end">。</span></p>
<p>主要是 text justify 相关和标点挤压相关<span class="mojikumi-line-end">。</span></p>
]]></summary>
        <content type="html"><![CDATA[

<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class="mojikumi">（</span><s>hopefully</s><span class="mojikumi">）</span> 排版<span class="mojikumi-line-end">，</span>在这整理一下<span class="mojikumi-line-end">，</span>分享出来<span class="mojikumi-line-end">，</span>也是怕几年<span class="mojikumi-line-start">（</span><s>几天</s><span class="mojikumi-line-end">）</span>后想不起来这些奇怪的东西是在干什么<span class="mojikumi-line-end">。</span></p>
<p>主要是 text justify 相关和标点挤压相关<span class="mojikumi-line-end">。</span></p>

<p>我博客的 Markdown 渲染基于 <a href="https://github.com/unifiedjs/unified">unified</a><span class="mojikumi-line-end">，</span>所以下面的一些优化是以 unified 插件<span class="mojikumi-line-start">（</span>remark / remark-rehype / rehype 插件<span class="mojikumi-line-end">）</span>的形式实现的<span class="mojikumi-line-end">。</span></p>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-orange-1 dark:bg-orange-9 b-orange" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h2 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-alert-circle-outline text-orange" data-v-a2ab257f></span><!--v-if--><span data-v-a2ab257f>Warning</span></h2><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>为了直观地进行演示<span class="mojikumi-line-end">，</span>本文可能会在提到一个问题的段落通过设置文本和 CSS 特意制造出相应的问题<span class="mojikumi-line-end">，</span>并禁用对这个问题的处理措施以将问题展示出来<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h2 id="text-justify-相关" class="heading"><a href="#text-justify-相关" class="heading-anchor" aria-label="章节： text justify 相关" tabindex="-1"></a><span>text justify 相关</span></h2>
<p>在每行的宽度略有差异时<span class="mojikumi-line-end">，</span><a href="https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#line_adjustment">使用两端对齐会让中文排版更加美观</a><span class="mojikumi-line-end">，</span>这一般通过 <a href="https://developer.mozilla.org/docs/Web/CSS/text-align"><code>text-align</code> CSS 属性</a> 的 <code>justify</code> 选项实现<span class="mojikumi-line-end">。</span>但由于网页排版的不确定性<span class="mojikumi-line-end">，</span>每行的宽度可能不是略有差异而是有很大差异<span class="mojikumi-line-end">，</span>这时使用 text justify 就会造成过大的空隙<span class="mojikumi-line-end">，</span>所以需要避免出现过短的行<span class="mojikumi-line-end">，</span>或者在有必要时禁用 text justify<span class="mojikumi-line-end">。</span></p>
<h3 id="langzh-cn-对-text-justify-的影响" class="heading"><a href="#langzh-cn-对-text-justify-的影响" class="heading-anchor" aria-label="章节： lang=&#x22;zh-CN&#x22; 对 text justify 的影响" tabindex="-1"></a><span>lang="zh-CN" 对 text justify 的影响</span></h3>
<p>这个并不是 trick<span class="mojikumi-line-end">，</span>是基操<span class="mojikumi-line-end">，</span>但挺重要的<span class="mojikumi-line-end">，</span>还是写在这<span class="mojikumi-line-end">。</span></p>
<p>如果没有将 HTML 的 <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes/lang"><code>lang</code> 属性</a> 设为中文<span class="mojikumi-line-end">，</span>在 Firefox 109<span class="mojikumi-line-start">（</span>以及其他版本 / 其他浏览器<span class="mojikumi-line-end">，</span>但不包括 Chrome 109<span class="mojikumi-line-end">）</span>中就会按照英文的规则<span class="mojikumi-line-end">，</span>将连续的汉字视作一个单词<span class="mojikumi-line-end">，</span>而只在词与词之间增大间距<span class="mojikumi-line-end">，</span>不改变汉字之间的间距<span class="mojikumi-line-end">，</span>如下所示<span class="mojikumi-line-end">：</span></p>
<p lang="en" style="margin: auto; width: 12em; border: gray solid 1px;">这是一个设置了 <code>lang="en"</code> 和固定宽度的段落<span class="mojikumi-line-end">，</span>这是一个 loooooooooooooooong word<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/firefox-text-justify-en.e05e8739.webp"><img srcset="/assets/firefox-text-justify-en.2157e1dd.png" loading="lazy" src="/assets/firefox-text-justify-en.2157e1dd.png" width="243" height="162" alt="上面的 lang 设为 en 的段落在 Firefox 109 中的渲染效果"></picture></p>
<p>其中<span class="mojikumi-line-end">，</span>第一行没有两端对齐<span class="mojikumi-line-end">，</span>而第三行只在逗号后面增加了间距<span class="mojikumi-line-end">。</span></p>
<p>如果设置了 <code>lang<wbr>="<wbr>zh<wbr>-<wbr>CN<wbr>"</code> 则会在汉字间添加间距<span class="mojikumi-line-end">：</span></p>
<p lang="zh-CN" style="margin: auto; width: 12em; border: gray solid 1px;">这是一个设置了 <code>lang="zh-CN"</code> 和固定宽度的段落<span class="mojikumi-line-end">，</span>这是一个 loooooooooooooooong word<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/firefox-text-justify-zh-CN.5f0808bf.webp"><img srcset="/assets/firefox-text-justify-zh-CN.b7336c2c.png" loading="lazy" src="/assets/firefox-text-justify-zh-CN.b7336c2c.png" width="245" height="161" alt="上面的 lang 设为 zh-CN 的段落在 Firefox 109 中的渲染效果"></picture></p>
<p>当然<span class="mojikumi-line-end">，</span>设置 HTML 的 <code>lang</code> 属性还有其他作用<span class="mojikumi-line-end">，</span>不管怎么样总是得设一个的<span class="mojikumi-line-end">。</span></p>
<h3 id="断开过长的行内代码" class="heading"><a href="#断开过长的行内代码" class="heading-anchor" aria-label="章节： 断开过长的行内代码" tabindex="-1"></a><span>断开过长的行内代码</span></h3>
<p>有时候会遇到一些 <code style="word-break: normal;">veryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongInlineCode</code><span class="mojikumi-line-end">，</span>为了让它不断开<span class="mojikumi-line-end">，</span>前面的一行就会非常短<span class="mojikumi-line-end">，</span>justify 后间隙就非常大<span class="mojikumi-line-end">。</span>当然<span class="mojikumi-line-end">，</span>这样的问题不局限于行内代码<span class="mojikumi-line-end">，</span>但正常的英文很少会遇到特别长的单词<span class="mojikumi-line-end">，</span>代码则经常遇到<span class="mojikumi-line-end">，</span>所以我选择对代码进行处理<span class="mojikumi-line-start">（</span>主要是因为不需要分词套 <code>&#x3C;span></code><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>思路很简单<span class="mojikumi-line-end">，</span>就是把过长的 <code>:not(pre) > code</code> 通过 <a href="https://developer.mozilla.org/docs/Web/HTML/Element/wbr"><code>&#x3C;wbr></code></a> 或者 <a href="https://developer.mozilla.org/docs/Web/CSS/word-break"><code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code></a> 断开<span class="mojikumi-line-end">，</span>让它不可断开的部分没那么长<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">：</span><code>&#x3C;<wbr>code<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>: &#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;/<wbr>code<wbr>></code><span class="mojikumi-line-end">、</span><code>&#x3C;<wbr>code<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;: &#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;/&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;/<wbr>code<wbr>></code>……<span class="mojikumi-line-start">（</span><s>禁止禁止套娃</s><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>具体实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/rehype/breakLongCode.ts"><code>breakLongCode<wbr>.<wbr>ts</code></a></p>
<ol>
<li>如果按空格分开没有超过 10 个字符的部分<span class="mojikumi-line-end">，</span>不进行处理<span class="mojikumi-line-end">；</span></li>
<li>如果按正则表达式的 <code>\b</code> 分开没有超过 12 个字符的部分<span class="mojikumi-line-end">，</span>则在 <code>\b</code> 处插入 <code>&#x3C;wbr></code><span class="mojikumi-line-end">；</span></li>
<li>如果按 <code>\b</code> 以及下划线分开没有超过 15 个字符的部分<span class="mojikumi-line-end">，</span>则在相应位置插入 <code>&#x3C;wbr></code><span class="mojikumi-line-end">；</span></li>
<li>否则<span class="mojikumi-line-end">，</span>没救了<span class="mojikumi-line-end">，</span>直接 <code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code><span class="mojikumi-line-end">。</span></li>
</ol>
<p>当然这个粗糙的处理方式还是有一些问题<span class="mojikumi-line-end">，</span>比如从上面的示例就可以看出来<span class="mojikumi-line-end">，</span>期望结果可能是 <code>&#x3C;wbr></code> / <code>&#x3C;code></code> 不被断开<span class="mojikumi-line-end">，</span>但实际上会在 <code>&#x3C;</code> 后 / <code>></code> 前断开<span class="mojikumi-line-end">。</span></p>
<p>UPD<span class="mojikumi-line-end">：</span>链接也可以用同样的方法进行处理<span class="mojikumi-line-end">。</span></p>
<h3 id="在小屏幕上对窄的元素禁用-text-justify" class="heading"><a href="#在小屏幕上对窄的元素禁用-text-justify" class="heading-anchor" aria-label="章节： 在小屏幕上对窄的元素禁用 text justify" tabindex="-1"></a><span>在小屏幕上对窄的元素禁用 text justify</span></h3>
<p style="margin: auto; width: 7em; border: gray solid 1px;">有的时候容器宽度太小<span class="mojikumi-line-end">，</span>即使是正常的普通文本也不适合进行 text justify<span class="mojikumi-line-end">。</span></p>
<p>我选择了一个非常简单粗暴的处理方法<span class="mojikumi-line-end">：</span>认为窄的元素 = 小屏幕上嵌套了多级的元素<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="CSS 代码块" data-v-c675dba6>CSS</h4><ile-root id="ile-3"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-3--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">.article-style</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">justify</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #4876D6">.article-style</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">initial</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #994CC3">@media</span><span style="color: #403F53"> </span><span style="color: #111111">(</span><span style="color: #0C969B">min-width</span><span style="color: #403F53">: </span><span style="color: #AA0982">40em</span><span style="color: #111111">)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">.article-style</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">inherit</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  }</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C5E478">.article-style</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">justify</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C5E478">.article-style</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">initial</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C792EA">@media</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">(</span><span style="color: #80CBC4">min-width</span><span style="color: #D6DEEB">: </span><span style="color: #F78C6C">40</span><span style="color: #FFEB95">em</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">.article-style</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">inherit</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  }</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div></section>
<p><span class="mojikumi-line-start">（</span>上面放的是编译出来的 CSS<span class="mojikumi-line-end">，</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/styles/article.scss">源码</a>是使用 UnoCSS 的 SCSS<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>一些细节<span class="mojikumi-line-end">：</span></p>
<ul>
<li>使用 <code>*</code> 选择器<span class="mojikumi-line-end">，</span><a href="https://developer.mozilla.org/docs/Web/CSS/Specificity">specificity</a> 很低<span class="mojikumi-line-end">，</span>便于 override<span class="mojikumi-line-end">。</span></li>
<li>只选择 <code>> * > *</code> 而非 <code> * *</code><span class="mojikumi-line-end">，</span>这样的话嵌套更深的元素依然从 parent 继承 <code>text-align</code><span class="mojikumi-line-end">，</span>就可以设置 CSS override 掉一整个子树<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>之前我一度以为 katex 不自带行间公式居中<span class="mojikumi-line-end">，</span>后来发现是被我的 CSS 改掉了 <code>text-align</code><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></li>
<li>使用 <code>inherit</code> 而非 <code>justify</code> 进行撤销<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="对包含过长行内公式的元素禁用-text-justify" class="heading"><a href="#对包含过长行内公式的元素禁用-text-justify" class="heading-anchor" aria-label="章节： 对包含过长行内公式的元素禁用 text justify" tabindex="-1"></a><span>对包含过长行内公式的元素禁用 text justify</span></h3>
<p>除了 <code>行内代码</code><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>行内公式</mtext></mrow><annotation encoding="application/x-tex">\text{行内公式}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">行内公式</span></span></span></span></span></span> 也是常见的过长的不可断元素<span class="mojikumi-line-end">。</span>这里我采用了一个本文最 dirty 的处理方式<span class="mojikumi-line-end">：</span>在客户端通过 JavaScript 检测宽度过大的行内公式<span class="mojikumi-line-end">。</span></p>
<p>具体实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/components/TextJustifyFix.vue"><code>TextJustifyFix<wbr>.<wbr>vue</code></a></p>
<ul>
<li>只修改 <code>text<wbr>-<wbr>align<wbr>: <wbr>justify</code> 的元素<span class="mojikumi-line-end">，</span>如果已经设置为其他对齐方式<span class="mojikumi-line-start">（</span>例如表格中的居中对齐<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>就不应修改<span class="mojikumi-line-end">。</span></li>
<li>使用了 <a href="https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready"><code>document<wbr>.<wbr>fonts<wbr>.<wbr>ready</code></a> 来等待字体全部加载好再检查宽度<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="标点挤压" class="heading"><a href="#标点挤压" class="heading-anchor" aria-label="章节： 标点挤压" tabindex="-1"></a><span>标点挤压</span></h2>
<p>代码实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/remark/mojikumi.ts"><code>mojikumi<wbr>.<wbr>ts</code></a><span class="mojikumi-line-end">、</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/styles/mojikumi.scss"><code>mojikumi<wbr>.<wbr>scss</code></a><span class="mojikumi-line-end">。</span></p>
<h3 id="相邻标点的挤压" class="heading"><a href="#相邻标点的挤压" class="heading-anchor" aria-label="章节： 相邻标点的挤压" tabindex="-1"></a><span>相邻标点的挤压</span></h3>
<p>例如<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">「</span><span class="no-mojikumi"><span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">“</span><span class="mojikumi">。</span><span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></span><span class="mojikumi-line-end">」</span>→<span class="mojikumi-line-start">「</span><span><span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">“</span><span class="mojikumi">。</span><span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></span><span class="mojikumi">」</span><span class="mojikumi-line-end">。</span>当然本页其他地方也有一些例子<span class="mojikumi-line-end">。</span></p>
<p>具体规则 <a href="https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#compression_rules_for_consecutive_punctuation_marks">clreq</a> 中说的比较模糊<span class="mojikumi-line-end">，</span>可以参考 <a href="https://www.w3.org/TR/2020/NOTE-jlreq-20200811/#positioning_of_consecutive_opening_brackets_closing_brackets_comma_full_stops_and_middle_dots">jlreq</a><span class="mojikumi-line-end">。</span></p>
<h3 id="使用-css-去除标点的一半空白" class="heading"><a href="#使用-css-去除标点的一半空白" class="heading-anchor" aria-label="章节： 使用 CSS 去除标点的一半空白" tabindex="-1"></a><span>使用 CSS 去除标点的一半空白</span></h3>
<p>CSS 实现标点挤压有两种方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>使用 <a href="https://developer.mozilla.org/docs/Web/CSS/letter-spacing"><code>letter<wbr>-<wbr>spacing<wbr>: -<wbr>0<wbr>.<wbr>5em</code></a> 去掉右侧空白<span class="mojikumi-line-end">，</span><code>margin<wbr>-<wbr>left<wbr>: -<wbr>0<wbr>.<wbr>5em</code> 去掉左侧空白<span class="mojikumi-line-end">。</span></li>
<li>使用 <a href="https://developer.mozilla.org/docs/Web/CSS/font-feature-settings"><code>font<wbr>-<wbr>feature<wbr>-<wbr>settings<wbr>:</code></a> <a href="https://learn.microsoft.com/typography/opentype/spec/features_fj#halt"><code>"halt"</code></a> 将支持 halt 特性的字体变为半宽<span class="mojikumi-line-end">。</span></li>
</ul>
<p>使用 <code>letter<wbr>-<wbr>spacing</code> 是有讲究的<span class="mojikumi-line-end">，</span>比 <code>margin<wbr>-<wbr>right</code> 靠谱<span class="mojikumi-line-end">，</span>因为字符真的会只占半宽<span class="mojikumi-line-end">，</span>而不是占全宽但一半和下一个字符重叠<span class="mojikumi-line-end">，</span>甚至造成 overflow<span class="mojikumi-line-end">，</span>可能导致滚动条出现<span class="mojikumi-line-end">。</span>但 <code>letter<wbr>-<wbr>spacing</code> 不能去掉左侧空白<span class="mojikumi-line-end">，</span>就只能使用 <code>margin<wbr>-<wbr>left</code> 了<span class="mojikumi-line-end">。</span></p>
<p>通过 halt 特性变为半宽是更加靠谱的做法<span class="mojikumi-line-end">，</span>但不是所有字体都支持这一特性<span class="mojikumi-line-end">，</span>思源宋体是支持的<span class="mojikumi-line-end">，</span><span class="font-kai">霞鹜文楷</span> 不支持<span class="mojikumi-line-end">。</span>并且<span class="mojikumi-line-end">，</span>halt 只能变为半宽<span class="mojikumi-line-end">，</span>不能变成其他宽度<span class="mojikumi-line-end">。</span></p>
<h3 id="行首行尾标点的挤压" class="heading"><a href="#行首行尾标点的挤压" class="heading-anchor" aria-label="章节： 行首行尾标点的挤压" tabindex="-1"></a><span>行首行尾标点的挤压</span></h3>
<p>这里参考了 <a href="https://github.com/ethantw/Han">Han.css</a> 的实现<span class="mojikumi-line-end">，</span>就是把全宽的标点改成半宽标点和一个通过 <code>::before</code> 或 <code>::end</code> 添加的半宽的空格<span class="mojikumi-line-end">：</span></p>
<ul>
<li>因为是 pseudo element<span class="mojikumi-line-end">，</span>所以不影响文本内容<span class="mojikumi-line-start">（</span>例如复制出来的文本<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>因为是空格<span class="mojikumi-line-end">，</span>所以位于行首或行尾时就会发生<a href="https://www.w3.org/TR/2023/CRD-css-text-3-20230127/#white-space-phase-2">空格塌陷</a><span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="英文标点的处理" class="heading"><a href="#英文标点的处理" class="heading-anchor" aria-label="章节： 英文标点的处理" tabindex="-1"></a><span>英文标点的处理</span></h3>
<p>我采用了一个比较简单的判断英文标点的方法<span class="mojikumi-line-end">：</span></p>
<ul>
<li>空白一侧<span class="mojikumi-line-start">（</span>左括号<span class="mojikumi-line-end">、</span>左引号等是左侧<span class="mojikumi-line-end">，</span>其他一般是右侧<span class="mojikumi-line-end">）</span>是空格时是英文标点<span class="mojikumi-line-end">；</span></li>
<li>右单引号右侧是字母时是撇号<span class="mojikumi-line-end">。</span></li>
</ul>
<p>英文标点一般调为半宽即可<span class="mojikumi-line-end">，</span>但撇号半宽还是有些太宽了<span class="mojikumi-line-end">，</span>应该<span class="mojikumi-line-start">（</span>根据字体而定<span class="mojikumi-line-end">）</span>调成大约三分之一宽<span class="mojikumi-line-end">，</span>单引号也可以调窄一点<span class="mojikumi-line-end">，</span>所以可以特判一下单引号<span class="mojikumi-line-end">，</span>使用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class="mojikumi-line-end">。</span></p>
<h3 id="给霞鹜文楷添加-halt-特性" class="heading"><a href="#给霞鹜文楷添加-halt-特性" class="heading-anchor" aria-label="章节： 给霞鹜文楷添加 halt 特性" tabindex="-1"></a><span>给霞鹜文楷添加 halt 特性</span></h3>
<p>因为 <a href="https://github.com/lxgw/LxgwWenKai/issues/104">添加 halt 特性的 issue</a> 被拒了<span class="mojikumi-line-end">，</span>我就自己改了一个 <a href="https://github.com/ouuan/XiaWu-Punctuations">标点字体</a><span class="mojikumi-line-end">，</span>顺便把引号改成了和思源宋体一致的全宽以方便一起处理<span class="mojikumi-line-start">（</span>也可以理解为改引号宽度顺便添加 halt 特性<span class="mojikumi-line-end">，</span>毕竟没有 halt 也可以用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code> 凑合一下<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>具体可以看仓库里的 patch 文件<span class="mojikumi-line-end">。</span></p>
<h3 id="关于-chws-特性" class="heading"><a href="#关于-chws-特性" class="heading-anchor" aria-label="章节： 关于 chws 特性" tabindex="-1"></a><span>关于 chws 特性</span></h3>
<p><a href="https://learn.microsoft.com/typography/opentype/spec/features_ae#chws">chws 特性</a> 可以根据上下文自动挤压连续标点<span class="mojikumi-line-end">，</span>一眼看上去似乎比 halt 更好用<span class="mojikumi-line-end">。</span></p>
<p>思源宋体不支持这一特性<span class="mojikumi-line-end">，</span>只不过有 <a href="https://github.com/googlefonts/chws_tool">chws_tool</a> 可以用来转换<span class="mojikumi-line-end">。</span></p>
<p>但是<span class="mojikumi-line-end">，</span>chws 不支持行首行尾标点挤压<span class="mojikumi-line-end">，</span>而如果要支持行首行尾挤压<span class="mojikumi-line-end">，</span>就得把支持连续标点挤压的工作做一遍<span class="mojikumi-line-start">（</span>因为要知道哪些标点已经被挤成了半宽哪些只在行首行尾挤成半宽<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>这样一来 chws 就没多大意义了<span class="mojikumi-line-end">。</span></p>
<h3 id="yet-another-mojikumi？" class="heading"><a href="#yet-another-mojikumi？" class="heading-anchor" aria-label="章节： Yet another mojikumi？" tabindex="-1"></a><span>Yet another mojikumi？</span></h3>
<p>有一些现成的支持标点挤压的库<span class="mojikumi-line-end">，</span>例如 <a href="https://github.com/sivan/heti">heti</a> 和 <a href="https://github.com/ethantw/Han">Han.css</a><span class="mojikumi-line-end">。</span>但是我有一些需求<span class="mojikumi-line-end">：</span></p>
<ul>
<li>要能 SSG <span class="mojikumi">（</span>SSR<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>不能在客户端运行<span class="mojikumi-line-end">。</span>最好是能在 remark / rehype 中进行处理<span class="mojikumi-line-end">。</span></li>
<li>最好是尽量使用 halt 而非 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class="mojikumi-line-end">。</span></li>
<li>要能添加一些自定义的规则<span class="mojikumi-line-end">，</span>比如对单引号特殊处理<span class="mojikumi-line-end">。</span></li>
<li>我只需要标点挤压<span class="mojikumi-line-end">，</span>不想要一个 CSS 全家桶<span class="mojikumi-line-end">，</span>或者带有其他功能的 JS<span class="mojikumi-line-end">。</span></li>
</ul>
<p>现有的库难以同时满足上面这些需求<span class="mojikumi-line-end">，</span>所以我就自己写了<span class="mojikumi-line-end">。</span></p>
<p>本来想写一个通用的库<span class="mojikumi-line-end">，</span>但通用的逻辑貌似没多少代码<span class="mojikumi-line-end">，</span>不值得写成一个库<span class="mojikumi-line-end">。</span>而我的整个 remark 插件又有点 opinionated<span class="mojikumi-line-end">，</span>可能不太适合做成库<span class="mojikumi-line-start">（</span><s>懒得做成库</s><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>想用的话可以在遵守 <a href="https://github.com/ouuan/iles-blog/blob/master/LICENSE">AGPL 3.0</a> 的前提下直接复制<span class="mojikumi-line-start">（</span>本文提到的其他代码也是一样<span class="mojikumi-line-end">，</span>当然<span class="mojikumi-line-end">，</span>如果是两三行的代码片段就不至于 AGPL 了<span class="mojikumi-line-end">，</span>简单标一下出处就 OK<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h2 id="代码中的-unicode（cjk）的字体" class="heading"><a href="#代码中的-unicode（cjk）的字体" class="heading-anchor" aria-label="章节： 代码中的 Unicode（CJK）的字体" tabindex="-1"></a><span>代码中的 Unicode<span class="mojikumi-line-start">（</span>CJK<span class="mojikumi-line-end">）</span>的字体</span></h2>
<p><s>为什么马上要考抽代了你在这更新博客<span class="mojikumi-line-end">，</span>我也很想知道<span class="mojikumi-line-start">（</span></s> 其实是在一个群里看到有人在聊博客的等宽字体<span class="mojikumi-line-end">，</span>然后看了一眼自己的等宽字体<span class="mojikumi-line-end">，</span>差点没想起来这个 trick 在干什么<span class="mojikumi-line-end">。</span></p>
<p>很多等宽字体是没有 CJK 字形的<span class="mojikumi-line-end">，</span>在 Windows 的默认字体下<span class="mojikumi-line-end">，</span>fallback 到 <code>monospace</code> 时中文会显示为<code style="font-family: NSimSun, SimSun, serif;">宋体</code><span class="mojikumi-line-end">，</span>而一般来说应当是<code>黑体</code><span class="mojikumi-line-end">。</span>所以可以为 Unicode 部分专门指定一个 fallback font<span class="mojikumi-line-end">，</span>通过指定 <code>unicode<wbr>-<wbr>range</code> 来让 ASCII 字符依然 fallback 到 <code>monospace</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="CSS 代码块" data-v-c675dba6>CSS</h3><ile-root id="ile-4"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-4--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">@font-face</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">font-family</span><span style="color: #403F53">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Monospace Unicode Fallback</span><span style="color: #111111">&quot;</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">src</span><span style="color: #403F53">: </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Noto Sans Mono CJK SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Source Han Mono SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Noto Sans CJK SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Source Han Sans SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Microsoft YaHei</span><span style="color: #111111">&quot;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">unicode-range</span><span style="color: #403F53">: </span><span style="color: #4876D6">U+1000-fffff</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #4876D6">:root</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">--default-mono-font</span><span style="color: #403F53">: </span><span style="color: #0C969B">ui-monospace</span><span style="color: #403F53">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Monospace Unicode Fallback</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #0C969B">monospace</span><span style="color: #403F53">, </span><span style="color: #4876D6">var</span><span style="color: #403F53">(</span><span style="color: #4876D6">--default-emoji-font</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">@font-face</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">font-family</span><span style="color: #D6DEEB">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Monospace Unicode Fallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">src</span><span style="color: #D6DEEB">: </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Noto Sans Mono CJK SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Source Han Mono SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Noto Sans CJK SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Source Han Sans SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Microsoft YaHei</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">unicode-range</span><span style="color: #D6DEEB">: </span><span style="color: #82AAFF">U+1000-fffff</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C5E478">:root</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">--default-mono-font</span><span style="color: #D6DEEB">: </span><span style="color: #7FDBCA">ui-monospace</span><span style="color: #D6DEEB">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Monospace Unicode Fallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">monospace</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">var</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">--default-emoji-font</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div></section>
<h2 id="为不同语言设置不同字体" class="heading"><a href="#为不同语言设置不同字体" class="heading-anchor" aria-label="章节： 为不同语言设置不同字体" tabindex="-1"></a><span>为不同语言设置不同字体</span></h2>
<p>其实我感觉我的做法有点丑<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>还好有 UnoCSS 稍微强一点<span class="mojikumi-line-start">（</span></p>
<ul>
<li>为每个样式<span class="mojikumi-line-start">（</span>例如宋/<span class="font-kai">楷</span><span class="mojikumi-line-end">）</span>和每个语言分别用一个 CSS 变量记录当前字体<span class="mojikumi-line-end">。</span></li>
<li>改变样式时修改 <code>font<wbr>-<wbr>family</code> 为这个样式的字体<span class="mojikumi-line-end">，</span>修改每个语言的字体为这个样式<span class="mojikumi-line-end">。</span></li>
<li>改变语言时修改 <code>font<wbr>-<wbr>family</code> 为这个语言的字体<span class="mojikumi-line-end">，</span>修改每个样式的字体为这个语言<span class="mojikumi-line-end">。</span></li>
</ul>
<p>语言通过 <code>lang</code> 属性标识<span class="mojikumi-line-end">。</span></p>
<p>详见 <a href="https://github.com/ouuan/iles-blog/commit/e8df882f4a550bfd5db50f837f0a9ab376262dc4">commit</a><span class="mojikumi-line-end">。</span></p>]]></content>
        <category label="blog" term="https://ouuan.moe/tag/blog"/>
        <category label="CSS" term="https://ouuan.moe/tag/CSS"/>
        <category label="Web" term="https://ouuan.moe/tag/Web"/>
        <category label="经验分享" term="https://ouuan.moe/tag/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[另一种很新的中文字体网页嵌入方案]]></title>
        <id>https://ouuan.moe/post/2023/01/glyph-segregator</id>
        <link href="https://ouuan.moe/post/2023/01/glyph-segregator"/>
        <updated>2023-01-19T13:15:05.000Z</updated>
        <summary type="html"><![CDATA[<p>当你看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>但是懒得优化 DP<span class="mojikumi-line-end">，</span>也不会进化算法<span class="mojikumi-line-end">，</span>你可以……</p>
<p>整一个<a href="https://github.com/ouuan/glyph-segregator"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-start">（</span></p>
]]></summary>
        <content type="html"><![CDATA[<p>当你看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>但是懒得优化 DP<span class="mojikumi-line-end">，</span>也不会进化算法<span class="mojikumi-line-end">，</span>你可以……</p>
<p>整一个<a href="https://github.com/ouuan/glyph-segregator"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-start">（</span></p>

<p><s>这就是你 <a href="/post/2023/01/ddpp">开坑 DDPP</a> 不填的理由吗</s></p>
<h2 id="背景" class="heading"><a href="#背景" class="heading-anchor" aria-label="章节： 背景" tabindex="-1"></a><span>背景</span></h2>
<p>前不久看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>还想着没必要做这种优化<span class="mojikumi-line-end">，</span>毕竟按 Google Fonts 进行子集化就可以做到每页 1MB 左右<span class="mojikumi-line-end">，</span>按现代的网速不会有太大问题<span class="mojikumi-line-end">，</span>用 devtools 开节流试了下看起来也还行<span class="mojikumi-line-end">。</span></p>
<p>然后我回家了<span class="mojikumi-line-end">，</span>离开了校园网<span class="mojikumi-line-end">。</span>虽然自定义域名的 Cloudflare Pages 还能访问<span class="mojikumi-line-end">，</span>但速度暂且不论<span class="mojikumi-line-end">，</span>丢包率就很有点恐怖<span class="mojikumi-line-end">，</span>经常页面加载一半就卡住了<span class="mojikumi-line-end">。</span></p>
<p>再然后<span class="mojikumi-line-end">，</span>Google Fonts 里 Noto Serif SC 的 unicode range 不含单引号<span class="mojikumi-line-start">（</span>和撇号是同一个字符<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>导致 <a href="/post/2023/01/ddpp">DDPP 序</a> 里引用的那段话的撇号在我的手机上显示成了很宽的另一种字体<span class="mojikumi-line-end">，</span>才让我<a href="https://github.com/ouuan/iles-blog/commit/080bd7112f88d2eae1e86594f8820c0c517e37ce">发现这个问题</a><span class="mojikumi-line-end">。</span>为了以后能及时发现这种问题<span class="mojikumi-line-end">，</span>我就设置了不使用本地字体直接使用 web font 的 Stylus<span class="mojikumi-line-end">。</span></p>
<p>恐怖的丢包率<span class="mojikumi-line-end">，</span>加上自己亲身体验 web font 加载<span class="mojikumi-line-end">，</span>让我意识到了<span class="mojikumi-line-end">，</span>在国内普通网络环境下<span class="mojikumi-line-end">，</span>如果你的设备没有安装思源宋体<span class="mojikumi-line-end">，</span>访问我的博客会是多么难受<span class="mojikumi-line-start">（</span></p>
<h2 id="主体思路" class="heading"><a href="#主体思路" class="heading-anchor" aria-label="章节： 主体思路" tabindex="-1"></a><span>主体思路</span></h2>
<p><span class="mojikumi-line-start">“</span>另一种<span class="mojikumi-line-end">”</span>的主体思路<a href="https://ayu.land/webfont#principle">和<span class="mojikumi-line-start">“</span>一种<span class="mojikumi-line-end">”</span>是一样的</a><span class="mojikumi-line-end">，</span>就是把字体划分成常用字和非常用字<span class="mojikumi-line-end">。</span>但是<span class="mojikumi-line-start">“</span>一种<span class="mojikumi-line-end">”</span>在这之后选择了使用动态规划 + 进化算法来对常用字进行进一步的拆分<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>另一种<span class="mojikumi-line-end">”</span>所做的优化则基于这样一个观察<span class="mojikumi-line-end">：</span>虽然一个博客有一堆页面<span class="mojikumi-line-end">，</span>但 80% 的人只会访问 20% 的页面<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>一个字体是否常用<span class="mojikumi-line-end">，</span>不仅要看出现在几个页面<span class="mojikumi-line-end">，</span>还要看出现在哪些页面<span class="mojikumi-line-end">。</span></p>
<p>这时候<span class="mojikumi-line-end">，</span><s>一直充当<a href="https://busuanzi.ibruce.info/">不蒜子</a>平替<span class="mojikumi-line-start">（</span>哪平价了啊<span class="mojikumi-line-end">）</span>的</s> Plausible Analytics 就发挥作用了<span class="mojikumi-line-end">：</span>近段时间的页面访问量可以用来估计每个页面被访问的概率<span class="mojikumi-line-end">，</span>为常用字的划分提供可靠的数据支撑<span class="mojikumi-line-end">。</span></p>
<p>一旦估计出了每个页面的被访问概率<span class="mojikumi-line-end">，</span>就可以对每个 glyph 分别计算出<span class="mojikumi-line-end">，</span>如果在每一个使用了它的页面上都加载一遍<span class="mojikumi-line-end">，</span>期望代价是多少<span class="mojikumi-line-end">，</span>也就是使用了它的所有页面的被访问概率之和<span class="mojikumi-line-end">。</span>如果这个数大于 1<span class="mojikumi-line-end">，</span>就设为常用<span class="mojikumi-line-end">，</span>否则设为不常用<span class="mojikumi-line-end">。</span></p>
<p>这个思路还是非常简单的<span class="mojikumi-line-end">，</span>可以说只是<span class="mojikumi-line-start">“</span>结合实际<span class="mojikumi-line-end">，</span>采取启发式方法<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>也称不上是一种新的方案<span class="mojikumi-line-start">（</span></p>
<h2 id="具体实现" class="heading"><a href="#具体实现" class="heading-anchor" aria-label="章节： 具体实现" tabindex="-1"></a><span>具体实现</span></h2>
<p>虽然思路简单<span class="mojikumi-line-end">，</span>但实现起来还是有点复杂的<span class="mojikumi-line-end">，</span>坑有点多<span class="mojikumi-line-end">。</span></p>
<h3 id="获取页面使用的字体" class="heading"><a href="#获取页面使用的字体" class="heading-anchor" aria-label="章节： 获取页面使用的字体" tabindex="-1"></a><span>获取页面使用的字体</span></h3>
<p>如果整个页面都使用一种字体<span class="mojikumi-line-end">，</span>直接看 HTML 里有哪些中文就差不多了<span class="mojikumi-line-end">，</span>但我不仅<span class="font-sans">非正文用的是黑体</span><span class="mojikumi-line-end">，</span><span class="font-kai">引用块还是楷体</span><span class="mojikumi-line-end">，</span>说不定在哪冒出来个<code>等宽</code>或者 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX公式</mtext></mrow><annotation encoding="application/x-tex">\LaTeX\text{公式}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8988em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span style="top:-2.905em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4678em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span><span class="mord text"><span class="mord cjk_fallback">公式</span></span></span></span></span></span><span class="mojikumi-line-end">，</span>有时候还会<strong>加粗</strong><span class="mojikumi-line-end">，</span>更别提心情好的时候会像这段一样直接塞 <code>&#x3C;span class=""></code> 来修改样式<span class="mojikumi-line-end">。</span></p>
<p>一开始我通过 <a href="https://github.com/Munter/subfont">subfont</a> 找到了 <a href="https://github.com/assetgraph/font-tracer">assetgraph/font-tracer</a><span class="mojikumi-line-end">，</span>但这个 font-tracer 就两个 star<span class="mojikumi-line-end">，</span>没有文档<span class="mojikumi-line-end">，</span><a href="https://github.com/assetgraph/assetgraph">AssetGraph</a> 又是一个 12 年前的老项目<span class="mojikumi-line-end">，</span>连 Definitely Typed 都没有<span class="mojikumi-line-end">，</span>试了一下完全用不会<span class="mojikumi-line-end">。</span></p>
<p>想了想<span class="mojikumi-line-end">，</span>最靠谱的还是直接交给浏览器来处理<span class="mojikumi-line-end">，</span>所以就用 <a href="https://github.com/puppeteer/puppeteer">puppeteer</a> 了<span class="mojikumi-line-end">。</span>目前采用的算法是<span class="mojikumi-line-end">：</span>遍历 <code>&#x3C;body></code><span class="mojikumi-line-end">，</span>跳过 <code>&#x3C;script></code> 和 <code>&#x3C;style></code> 子树<span class="mojikumi-line-end">，</span>找到所有 <a href="https://developer.mozilla.org/docs/Web/API/Text">Text 节点</a><span class="mojikumi-line-end">，</span>再加上所有 <code>&#x3C;img></code> 的 <code>alt</code> 属性<span class="mojikumi-line-end">。</span>找到节点后<span class="mojikumi-line-end">，</span>可以用 <a href="https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle"><code class="break-all">getComputedStyle</code></a> 获取 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 等信息<span class="mojikumi-line-end">。</span></p>
<p>因为要处理很多页面<span class="mojikumi-line-end">，</span>也要花一点时间<span class="mojikumi-line-end">，</span>所以用了 <a href="https://github.com/thomasdondorf/puppeteer-cluster">puppeteer-cluster</a> 来并行处理<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>不知道为什么<span class="mojikumi-line-end">，</span>在 vitest 和 iles 中运行时<span class="mojikumi-line-end">，</span>不加参数会报错<span class="mojikumi-line-end">，</span>而加了 <code>--<wbr>no<wbr>-<wbr>sandbox<wbr> --<wbr>no<wbr>-<wbr>zygote</code> 之后并行的优化效果就差一些<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/getPagesFontInfo.ts"><code class="break-all">getPagesFontInfo.ts</code></a></p>
<h3 id="字体匹配" class="heading"><a href="#字体匹配" class="heading-anchor" aria-label="章节： 字体匹配" tabindex="-1"></a><span>字体匹配</span></h3>
<p><a href="https://www.w3.org/TR/css-fonts-4/#font-style-matching">完整的字体匹配</a>是非常复杂的<span class="mojikumi-line-end">，</span>我也没找到相关的库<span class="mojikumi-line-end">，</span>就自己写了一个简陋的只匹配完整 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 的算法<span class="mojikumi-line-end">。</span></p>
<p>其实一般 <code>font<wbr>-<wbr>weight</code> 也就 400 和 700<span class="mojikumi-line-end">，</span>但我还是实现了一个 <a href="https://developer.mozilla.org/docs/Web/CSS/font-weight#fallback_weights">完整的 <code>font<wbr>-<wbr>weight</code> fallback</a><span class="mojikumi-line-end">。</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/matchFonts.ts"><code>matchFonts<wbr>.<wbr>ts</code></a></p>
<h3 id="常用字体划分" class="heading"><a href="#常用字体划分" class="heading-anchor" aria-label="章节： 常用字体划分" tabindex="-1"></a><span>常用字体划分</span></h3>
<p>最关键的这一步实现起来是最简单的<span class="mojikumi-line-end">，</span>因为是纯算法的<span class="mojikumi-line-end">，</span>不涉及到可怕的 Web<span class="mojikumi-line-start">（</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/getCommonGlyphs.ts"><code>getCommonGlyphs<wbr>.<wbr>ts</code></a></p>
<h3 id="生成字体文件和-font-face" class="heading"><a href="#生成字体文件和-font-face" class="heading-anchor" aria-label="章节： 生成字体文件和 @font-face" tabindex="-1"></a><span>生成字体文件和 @font-face</span></h3>
<p>我使用的是 <a href="https://github.com/papandreou/subset-font">subset-font</a> 来生成字体子集文件<span class="mojikumi-line-end">。</span></p>
<p>这一步最大的困难<span class="mojikumi-line-end">，</span>是正确地写出 <code>@font-face</code><span class="mojikumi-line-end">。</span></p>
<p>一开始我是给常用字 (common) 和非常用字 (unique) 不同的 <code>font<wbr>-<wbr>family</code><span class="mojikumi-line-end">，</span>然后发现<span class="mojikumi-line-end">，</span>在特殊情况下<span class="mojikumi-line-start">（</span>幸好我的博客文章列表就触发了这个问题<span class="mojikumi-line-end">，</span>不然真没想到<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>某个字的常规样式属于 common 而粗体属于 unique<span class="mojikumi-line-end">，</span>由于 <code>font<wbr>-<wbr>family</code> 里 common 排在 unique 前面<span class="mojikumi-line-end">，</span>就会匹配到常规样式<span class="mojikumi-line-end">，</span>而加载不出粗体<span class="mojikumi-line-end">。</span></p>
<p>为了解决这个问题<span class="mojikumi-line-end">，</span>common 和 unique 需要使用同一个 <code>font<wbr>-<wbr>family</code><span class="mojikumi-line-end">。</span>因为用过 Google Fonts 子集划分方案<span class="mojikumi-line-end">，</span>我知道有不同 <code>unicode<wbr>-<wbr>range</code> 的 <code>@font-face</code> 是可以组合在一起的<span class="mojikumi-line-end">，</span>难道我需要计算出精确的 <code>unicode<wbr>-<wbr>range</code> 写在 CSS 里？</p>
<p>为此<span class="mojikumi-line-end">，</span>我粗略地读了半天<span class="mojikumi-line-start">（</span><s>这两个词不冲突</s><span class="mojikumi-line-end">）</span><a href="https://www.w3.org/TR/css-fonts-4/">CSS Fonts Module Level 4 W3C Working Draft</a><span class="mojikumi-line-end">，</span>发现它说<span class="mojikumi-line-end">，</span><code>unicode<wbr>-<wbr>range</code> 可以比真实的 character map 大很多<span class="mojikumi-line-end">，</span>若干 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 也可以相交<span class="mojikumi-line-end">。</span>但是<span class="mojikumi-line-end">，</span>它没说两个 <code>@font-face</code> 能不能除了 <code>src</code> 啥都一样<span class="mojikumi-line-end">，</span><a href="https://www.w3.org/TR/css-fonts-4/#composite-fonts">而只说了</a><span class="mojikumi-line-end">：</span></p>
<blockquote>
<p>Multiple @font-face rules with different unicode ranges for the same family and style descriptor values can be used to create composite fonts that mix the glyphs from different fonts for different scripts.</p>
</blockquote>
<p>我也不敢依赖于实验结果<span class="mojikumi-line-end">，</span>就没做实验<span class="mojikumi-line-end">，</span>直接加上了粗略但是保证 common 和 unique 不相同的 <code>unicode<wbr>-<wbr>range</code><span class="mojikumi-line-end">，</span>具体来说就是 0 到最大的 code point<span class="mojikumi-line-end">。</span></p>
<p>这里从 0 开始也是有一定原因的<span class="mojikumi-line-end">：</span>我在看 specification 的时候注意到一个奇怪的东西叫 <a href="https://www.w3.org/TR/css-fonts-4/#first-available-font"><i>first available font</i></a><span class="mojikumi-line-end">，</span>虽然没太看懂具体是什么意思<span class="mojikumi-line-end">，</span>但大致上感觉最好是让 <code>unicode<wbr>-<wbr>range</code> 包含空格<span class="mojikumi-line-end">，</span>为了保险就从 0 开始了<span class="mojikumi-line-end">。</span></p>
<p>最后还有一个坑<span class="mojikumi-line-end">：</span>如果 composite font 中两个 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 相交<span class="mojikumi-line-end">，</span>给交集内的字符匹配字体时<span class="mojikumi-line-end">，</span>会按出现位置的逆序进行匹配<span class="mojikumi-line-end">。</span></p>
<p>这能有什么坑呢<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>如果不动手试一试真的很难想到.. 按照整体的设计<span class="mojikumi-line-end">，</span>访问一个页面时很有可能是 common 字体已经缓存好了<span class="mojikumi-line-end">，</span>需要下载 unique 字体<span class="mojikumi-line-end">，</span>如果 unique 的 <code>@font-face</code> 放在 common 的后面<span class="mojikumi-line-end">，</span>就会优先匹配<span class="mojikumi-line-end">，</span>从而阻塞住已经缓存的 common 字体<span class="mojikumi-line-end">，</span>整个页面都要等 unique 下载好才切换字体<span class="mojikumi-line-end">，</span>而不是先显示 common 再显示剩下的 unique<span class="mojikumi-line-end">。</span>当然<span class="mojikumi-line-end">，</span>反过来的话<span class="mojikumi-line-end">，</span>unique 也会等 common<span class="mojikumi-line-end">，</span>但这样一般来说是更好的<span class="mojikumi-line-end">。</span></p>
<p>还有一些细节优化<span class="mojikumi-line-end">：</span></p>
<ul>
<li>生成 unique 字体文件时<span class="mojikumi-line-end">，</span>文件名里有 hash 就够了<span class="mojikumi-line-end">，</span>不要再添加和页面有关的信息<span class="mojikumi-line-end">，</span>这样的话如果两个页面刚好 unique glyph 集合相同就可以共用一个字体文件<span class="mojikumi-line-end">。</span></li>
<li>如果一个页面一个 common glyph 都没用<span class="mojikumi-line-end">，</span>就可以不添加 common font 的 <code>@font-face</code><span class="mojikumi-line-end">。</span></li>
</ul>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/generateFontFiles.ts"><code class="break-all">generateFontFiles.ts</code></a></p>
<h3 id="将-css-写入-html-文件" class="heading"><a href="#将-css-写入-html-文件" class="heading-anchor" aria-label="章节： 将 CSS 写入 HTML 文件" tabindex="-1"></a><span>将 CSS 写入 HTML 文件</span></h3>
<p>虽然也有想过直接找到 <code>&#x3C;/head></code> 文本替换<span class="mojikumi-line-end">，</span>但为了靠谱还是用的 <a href="https://github.com/jsdom/jsdom"><code>jsdom</code></a><span class="mojikumi-line-end">。</span></p>
<p>这部分的代码是最短的<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/injectCSS.ts"><code>injectCSS<wbr>.<wbr>ts</code></a></p>
<h3 id="给项目起名" class="heading"><a href="#给项目起名" class="heading-anchor" aria-label="章节： 给项目起名" tabindex="-1"></a><span>给项目起名</span></h3>
<p>主体思路是把 glyph 分成两类分别对待<span class="mojikumi-line-end">，</span>就很有 segregate 的感觉<span class="mojikumi-line-start">（</span></p>
<p>主要还是因为刚写了一个 <a href="/post/2022/11/csapp-9#segregated-fit">segregated fit</a> 印象比较深刻<span class="mojikumi-line-end">，</span>所以就取了这么个名字<span class="mojikumi-line-end">。</span></p>
<h3 id="在博客中使用" class="heading"><a href="#在博客中使用" class="heading-anchor" aria-label="章节： 在博客中使用" tabindex="-1"></a><span>在博客中使用</span></h3>
<p>就是 <a href="https://iles-docs.netlify.app/config#ssg-onsiterendered">从 iles 获取页面信息</a><span class="mojikumi-line-end">，</span>从 <a href="https://plausible.io/docs/stats-api#get-apiv1statsbreakdown">Plausible Stats API</a> 获取访问量<span class="mojikumi-line-end">，</span>调用 <a href="https://vitejs.dev/guide/api-javascript.html#preview">Vite API</a> 跑一个 preview server<span class="mojikumi-line-end">，</span>然后调用 <code>glyph<wbr>-<wbr>segregator</code><span class="mojikumi-line-end">。</span>直接看<a href="https://github.com/ouuan/iles-blog/commit/695f8b22ca3a791ceeb5440e81a6fa377b50bb3b#diff-ca899b3bf20a893bb3dfb058072a2b279953ce008f562727ad74a76d520be662">代码</a>吧<span class="mojikumi-line-end">。</span></p>
<p>访问概率的计算方式是<span class="mojikumi-line-end">，</span>看每个页面近 90 天的访客数<span class="mojikumi-line-end">，</span>加一后除以其中最高的加二<span class="mojikumi-line-start">（</span>其实这个加一加二基本没啥用<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>用最高页面访客数而非实际总访客数作分母<span class="mojikumi-line-end">，</span>是想在算法的基础上更加偏向于划分到常用字一些<span class="mojikumi-line-end">，</span>稍微优化一点访问页面较多的访客的体验<span class="mojikumi-line-end">，</span>也可以少一次 API 查询<span class="mojikumi-line-end">。</span></p>
<p>更新常用字集合用的是 <a href="https://github.com/ouuan/iles-blog/blob/master/.github/workflows/update-fonts.yml">scheduled GitHub Actions</a><span class="mojikumi-line-end">，</span>在 Docker 里跑是因为 <a href="https://stackoverflow.com/questions/74332455/connection-refused-for-local-server-in-github-actions-workflow/74341376">Connection refused for local server in github actions workflow</a><span class="mojikumi-line-end">。</span></p>
<h2 id="实际效果" class="heading"><a href="#实际效果" class="heading-anchor" aria-label="章节： 实际效果" tabindex="-1"></a><span>实际效果</span></h2>
<p>整个 <code>glyphSegregator</code> 用时 40s 左右<span class="mojikumi-line-end">，</span>glyph 数量和 common font file size (woff2) 如表所示<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto my-6"><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">Noto Serif SC Regular</th>
<th align="center">Noto Serif SC Bold</th>
<th align="center">LXGW WenKai Regular</th>
<th align="center">LXGW WenKai Bold</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><span class="whitespace-nowrap">common</span></td>
<td align="center">575 (162.7KiB)</td>
<td align="center">25 (8.5KiB)</td>
<td align="center">37 (5.2KiB)</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">unique</td>
<td align="center">2311</td>
<td align="center">1536</td>
<td align="center">161</td>
<td align="center">0</td>
</tr>
</tbody>
</table></div>
<p>首页只需加载两个 Regular 的 common font<span class="mojikumi-line-end">，</span>每个页面需要加载的字体文件总大小缩减到了原来使用子集化的 1/4 左右<span class="mojikumi-line-end">，</span>并且加载的字体文件数量从 10~30 个缩减到了 2~6 个<span class="mojikumi-line-end">。</span></p>
<p>作为对比<span class="mojikumi-line-end">，</span>如果出现在两个页面就设为常用字<span class="mojikumi-line-end">，</span>Noto Serif SC Regular 的 common 有 299KiB<span class="mojikumi-line-end">，</span>出现在三个页面则是 227KiB<span class="mojikumi-line-end">。</span></p>
<h2 id="后记：font-subsetting-与-kerning" class="heading"><a href="#后记：font-subsetting-与-kerning" class="heading-anchor" aria-label="章节： 后记：font subsetting 与 kerning" tabindex="-1"></a><span>后记<span class="mojikumi-line-end">：</span>font subsetting 与 kerning</span></h2>
<p>因为通过 Stylus 设置了不使用本地字体<span class="mojikumi-line-end">，</span>我可以轻松地在本地字体和 web font 之间切换<span class="mojikumi-line-end">。</span>然后我就偶然发现<span class="mojikumi-line-end">，</span>切换时一些标题发生了字符的偏移<span class="mojikumi-line-end">。</span>原因也很简单<span class="mojikumi-line-end">，</span>就是相邻的两个字符本来有 kerning (字距调整)<span class="mojikumi-line-end">，</span>但它们被划分到了不同的子集中<span class="mojikumi-line-end">，</span>生成字体子集时就丢失了 kerning 信息<span class="mojikumi-line-end">。</span></p>
<p>我在 glyph-segregator 中 <a href="https://github.com/ouuan/glyph-segregator/commit/ae3ddd5cbb91f0eb6bbfec7071ee408c28b36dec">添加了 <code class="break-all">alwaysCommonGlyphs</code> 选项</a><span class="mojikumi-line-start">（</span>ASCII 字符总是设为 common<span class="mojikumi-line-end">，</span>如果需要处理非 ASCII 字符的 kerning 也可以修改设置<span class="mojikumi-line-end">，</span>但我的博客就假设只有 ASCII 字符会遇到这个问题<span class="mojikumi-line-end">）</span>来解决这一问题<span class="mojikumi-line-end">。</span>最好的解决方案是真的去看一下字体里有哪些 kerning 信息然后相应地处理<span class="mojikumi-line-end">，</span>但是差不多得了<span class="mojikumi-line-start">（</span></p>
<a id="font-kerning-示例" name="font-kerning-示例" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>font kerning 示例</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ul>
<li>有 kerning: <span style="font-kerning: normal; font-size: 2rem;">TAVeYoW</span></li>
<li>没 kerning: <span style="font-kerning: none; font-size: 2rem;">TAVeYoW</span></li>
</ul></div></div></aside>
<p>后记的后记<span class="mojikumi-line-end">：</span>还是改成了<a href="https://github.com/ouuan/glyph-segregator/commit/e955eb1c935d77adf0e4bcb5c870fee0614801b6">即使未被使用也添加进 common glyph set</a><span class="mojikumi-line-end">，</span>否则如果新加一个 always common 的 glyph<span class="mojikumi-line-end">，</span>为了让它 common<span class="mojikumi-line-end">，</span>就会改变 common glyph set<span class="mojikumi-line-end">，</span>导致 cache 失效<span class="mojikumi-line-end">。</span>这里有一定的 trade-off<span class="mojikumi-line-end">，</span>要在 cache 失效 / 多塞一些未被使用的 glyph / kerning 挂掉之间进行选择<span class="mojikumi-line-end">，</span>我还是选择了多塞一些未被使用的 glyph<span class="mojikumi-line-end">，</span>毕竟整个 ASCII 也没多大<span class="mojikumi-line-end">。</span>最好是借助人类智慧来预测一下哪些 glyph 更有可能在未来被添加而放进 common glyph set 里<span class="mojikumi-line-end">，</span>其他 glyph 就只有使用了才放<span class="mojikumi-line-end">，</span>但是差不多得了<span class="mojikumi-line-start">（</span></p>]]></content>
        <category label="blog" term="https://ouuan.moe/tag/blog"/>
        <category label="Web" term="https://ouuan.moe/tag/Web"/>
        <category label="项目开发" term="https://ouuan.moe/tag/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[busuanzi 访问量统计与 live2d 插件同时使用导致 busuanzi 不显示的根本原因以及解决方法]]></title>
        <id>https://ouuan.moe/post/2022/08/busuanzi-and-live2d</id>
        <link href="https://ouuan.moe/post/2022/08/busuanzi-and-live2d"/>
        <updated>2022-08-05T05:55:15.000Z</updated>
        <summary type="html"><![CDATA[<p>昨天在一位网友的 Hexo 博客遇到了很诡异的 busuanzi 访问量统计不显示问题<span class="mojikumi-line-end">，</span>经过一番研究发现是 busuanzi 代码的一处问题和 live2d 插件的一处问题凑在一起导致的<span class="mojikumi-line-end">。</span></p>
<p>今天在写博客之前先搜了一下 <span class="mojikumi">“</span>busuanzi live2d<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>发现搜出来一堆结果<span class="mojikumi-line-end">，</span>我还以为我白研究了..结果点进去一看<span class="mojikumi-line-end">，</span>第一页结果里没有一个指出了问题的根本原因<span class="mojikumi-line-end">，</span>而且修复方法基本上都是删 feature 或者换组件<span class="mojikumi-line-end">，</span>但实际上只要知道问题的根本原因就可以在不妨碍正常功能运作的前提下进行修复<span class="mojikumi-line-end">。</span>所以昨天晚上没白忙活<span class="mojikumi-line-end">，</span>我这篇博客还是要写的<span class="mojikumi-line-end">。</span></p>
]]></summary>
        <content type="html"><![CDATA[<p>昨天在一位网友的 Hexo 博客遇到了很诡异的 busuanzi 访问量统计不显示问题<span class="mojikumi-line-end">，</span>经过一番研究发现是 busuanzi 代码的一处问题和 live2d 插件的一处问题凑在一起导致的<span class="mojikumi-line-end">。</span></p>
<p>今天在写博客之前先搜了一下 <span class="mojikumi">“</span>busuanzi live2d<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>发现搜出来一堆结果<span class="mojikumi-line-end">，</span>我还以为我白研究了..结果点进去一看<span class="mojikumi-line-end">，</span>第一页结果里没有一个指出了问题的根本原因<span class="mojikumi-line-end">，</span>而且修复方法基本上都是删 feature 或者换组件<span class="mojikumi-line-end">，</span>但实际上只要知道问题的根本原因就可以在不妨碍正常功能运作的前提下进行修复<span class="mojikumi-line-end">。</span>所以昨天晚上没白忙活<span class="mojikumi-line-end">，</span>我这篇博客还是要写的<span class="mojikumi-line-end">。</span></p>

<p>当然<span class="mojikumi-line-end">，</span>我只看了第一页搜索结果<span class="mojikumi-line-end">，</span>可能有更深入研究的文章被搜索引擎埋没了<span class="mojikumi-line-end">，</span>我这篇文章说不定也不会被搜到<span class="mojikumi-line-end">，</span>只不过既然第一页没有<span class="mojikumi-line-end">，</span>就让我也来成为被搜索引擎埋没的一员<span class="mojikumi-line-end">，</span>这样的话说不定被搜到的可能性就增加了<span class="mojikumi-line-start">（</span></p>
<h2 id="问题描述" class="heading"><a href="#问题描述" class="heading-anchor" aria-label="章节： 问题描述" tabindex="-1"></a><span>问题描述</span></h2>
<p>在一个同时启用了 busuanzi 访问量统计和 live2d 插件的 Hexo 博客里<span class="mojikumi-line-end">，</span>访问或刷新博客时有大概率 busuanzi 会被隐藏<span class="mojikumi-line-end">。</span></p>
<p>被隐藏的具体表现为<span class="mojikumi-line-end">，</span>刷新的瞬间 id 为 <code>busuanzi_<wbr>container_<wbr>*</code> 的容器是显示的<span class="mojikumi-line-end">，</span>然后容器的样式很快被设为 <code>display: none</code><span class="mojikumi-line-end">。</span></p>
<p>查看 F12 的 Network<span class="mojikumi-line-end">，</span>busuanzi 相关请求正常返回<span class="mojikumi-line-end">；</span>console 中没有报错<span class="mojikumi-line-end">。</span></p>
<h2 id="问题定位" class="heading"><a href="#问题定位" class="heading-anchor" aria-label="章节： 问题定位" tabindex="-1"></a><span>问题定位</span></h2>
<p>注<span class="mojikumi-line-end">：</span>这个过程中我也走了一些弯路<span class="mojikumi-line-end">，</span>就不写出来了<span class="mojikumi-line-end">。</span></p>
<h3 id="设置-display-none-的定位" class="heading"><a href="#设置-display-none-的定位" class="heading-anchor" aria-label="章节： 设置 display: none 的定位" tabindex="-1"></a><span>设置 <code>display: none</code> 的定位</span></h3>
<p>查看 <a href="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js">busuanzi.pure.mini.js</a><span class="mojikumi-line-end">，</span>发现 <code>display: none</code> 在 <code>hides</code> 函数中被设置<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="JavaScript 代码块" data-v-c675dba6>JavaScript</h4><ile-root id="ile-5"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-5--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">hides: </span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">this</span><span style="color: #994CC3">.</span><span style="color: #111111">bszs</span><span style="color: #994CC3">.</span><span style="color: #4876D6">map</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">var </span><span style="color: #403F53">b</span><span style="color: #994CC3"> = </span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementById</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">busuanzi_container_</span><span style="color: #111111">&quot;</span><span style="color: #994CC3"> + </span><span style="color: #403F53">a);</span></span>
<span><span style="color: #403F53">    b </span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53"> (</span><span style="color: #0C969B">b</span><span style="color: #994CC3">.</span><span style="color: #111111">style</span><span style="color: #994CC3">.</span><span style="color: #0C969B">display</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">none</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">  })</span></span>
<span><span style="color: #403F53">},</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">hides: </span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #7FDBCA">this</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">bszs</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">map</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">b</span><span style="color: #C792EA"> = </span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">busuanzi_container_</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA"> + </span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB"> (</span><span style="color: #7FDBCA">b</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">style</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">display</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">none</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">  })</span></span>
<span><span style="color: #D6DEEB">},</span></span></code></pre></div></section>
<p>而 hides 函数仅在一处被调用<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="JavaScript 代码块" data-v-c675dba6>JavaScript</h4><ile-root id="ile-6"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-6--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">try</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">a</span><span style="color: #403F53">(b), </span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #111111">parentElement</span><span style="color: #994CC3">.</span><span style="color: #4876D6">removeChild</span><span style="color: #403F53">(scriptTag)</span></span>
<span><span style="color: #403F53">} </span><span style="color: #994CC3">catch</span><span style="color: #403F53"> (c) {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">bszTag</span><span style="color: #994CC3">.</span><span style="color: #4876D6">hides</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">try</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #82AAFF">a</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">), </span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">parentElement</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">removeChild</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">scriptTag</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">} </span><span style="color: #C792EA">catch</span><span style="color: #D6DEEB"> (</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #7FDBCA">bszTag</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">hides</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div></section>
<p>所以是在 <code>a<wbr>(<wbr>b<wbr>), <wbr>scriptTag<wbr>.<wbr>parentElement<wbr>.<wbr>removeChild<wbr>(<wbr>scriptTag<wbr>)</code> 抛出异常时容器被隐藏<span class="mojikumi-line-end">。</span></p>
<h3 id="异常原因的定位" class="heading"><a href="#异常原因的定位" class="heading-anchor" aria-label="章节： 异常原因的定位" tabindex="-1"></a><span>异常原因的定位</span></h3>
<p>由于在其它地方的 busuanzi 不会出现这一问题<span class="mojikumi-line-end">，</span>而问题的原因还完全不清楚<span class="mojikumi-line-end">，</span>为了尽可能还原原始环境以复现问题<span class="mojikumi-line-end">，</span>我选择了使用 <a href="https://addons.mozilla.org/zh-CN/firefox/addon/header-editor/">Firefox 的 Header Editor 插件</a> 直接在原博客进行测试<span class="mojikumi-line-end">。</span>具体来说<span class="mojikumi-line-end">，</span>就是在本地复制一份 busuanzi 的代码<span class="mojikumi-line-end">，</span>然后跑一个 http server<span class="mojikumi-line-end">，</span>在 Header Editor 里把 busuanzi 代码的请求重定向到本地的 http server<span class="mojikumi-line-end">。</span></p>
<p>首先<span class="mojikumi-line-end">，</span>在 <code>catch</code> 中添加 <code>console<wbr>.<wbr>error<wbr>(<wbr>c<wbr>)</code><span class="mojikumi-line-end">，</span>得到错误内容 <code>TypeError<wbr>: <wbr>scriptTag<wbr>.<wbr>parentElement<wbr> <wbr>is<wbr> <wbr>null</code><span class="mojikumi-line-end">。</span></p>
<p>查看代码中 <code>scriptTag</code> 相关的部分<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="JavaScript 代码块" data-v-c675dba6>JavaScript</h4><ile-root id="ile-7"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-7--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">scriptTag </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">createElement</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">SCRIPT</span><span style="color: #111111">&quot;</span><span style="color: #403F53">), </span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">type</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">text/javascript</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">defer</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">!</span><span style="color: #AA0982">0</span><span style="color: #403F53">, </span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">src</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> a, </span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">referrerPolicy</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">no-referrer-when-downgrade</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementsByTagName</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">HEAD</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)[</span><span style="color: #AA0982">0</span><span style="color: #403F53">]</span><span style="color: #994CC3">.</span><span style="color: #4876D6">appendChild</span><span style="color: #403F53">(scriptTag)</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D7DBE0">scriptTag</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">createElement</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">SCRIPT</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">), </span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">type</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">text/javascript</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">defer</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">!</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">src</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">referrerPolicy</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">no-referrer-when-downgrade</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementsByTagName</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">HEAD</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">]</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">scriptTag</span><span style="color: #D6DEEB">)</span></span></code></pre></div></section>
<p>所以<span class="mojikumi-line-end">，</span>再在 <code>catch</code> 中添加 <code class="break-all">s = document.querySelector("[src*=BusuanziCallback]"); console.log(s.parentElement);</code><span class="mojikumi-line-end">，</span>发现 <code>s<wbr>.<wbr>parentElement</code> 不是 <code>null</code><span class="mojikumi-line-end">。</span></p>
<p>再添加 <code>console<wbr>.<wbr>log<wbr>(<wbr>s<wbr> === <wbr>scriptTag<wbr>)</code><span class="mojikumi-line-end">，</span>发现结果是 <code>s</code> 和 <code>scriptTag</code> 不同<span class="mojikumi-line-end">，</span>所以原因在于此时的 <code>scriptTag</code> 变量已经不指向 DOM 中的这个元素了<span class="mojikumi-line-end">。</span></p>
<h3 id="定位到-live2d-插件" class="heading"><a href="#定位到-live2d-插件" class="heading-anchor" aria-label="章节： 定位到 live2d 插件" tabindex="-1"></a><span>定位到 live2d 插件</span></h3>
<p>此时我原本是没有任何头绪的<span class="mojikumi-line-end">，</span>但我发现<span class="mojikumi-line-end">，</span>并不是每次刷新页面都会触发这一问题<span class="mojikumi-line-end">，</span>所以没有触发问题时和触发问题时的差别就成了问题的突破口<span class="mojikumi-line-end">。</span></p>
<p>经过多次刷新<span class="mojikumi-line-end">，</span>我发现<span class="mojikumi-line-end">，</span>有一串 console 输出<span class="mojikumi-line-end">，</span>在出现问题时总位于我在 <code>catch</code> 中添加的调试信息之前<span class="mojikumi-line-end">，</span>而在没出现问题时则位于调试信息之后<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-c675dba6>plain text</h4><ile-root id="ile-8"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-8--></div><div class="dark:hidden" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">Live2D 2.1.00_1 live2d.core.js:5925:16</span></span>
<span><span style="color: #403f53">profile : Desktop live2d.core.js:5913:16</span></span>
<span><span style="color: #403f53">  [PROFILE_NAME] = Desktop live2d.core.js:5918:20</span></span>
<span><span style="color: #403f53">  [USE_ADJUST_TRANSLATION] = false live2d.core.js:5918:20</span></span>
<span><span style="color: #403f53">  [USE_CACHED_POLYGON_IMAGE] = false live2d.core.js:5918:20</span></span>
<span><span style="color: #403f53">  [EXPAND_W] = 2</span></span></samp></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">Live2D 2.1.00_1 live2d.core.js:5925:16</span></span>
<span><span style="color: #d6deeb">profile : Desktop live2d.core.js:5913:16</span></span>
<span><span style="color: #d6deeb">  [PROFILE_NAME] = Desktop live2d.core.js:5918:20</span></span>
<span><span style="color: #d6deeb">  [USE_ADJUST_TRANSLATION] = false live2d.core.js:5918:20</span></span>
<span><span style="color: #d6deeb">  [USE_CACHED_POLYGON_IMAGE] = false live2d.core.js:5918:20</span></span>
<span><span style="color: #d6deeb">  [EXPAND_W] = 2</span></span></samp></pre></div></section>
<p>多亏了 live2d 的这串输出<span class="mojikumi-line-end">，</span>我得以将问题定位到 live2d 插件上<span class="mojikumi-line-end">。</span></p>
<p>实际上<span class="mojikumi-line-end">，</span>如果没有这些 console 输出<span class="mojikumi-line-end">，</span>也可以通过 <code>&#x3C;head></code> 中 <code>L2Dwidget<wbr>.<wbr>0<wbr>.<wbr>min<wbr>.<wbr>js</code> 和 <code class="break-all">busuanzi?jsonpCallback=BusuanziCallback</code> 两个 <code>&#x3C;script></code> 的相对位置发现问题<span class="mojikumi-line-end">，</span>只不过这样的话就更隐蔽更难发现了<span class="mojikumi-line-end">。</span></p>
<h3 id="在-live2d-插件中定位问题" class="heading"><a href="#在-live2d-插件中定位问题" class="heading-anchor" aria-label="章节： 在 live2d 插件中定位问题" tabindex="-1"></a><span>在 live2d 插件中定位问题</span></h3>
<p>在 <code>L2Dwidget<wbr>.<wbr>min<wbr>.<wbr>js</code> 的第一行有源码地址以及时间<span class="mojikumi-line-end">：</span><code>/*! <wbr>https<wbr>://<wbr>github<wbr>.<wbr>com<wbr>/<wbr>xiazeyu<wbr>/<wbr>live2d<wbr>-<wbr>widget<wbr>.<wbr>js<wbr> <wbr>built<wbr>@<wbr>2019<wbr>-<wbr>4<wbr>-<wbr>6<wbr> <wbr>09<wbr>:<wbr>38<wbr>:<wbr>17<wbr> */</code></p>
<p>因为注释中给出的时间不是最新版本<span class="mojikumi-line-end">，</span>先查看 git log 并 checkout 到相应时间的版本<span class="mojikumi-line-end">。</span></p>
<p>既然问题在于 <code>&#x3C;script></code> 元素被重新创建而导致原变量不指向 DOM 中元素<span class="mojikumi-line-end">，</span>就在代码中 grep <code>head</code><span class="mojikumi-line-end">，</span>然后发现 <a href="https://github.com/xiazeyu/live2d-widget.js/blob/fa8f2d831a1a9e96cd85bd1ef593a3336aeac720/src/dialog/index.js#L4-L38">问题代码</a><span class="mojikumi-line-end">：</span><code>document<wbr>.<wbr>head<wbr>.<wbr>innerHTML<wbr> += ……</code></p>
<p>至此<span class="mojikumi-line-end">，</span>问题原因已发现<span class="mojikumi-line-end">，</span>就是 live2d 插件通过修改 <code>document<wbr>.<wbr>head<wbr>.<wbr>innerHTML</code> 来添加样式<span class="mojikumi-line-end">，</span>导致 busuanzi 的 <code>scriptTag</code> 变量指向的不再是 DOM 中的 <code>&#x3C;script></code> 元素<span class="mojikumi-line-end">。</span></p>
<p>实际上<span class="mojikumi-line-end">，</span>live2d 插件的这一问题 <a href="https://github.com/xiazeyu/live2d-widget.js/pull/61">已经修复</a><span class="mojikumi-line-end">，</span>但需要使用新版才行<span class="mojikumi-line-end">。</span></p>
<h2 id="解决方法" class="heading"><a href="#解决方法" class="heading-anchor" aria-label="章节： 解决方法" tabindex="-1"></a><span>解决方法</span></h2>
<h3 id="修改-busuanzi-的解决方法" class="heading"><a href="#修改-busuanzi-的解决方法" class="heading-anchor" aria-label="章节： 修改 busuanzi 的解决方法" tabindex="-1"></a><span>修改 busuanzi 的解决方法</span></h3>
<p>因为 busuanzi 的代码较短<span class="mojikumi-line-end">，</span>而且本来就是用的外部的代码<span class="mojikumi-line-end">，</span>改起来比较容易<span class="mojikumi-line-end">。</span></p>
<p>把 <code>scriptTag<wbr>.<wbr>parentElement<wbr>.<wbr>removeChild<wbr>(<wbr>scriptTag<wbr>)</code> 修改为 <code class="break-all">s=document.querySelector('[src*=BusuanziCallback]'),s.parentElement.removeChild(s)</code> 即可<span class="mojikumi-line-end">。</span>可以把修改后的静态文件放在博客里<span class="mojikumi-line-end">，</span>然后修改 busuanzi <code>&#x3C;script></code> 的 <code>src</code><span class="mojikumi-line-end">。</span></p>
<a id="相关代码" name="相关代码" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>相关代码</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>修改后的 busuanzi 代码<span class="mojikumi-line-start">（</span>还在 <code>catch</code> 里加了个 <code>console<wbr>.<wbr>error</code><span class="mojikumi">）</span><span class="mojikumi-line-end">：</span></p><section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="JavaScript 代码块" data-v-c675dba6>JavaScript</h5><ile-root id="ile-9"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-9--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">var </span><span style="color: #403F53">bszCaller</span><span style="color: #994CC3">,</span><span style="color: #403F53">bszTag;</span><span style="color: #994CC3">!function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #994CC3">var </span><span style="color: #403F53">c</span><span style="color: #5F7E97">,</span><span style="color: #403F53">d</span><span style="color: #5F7E97">,</span><span style="color: #403F53">e</span><span style="color: #5F7E97">,</span><span style="color: #403F53">a</span><span style="color: #994CC3">=!</span><span style="color: #AA0982">1</span><span style="color: #5F7E97">,</span><span style="color: #403F53">b</span><span style="color: #994CC3">=</span><span style="color: #403F53">[];</span><span style="color: #4876D6">ready</span><span style="color: #994CC3">=function</span><span style="color: #111111">(</span><span style="color: #403F53">c</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">return</span><span style="color: #403F53"> a</span><span style="color: #994CC3">||</span><span style="color: #111111">&quot;</span><span style="color: #C96765">interactive</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">===</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">readyState</span><span style="color: #994CC3">||</span><span style="color: #111111">&quot;</span><span style="color: #C96765">complete</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">===</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">readyState</span><span style="color: #994CC3">?</span><span style="color: #0C969B">c</span><span style="color: #994CC3">.</span><span style="color: #4876D6">call</span><span style="color: #403F53">(document)</span><span style="color: #994CC3">:</span><span style="color: #0C969B">b</span><span style="color: #994CC3">.</span><span style="color: #4876D6">push</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #0C969B">c</span><span style="color: #994CC3">.</span><span style="color: #4876D6">call</span><span style="color: #403F53">(</span><span style="color: #0C969B">this</span><span style="color: #403F53">)})</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">this</span><span style="color: #403F53">}</span><span style="color: #5F7E97">,</span><span style="color: #4876D6">d</span><span style="color: #994CC3">=function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #994CC3">for</span><span style="color: #403F53">(</span><span style="color: #994CC3">var </span><span style="color: #403F53">a</span><span style="color: #994CC3">=</span><span style="color: #AA0982">0</span><span style="color: #5F7E97">,</span><span style="color: #403F53">c</span><span style="color: #994CC3">=</span><span style="color: #0C969B">b</span><span style="color: #994CC3">.</span><span style="color: #0C969B">length</span><span style="color: #403F53">;c</span><span style="color: #994CC3">&gt;</span><span style="color: #403F53">a;a</span><span style="color: #994CC3">++</span><span style="color: #403F53">)b[a]</span><span style="color: #994CC3">.</span><span style="color: #4876D6">apply</span><span style="color: #403F53">(document);b</span><span style="color: #994CC3">=</span><span style="color: #403F53">[]}</span><span style="color: #5F7E97">,</span><span style="color: #4876D6">e</span><span style="color: #994CC3">=function</span><span style="color: #111111">()</span><span style="color: #403F53">{a</span><span style="color: #994CC3">||</span><span style="color: #403F53">(a</span><span style="color: #994CC3">=!</span><span style="color: #AA0982">0</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">d</span><span style="color: #994CC3">.</span><span style="color: #4876D6">call</span><span style="color: #403F53">(window)</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">removeEventListener</span><span style="color: #994CC3">?</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">removeEventListener</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">DOMContentLoaded</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #403F53">e</span><span style="color: #5F7E97">,</span><span style="color: #994CC3">!</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span><span style="color: #994CC3">:</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">attachEvent</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">detachEvent</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">onreadystatechange</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #403F53">e)</span><span style="color: #5F7E97">,</span><span style="color: #403F53">window</span><span style="color: #994CC3">==</span><span style="color: #0C969B">window</span><span style="color: #994CC3">.</span><span style="color: #0C969B">top</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #4876D6">clearInterval</span><span style="color: #403F53">(c)</span><span style="color: #5F7E97">,</span><span style="color: #403F53">c</span><span style="color: #994CC3">=</span><span style="color: #BC5454">null</span><span style="color: #403F53">)))}</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">addEventListener</span><span style="color: #994CC3">?</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">addEventListener</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">DOMContentLoaded</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #403F53">e</span><span style="color: #5F7E97">,</span><span style="color: #994CC3">!</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span><span style="color: #994CC3">:</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">attachEvent</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">attachEvent</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">onreadystatechange</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #111111">/</span><span style="color: #5CA7E4">loaded</span><span style="color: #0C969B">|</span><span style="color: #5CA7E4">complete</span><span style="color: #111111">/</span><span style="color: #994CC3">.</span><span style="color: #4876D6">test</span><span style="color: #403F53">(</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #0C969B">readyState</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #4876D6">e</span><span style="color: #403F53">()})</span><span style="color: #5F7E97">,</span><span style="color: #403F53">window</span><span style="color: #994CC3">==</span><span style="color: #0C969B">window</span><span style="color: #994CC3">.</span><span style="color: #0C969B">top</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(c</span><span style="color: #994CC3">=</span><span style="color: #4876D6">setInterval</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #994CC3">try</span><span style="color: #403F53">{a</span><span style="color: #994CC3">||</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #111111">documentElement</span><span style="color: #994CC3">.</span><span style="color: #4876D6">doScroll</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">left</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)}</span><span style="color: #994CC3">catch</span><span style="color: #403F53">(b){</span><span style="color: #994CC3">return</span><span style="color: #403F53">}</span><span style="color: #4876D6">e</span><span style="color: #403F53">()}</span><span style="color: #5F7E97">,</span><span style="color: #AA0982">5</span><span style="color: #403F53">)))}(),bszCaller</span><span style="color: #994CC3">=</span><span style="color: #403F53">{</span><span style="color: #4876D6">fetch</span><span style="color: #403F53">:</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a,b</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">var </span><span style="color: #403F53">c</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">BusuanziCallback_</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">+</span><span style="color: #0C969B">Math</span><span style="color: #994CC3">.</span><span style="color: #4876D6">floor</span><span style="color: #403F53">(</span><span style="color: #AA0982">1099511627776</span><span style="color: #994CC3">*</span><span style="color: #0C969B">Math</span><span style="color: #994CC3">.</span><span style="color: #4876D6">random</span><span style="color: #403F53">());window[c]</span><span style="color: #994CC3">=</span><span style="color: #0C969B">this</span><span style="color: #994CC3">.</span><span style="color: #4876D6">evalCall</span><span style="color: #403F53">(b)</span><span style="color: #5F7E97">,</span><span style="color: #403F53">a</span><span style="color: #994CC3">=</span><span style="color: #0C969B">a</span><span style="color: #994CC3">.</span><span style="color: #4876D6">replace</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">=BusuanziCallback</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #111111">&quot;</span><span style="color: #C96765">=</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">+</span><span style="color: #403F53">c)</span><span style="color: #5F7E97">,</span><span style="color: #403F53">scriptTag</span><span style="color: #994CC3">=</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">createElement</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">SCRIPT</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">type</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">text/javascript</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">defer</span><span style="color: #994CC3">=!</span><span style="color: #AA0982">0</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">src</span><span style="color: #994CC3">=</span><span style="color: #403F53">a</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">scriptTag</span><span style="color: #994CC3">.</span><span style="color: #0C969B">referrerPolicy</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">no-referrer-when-downgrade</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementsByTagName</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">HEAD</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)[</span><span style="color: #AA0982">0</span><span style="color: #403F53">]</span><span style="color: #994CC3">.</span><span style="color: #4876D6">appendChild</span><span style="color: #403F53">(scriptTag)},</span><span style="color: #4876D6">evalCall</span><span style="color: #403F53">:</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">b</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #4876D6">ready</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #994CC3">try</span><span style="color: #403F53">{</span><span style="color: #4876D6">a</span><span style="color: #403F53">(b)</span><span style="color: #5F7E97">,</span><span style="color: #403F53">s</span><span style="color: #994CC3">=</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">querySelector</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[src*=BusuanziCallback]</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">s</span><span style="color: #994CC3">.</span><span style="color: #111111">parentElement</span><span style="color: #994CC3">.</span><span style="color: #4876D6">removeChild</span><span style="color: #403F53">(s)}</span><span style="color: #994CC3">catch</span><span style="color: #403F53">(c){</span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">error</span><span style="color: #403F53">(c)</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">bszTag</span><span style="color: #994CC3">.</span><span style="color: #4876D6">hides</span><span style="color: #403F53">()}})}}},</span><span style="color: #0C969B">bszCaller</span><span style="color: #994CC3">.</span><span style="color: #4876D6">fetch</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #0C969B">bszTag</span><span style="color: #994CC3">.</span><span style="color: #4876D6">texts</span><span style="color: #403F53">(a)</span><span style="color: #5F7E97">,</span><span style="color: #0C969B">bszTag</span><span style="color: #994CC3">.</span><span style="color: #4876D6">shows</span><span style="color: #403F53">()}),bszTag</span><span style="color: #994CC3">=</span><span style="color: #403F53">{bszs:[</span><span style="color: #111111">&quot;</span><span style="color: #C96765">site_pv</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span><span style="color: #111111">&quot;</span><span style="color: #C96765">page_pv</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span><span style="color: #111111">&quot;</span><span style="color: #C96765">site_uv</span><span style="color: #111111">&quot;</span><span style="color: #403F53">],</span><span style="color: #4876D6">texts</span><span style="color: #403F53">:</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #0C969B">this</span><span style="color: #994CC3">.</span><span style="color: #111111">bszs</span><span style="color: #994CC3">.</span><span style="color: #4876D6">map</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">b</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">var </span><span style="color: #403F53">c</span><span style="color: #994CC3">=</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementById</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">busuanzi_value_</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">+</span><span style="color: #403F53">b);c</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #0C969B">c</span><span style="color: #994CC3">.</span><span style="color: #0C969B">innerHTML</span><span style="color: #994CC3">=</span><span style="color: #403F53">a[b])})},</span><span style="color: #4876D6">hides</span><span style="color: #403F53">:</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #0C969B">this</span><span style="color: #994CC3">.</span><span style="color: #111111">bszs</span><span style="color: #994CC3">.</span><span style="color: #4876D6">map</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">var </span><span style="color: #403F53">b</span><span style="color: #994CC3">=</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementById</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">busuanzi_container_</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">+</span><span style="color: #403F53">a);b</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #0C969B">b</span><span style="color: #994CC3">.</span><span style="color: #111111">style</span><span style="color: #994CC3">.</span><span style="color: #0C969B">display</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">none</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)})},</span><span style="color: #4876D6">shows</span><span style="color: #403F53">:</span><span style="color: #994CC3">function</span><span style="color: #111111">()</span><span style="color: #403F53">{</span><span style="color: #0C969B">this</span><span style="color: #994CC3">.</span><span style="color: #111111">bszs</span><span style="color: #994CC3">.</span><span style="color: #4876D6">map</span><span style="color: #403F53">(</span><span style="color: #994CC3">function</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #111111">)</span><span style="color: #403F53">{</span><span style="color: #994CC3">var </span><span style="color: #403F53">b</span><span style="color: #994CC3">=</span><span style="color: #0C969B">document</span><span style="color: #994CC3">.</span><span style="color: #4876D6">getElementById</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">busuanzi_container_</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">+</span><span style="color: #403F53">a);b</span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53">(</span><span style="color: #0C969B">b</span><span style="color: #994CC3">.</span><span style="color: #111111">style</span><span style="color: #994CC3">.</span><span style="color: #0C969B">display</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">inline</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)})}};</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">bszCaller</span><span style="color: #C792EA">,</span><span style="color: #D7DBE0">bszTag</span><span style="color: #D6DEEB">;</span><span style="color: #C792EA">!function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">c</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">d</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">e</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">=!</span><span style="color: #F78C6C">1</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">=</span><span style="color: #D6DEEB">[];</span><span style="color: #82AAFF">ready</span><span style="color: #C792EA">=function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">c</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">||</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">interactive</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">===</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">readyState</span><span style="color: #C792EA">||</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">complete</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">===</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">readyState</span><span style="color: #C792EA">?</span><span style="color: #7FDBCA">c</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">call</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">document</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">:</span><span style="color: #7FDBCA">b</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">push</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">c</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">call</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">this</span><span style="color: #D6DEEB">)})</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">this</span><span style="color: #D6DEEB">}</span><span style="color: #5F7E97">,</span><span style="color: #82AAFF">d</span><span style="color: #C792EA">=function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">for</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">=</span><span style="color: #F78C6C">0</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">b</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">length</span><span style="color: #D6DEEB">;</span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">&gt;</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">;</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">)</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">[</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">]</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">apply</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">document</span><span style="color: #D6DEEB">);</span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">=</span><span style="color: #D6DEEB">[]}</span><span style="color: #5F7E97">,</span><span style="color: #82AAFF">e</span><span style="color: #C792EA">=function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">||</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">=!</span><span style="color: #F78C6C">0</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">d</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">call</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">window</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">removeEventListener</span><span style="color: #C792EA">?</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">removeEventListener</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">DOMContentLoaded</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">e</span><span style="color: #5F7E97">,</span><span style="color: #C792EA">!</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">:</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">attachEvent</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">detachEvent</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">onreadystatechange</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">e</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">window</span><span style="color: #C792EA">==</span><span style="color: #7FDBCA">window</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">top</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">clearInterval</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">=</span><span style="color: #FF5874">null</span><span style="color: #D6DEEB">)))}</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">addEventListener</span><span style="color: #C792EA">?</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">addEventListener</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">DOMContentLoaded</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">e</span><span style="color: #5F7E97">,</span><span style="color: #C792EA">!</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">:</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">attachEvent</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">attachEvent</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">onreadystatechange</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #D9F5DD">/</span><span style="color: #5CA7E4">loaded</span><span style="color: #7FDBCA">|</span><span style="color: #5CA7E4">complete</span><span style="color: #D9F5DD">/</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">test</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">readyState</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #82AAFF">e</span><span style="color: #D6DEEB">()})</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">window</span><span style="color: #C792EA">==</span><span style="color: #7FDBCA">window</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">top</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">setInterval</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">try</span><span style="color: #D6DEEB">{</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">||</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">documentElement</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">doScroll</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">left</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)}</span><span style="color: #C792EA">catch</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">){</span><span style="color: #C792EA">return</span><span style="color: #D6DEEB">}</span><span style="color: #82AAFF">e</span><span style="color: #D6DEEB">()}</span><span style="color: #5F7E97">,</span><span style="color: #F78C6C">5</span><span style="color: #D6DEEB">)))}(),</span><span style="color: #D7DBE0">bszCaller</span><span style="color: #C792EA">=</span><span style="color: #D6DEEB">{</span><span style="color: #82AAFF">fetch</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">,</span><span style="color: #D7DBE0">b</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">BusuanziCallback_</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">+</span><span style="color: #7FDBCA">Math</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">floor</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1099511627776</span><span style="color: #C792EA">*</span><span style="color: #7FDBCA">Math</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">random</span><span style="color: #D6DEEB">());</span><span style="color: #D7DBE0">window</span><span style="color: #D6DEEB">[</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">]</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">this</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">evalCall</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">a</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">a</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">replace</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">=BusuanziCallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">+</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">scriptTag</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">createElement</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">SCRIPT</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">type</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">text/javascript</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">defer</span><span style="color: #C792EA">=!</span><span style="color: #F78C6C">0</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">src</span><span style="color: #C792EA">=</span><span style="color: #D7DBE0">a</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">scriptTag</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">referrerPolicy</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">no-referrer-when-downgrade</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementsByTagName</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">HEAD</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">]</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">appendChild</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">scriptTag</span><span style="color: #D6DEEB">)},</span><span style="color: #82AAFF">evalCall</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">b</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #82AAFF">ready</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">try</span><span style="color: #D6DEEB">{</span><span style="color: #82AAFF">a</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #D7DBE0">s</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">querySelector</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[src*=BusuanziCallback]</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">s</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">parentElement</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">removeChild</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">s</span><span style="color: #D6DEEB">)}</span><span style="color: #C792EA">catch</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">){</span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">error</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">c</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">bszTag</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">hides</span><span style="color: #D6DEEB">()}})}}},</span><span style="color: #7FDBCA">bszCaller</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">fetch</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">//busuanzi.ibruce.info/busuanzi?jsonpCallback=BusuanziCallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #7FDBCA">bszTag</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">texts</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">)</span><span style="color: #5F7E97">,</span><span style="color: #7FDBCA">bszTag</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">shows</span><span style="color: #D6DEEB">()}),</span><span style="color: #D7DBE0">bszTag</span><span style="color: #C792EA">=</span><span style="color: #D6DEEB">{bszs:[</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">site_pv</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">page_pv</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">site_uv</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">],</span><span style="color: #82AAFF">texts</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #7FDBCA">this</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">bszs</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">map</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">b</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">busuanzi_value_</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">+</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">);</span><span style="color: #D7DBE0">c</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">c</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">innerHTML</span><span style="color: #C792EA">=</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">[</span><span style="color: #D7DBE0">b</span><span style="color: #D6DEEB">])})},</span><span style="color: #82AAFF">hides</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #7FDBCA">this</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">bszs</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">map</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">busuanzi_container_</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">+</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">);</span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">b</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">style</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">display</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">none</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)})},</span><span style="color: #82AAFF">shows</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">()</span><span style="color: #D6DEEB">{</span><span style="color: #7FDBCA">this</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">bszs</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">map</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">function</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">{</span><span style="color: #C792EA">var </span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">=</span><span style="color: #7FDBCA">document</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">getElementById</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">busuanzi_container_</span><span style="color: #D9F5DD">&quot;</span><span style="color: #C792EA">+</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">);</span><span style="color: #D7DBE0">b</span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">b</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">style</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">display</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">inline</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)})}};</span></span></code></pre></div></section><p>然后将</p><section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="HTML 代码块" data-v-c675dba6>HTML</h5><ile-root id="ile-10"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-10--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">&lt;script </span><span style="color: #4876D6">async</span><span style="color: #994CC3"> </span><span style="color: #4876D6">src</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">&gt;&lt;/script&gt;</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #7FDBCA">&lt;</span><span style="color: #CAECE6">script</span><span style="color: #7FDBCA"> </span><span style="color: #C5E478">async</span><span style="color: #7FDBCA"> </span><span style="color: #C5E478">src</span><span style="color: #7FDBCA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js</span><span style="color: #D9F5DD">&quot;</span><span style="color: #7FDBCA">&gt;&lt;/</span><span style="color: #CAECE6">script</span><span style="color: #7FDBCA">&gt;</span></span></code></pre></div></section><p>修改为<span class="mojikumi-line-start">（</span>如果上面的代码放在了博客的 <code>/<wbr>js<wbr>/<wbr>busuanzi<wbr>.<wbr>pure<wbr>.<wbr>mini<wbr>.<wbr>js</code><span class="mojikumi-line-end">）</span></p><section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-c675dba6><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-c675dba6><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="HTML 代码块" data-v-c675dba6>HTML</h5><ile-root id="ile-11"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-11--></div><div class="dark:hidden" itemprop="text" data-v-c675dba6><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">&lt;script </span><span style="color: #4876D6">async</span><span style="color: #994CC3"> </span><span style="color: #4876D6">src</span><span style="color: #994CC3">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">/js/busuanzi.pure.mini.js</span><span style="color: #111111">&quot;</span><span style="color: #994CC3">&gt;&lt;/script&gt;</span></span></code></pre></div><div class="dark:important-block" style="display:none;" data-v-c675dba6><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #7FDBCA">&lt;</span><span style="color: #CAECE6">script</span><span style="color: #7FDBCA"> </span><span style="color: #C5E478">async</span><span style="color: #7FDBCA"> </span><span style="color: #C5E478">src</span><span style="color: #7FDBCA">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">/js/busuanzi.pure.mini.js</span><span style="color: #D9F5DD">&quot;</span><span style="color: #7FDBCA">&gt;&lt;/</span><span style="color: #CAECE6">script</span><span style="color: #7FDBCA">&gt;</span></span></code></pre></div></section></div></details></aside>
<p>网上搜到的很多解决办法是把 <code>id<wbr>="<wbr>busuanzi_<wbr>container_<wbr>*"</code> 删掉<span class="mojikumi-line-end">，</span>这样当然就不会被隐藏了<span class="mojikumi-line-end">，</span>只不过这个隐藏本意是在出错时不把错误或者无意义的内容显示给访客<span class="mojikumi-line-end">，</span>保留这一行为还是挺好的<span class="mojikumi-line-end">。</span></p>
<h3 id="修改-live2d-的解决方法" class="heading"><a href="#修改-live2d-的解决方法" class="heading-anchor" aria-label="章节： 修改 live2d 的解决方法" tabindex="-1"></a><span>修改 live2d 的解决方法</span></h3>
<p>总之<span class="mojikumi-line-end">，</span>就是把 <code>innerHTML +=</code> 换成 <code>createElement</code> 和 <code>appendChild</code><span class="mojikumi-line-end">，</span>按 <a href="https://github.com/xiazeyu/live2d-widget.js/pull/61/files#diff-61426849230d9976d234f7c4ca195c623d9bb05a91d76b7ae51501e394f81860L10-R43">xiazeyu/live2d-widget.js#61</a> 改就行<span class="mojikumi-line-end">。</span></p>
<p>live2d 的代码还是挺长的<span class="mojikumi-line-end">，</span>直接修改 minify 后的代码不太好<span class="mojikumi-line-end">。</span>如果是 hexo 插件的话<span class="mojikumi-line-end">，</span>要修改应该也蛮麻烦的<span class="mojikumi-line-end">。</span>总之<span class="mojikumi-line-end">，</span>如果你知道怎么改比较好的话可以改<span class="mojikumi-line-end">，</span>不然的话还是推荐改 busuanzi<span class="mojikumi-line-end">。</span></p>
<h2 id="问题启示" class="heading"><a href="#问题启示" class="heading-anchor" aria-label="章节： 问题启示" tabindex="-1"></a><span>问题启示</span></h2>
<h3 id="不要修改原-dom-中的-innerhtml" class="heading"><a href="#不要修改原-dom-中的-innerhtml" class="heading-anchor" aria-label="章节： 不要修改原 DOM 中的 innerHTML" tabindex="-1"></a><span>不要修改原 DOM 中的 innerHTML</span></h3>
<p>直接修改 DOM 元素的 innerHTML 会让其中的元素都重新渲染<span class="mojikumi-line-start">（</span>加载？创建？<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>不仅指向其中元素的变量会失效<span class="mojikumi-line-end">，</span>也可能导致画面闪烁等问题<span class="mojikumi-line-start">（</span>例如导致 live2d-widget 修复这一问题的不是 busuanzi 失效而是 <a href="https://github.com/EYHN/hexo-helper-live2d/issues/149">CSS 闪烁</a><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>所以<span class="mojikumi-line-end">，</span>如果是添加 DOM 元素<span class="mojikumi-line-end">，</span>应当避免修改 <code>innerHTML</code><span class="mojikumi-line-end">，</span>而应当使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement"><code>document<wbr>.<wbr>createElement</code></a> 和 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild"><code>Node<wbr>.<wbr>appendChild<wbr>()</code></a> 以及 <code>removeChild</code><span class="mojikumi-line-end">、</span><code>replaceChild</code><span class="mojikumi-line-end">、</span><code>insertBefore</code> 等 API<span class="mojikumi-line-end">。</span></p>
<h3 id="不要依赖于指向-dom-元素的变量长时间不改变" class="heading"><a href="#不要依赖于指向-dom-元素的变量长时间不改变" class="heading-anchor" aria-label="章节： 不要依赖于指向 DOM 元素的变量长时间不改变" tabindex="-1"></a><span>不要依赖于指向 DOM 元素的变量长时间不改变</span></h3>
<p>如果 DOM 因各种原因部分重建<span class="mojikumi-line-end">，</span>指向 DOM 元素的变量很可能不再指向当前 DOM 中的元素<span class="mojikumi-line-end">。</span>所以<span class="mojikumi-line-end">，</span>最好不要在过了一段时间后<span class="mojikumi-line-start">（</span>例如在 callback 中<span class="mojikumi-line-end">）</span>再次使用指向 DOM 元素的变量<span class="mojikumi-line-end">，</span>而应当再次获取这一元素<span class="mojikumi-line-end">。</span></p>
<h3 id="不要-silently-fail" class="heading"><a href="#不要-silently-fail" class="heading-anchor" aria-label="章节： 不要 silently fail" tabindex="-1"></a><span>不要 silently fail</span></h3>
<p>在处理异常<span class="mojikumi-line-end">，</span>尤其是未知的异常时<span class="mojikumi-line-end">，</span>即使不 throw 出去<span class="mojikumi-line-end">，</span>也最好用 <code>console<wbr>.<wbr>error</code> 等方法记录下来<span class="mojikumi-line-end">。</span>记录在 console 中的错误信息并不会显示给普通用户<span class="mojikumi-line-end">，</span>但可以给寻找问题所在的用户提供宝贵的提示信息<span class="mojikumi-line-end">。</span></p>
<h3 id="使用-header-editor-在对原环境最小修改的情况下进行调试" class="heading"><a href="#使用-header-editor-在对原环境最小修改的情况下进行调试" class="heading-anchor" aria-label="章节： 使用 Header Editor 在对原环境最小修改的情况下进行调试" tabindex="-1"></a><span>使用 Header Editor 在对原环境最小修改的情况下进行调试</span></h3>
<p>这次使用 Header Editor 调试还是我临时想到的<span class="mojikumi-line-start">（</span><s>知道有这么个插件还是以前用 <a href="https://github.com/EndlessCheng/mahjong-helper">mahjong-helper</a><span class="mojikumi-line-end">，</span>当然现在已经没在用了</s><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>一开始还用 pastebin 上传代码<span class="mojikumi-line-end">，</span>效率极低<span class="mojikumi-line-end">，</span>后来才想起来本地跑个 http server 就可以了..用这个插件来调试还是挺方便的<span class="mojikumi-line-end">。</span></p>
<h3 id="留心依赖版本" class="heading"><a href="#留心依赖版本" class="heading-anchor" aria-label="章节： 留心依赖版本" tabindex="-1"></a><span>留心依赖版本</span></h3>
<p>一开始我还在 GitHub 上搜到一个 <a href="https://github.com/JoeyBling/busuanzi.pure.js">busuanzi.pure.js</a><span class="mojikumi-line-end">，</span>调了一会儿才发现这个代码和 <a href="https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js">https<wbr>://<wbr>busuanzi<wbr>.<wbr>ibruce<wbr>.<wbr>info<wbr>/<wbr>busuanzi<wbr>/<wbr>2<wbr>.<wbr>3<wbr>/<wbr>busuanzi<wbr>.<wbr>pure<wbr>.<wbr>mini<wbr>.<wbr>js</a> 不一样..</p>
<p>live2d 的版本也要注意开头包含时间的注释<span class="mojikumi-line-end">，</span>因为最新版本已经把问题修复了<span class="mojikumi-line-end">。</span></p>]]></content>
        <category label="busuanzi" term="https://ouuan.moe/tag/busuanzi"/>
        <category label="live2d" term="https://ouuan.moe/tag/live2d"/>
        <category label="JavaScript" term="https://ouuan.moe/tag/JavaScript"/>
        <category label="Web" term="https://ouuan.moe/tag/Web"/>
        <category label="问题解决记录" term="https://ouuan.moe/tag/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[display: none 与 loading="lazy"]]></title>
        <id>https://ouuan.moe/post/2022/07/display-none-and-lazy-load</id>
        <link href="https://ouuan.moe/post/2022/07/display-none-and-lazy-load"/>
        <updated>2022-07-23T14:47:45.000Z</updated>
        <summary type="html"><![CDATA[


<p>同时使用 <code>display: none</code> 和 <code>loading<wbr>="<wbr>lazy<wbr>"</code> 可能会让内容永远加载不出来<span class="mojikumi-line-end">。</span></p>
<p class="dark:hidden"><picture><source type="image/webp" srcset="/assets/comments-loading-light.53816492.webp"><img srcset="/assets/comments-loading-light.5fa3da4b.png" loading="lazy" src="/assets/comments-loading-light.5fa3da4b.png" width="353" height="153" alt="截图：评论加载中"></picture></p>


<p class="hidden dark:block"><picture><source type="image/webp" srcset="/assets/comments-loading-dark.93a651f2.webp"><img srcset="/assets/comments-loading-dark.207ba1a5.png" loading="lazy" src="/assets/comments-loading-dark.207ba1a5.png" width="375" height="147" alt="截图：评论加载中"></picture></p>
]]></summary>
        <content type="html"><![CDATA[


<p>同时使用 <code>display: none</code> 和 <code>loading<wbr>="<wbr>lazy<wbr>"</code> 可能会让内容永远加载不出来<span class="mojikumi-line-end">。</span></p>
<p class="dark:hidden"><picture><source type="image/webp" srcset="/assets/comments-loading-light.53816492.webp"><img srcset="/assets/comments-loading-light.5fa3da4b.png" loading="lazy" src="/assets/comments-loading-light.5fa3da4b.png" width="353" height="153" alt="截图：评论加载中"></picture></p>


<p class="hidden dark:block"><picture><source type="image/webp" srcset="/assets/comments-loading-dark.93a651f2.webp"><img srcset="/assets/comments-loading-dark.207ba1a5.png" loading="lazy" src="/assets/comments-loading-dark.207ba1a5.png" width="375" height="147" alt="截图：评论加载中"></picture></p>

<h2 id="问题背景" class="heading"><a href="#问题背景" class="heading-anchor" aria-label="章节： 问题背景" tabindex="-1"></a><span>问题背景</span></h2>
<p>虽然 <a href="https://giscus.app/">giscus</a> 自带一个加载页面<span class="mojikumi-line-end">，</span>但首先这个加载页面自身就有可能加载很久才显示<span class="mojikumi-line-end">，</span>而且这个自带的加载页面没有任何有效信息<span class="mojikumi-line-end">，</span>所以我自己写了一个加载页面<span class="mojikumi-line-end">，</span>附上了 Discussions 链接<span class="mojikumi-line-end">。</span></p>
<p>我使用的是 giscus 的 <a href="https://github.com/giscus/giscus/blob/main/ADVANCED-USAGE.md#giscus-to-parent-message-events">giscus-to-parent <code>message</code> events</a> 功能来检测 giscus 已加载<span class="mojikumi-line-end">，</span>而这和 giscus 显示在页面上有一定的时间间隔<span class="mojikumi-line-end">，</span>所以在检测到加载好之前需要先把 giscus 隐藏起来<span class="mojikumi-line-end">。</span>因为是用的 Vue<span class="mojikumi-line-end">，</span>很自然地就是用 <code>v-show</code> 让 giscus 加载好再显示<span class="mojikumi-line-end">。</span></p>
<p>除此之外<span class="mojikumi-line-end">，</span>本着<span class="mojikumi-line-start">“</span>不用白不用<span class="mojikumi-line-end">”</span>的精神<span class="mojikumi-line-end">，</span>我还启用了 giscus 的 lazy load<span class="mojikumi-line-start">（</span>本质上是 <code>&#x3C;iframe></code> 的 <code>loading<wbr>="<wbr>lazy<wbr>"</code><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>并且<span class="mojikumi-line-end">，</span>我使用的是 Firefox<span class="mojikumi-line-end">，</span>上述配置在 Firefox 上是没有问题的<span class="mojikumi-line-end">。</span></p>
<h2 id="问题的发现与解决" class="heading"><a href="#问题的发现与解决" class="heading-anchor" aria-label="章节： 问题的发现与解决" tabindex="-1"></a><span>问题的发现与解决</span></h2>
<p>一位群友告诉我评论加载不出来<span class="mojikumi-line-end">，</span>于是我试了一下各个浏览器<span class="mojikumi-line-end">，</span>在第二次<span class="mojikumi-line-start">（</span>为什么是第二次呢<span class="mojikumi-line-end">，</span>不懂<span class="mojikumi-line-end">）</span>试 Chrome 的时候发现没加载出来<span class="mojikumi-line-end">。</span></p>
<p>console 没有任何报错<span class="mojikumi-line-end">；</span>查看 DOM<span class="mojikumi-line-end">，</span>发现 <code>&#x3C;iframe></code> 里面是空的<span class="mojikumi-line-end">，</span>幸好我还记得自己用了 lazy load<span class="mojikumi-line-end">，</span>所以很快就明白了问题所在<span class="mojikumi-line-end">：</span>Chrome 比较<span class="mojikumi-line-start">“</span>聪明<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>看到 <code>display: none;</code> 就懒了<span class="mojikumi-line-end">，</span>没加载这个 <code>&#x3C;iframe></code><span class="mojikumi-line-end">。</span></p>
<p>把 <code>v-show</code> 换成 <code>opacity-0 absolute</code> 就解决了问题<span class="mojikumi-line-end">。</span></p>
<p>但最后还有点小插曲<span class="mojikumi-line-end">，</span>因为这个 <code>opacity-0</code> 在 SSR 的时候是没有的<span class="mojikumi-line-end">，</span>没被 <a href="https://github.com/unocss/unocss">UnoCSS</a> 扫描到<span class="mojikumi-line-end">，</span>就挂了<span class="mojikumi-line-end">，</span>最后换成了 inline style<span class="mojikumi-line-end">。</span></p>
<h2 id="后记" class="heading"><a href="#后记" class="heading-anchor" aria-label="章节： 后记" tabindex="-1"></a><span>后记</span></h2>
<p>这件事告诉我们<span class="mojikumi-line-end">，</span><s>有好的群友</s>在不同浏览器上多测试几遍是非常重要的<span class="mojikumi-line-end">。</span></p>
<p><s>这点事值得发博客吗<span class="mojikumi-line-end">；</span>当然是博客太空了随便水一篇</s></p>
<p>P.S. 虽然问题的解决很简单<span class="mojikumi-line-end">，</span>但还是浅搜了一下看看有没有什么 best practice<span class="mojikumi-line-end">。</span>倒是没搜到什么有用的<span class="mojikumi-line-end">，</span>但是搜到<a href="https://developers.weixin.qq.com/community/develop/doc/0006ec11c48ec072b6e7b79975b000">一个有趣的</a><span class="mojikumi-line-start">（</span></p>
<p><picture><source type="image/webp" srcset="/assets/reproduce-yourself.eb5ca584.webp"><img srcset="/assets/reproduce-yourself.28a03bec.png" loading="lazy" src="/assets/reproduce-yourself.28a03bec.png" width="959" height="362" alt="论坛截图：麻烦提供下代码片段。你们已经是成熟的开发团队了，要学会自己复现bug。"></picture></p>
<h2 id="再后记" class="heading"><a href="#再后记" class="heading-anchor" aria-label="章节： 再后记" tabindex="-1"></a><span>再后记</span></h2>
<p>发现加载中的 <code>&#x3C;iframe></code> 虽然看不见但点的到..需要加一个 <code>z-index: -1</code><span class="mojikumi-line-end">。</span></p>
<h2 id="再后记的后记" class="heading"><a href="#再后记的后记" class="heading-anchor" aria-label="章节： 再后记的后记" tabindex="-1"></a><span>再后记的后记</span></h2>
<p>这个东西虽然怎么都看不见了<span class="mojikumi-line-end">，</span>但宽度会让整个页面出现水平滚动条<span class="mojikumi-line-end">，</span>所以要加 <code>width: 0; height: 0;</code><span class="mojikumi-line-end">。</span></p>]]></content>
        <category label="CSS" term="https://ouuan.moe/tag/CSS"/>
        <category label="Web" term="https://ouuan.moe/tag/Web"/>
        <category label="问题解决记录" term="https://ouuan.moe/tag/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95"/>
    </entry>
</feed>