{
    "version": "https://jsonfeed.org/version/1",
    "title": "ouuan's blog: 标签: 学习记录",
    "home_page_url": "https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95",
    "feed_url": "https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/feed.json",
    "description": "标签: 学习记录 - ouuan 写东西的地方，涵盖了 Web 开发、计算机系统、Linux 使用、大学学习生活等多个主题。",
    "author": {
        "name": "ouuan",
        "url": "https://github.com/ouuan"
    },
    "items": [
        {
            "id": "https://ouuan.moe/post/2023/03/thuse",
            "content_html": "\n\n\n<p>很好<span class=\"mojikumi-line-end\">，</span>你已经学会了 Vue<span class=\"mojikumi-line-end\">、</span>Rust<span class=\"mojikumi-line-end\">、</span>Actix<span class=\"mojikumi-line-end\">、</span>GitHub Actions<span class=\"mojikumi-line-end\">、</span>pnpm<span class=\"mojikumi-line-end\">、</span>Vitest<span class=\"mojikumi-line-end\">、</span>Caddy</p>\n<p>现在你可以使用 React<span class=\"mojikumi-line-end\">、</span>Python<span class=\"mojikumi-line-end\">、</span>Django<span class=\"mojikumi-line-end\">、</span>GitLab CI<span class=\"mojikumi-line-end\">、</span>yarn<span class=\"mojikumi-line-end\">、</span>Jest<span class=\"mojikumi-line-end\">、</span>Nginx 来完成软工作业了<span class=\"mojikumi-line-start\">（</span></p>\n\n<p><picture><source type=\"image/webp\" srcset=\"/assets/tech-stack.2c5179c8.webp\"><img srcset=\"/assets/tech-stack.4ab32981.jpeg\" loading=\"lazy\" src=\"/assets/tech-stack.4ab32981.jpeg\" width=\"500\" height=\"626\" alt=\"技术栈交集为空的 meme\"></picture></p>\n<p><span class=\"mojikumi-line-start\">（</span>其实这里面比较有问题的就只有 React<span class=\"mojikumi-line-end\">，</span>其他都还好<span class=\"mojikumi-line-end\">，</span><s>只是数量多凑一点 meme 效果更好</s><span class=\"mojikumi-line-end\">）</span></p>\n<h2 id=\"小作业\" class=\"heading\"><a href=\"#小作业\" class=\"heading-anchor\" aria-label=\"章节： 小作业\" tabindex=\"-1\"></a><span>小作业</span></h2>\n<h3 id=\"django-后端小作业\" class=\"heading\"><a href=\"#django-后端小作业\" class=\"heading-anchor\" aria-label=\"章节： Django 后端小作业\" tabindex=\"-1\"></a><span>Django 后端小作业</span></h3>\n<p>每一处需要修改的代码都列出来了<span class=\"mojikumi-line-end\">，</span>还有详细的注释告诉你要干什么<span class=\"mojikumi-line-end\">。</span>Django 完全没学<span class=\"mojikumi-line-end\">，</span>就根据提示查了一处文档<span class=\"mojikumi-line-end\">，</span>代码的整体逻辑也没搞清楚<span class=\"mojikumi-line-end\">。</span></p>\n<p>感觉写完之后理解了 ChatGPT<span class=\"mojikumi-line-end\">，</span>看着注释和示例补全代码根本就不需要学会如何写代码嘛<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"学-react\" class=\"heading\"><a href=\"#学-react\" class=\"heading-anchor\" aria-label=\"章节： 学 React\" tabindex=\"-1\"></a><span>学 React</span></h3>\n<p>小作业应该不需要怎么学 React<span class=\"mojikumi-line-end\">，</span>但还是把 <a href=\"https://beta.reactjs.org/learn\">Learn React (Beta)</a> 完整过了一遍<span class=\"mojikumi-line-end\">。</span></p>\n<p>之前都在 Twitter 上云 React<span class=\"mojikumi-line-end\">，</span>学了之后终于有喜欢 Vue 的自信了<span class=\"mojikumi-line-start\">（</span><s>所以说 X 自信就是要允许 Y 才能有<span class=\"mojikumi-line-end\">，</span>以 X 自信为名打压 Y 到底是什么操作</s></p>\n<a id=\"vue-用户初学-react-感到不适的一些点\" name=\"vue-用户初学-react-感到不适的一些点\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>Vue 用户初学 React 感到不适的一些点</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><ul>\n<li>我希望 HTML 放在统一<span class=\"mojikumi-line-end\">、</span>独立的位置<span class=\"mojikumi-line-end\">，</span>不分散在多处<span class=\"mojikumi-line-end\">，</span>不和 JS 代码在结构上混在一起<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>v-if</code> 要用 if-else / <code>?:</code> / <code>&#x26;&#x26;</code> 实现<span class=\"mojikumi-line-end\">：</span>我不希望在 JSX 外部写 if-else<span class=\"mojikumi-line-end\">；</span>表达式的括号可能引入额外的缩进<span class=\"mojikumi-line-end\">；</span><code>?:</code> 实现多级 else if 可能看不清<span class=\"mojikumi-line-end\">；</span>修改代码时不像 <code>v-if</code> 只需要添加一行不影响其他行<span class=\"mojikumi-line-end\">。</span>总之就是感觉很丑<span class=\"mojikumi-line-start\">（</span></li>\n<li><code>v-for</code> 要自己使用 JS 计算得到<span class=\"mojikumi-line-end\">。</span></li>\n<li>不支持 named slot<span class=\"mojikumi-line-start\">（</span>可以用 prop 替代但感觉不是很优雅<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n<li>event handler 不能 <code>count += 1</code> 必须 <code>() => count += 1</code><span class=\"mojikumi-line-end\">。</span></li>\n<li>虽然只是个语法糖<span class=\"mojikumi-line-end\">，</span>但似乎没有 <code>v-model</code> 等价物<span class=\"mojikumi-line-end\">。</span></li>\n<li>没有 event modifier (<code>@<wbr>click<wbr>.<wbr>stop</code>)<span class=\"mojikumi-line-end\">，</span>需要手动 <code>e<wbr>.<wbr>stopPropagation<wbr>()</code><span class=\"mojikumi-line-end\">。</span></li>\n<li>需要用 setter function 来修改 state<span class=\"mojikumi-line-end\">，</span><code>useState</code> 返回两个变量<span class=\"mojikumi-line-end\">。</span></li>\n<li>state 是 snapshot<span class=\"mojikumi-line-end\">，</span>反直觉<span class=\"mojikumi-line-end\">。</span>教程里说这样可以避免一些 timing mistake<span class=\"mojikumi-line-end\">，</span>但我感觉在 Vue 里一般只要传值而不是 ref 就行？确实有一定意义但我还是更希望符合直觉<span class=\"mojikumi-line-end\">。</span></li>\n<li>修改 object / array state 很麻烦<span class=\"mojikumi-line-end\">，</span>使用 Immer 的话似乎就和 Vue 差不多了<span class=\"mojikumi-line-end\">。</span></li>\n<li>state 绑定在树的每个位置上<span class=\"mojikumi-line-end\">，</span>而非存在 component 里<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>useMemo</code> 需要手动指定依赖<span class=\"mojikumi-line-end\">，</span><code>computed</code> 不需要<span class=\"mojikumi-line-end\">。</span></li>\n</ul><p>本来想把 <code>useEffect</code> 也列出来<span class=\"mojikumi-line-end\">，</span>但 React 的 <a href=\"https://beta.reactjs.org/learn/lifecycle-of-reactive-effects#thinking-from-the-effects-perspective\">这种设计思路</a> 似乎也有一定道理<span class=\"mojikumi-line-end\">。</span></p><p>但当我写出 <code>useEffect<wbr>(() => () => <wbr>clearInterval<wbr>(<wbr>timerRef<wbr>.<wbr>current<wbr>), [])</code> 的时候我还是不明白了<span class=\"mojikumi-line-end\">，</span>这也能<span class=\"mojikumi-line-start\">“</span>从 Effect 的角度思考<span class=\"mojikumi-line-end\">”</span>吗<span class=\"mojikumi-line-end\">，</span>给个 <code>onUnmounted</code> 不好吗<span class=\"mojikumi-line-end\">。</span></p></div></details></aside>\n<a id=\"高情商与低情商\" name=\"高情商与低情商\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>高情商与低情商</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>我在群里问了个问题<span class=\"mojikumi-line-end\">，</span>结果助教全都跑来加我好友<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p><p>那我也不客气了<span class=\"mojikumi-line-end\">，</span>上来就问为什么换成 React<span class=\"mojikumi-line-end\">，</span>bksw<span class=\"mojikumi-line-start\">（</span></p><p><picture><source type=\"image/webp\" srcset=\"/assets/eq.9ae66d49.webp\"><img srcset=\"/assets/eq.a2547205.png\" loading=\"lazy\" src=\"/assets/eq.a2547205.png\" width=\"383\" height=\"850\" alt=\"和助教的消息记录\"></picture></p><p><s>不难看出<span class=\"mojikumi-line-end\">，</span>这里面情商最低的是我</s></p></div></details></aside>\n<h3 id=\"react-next-js-前端小作业\" class=\"heading\"><a href=\"#react-next-js-前端小作业\" class=\"heading-anchor\" aria-label=\"章节： React (Next.js) 前端小作业\" tabindex=\"-1\"></a><span>React (Next.js) 前端小作业</span></h3>\n<p>上来就看到 ESLint 是 4 空格缩进<span class=\"mojikumi-line-end\">、</span>优先双引号<span class=\"mojikumi-line-end\">，</span>这能忍吗<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">。</span>特意去确认了一下<span class=\"mojikumi-line-end\">，</span>除了前端助教参与的几个项目<span class=\"mojikumi-line-end\">，</span>随便找一个项目都是 2 空格缩进<span class=\"mojikumi-line-end\">、</span>优先单引号<span class=\"mojikumi-line-start\">（</span></p>\n<p>再一写代码<span class=\"mojikumi-line-end\">，</span>发现不对劲<span class=\"mojikumi-line-end\">，</span>这个 ESLint 有啥 rule 啊<span class=\"mojikumi-line-end\">，</span>怎么怎么写都没 lint error<span class=\"mojikumi-line-end\">，</span>给我整不会了<span class=\"mojikumi-line-start\">（</span></p>\n<p>于是直接上了 <a href=\"https://github.com/ouuan/eslint-config\"><code>@<wbr>ouuan<wbr>/<wbr>eslint<wbr>-<wbr>config<wbr>-<wbr>ts</code></a><span class=\"mojikumi-line-end\">，</span>理论上来说我应该整一个给 tsx 用的 config<span class=\"mojikumi-line-end\">，</span>但 ts 的 config 配合上小作业模板原有的应该也凑合着能用吧<span class=\"mojikumi-line-start\">（</span></p>\n<p>写完后的感觉和 Django 小作业差不多<span class=\"mojikumi-line-end\">，</span>React 都白学了<span class=\"mojikumi-line-end\">，</span>啥都不会就能写完<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>这是你前端小作业的最后一个 Step 了<span class=\"mojikumi-line-end\">，</span>如果你已经完成了<span class=\"mojikumi-line-end\">，</span>我相信你已经充分掌握了 Next.js 的入门知识<span class=\"mojikumi-line-end\">。</span></p>\n<p>事实上这份前端小作业几乎可以作为大作业的起始框架<span class=\"mojikumi-line-end\">。</span>除了 Next.js 框架本身<span class=\"mojikumi-line-end\">，</span>其包含了<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>代码风格检查与修正插件 ESLint<span class=\"mojikumi-line-end\">，</span>配置文件为 <code>.<wbr>eslintrc<wbr>.<wbr>json</code></li>\n<li>单元测试框架 Jest</li>\n</ul>\n</blockquote>\n<p>不是<span class=\"mojikumi-line-end\">，</span>你是认真的吗<span class=\"mojikumi-line-end\">，</span>先不谈学会多少能算是<span class=\"mojikumi-line-start\">《</span>充分掌握了入门知识<span class=\"mojikumi\">》</span><span class=\"mojikumi-line-end\">，</span>这个 eslintrc 真的能用吗<span class=\"mojikumi-line-start\">（</span></p>\n<p>第二天早上起来再看了下代码<span class=\"mojikumi-line-end\">，</span>发现组件 unmount 时没有 <code>clearInterval</code><span class=\"mojikumi-line-end\">，</span>而这需要在允许<span class=\"mojikumi-line-start\">（</span>推荐<span class=\"mojikumi-line-end\">）</span>的代码范围之外进行修改<span class=\"mojikumi-line-end\">，</span>怎么回事<span class=\"mojikumi-line-start\">（</span></p>\n<p>网络请求也是<span class=\"mojikumi-line-end\">，</span>unmount 时没有 abort / ignore<span class=\"mojikumi-line-end\">，</span>但要改的话交互逻辑也会有些变化<span class=\"mojikumi-line-end\">，</span>就懒得修了<span class=\"mojikumi-line-end\">，</span>一个简陋的小作业而已<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"cicd-小作业\" class=\"heading\"><a href=\"#cicd-小作业\" class=\"heading-anchor\" aria-label=\"章节： CI/CD 小作业\" tabindex=\"-1\"></a><span>CI/CD 小作业</span></h3>\n<p><a href=\"https://tuna.moe/event/2023/welcome-and-ipsec/\">前一天的 Power TUNA</a> 上还有人问为什么 TUNA 有很多海外流量<span class=\"mojikumi-line-end\">，</span>第二天就看到了在 Dockerfile 里硬编码 TUNA<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"为子目录设置-commit-邮箱\" class=\"heading\"><a href=\"#为子目录设置-commit-邮箱\" class=\"heading-anchor\" aria-label=\"章节： 为子目录设置 commit 邮箱\" tabindex=\"-1\"></a><span>为子目录设置 commit 邮箱</span></h3>\n<p>作业经常会需要<span class=\"mojikumi-line-start\">（</span>或者说最好需要<span class=\"mojikumi-line-end\">）</span>使用一些与平时不同的 commit 邮箱<span class=\"mojikumi-line-end\">，</span>而 SECoder 的邮箱验证似乎还坏了<span class=\"mojikumi-line-end\">，</span>就更需要了<span class=\"mojikumi-line-end\">。</span></p>\n<p>以前碰到这种需求我都在每个 repo 设 local git config<span class=\"mojikumi-line-end\">，</span>但在软工可能有好几个 repo<span class=\"mojikumi-line-end\">，</span>不仅麻烦而且可能忘记<span class=\"mojikumi-line-end\">，</span>就需要更好的解决方案<span class=\"mojikumi-line-end\">。</span></p>\n<p>其实简单搜一下就很容易搜到<span class=\"mojikumi-line-end\">，</span>毕竟这是个很常见的需求<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>\n<p>在 <code>~/.<wbr>gitconfig</code> 中添加</p>\n<section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h4><ile-root id=\"ile-1\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-1--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>\n<span><span style=\"color: #d6deeb\">    path = ~/some/path/.gitconfig</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>\n<span><span style=\"color: #403f53\">    path = ~/some/path/.gitconfig</span></span></samp></pre></div></section>\n</li>\n<li>\n<p>在 <code>~/<wbr>some<wbr>/<wbr>path<wbr>/.<wbr>gitconfig</code> 中添加</p>\n<section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h4><ile-root id=\"ile-2\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-2--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">[user]</span></span>\n<span><span style=\"color: #d6deeb\">    email = 2021000000@secoder.net</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">[user]</span></span>\n<span><span style=\"color: #403f53\">    email = 2021000000@secoder.net</span></span></samp></pre></div></section>\n</li>\n</ul>\n<h3 id=\"小作业的一些锅\" class=\"heading\"><a href=\"#小作业的一些锅\" class=\"heading-anchor\" aria-label=\"章节： 小作业的一些锅\" tabindex=\"-1\"></a><span>小作业的一些锅</span></h3>\n<p>deploy 之后发现一堆锅<span class=\"mojikumi-line-end\">，</span>它们不影响我的小作业得分<span class=\"mojikumi-line-end\">，</span>只会影响我能不能交上数学课作业<span class=\"mojikumi-line-end\">，</span>但我还是修了<span class=\"mojikumi-line-end\">，</span>数学课作业则是没写完就交了<span class=\"mojikumi-line-start\">（</span></p>\n<p>说到这就得怀念程设训练了<span class=\"mojikumi-line-end\">，</span>还有 5 分的<span class=\"mojikumi-line-start\">“</span>课堂参与<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>额外加在 100 分之外<span class=\"mojikumi-line-end\">，</span>回答几个同学的提问<span class=\"mojikumi-line-end\">、</span>开一些 issue 帮忙修锅就拿满了<span class=\"mojikumi-line-end\">，</span><s>虽然最后这 5 分对 A+ 毫无帮助<span class=\"mojikumi-line-end\">，</span>要是能移到软工就好了</s><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"next-js-static-html-export-有-dynamic-route-时报错\" class=\"heading\"><a href=\"#next-js-static-html-export-有-dynamic-route-时报错\" class=\"heading-anchor\" aria-label=\"章节： Next.js static HTML export 有 dynamic route 时报错\" tabindex=\"-1\"></a><span>Next.js static HTML export 有 dynamic route 时报错</span></h4>\n<p>在 Next.js 13.0.7 之前<span class=\"mojikumi-line-end\">，</span>具体来说是 <a href=\"https://github.com/vercel/next.js/releases/tag/v13.0.7-canary.5\">13.0.7-canary.5</a> 之前<span class=\"mojikumi-line-end\">，</span>通过 <code>next export</code> 得到 static HTML export 后<span class=\"mojikumi-line-end\">，</span>如果访问一个能匹配上 dynamic route 的 static route<span class=\"mojikumi-line-end\">，</span>会报<span class=\"mojikumi-line-start\">“</span>Application error: a client-side exception has occurred<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span>有 <code>pages<wbr>/[<wbr>id<wbr>].<wbr>tsx</code> 和 <code>pages<wbr>/<wbr>list<wbr>.<wbr>tsx</code> 时<span class=\"mojikumi-line-end\">，</span>访问 <code>/list.html</code> 就会报错<span class=\"mojikumi-line-end\">。</span></p>\n<p>简单看了一下这个版本的 changelog<span class=\"mojikumi-line-end\">，</span>有几个疑似和这个 bug 相关的<span class=\"mojikumi-line-end\">，</span>但我没能确认具体是哪个<span class=\"mojikumi-line-end\">。</span>本来想在本地 build Next.js 来进一步确认<span class=\"mojikumi-line-end\">，</span>但我一 build 就报一万个类型错误<span class=\"mojikumi-line-end\">，</span>搞了半天也没搞好<span class=\"mojikumi-line-end\">，</span>就放弃了<span class=\"mojikumi-line-end\">。</span>反正 bump 一下就修好了<span class=\"mojikumi-line-end\">，</span><s>开课前为啥不 bump 一下啊</s><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"next-js-static-html-export-的-nginx-路由配置\" class=\"heading\"><a href=\"#next-js-static-html-export-的-nginx-路由配置\" class=\"heading-anchor\" aria-label=\"章节： Next.js static HTML export 的 Nginx 路由配置\" tabindex=\"-1\"></a><span>Next.js static HTML export 的 Nginx 路由配置</span></h4>\n<p>感觉网上搜到的一些 Nginx 路由配置都很迷惑<span class=\"mojikumi-line-end\">：</span><code>$uri</code> 是匹配不到 HTML 文件的<span class=\"mojikumi-line-end\">，</span>需要 <code>$uri.html</code><span class=\"mojikumi-line-end\">；</span><code>$uri/</code> 则可能匹配到目录<span class=\"mojikumi-line-end\">，</span>导致 403<span class=\"mojikumi-line-end\">；</span>动态路由如果不专门写路由配置的话<span class=\"mojikumi-line-end\">，</span>就不能直接访问到正确的 HTML<span class=\"mojikumi-line-end\">，</span>static HTML export 的作用就没有了<span class=\"mojikumi-line-end\">，</span>而且<span class=\"mojikumi-line-end\">，</span>fallback 到 <code>/<wbr>index<wbr>.<wbr>html</code> 可能导致加载一些不需要的页面内容和 JS<span class=\"mojikumi-line-end\">，</span>实际上比直接 SPA 更劣<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"用户名格式检查\" class=\"heading\"><a href=\"#用户名格式检查\" class=\"heading-anchor\" aria-label=\"章节： 用户名格式检查\" tabindex=\"-1\"></a><span>用户名格式检查</span></h4>\n<p>说来惭愧<span class=\"mojikumi-line-end\">，</span>我一开始也没意识到用户名没校验格式的问题<span class=\"mojikumi-line-end\">，</span>还是配路由的时候才想到用户名里会不会有 slash<span class=\"mojikumi-line-end\">。</span></p>\n<p>现在要修的话确实麻烦<span class=\"mojikumi-line-end\">，</span>所以只要归结为<span class=\"mojikumi-line-start\">《</span>由于小作业的简化<span class=\"mojikumi-line-end\">》</span>就好了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"忘记关测试用-docker-container\" class=\"heading\"><a href=\"#忘记关测试用-docker-container\" class=\"heading-anchor\" aria-label=\"章节： 忘记关测试用 Docker container\" tabindex=\"-1\"></a><span><s>忘记关测试用 Docker container</s></span></h4>\n<p>第二天早上起来一看<span class=\"mojikumi-line-end\">，</span>Plausible 特别卡<span class=\"mojikumi-line-end\">，</span>再一看<span class=\"mojikumi-line-end\">，</span>load avg 都快两位数了<span class=\"mojikumi-line-end\">，</span>原来是在 VPS 上测试后端部署忘关了 🌚 不要随便在生产环境顺便测小作业<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"玩小作业\" class=\"heading\"><a href=\"#玩小作业\" class=\"heading-anchor\" aria-label=\"章节： 玩小作业\" tabindex=\"-1\"></a><span>玩小作业</span></h3>\n<p>把 game of life 当成冬日绘板画画<span class=\"mojikumi-line-end\">，</span>动态更新时钟<span class=\"mojikumi-line-end\">，</span>从 LifeWiki 获取随机 pattern<span class=\"mojikumi-line-end\">，</span>这是一个作业写不完的人能干的出来的吗<span class=\"mojikumi-line-end\">，</span>共享后端是这样用的吗<span class=\"mojikumi-line-start\">（</span></p>\n<p>第二天早上起来一看<span class=\"mojikumi-line-start\">（</span><s>怎么每段都有个第二天早上起来</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>大家都在画些啥<span class=\"mojikumi-line-end\">，</span>我还是太保守了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"回答同学提问\" class=\"heading\"><a href=\"#回答同学提问\" class=\"heading-anchor\" aria-label=\"章节： 回答同学提问\" tabindex=\"-1\"></a><span>回答同学提问</span></h3>\n<p>软工的公开提问貌似只能在微信群<span class=\"mojikumi-line-end\">，</span>而且助教有十几个<span class=\"mojikumi-line-end\">，</span>回复速度实在是太快了<span class=\"mojikumi-line-end\">。</span>程设训练的时候我还能偶尔抢在助教之前回答问题<span class=\"mojikumi-line-end\">，</span>现在根本做不到<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"redacted\" class=\"heading\"><a href=\"#redacted\" class=\"heading-anchor\" aria-label=\"章节： [redacted]\" tabindex=\"-1\"></a><span>[redacted]</span></h3>\n<p>这里是一段 13 天后才能公开的内容<span class=\"mojikumi-line-end\">，</span>在这放个预告防止到时候忘了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"node-js-和浏览器的不同-timer\" class=\"heading\"><a href=\"#node-js-和浏览器的不同-timer\" class=\"heading-anchor\" aria-label=\"章节： Node.js 和浏览器的不同 timer\" tabindex=\"-1\"></a><span>Node.js 和浏览器的不同 timer</span></h3>\n<p>队友问了一个神奇的 bug<span class=\"mojikumi-line-end\">，</span>说是 <code>clearInterval</code> clear 不掉<span class=\"mojikumi-line-end\">，</span>我看了半天都没发现问题<span class=\"mojikumi-line-end\">，</span>最后发现开头有个 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>之前还真没注意过<span class=\"mojikumi-line-end\">，</span>timer 有 Node.js 和浏览器两个版本<span class=\"mojikumi-line-end\">，</span>Node.js 的 <code>setInterval</code> 返回的是一个 object<span class=\"mojikumi-line-end\">，</span>浏览器返回的是一个 <code>number</code><span class=\"mojikumi-line-end\">。</span></p>\n<ul>\n<li>直接写 <code>setInterval</code> 时<span class=\"mojikumi-line-end\">，</span>在 TypeScript 中会被认为返回 <code>NodeJS<wbr>.<wbr>Timer</code><span class=\"mojikumi-line-end\">，</span>而实际运行时在哪运行就用哪个版本的函数<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果写的是 <code>window<wbr>.<wbr>setInterval</code><span class=\"mojikumi-line-end\">，</span>在 TypeScript 中会被认为返回 <code>number</code><span class=\"mojikumi-line-end\">，</span>在 Node.js 中运行会报错<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果是 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class=\"mojikumi-line-end\">，</span>即使是在浏览器中运行也会使用 Node.js 版本的函数<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>这里比较重要的是 <code>setInterval</code> 和 <code>clearInterval</code> 要配套<span class=\"mojikumi-line-end\">，</span>不能一个用 Node.js 的一个用浏览器的<span class=\"mojikumi-line-end\">，</span>否则会 clear 不掉甚至报错<span class=\"mojikumi-line-end\">。</span></p>\n<p>一般来说直接写<span class=\"mojikumi-line-start\">（</span>不 <code>window.</code> 也不 <code>import from 'timers'</code><span class=\"mojikumi-line-end\">）</span>就是最好的<span class=\"mojikumi-line-end\">，</span>虽然看起来 TypeScript 会将 <code>number</code> 误认为是 <code>NodeJS<wbr>.<wbr>Timer</code><span class=\"mojikumi-line-end\">，</span>但这个 <code>number</code> 本来就不该被当作一个 <code>number</code> 来使用<span class=\"mojikumi-line-end\">，</span>这样的 typing 反而是好的<span class=\"mojikumi-line-end\">。</span></p>\n<p>这里如果再仔细研究一下可以单独写一篇博客了<span class=\"mojikumi-line-end\">，</span>但还是算了吧<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"小作业即将截止\" class=\"heading\"><a href=\"#小作业即将截止\" class=\"heading-anchor\" aria-label=\"章节： 小作业即将截止\" tabindex=\"-1\"></a><span>小作业即将截止</span></h3>\n<blockquote>\n<p>小作业 将于 3 月 16 日<span class=\"mojikumi-line-start\">（</span>周四<span class=\"mojikumi-line-end\">）</span>23:59 截止<span class=\"mojikumi-line-end\">。</span></p>\n<p>请注意截止时间不是 21:55<span class=\"mojikumi-line-end\">。</span></p>\n<p>……</p>\n</blockquote>\n<p>后面省略的几句也是模仿的 DSA<span class=\"mojikumi-line-end\">，</span><s>DNS</s> <span class=\"heimu\">前几天某位助教答疑的时候把 dns typo 成了 dna</span> DNA 动了<span class=\"mojikumi-line-end\">，</span>好评<span class=\"mojikumi-line-end\">，</span>但开头这个对偶的 ddl 绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"大作业\" class=\"heading\"><a href=\"#大作业\" class=\"heading-anchor\" aria-label=\"章节： 大作业\" tabindex=\"-1\"></a><span>大作业</span></h2>\n<h3 id=\"组队\" class=\"heading\"><a href=\"#组队\" class=\"heading-anchor\" aria-label=\"章节： 组队\" tabindex=\"-1\"></a><span>组队</span></h3>\n<p>在另外一个通识课上体验了一下差点没组上队<span class=\"mojikumi-line-start\">（</span>虽然后来得知还有不少人比我更晚组上队<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>最后完全 rand 组队<span class=\"mojikumi-line-end\">。</span>所以真的很感谢上学期就找我来组队的队友<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"起队名\" class=\"heading\"><a href=\"#起队名\" class=\"heading-anchor\" aria-label=\"章节： 起队名\" tabindex=\"-1\"></a><span>起队名</span></h3>\n<blockquote>\n<p>HardToName / 起个名好难队</p>\n</blockquote>\n<p><s>这是什么引用啊</s></p>\n<p>队友提出了三个队名<span class=\"mojikumi-line-end\">：</span>啊对对队<span class=\"mojikumi-line-end\">、</span>BUG 全调队<span class=\"mojikumi-line-end\">、</span>[redacted] 队<span class=\"mojikumi-line-end\">。</span>前两个都被占了<span class=\"mojikumi-line-end\">，</span>后一个太魔幻了<span class=\"mojikumi-line-end\">，</span>于是最后还是用的我提出的队名<span class=\"mojikumi-line-end\">：</span>lazy / 这个队特别懒<span class=\"mojikumi-line-end\">，</span>什么都没留下~</p>\n<p><span class=\"mojikumi-line-start\">（</span>这 SECoder 怎么还在用这个很有年代感的个人描述 placeholder 啊<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/lazy-placeholder.65e936a3.webp\"><img srcset=\"/assets/lazy-placeholder.aba50ccc.png\" loading=\"lazy\" src=\"/assets/lazy-placeholder.aba50ccc.png\" width=\"1873\" height=\"597\" alt=\"学生列表，满屏都是“这个人特别懒，什么都没留下~”\"></picture></p>\n<p>俗话说得好<span class=\"mojikumi-line-end\">，</span>贱名好养活<span class=\"mojikumi-line-end\">，</span><s>取名叫 lazy 一定摆不起来<span class=\"mojikumi-line-start\">（</span></s></p>\n<p>其实本来还想过利用五个人的名字缩写之类的组一个队名<span class=\"mojikumi-line-end\">，</span>但人脑去想一个符合要求且有意思的队名太难了<span class=\"mojikumi-line-end\">，</span>输入法给出的候选词也没啥意思<span class=\"mojikumi-line-end\">，</span>所以我还尝试了用 ChatGPT 来生成<span class=\"mojikumi-line-end\">，</span>本来只是以为它会生成一些没意思的队名<span class=\"mojikumi-line-end\">，</span>没想到它生成出来的队名不仅没意思<span class=\"mojikumi-line-end\">，</span>而且拼音首字母甚至字数都完全不符合要求<span class=\"mojikumi-line-end\">，</span>无论怎么拷打都认错不改 🌚</p>\n<h3 id=\"分工-技术栈\" class=\"heading\"><a href=\"#分工-技术栈\" class=\"heading-anchor\" aria-label=\"章节： 分工 &#x26; 技术栈\" tabindex=\"-1\"></a><span>分工 &#x26; 技术栈</span></h3>\n<p>听说代码可能要求有队友审核<span class=\"mojikumi-line-end\">，</span>所以放弃了一个人写前端<span class=\"mojikumi-line-start\">（</span>可能来个人写测试<span class=\"mojikumi-line-end\">）</span>的想法<span class=\"mojikumi-line-start\">（</span></p>\n<p>几乎是理所当然地就决定了用 Vue<span class=\"mojikumi-line-end\">，</span>没有一点反对<span class=\"mojikumi-line-end\">，</span>感觉这个不需要学 React 的 React 小作业<s>没有九分也有十分的功劳</s><span class=\"mojikumi-line-end\">。</span></p>\n<p>给队友布置学习任务的时候感觉<span class=\"mojikumi-line-end\">，</span>我好像也不会多少东西<span class=\"mojikumi-line-end\">，</span>像是前端的测试以及 Nuxt 都还得学<span class=\"mojikumi-line-end\">，</span>JS/TS/Vue 说到底也就那么点东西<span class=\"mojikumi-line-end\">，</span>我的优势可能主要还是在经验方面<span class=\"mojikumi-line-end\">，</span>但其实也没写过什么复杂的前后端交互<span class=\"mojikumi-line-end\">，</span>大作业和博客 / Codle 这种东西还是差别挺大<span class=\"mojikumi-line-end\">，</span>写这个博客的时候很多时间也是花在一些 blog-specific 的不重要的细节上<span class=\"mojikumi-line-end\">。</span><s>说的我都有点慌了<span class=\"mojikumi-line-start\">（</span></s></p>\n<p><a href=\"https://archive.ph/6o0gs\">咕了一周</a>的 Nuxt 3.3 终于在大作业开始前发出来了<span class=\"mojikumi-line-end\">，</span>避免了刚开始写不久就要 bump minor version<span class=\"mojikumi-line-end\">。</span>yysy 我选的这些技术栈还是挺最新最热的<span class=\"mojikumi-line-end\">，</span><s>要是真的出锅了都不知道怎么向队友交代<span class=\"mojikumi-line-start\">（</span></s></p>\n<p>紧接着就看到 TypeScript 5.0 也发了<span class=\"mojikumi-line-end\">，</span>更新更热了<span class=\"mojikumi-line-end\">，</span>害怕<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"摇号\" class=\"heading\"><a href=\"#摇号\" class=\"heading-anchor\" aria-label=\"章节： 摇号\" tabindex=\"-1\"></a><span>摇号</span></h3>\n<blockquote>\n<p>3月14日24:00后进行项目志愿的摇号</p>\n</blockquote>\n<p>结果还真是<span class=\"mojikumi-line-start\">“</span>24:00<strong>后</strong><span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>手动 ddl 🌚</p>\n<p>本来晚上 11 点还看到我们队的一志愿的一志愿数量从 7 变成了 6<span class=\"mojikumi-line-end\">，</span>就是 2/3 的概率抽上<span class=\"mojikumi-line-end\">，</span>结果早上起来一看还是掉了<span class=\"mojikumi-line-end\">，</span>寄<span class=\"mojikumi-line-end\">。</span>这下和不是队友的室友一个选题了<span class=\"mojikumi-line-end\">。</span>好在例会还是 4-3<span class=\"mojikumi-line-end\">，</span>要是 4-4 的话整个下午就消失了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"第一次例会\" class=\"heading\"><a href=\"#第一次例会\" class=\"heading-anchor\" aria-label=\"章节： 第一次例会\" tabindex=\"-1\"></a><span>第一次例会</span></h3>\n<p>第一次例会竟然就要写分工以及完整的进度安排<span class=\"mojikumi-line-end\">，</span>虽然说是随便画饼也没事<span class=\"mojikumi-line-end\">，</span>但还是感觉不太敏捷<span class=\"mojikumi-line-start\">（</span></p>\n<p>顺便练习了一下 <a href=\"https://sli.dev/\">Slidev</a><span class=\"mojikumi-line-end\">，</span>在本机莫名 export 失败了<span class=\"mojikumi-line-end\">，</span>结果扔到 VPS 上就成功了<span class=\"mojikumi-line-end\">，</span>神秘<span class=\"mojikumi-line-end\">。</span>但在 VPS 上还得装上中文字体<span class=\"mojikumi-line-end\">，</span>并且配字体设置<span class=\"mojikumi-line-end\">。</span></p>\n<p>无奖竞猜<span class=\"mojikumi-line-end\">，</span>下面这些队名都是啥<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>下午的展示顺序是</p>\n<ol start=\"0\">\n<li>我</li>\n<li>蛋白质</li>\n<li>迷</li>\n<li>对对对</li>\n<li>懒</li>\n</ol>\n</blockquote>\n<a id=\"答案\" name=\"答案\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-info-circle-outline text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Info: </span><span data-v-a2ab257f>答案</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h5 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-info-circle-outline text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Info: </span><span data-v-a2ab257f><s>给你一次再想一想的机会</s></span></h5><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><ol>\n<li>青蛙补充蛋白质</li>\n<li>迷失分析LAS</li>\n<li>阿对对队</li>\n<li>这个队特别懒<span class=\"mojikumi-line-end\">，</span>什么都没留下~</li>\n</ol></div></details></aside></div></details></aside>\n<p>感觉这个第一次例会总体上传达的意思就是<span class=\"mojikumi-line-end\">，</span>看起来难的功能要想简单点<span class=\"mojikumi-line-end\">，</span>差不多得了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"需求细化\" class=\"heading\"><a href=\"#需求细化\" class=\"heading-anchor\" aria-label=\"章节： 需求细化\" tabindex=\"-1\"></a><span>需求细化</span></h3>\n<p>第一次例会上是我提的问题最多<span class=\"mojikumi-line-end\">，</span>之后也基本上只有我在群里问需求细节问题<span class=\"mojikumi-line-end\">。</span>回答大部分都是两种之一<span class=\"mojikumi-line-end\">，</span>要么是<span class=\"mojikumi-line-start\">“</span>这样也可以<span class=\"mojikumi-line-end\">，</span>但那样也可以<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>要么是<span class=\"mojikumi-line-start\">“</span>这样更好<span class=\"mojikumi-line-end\">，</span>但没分<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>程设训练的时候也是这样<span class=\"mojikumi-line-end\">，</span>似乎是我的问题<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>正常的想法是不是应该是只要不说清楚就可以混过去<span class=\"mojikumi-line-end\">，</span>而不是害怕没搞清楚而写错<span class=\"mojikumi-line-start\">（</span></p>",
            "url": "https://ouuan.moe/post/2023/03/thuse",
            "title": "当你的技术栈与软工交集为空（x",
            "summary": "\n\n\n<p>很好<span class=\"mojikumi-line-end\">，</span>你已经学会了 Vue<span class=\"mojikumi-line-end\">、</span>Rust<span class=\"mojikumi-line-end\">、</span>Actix<span class=\"mojikumi-line-end\">、</span>GitHub Actions<span class=\"mojikumi-line-end\">、</span>pnpm<span class=\"mojikumi-line-end\">、</span>Vitest<span class=\"mojikumi-line-end\">、</span>Caddy</p>\n<p>现在你可以使用 React<span class=\"mojikumi-line-end\">、</span>Python<span class=\"mojikumi-line-end\">、</span>Django<span class=\"mojikumi-line-end\">、</span>GitLab CI<span class=\"mojikumi-line-end\">、</span>yarn<span class=\"mojikumi-line-end\">、</span>Jest<span class=\"mojikumi-line-end\">、</span>Nginx 来完成软工作业了<span class=\"mojikumi-line-start\">（</span></p>\n",
            "date_modified": "2023-03-04T03:42:29.000Z",
            "tags": [
                "Web",
                "学习记录"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/03/digital-logic",
            "content_html": "\n\n<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class=\"mojikumi-line-end\">，</span>但是数字逻辑电路是数电<span class=\"mojikumi-line-end\">，</span>数字逻辑设计是数设<span class=\"mojikumi-line-end\">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class=\"mojikumi-line-end\">，</span>但叫它数电实验或者数设实验好像都不太对<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课的时候也是<span class=\"mojikumi-line-end\">，</span>老师一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你是数设的同学<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你没报上数设但想把数电学成数设<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>这课也太乱了<span class=\"mojikumi-line-start\">（</span></p>\n<p>我写游记都得把两个课放一起写<span class=\"mojikumi-line-end\">，</span>课就不能合成一个吗<span class=\"mojikumi-line-start\">（</span></p>\n\n<p>写了一会儿后发现<span class=\"mojikumi-line-end\">，</span>还是得两个课分开写<span class=\"mojikumi-line-end\">，</span>dbqwcl<span class=\"mojikumi-line-start\">（</span></p>\n<p>这篇就是个游记<span class=\"mojikumi-line-end\">，</span>具体学的内容如果我有时间的话会放在 <a href=\"/tag/ddpp\">DDPP 学习笔记</a><span class=\"mojikumi-line-end\">，</span>没时间<span class=\"mojikumi-line-start\">（</span>没时间写笔记 or 没时间学 DDPP 只能跟着上课<span class=\"mojikumi-line-end\">）</span>的话大概就不会放上来了<span class=\"mojikumi-line-start\">（</span></p>\n<p><s>某些人学都学不完了<span class=\"mojikumi-line-end\">，</span>还有空写游记？<span class=\"mojikumi-line-start\">（</span></s></p>\n<h2 id=\"数字逻辑实验\" class=\"heading\"><a href=\"#数字逻辑实验\" class=\"heading-anchor\" aria-label=\"章节： 数字逻辑实验\" tabindex=\"-1\"></a><span>数字逻辑实验</span></h2>\n<h3 id=\"sv-班的开设\" class=\"heading\"><a href=\"#sv-班的开设\" class=\"heading-anchor\" aria-label=\"章节： sv 班的开设\" tabindex=\"-1\"></a><span>sv 班的开设</span></h3>\n<p>DDPP5 讲的是 Verilog<span class=\"mojikumi-line-end\">，</span>以后造机应该也是用 Verilog<span class=\"mojikumi-line-end\">，</span>但数字逻辑实验似乎是 VHDL<span class=\"mojikumi-line-end\">。</span>就像软工强迫我把技术栈全换一遍一样<span class=\"mojikumi-line-end\">，</span>多学一门语言也可以称作<span class=\"mojikumi-line-start\">“</span>技多不压身<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>而且说到底我也还没学 Verilog<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>但终究是有些难受的<span class=\"mojikumi-line-end\">。</span>所以看到第一节课的课件上说可以选择报 SystemVerilog 小班我还是很开心的<span class=\"mojikumi-line-end\">，</span>顿时感觉这个课科学了许多<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>优势<span class=\"mojikumi-line-end\">：</span>对后续课程有帮助</p>\n<p>劣势<span class=\"mojikumi-line-end\">：</span>花时间<span class=\"mojikumi-line-end\">，</span>费精力<span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span></p>\n</blockquote>\n<p>课件上是这么写的<span class=\"mojikumi-line-end\">，</span>但 Verilog 本身应该不会比 VHDL 费精力<span class=\"mojikumi-line-end\">，</span>课程内容的区别是多了个内存实验<span class=\"mojikumi-line-end\">，</span>我猜这个 warning 的主要意义在于<span class=\"mojikumi-line-end\">，</span>这是个新开的课<span class=\"mojikumi-line-end\">，</span>可能各种出锅<span class=\"mojikumi-line-end\">，</span>要让大家做好心理准备<span class=\"mojikumi-line-start\">（</span>同样是新开的 <a href=\"/post/2022/08/learn-rust\">Rust</a> 就非常科学<span class=\"mojikumi-line-start\">（</span><s>起码完全自学人感觉很科学</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>我似乎反而更希望课是新开的<span class=\"mojikumi-line-end\">，</span>而且这个 sv 班似乎也是 tuna 群友当助教<span class=\"mojikumi-line-start\">（</span></p>\n<p>但这个 sv 班的开设实在是有些坎坷<span class=\"mojikumi-line-end\">，</span>说起来也有些冗长<span class=\"mojikumi-line-end\">，</span>就折起来了<span class=\"mojikumi-line-end\">。</span></p>\n<a id=\"sv-班坎坷的开设过程\" name=\"sv-班坎坷的开设过程\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>sv 班坎坷的开设过程</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>简单来说<span class=\"mojikumi-line-end\">，</span>数字逻辑实验有 5-1<span class=\"mojikumi-line-end\">、</span>5-3<span class=\"mojikumi-line-end\">、</span>5-4 三个班<span class=\"mojikumi-line-end\">，</span>其中 5-1<span class=\"mojikumi-line-end\">、</span>5-3 有开设 sv 班的机会<span class=\"mojikumi-line-end\">，</span>但要求是 5-1 报名人数在 25~28 之间<span class=\"mojikumi-line-end\">，</span>5-3 报名人数在 27~28 之间<span class=\"mojikumi-line-end\">，</span>才分别能开班<span class=\"mojikumi-line-end\">。</span></p><p>是不是感觉非常神秘<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>这确实很神秘<span class=\"mojikumi-line-end\">，</span>但它背后竟然真的能有确切的原因<span class=\"mojikumi-line-start\">（</span></p><ul>\n<li>数字逻辑实验的课容量是 85<span class=\"mojikumi-line-end\">，</span>5-1<span class=\"mojikumi-line-end\">、</span>5-3<span class=\"mojikumi-line-end\">、</span>5-4 分别有 85<span class=\"mojikumi-line-end\">、</span>87<span class=\"mojikumi-line-start\">（</span>草<span class=\"mojikumi-line-end\">，</span>听说可能是因为重修？<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span>69 人<span class=\"mojikumi-line-start\">（</span>印象中当时的数据<span class=\"mojikumi-line-end\">，</span>现在有点小变化<span class=\"mojikumi-line-end\">）</span></li>\n<li>因为设备<span class=\"mojikumi-line-end\">、</span>实验室等资源限制<span class=\"mojikumi-line-end\">，</span>一个普通班只能容纳 30 人<span class=\"mojikumi-line-end\">，</span>一个 sv 班只能容纳 28 人<span class=\"mojikumi-line-end\">，</span>一个时间段只能有三个班</li>\n</ul><p>虽然说在这些限制下似乎也能在 5-4 开一个班<span class=\"mojikumi-line-start\">（</span>9~28 人即可<span class=\"mojikumi-line-end\">，</span>满足人数限制且不影响该时间段分班数量<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>但不知道是不是懒得再开一个班还是什么原因<span class=\"mojikumi-line-end\">，</span>5-4 想报 sv 班的同学只能遗憾离场<span class=\"mojikumi-line-start\">（</span></p><p>同学们当然觉得这样搞很毒瘤<span class=\"mojikumi-line-end\">，</span>但老师似乎也知道这样很毒瘤<span class=\"mojikumi-line-end\">，</span>说是之前申请过搞成二级选课<span class=\"mojikumi-line-end\">，</span>但没通过<span class=\"mojikumi-line-end\">。</span></p><p>一开始我担心的是很快报满报不上<span class=\"mojikumi-line-end\">，</span>后来发现完全担心错了<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>真正的问题在于人数不够<span class=\"mojikumi-line-end\">，</span>而且这个是先报先得<span class=\"mojikumi-line-end\">，</span>我是通知发出来 7min 就报了<span class=\"mojikumi-line-end\">，</span><s>虽然在选课系统里 7s 可能就慢了<span class=\"mojikumi-line-end\">，</span>但是</s> 最后看名单我是第一个报的<span class=\"mojikumi-line-start\">（</span></p><p>前两天大家都不吭声<span class=\"mojikumi-line-end\">，</span>到了报名的 ddl 当天下午我才在群里问了下人数<span class=\"mojikumi-line-end\">，</span>当时是 5-1 22 人 5-3 21 人<span class=\"mojikumi-line-end\">。</span>于是我开始在班群推销<span class=\"mojikumi-line-end\">，</span>也看到有人在课程群推销<span class=\"mojikumi-line-end\">，</span>反正主要就是以后总得学 Verilog<span class=\"mojikumi-line-end\">，</span>报 sv 班可以少学一门语言<span class=\"mojikumi-line-start\">（</span></p><p>晚上 6 点 5-1 就开班了<span class=\"mojikumi-line-end\">，</span>但 5-3 只有 24 个人报<span class=\"mojikumi-line-end\">。</span>到了 23:44 还是 24<span class=\"mojikumi-line-start\">（</span>实际上是 25<span class=\"mojikumi-line-end\">，</span>我室友报了结果因未知原因被漏掉了<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>就很崩溃<span class=\"mojikumi-line-end\">。</span></p><p>当时我想了两个备选方案<span class=\"mojikumi-line-end\">：</span></p><ul>\n<li>改成 5-4 开 sv 班<span class=\"mojikumi-line-end\">，</span>但我提出后被否了<span class=\"mojikumi-line-end\">，</span>说是不方便再调整<span class=\"mojikumi-line-end\">。</span></li>\n<li>去 5-1 的 sv 班<span class=\"mojikumi-line-end\">，</span>结果得知 5-1 已经报了 31 人<span class=\"mojikumi-line-end\">。</span><s>早知道不推销了</s></li>\n</ul><p>好在第二天又说报名 ddl 延长半天<span class=\"mojikumi-line-end\">，</span>然后中午的时候竟然就报满了<span class=\"mojikumi-line-end\">。</span>5-3 的 28 人有 10 个是信计的<span class=\"mojikumi-line-end\">，</span><s>简单估计一下<span class=\"mojikumi-line-end\">，</span>信计有 28/30 想报 sv</s><span class=\"mojikumi-line-end\">，</span>实际上 5-1 的 sv 班只有两个信计<span class=\"mojikumi-line-end\">，</span>只不过群里 5-4 求换课的还有好几个信计<span class=\"mojikumi-line-end\">，</span>可惜都没换上<span class=\"mojikumi-line-end\">，</span><s>再简单估计一下<span class=\"mojikumi-line-end\">，</span>sv 班 12/56 是信计<span class=\"mojikumi-line-end\">，</span>信计应该一共有 52 人</s><span class=\"mojikumi-line-start\">（</span></p></div></details></aside>\n<h3 id=\"sv-班课程文档\" class=\"heading\"><a href=\"#sv-班课程文档\" class=\"heading-anchor\" aria-label=\"章节： sv 班课程文档\" tabindex=\"-1\"></a><span>sv 班课程文档</span></h3>\n<h4 id=\"本课程只有一学分！！\" class=\"heading\"><a href=\"#本课程只有一学分！！\" class=\"heading-anchor\" aria-label=\"章节： 本课程只有一学分！！\" tabindex=\"-1\"></a><span>本课程只有一学分！！</span></h4>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/1-credit.4c4db750.webp\"><img srcset=\"/assets/1-credit.3072c8e4.png\" loading=\"lazy\" src=\"/assets/1-credit.3072c8e4.png\" width=\"219\" height=\"88\" alt=\"本课程只有一学分！！\"></picture></p>\n<p>开头第一句<span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"按钮详细功能\" class=\"heading\"><a href=\"#按钮详细功能\" class=\"heading-anchor\" aria-label=\"章节： 按钮详细功能\" tabindex=\"-1\"></a><span>按钮详细功能</span></h4>\n<p>一般来说 admonition 经常是比较长的会折叠起来防止刷屏<span class=\"mojikumi-line-end\">，</span>但在示波器的<span class=\"mojikumi-line-start\">“</span>按钮详细功能<span class=\"mojikumi-line-end\">”</span>一节<span class=\"mojikumi-line-end\">，</span>被折叠的都是最短的那些<span class=\"mojikumi-line-end\">，</span>比如<span class=\"mojikumi-line-end\">：</span></p>\n<blockquote>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h5 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>电源开关</span></h5><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>按一次打开电源<span class=\"mojikumi-line-end\">，</span>再按一次关闭电源<span class=\"mojikumi-line-end\">。</span></p></div></details></aside>\n</blockquote>\n<p>非常地理所当然<span class=\"mojikumi-line-end\">，</span>但感觉这个事实莫名地很有意思<span class=\"mojikumi-line-start\">（</span><s>而且把电源开关写出来再折起来就莫名喜感<span class=\"mojikumi-line-start\">（</span>按一次打开 <code>&#x3C;details></code><span class=\"mojikumi-line-end\">，</span>再按一次关闭 <code>&#x3C;details></code></s></p>\n<h4 id=\"git-conflict\" class=\"heading\"><a href=\"#git-conflict\" class=\"heading-anchor\" aria-label=\"章节： git conflict\" tabindex=\"-1\"></a><span>git conflict</span></h4>\n<p>虽说是敏捷开发课程文档<span class=\"mojikumi-line-end\">，</span>但这个 git conflict 也太<span class=\"mojikumi-line-start\">（</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/git-conflict-in-doc.5d6c1b24.webp\"><img srcset=\"/assets/git-conflict-in-doc.a7369472.png\" loading=\"lazy\" src=\"/assets/git-conflict-in-doc.a7369472.png\" width=\"680\" height=\"265\" alt=\"课程文档中出现了 git conflict 标记\"></picture></p>\n<h3 id=\"把人忽悠进来之后\" class=\"heading\"><a href=\"#把人忽悠进来之后\" class=\"heading-anchor\" aria-label=\"章节： 把人忽悠进来之后\" tabindex=\"-1\"></a><span><s>把人忽悠进来之后</s></span></h3>\n<p>下面是两个课件的 diff<span class=\"mojikumi-line-end\">，</span>虽然这个优势的意思实际上没变<span class=\"mojikumi-line-end\">，</span>从 sv 班苛刻的开设条件基本上就能猜到没法随时退出<span class=\"mojikumi-line-end\">，</span>但是<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<ul>\n<li>SystemVerilog</li>\n<li>为后续课程实验提供支撑\n<ul>\n<li>增加内存实验<del><span class=\"mojikumi-line-end\">，</span>其他实验不变</del></li>\n<li>课程成绩不与普通课堂区分<span class=\"mojikumi-line-end\">，</span>评分标准<span class=\"mojikumi-line-end\">，</span>比例与普通课堂一致</li>\n</ul>\n</li>\n<li>优势<span class=\"mojikumi-line-end\">：</span><del>对后续课程有帮助</del><ins>当前学期无</ins></li>\n<li>劣势<span class=\"mojikumi-line-end\">：</span>花时间<span class=\"mojikumi-line-end\">，</span>费精力<span class=\"mojikumi-line-end\">。</span><del><span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span></del></li>\n<li>可随时退出<ins>？</ins></li>\n</ul>\n</blockquote>\n<h3 id=\"示波器实验\" class=\"heading\"><a href=\"#示波器实验\" class=\"heading-anchor\" aria-label=\"章节： 示波器实验\" tabindex=\"-1\"></a><span>示波器实验</span></h3>\n<p>上学期物理实验用过示波器<span class=\"mojikumi-line-end\">，</span>感到了这个课除了 <a href=\"/post/2022/10/basic-tex-and-r-for-physics-lab\">学习 TeX 和 R</a> 之外竟然还稍微有点用<span class=\"mojikumi-line-end\">，</span>虽然也只有那么一点点用<span class=\"mojikumi-line-end\">，</span>不知道和电子学基础相比哪个的一点点大一些<span class=\"mojikumi-line-start\">（</span></p>\n<p>整个实验中卡壳最久的一步是<span class=\"mojikumi-line-end\">，</span>从一坨绑得十分整齐的导线中抽出一根<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"与非门电路测试实验\" class=\"heading\"><a href=\"#与非门电路测试实验\" class=\"heading-anchor\" aria-label=\"章节： 与非门电路测试实验\" tabindex=\"-1\"></a><span>与非门电路测试实验</span></h3>\n<p>预习的时候对着文档里的电路图和芯片引脚图把怎么接线<span class=\"mojikumi-line-end\">、</span>怎么接地写清楚<span class=\"mojikumi-line-end\">，</span>就很容易了<span class=\"mojikumi-line-end\">。</span></p>\n<p>本来想半小时速通<span class=\"mojikumi-line-end\">，</span>失败了<span class=\"mojikumi-line-end\">，</span>感觉最大的问题还是抽不出导线<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"数设\" class=\"heading\"><a href=\"#数设\" class=\"heading-anchor\" aria-label=\"章节： 数设\" tabindex=\"-1\"></a><span>数设</span></h2>\n<h3 id=\"数设第二次课\" class=\"heading\"><a href=\"#数设第二次课\" class=\"heading-anchor\" aria-label=\"章节： 数设第二次课\" tabindex=\"-1\"></a><span>数设第二次课</span></h3>\n<p>这节课讲了一堆数电背后的模电原理<span class=\"mojikumi-line-end\">，</span>而且还是 TTL 电路<span class=\"mojikumi-line-end\">，</span>不是 DDPP5 放在第 14 章的 CMOS<span class=\"mojikumi-line-end\">。</span>感觉完全没听懂<span class=\"mojikumi-line-end\">，</span>只不过说到底这一节是物理课不是计算机课<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>后面又说讲的大部分东西不考<span class=\"mojikumi-line-end\">，</span>讲这些是为了补充一些数字电路发展的历史<span class=\"mojikumi-line-end\">，</span>弥补思维上的跳跃<span class=\"mojikumi-line-end\">。</span></p>\n<p>我是完全没听懂<span class=\"mojikumi-line-end\">，</span>其他同学大概也是没完全听懂<span class=\"mojikumi-line-end\">。</span>老师吐槽说<span class=\"mojikumi-line-end\">，</span>现在我们培养方案里电路知识几乎为零<span class=\"mojikumi-line-end\">，</span>数设要从头开始讲<span class=\"mojikumi-line-end\">，</span>不像他们那时候<span class=\"mojikumi-line-end\">，</span>本科上五年<span class=\"mojikumi-line-end\">，</span>什么物理都学了<span class=\"mojikumi-line-end\">。</span>本来我还在想<span class=\"mojikumi-line-end\">，</span>为什么我们只能上四年甚至三年<span class=\"mojikumi-line-end\">，</span>要学这么多东西<span class=\"mojikumi-line-end\">，</span>结果老师说他五年修了双学位 600+ 学分<span class=\"mojikumi-line-end\">，</span>而且学分是和现在一样的学时<span class=\"mojikumi-line-end\">，</span>震撼全班<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"数设与数电\" class=\"heading\"><a href=\"#数设与数电\" class=\"heading-anchor\" aria-label=\"章节： 数设与数电\" tabindex=\"-1\"></a><span>数设与数电</span></h3>\n<p>在软工课上被数电同学问了作业<span class=\"mojikumi-line-end\">，</span>先是被问了没学清楚的<span class=\"mojikumi-line-end\">，</span>后面又被问了数设没讲的内容<span class=\"mojikumi-line-end\">。</span>没想到这么早就体验到了被数电同学问懵<span class=\"mojikumi-line-start\">（</span></p>",
            "url": "https://ouuan.moe/post/2023/03/digital-logic",
            "title": "数字逻辑实验到底是数电实验还是数设实验（x",
            "summary": "\n\n<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class=\"mojikumi-line-end\">，</span>但是数字逻辑电路是数电<span class=\"mojikumi-line-end\">，</span>数字逻辑设计是数设<span class=\"mojikumi-line-end\">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class=\"mojikumi-line-end\">，</span>但叫它数电实验或者数设实验好像都不太对<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课的时候也是<span class=\"mojikumi-line-end\">，</span>老师一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你是数设的同学<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你没报上数设但想把数电学成数设<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>这课也太乱了<span class=\"mojikumi-line-start\">（</span></p>\n<p>我写游记都得把两个课放一起写<span class=\"mojikumi-line-end\">，</span>课就不能合成一个吗<span class=\"mojikumi-line-start\">（</span></p>\n",
            "date_modified": "2023-03-02T03:46:54.000Z",
            "tags": [
                "digital-design",
                "学习记录"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2022/08/learn-rust",
            "content_html": "\n\n<p>早就想学 Rust 了<span class=\"mojikumi-line-end\">，</span>但一直咕着<span class=\"mojikumi-line-end\">。</span>这次小学期的程设训练开了 Rust 课堂<span class=\"mojikumi-line-end\">，</span>就毫不犹豫地选了<span class=\"mojikumi-line-end\">，</span>也以此为契机学了 Rust<span class=\"mojikumi-line-end\">。</span></p>\n<p>这篇就是简单记录一下大体上的学习过程<span class=\"mojikumi-line-end\">，</span>如果有什么心得体会<span class=\"mojikumi-line-end\">、</span>经验分享之类应该会开新的文章<span class=\"mojikumi-line-end\">。</span></p>\n<p>顺便也算是程设训练的游记了（<span class=\"mojikumi\">“</span>游记<span class=\"mojikumi-line-end\">”</span>这个词来源于 OI 时期的习惯<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n\n<h2 id=\"初学------the-rust-programming-language\" class=\"heading\"><a href=\"#初学------the-rust-programming-language\" class=\"heading-anchor\" aria-label=\"章节： 初学 —— The Rust Programming Language\" tabindex=\"-1\"></a><span>初学 —— The Rust Programming Language</span></h2>\n<p>不同于 Python<span class=\"mojikumi-line-end\">、</span>JavaScript<span class=\"mojikumi-line-end\">，</span>这次学 Rust 更像是当初学 C++<span class=\"mojikumi-line-end\">，</span>不是先魔改代码<span class=\"mojikumi-line-end\">、</span>用啥搜啥<span class=\"mojikumi-line-end\">、</span>StackOverflow<span class=\"mojikumi-line-end\">，</span>而是在还没怎么接触过时就直接看书<span class=\"mojikumi-line-end\">。</span></p>\n<p>虽然没有细看中文翻译的质量如何<span class=\"mojikumi-line-end\">，</span>但至少术语是不好翻译的<span class=\"mojikumi-line-end\">，</span>就直接看了英文版的 <a href=\"https://doc.rust-lang.org/book/\">The Rust Programming Language</a><span class=\"mojikumi-line-end\">。</span></p>\n<p>这本书看下来给我的感觉是<span class=\"mojikumi-line-end\">，</span>很多地方没有按知识点依赖关系的拓扑排序来讲<span class=\"mojikumi-line-end\">，</span>而似乎是以某种由浅入深的顺序来的<span class=\"mojikumi-line-end\">，</span>很多后面才学到的概念在前文就出现<span class=\"mojikumi-line-end\">，</span>而前面学的概念的完全不需要后面知识的扩展又在后面才补充<span class=\"mojikumi-line-end\">，</span>还有一些零碎的知识是在 project chapter 讲的<span class=\"mojikumi-line-end\">。</span></p>\n<p>反正<span class=\"mojikumi-line-end\">，</span>每天看两三章<span class=\"mojikumi-line-end\">，</span><s>还能有不少时间摸鱼<span class=\"mojikumi-line-end\">，</span>摸个</s> 一两周就看得差不多了<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"初步练习------洛谷\" class=\"heading\"><a href=\"#初步练习------洛谷\" class=\"heading-anchor\" aria-label=\"章节： 初步练习 —— 洛谷\" tabindex=\"-1\"></a><span>初步练习 —— 洛谷</span></h2>\n<p>看书的同时在 <a href=\"https://www.luogu.com.cn/\">洛谷</a> 上随便挑了点入门题和板子题写<span class=\"mojikumi-line-end\">。</span>只不过一开始没学 io 之类的<span class=\"mojikumi-line-end\">，</span>会再多语法也做不动题<span class=\"mojikumi-line-end\">，</span><s>但幸好有 GitHub Copilot</s><span class=\"mojikumi-line-end\">。</span></p>\n<p>在这放个读入的例子<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h3><ile-root id=\"ile-3\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-3--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">6 0</span></span>\n<span><span style=\"color: #d6deeb\">1 1 4 5 1 4</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">6 0</span></span>\n<span><span style=\"color: #403f53\">1 1 4 5 1 4</span></span></samp></pre></div></section>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"rust 代码块\" data-v-ad49d235>rust</h3><ile-root id=\"ile-4\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-4--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">fn</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #D6DEEB\">() {</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">stdin</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> std</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #D6DEEB\">io</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #82AAFF\">stdin</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">mut</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> String</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #82AAFF\">new</span><span style=\"color: #D6DEEB\">();</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">stdin</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">read_line</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #7FDBCA\">&amp;</span><span style=\"color: #C792EA\">mut</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">)</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">mut</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">parts</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">split_whitespace</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">n</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">parts</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">parse</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #D6DEEB\">&lt;u32&gt;()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">assert_eq!</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">n</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">6</span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">m</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">parts</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">next</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">parse</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #D6DEEB\">&lt;u32&gt;()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">assert_eq!</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">m</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">);</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">clear</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">stdin</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">read_line</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #7FDBCA\">&amp;</span><span style=\"color: #C792EA\">mut</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">)</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">let</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">a</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">split_whitespace</span><span style=\"color: #D6DEEB\">()</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C792EA\">|</span><span style=\"color: #C5E478\">x</span><span style=\"color: #C792EA\">|</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">x</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">parse</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #D6DEEB\">&lt;i32&gt;()</span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">unwrap</span><span style=\"color: #D6DEEB\">())</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #7FDBCA\">.</span><span style=\"color: #82AAFF\">collect</span><span style=\"color: #7FDBCA\">::</span><span style=\"color: #D6DEEB\">&lt;Vec&lt;</span><span style=\"color: #C5E478\">_</span><span style=\"color: #D6DEEB\">&gt;&gt;();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">assert_eq!</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">a</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #82AAFF\">vec!</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">5</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #D6DEEB\">]);</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">fn</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">main</span><span style=\"color: #403F53\">() {</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">stdin</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> std</span><span style=\"color: #0C969B\">::</span><span style=\"color: #403F53\">io</span><span style=\"color: #0C969B\">::</span><span style=\"color: #4876D6\">stdin</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">mut</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> String</span><span style=\"color: #0C969B\">::</span><span style=\"color: #4876D6\">new</span><span style=\"color: #403F53\">();</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">stdin</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">read_line</span><span style=\"color: #403F53\">(</span><span style=\"color: #0C969B\">&amp;</span><span style=\"color: #994CC3\">mut</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">)</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">mut</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">parts</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">split_whitespace</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">n</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">parts</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">next</span><span style=\"color: #403F53\">()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">parse</span><span style=\"color: #0C969B\">::</span><span style=\"color: #403F53\">&lt;u32&gt;()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">assert_eq!</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">n</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">6</span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">m</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">parts</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">next</span><span style=\"color: #403F53\">()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">parse</span><span style=\"color: #0C969B\">::</span><span style=\"color: #403F53\">&lt;u32&gt;()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">assert_eq!</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">m</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">);</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">clear</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">stdin</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">read_line</span><span style=\"color: #403F53\">(</span><span style=\"color: #0C969B\">&amp;</span><span style=\"color: #994CC3\">mut</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">)</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">let</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">a</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">split_whitespace</span><span style=\"color: #403F53\">()</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">map</span><span style=\"color: #403F53\">(</span><span style=\"color: #994CC3\">|</span><span style=\"color: #4876D6\">x</span><span style=\"color: #994CC3\">|</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">x</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">parse</span><span style=\"color: #0C969B\">::</span><span style=\"color: #403F53\">&lt;i32&gt;()</span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">unwrap</span><span style=\"color: #403F53\">())</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #0C969B\">.</span><span style=\"color: #4876D6\">collect</span><span style=\"color: #0C969B\">::</span><span style=\"color: #403F53\">&lt;Vec&lt;</span><span style=\"color: #4876D6\">_</span><span style=\"color: #403F53\">&gt;&gt;();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">assert_eq!</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">a</span><span style=\"color: #403F53\">, </span><span style=\"color: #4876D6\">vec!</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">5</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4</span><span style=\"color: #403F53\">]);</span></span>\n<span><span style=\"color: #403F53\">}</span></span></code></pre></div></section>\n<h2 id=\"复习------a-half-hour-to-learn-rust\" class=\"heading\"><a href=\"#复习------a-half-hour-to-learn-rust\" class=\"heading-anchor\" aria-label=\"章节： 复习 —— A half-hour to learn Rust\" tabindex=\"-1\"></a><span>复习 —— A half-hour to learn Rust</span></h2>\n<p>之前在 Hacker News 上看到了 <a href=\"https://fasterthanli.me/articles/a-half-hour-to-learn-rust\">A half-hour to learn Rust</a> 这篇文章<span class=\"mojikumi-line-end\">。</span>如果真的是看这个东西来学 Rust<span class=\"mojikumi-line-end\">，</span>不说能不能学会<span class=\"mojikumi-line-end\">，</span>肯定是学不扎实的<span class=\"mojikumi-line-end\">。</span>但是<span class=\"mojikumi-line-end\">，</span>看完书之后很多语法也忘了<span class=\"mojikumi-line-end\">，</span>看这个用来复习还是非常不错的<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>另外<span class=\"mojikumi-line-end\">，</span>我感觉这个的顺序貌似比书更有条理一些<span class=\"mojikumi-line-end\">，</span>虽然初学不一定友好 🤔<span class=\"mojikumi-line-end\">）</span></p>\n<h2 id=\"深入了解------the-rust-standard-library\" class=\"heading\"><a href=\"#深入了解------the-rust-standard-library\" class=\"heading-anchor\" aria-label=\"章节： 深入了解 —— The Rust Standard Library\" tabindex=\"-1\"></a><span>深入了解 —— The Rust Standard Library</span></h2>\n<p>其实看书的时候就感觉到了<span class=\"mojikumi-line-end\">，</span>很多时候不懂一段代码不是不懂语法<span class=\"mojikumi-line-end\">，</span>而是不懂 <a href=\"https://doc.rust-lang.org/stable/std/\">标准库</a> 的实现<span class=\"mojikumi-line-end\">，</span>而把 API 理解成了没学过的语法<span class=\"mojikumi-line-end\">。</span>了解标准库<span class=\"mojikumi-line-end\">，</span>不仅是提升编码和运行的效率<span class=\"mojikumi-line-end\">，</span>也是能够看懂很多基础代码的关键<span class=\"mojikumi-line-end\">。</span></p>\n<p>看文档的时候发现<span class=\"mojikumi-line-end\">，</span>不仅是学到了很多有用的 methods<span class=\"mojikumi-line-end\">，</span>也学到了很多其它东西<span class=\"mojikumi-line-end\">。</span>比如说<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>一般来说都可以用 <a href=\"https://doc.rust-lang.org/stable/std/cmp/fn.max.html\"><code>std<wbr>::<wbr>cmp<wbr>::<wbr>max</code></a> 来取 max<span class=\"mojikumi-line-end\">，</span>但 <a href=\"https://doc.rust-lang.org/stable/std/primitive.f32.html#method.max\"><code>f32</code> 专门有一个 <code>pub fn max(self, other: f32) -> f32</code></a><span class=\"mojikumi-line-end\">，</span>这是因为浮点数有 NaN 这个特殊情况导致 <code>f32</code> 没有 impl <a href=\"https://doc.rust-lang.org/stable/std/cmp/trait.Ord.html\"><code>Ord</code></a><span class=\"mojikumi-line-end\">，</span>而 <code>std<wbr>::<wbr>cmp<wbr>::<wbr>max</code> 需要 <code>Ord</code></li>\n<li>书里貌似没讲到的 <a href=\"https://doc.rust-lang.org/stable/std/keyword.ref.html\">keyword <code>ref</code></a><span class=\"mojikumi-line-start\">（</span>以及在 pattern matching 中和 <code>&#x26;</code> 的区别<span class=\"mojikumi-line-end\">）</span></li>\n<li>引用之间进行比较时会自动转成指向的值<span class=\"mojikumi-line-end\">，</span>即实际进行比较的是指向的值<span class=\"mojikumi-line-start\">（</span>可以通过 <a href=\"https://doc.rust-lang.org/stable/std/ptr/fn.eq.html\"><code>std<wbr>::<wbr>ptr<wbr>::<wbr>eq</code></a> 来比较地址<span class=\"mojikumi-line-end\">）</span></li>\n<li>从标准库的 API 设计能领会到很多 trait 和 generic 的用法<span class=\"mojikumi-line-end\">，</span>体会到它们组合在一起的强大</li>\n<li><a href=\"https://doc.rust-lang.org/std/iter/index.html#for-loops-and-intoiterator\"><code>Iterator</code> 自动有 <code>IntoIterator</code></a><span class=\"mojikumi-line-end\">，</span>所以用 <code>IntoIterator</code> 代替 <code>Iterator</code> 作为 trait bound 可以让函数更灵活</li>\n<li>……</li>\n</ul>\n<p>简单看一看就能知道 the book 里涉及到的真的只是冰山一角<span class=\"mojikumi-line-end\">，</span>学 Rust 标准库的意义会比学 C++ 的 STL 大得多<span class=\"mojikumi-line-start\">（</span>个人感觉<span class=\"mojikumi\">）</span><wbr><span class=\"mojikumi-line-start\">（</span>也可能是我 C++ 水平太低 / 没认真学 STL 😢<span class=\"mojikumi\">）</span><wbr><span class=\"mojikumi-line-start\">（</span>或者 Primer Plus 讲的全一些<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"上课\" class=\"heading\"><a href=\"#上课\" class=\"heading-anchor\" aria-label=\"章节： 上课\" tabindex=\"-1\"></a><span>上课</span></h2>\n<h3 id=\"class-1\" class=\"heading\"><a href=\"#class-1\" class=\"heading-anchor\" aria-label=\"章节： Class 1\" tabindex=\"-1\"></a><span>Class 1</span></h3>\n<p>因为自学过了<span class=\"mojikumi-line-end\">，</span>所以上课就基本上是把老师的声音当作 bgm 偶尔听一下<span class=\"mojikumi-line-end\">，</span>然后继续看标准库文档<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课的时候老师提到 Rust 编译器可以提示如何修改<span class=\"mojikumi-line-end\">，</span>于是我顺势在课程群里发了个 <a href=\"https://twitter.com/st1page/status/1477168761744805891\">rust 程序员现状</a> 的截图<span class=\"mojikumi-line-start\">（</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/rust-programmers-be-like.b8596e6d.webp\"><img srcset=\"/assets/rust-programmers-be-like.a720f87c.jpeg\" loading=\"lazy\" src=\"/assets/rust-programmers-be-like.a720f87c.jpeg\" width=\"706\" height=\"900\" alt=\"rust程序员现状\"></picture></p>\n<p>课后把 OJ 上的作业速通后发现榜不是公开的 😢</p>\n<p>后来还发现自己一道题写了个 <code>collect</code> 得到的 <code>Vec</code> 只用在一个 <code>for</code> 里<span class=\"mojikumi-line-start\">（</span>就是说可以直接把迭代器用在 <code>for</code> 不用先 <code>collect</code><span class=\"mojikumi-line-end\">）</span>😵 想改过来<span class=\"mojikumi-line-end\">，</span>但虽然没有公开榜<span class=\"mojikumi-line-end\">，</span>还是不想承受可能的罚时<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"class-2\" class=\"heading\"><a href=\"#class-2\" class=\"heading-anchor\" aria-label=\"章节： Class 2\" tabindex=\"-1\"></a><span>Class 2</span></h3>\n<p>第二节课前后共一天多的时间<span class=\"mojikumi-line-end\">，</span>写了 16h 左右<span class=\"mojikumi-line-end\">，</span>把 Wordle 大作业的基础功能写完了<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span><s>本来以为 Wordle 挺好写的<span class=\"mojikumi-line-end\">，</span>没想到需求这么多<span class=\"mojikumi-line-end\">，</span>需求文档模糊不清的地方还有的要问有的要自己设计<span class=\"mojikumi-line-end\">。</span></s><span class=\"mojikumi-line-end\">）</span></p>\n<p>感觉课上讲的又快<span class=\"mojikumi-line-end\">，</span>大作业需要的知识又没讲全<span class=\"mojikumi-line-end\">，</span>很难想象如果不自学该怎么应对这个课<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"class-3\" class=\"heading\"><a href=\"#class-3\" class=\"heading-anchor\" aria-label=\"章节： Class 3\" tabindex=\"-1\"></a><span>Class 3</span></h3>\n<p>修了一些文档说明不清导致的 bug<span class=\"mojikumi-line-end\">，</span>然后研究了一下扩展功能怎么写<span class=\"mojikumi-line-end\">。</span></p>\n<p>不知道为什么把单词按信息熵排序写了半天<span class=\"mojikumi-line-end\">，</span>明明挺简单的<span class=\"mojikumi-line-end\">。</span>可能是听着老师讲课没法专心想算法<span class=\"mojikumi-line-end\">。</span></p>\n<p>后来试着用 <a href=\"https://docs.rs/rayon/latest/rayon/\">rayon</a> 把信息熵计算并行化了<span class=\"mojikumi-line-end\">，</span>在我本机除了第一次猜测基本上都能秒出结果<span class=\"mojikumi-line-end\">，</span>感觉很爽 <s><span class=\"mojikumi-line-end\">，</span>甚至玩了半天意义不明的照着提示输入</s><span class=\"mojikumi-line-end\">。</span></p>\n<p>再后来发现用 release 模式编译的优化比并行还大 🌚</p>\n<h3 id=\"第一次大作业验收\" class=\"heading\"><a href=\"#第一次大作业验收\" class=\"heading-anchor\" aria-label=\"章节： 第一次大作业验收\" tabindex=\"-1\"></a><span>第一次大作业验收</span></h3>\n<p>验收在 THUWC 去过的东主楼<span class=\"mojikumi-line-end\">，</span>但上大学后还是第一次去<span class=\"mojikumi-line-end\">，</span>结果走错了<span class=\"mojikumi-line-end\">，</span>迟到了 5min 😵 然后非常慌张地展示提高功能<span class=\"mojikumi-line-end\">，</span>都没太演示全<span class=\"mojikumi-line-end\">，</span><s>感觉白写了</s><span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"class-48\" class=\"heading\"><a href=\"#class-48\" class=\"heading-anchor\" aria-label=\"章节： Class 4~8\" tabindex=\"-1\"></a><span>Class 4~8</span></h3>\n<p>略<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"第二次大作业验收\" class=\"heading\"><a href=\"#第二次大作业验收\" class=\"heading-anchor\" aria-label=\"章节： 第二次大作业验收\" tabindex=\"-1\"></a><span>第二次大作业验收</span></h3>\n<p>这次真的有比 pretests 强很多的 system test 了<span class=\"mojikumi-line-end\">，</span>还好没 FST<span class=\"mojikumi-line-start\">（</span>助教<span class=\"mojikumi-line-end\">：</span>这个点你为什么能过啊<span class=\"mojikumi-line-start\">（</span>x</p>\n<p>可能是因为这个课不是学前端的<span class=\"mojikumi-line-end\">，</span>而且助教只简单看了一下界面演示没看代码<span class=\"mojikumi-line-end\">，</span>槽点很多的前端被夸了很科学<span class=\"mojikumi-line-start\">（</span></p>\n<p>可能是因为这个课不是学数据库的<span class=\"mojikumi-line-end\">，</span>而且听说有其他同学数据库里全是 JSON<span class=\"mojikumi-line-end\">，</span>普普通通的建表被夸了很科学<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"关于课上的一些翻译\" class=\"heading\"><a href=\"#关于课上的一些翻译\" class=\"heading-anchor\" aria-label=\"章节： 关于课上的一些翻译\" tabindex=\"-1\"></a><span>关于课上的一些翻译</span></h3>\n<p>为什么什么都要翻译出来啊<span class=\"mojikumi-line-start\">（</span>虽然如果英语母语的话看原文应该也很尬 🤣</p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/rust-translations.cc150348.webp\"><img srcset=\"/assets/rust-translations.5ccc7df9.jpeg\" loading=\"lazy\" src=\"/assets/rust-translations.5ccc7df9.jpeg\" width=\"500\" height=\"651\" alt=\"trait: 特型；panic: 恐慌；poisoned: 中毒；crate: 箱；library crate: 库箱\"></picture></p>\n<h2 id=\"async-rust\" class=\"heading\"><a href=\"#async-rust\" class=\"heading-anchor\" aria-label=\"章节： Async Rust\" tabindex=\"-1\"></a><span>Async Rust</span></h2>\n<p>先是看了 <a href=\"https://rust-lang.github.io/async-book/\">Asynchronous Programming in Rust</a><span class=\"mojikumi-line-end\">，</span>感觉看得一知半解的<span class=\"mojikumi-line-start\">（</span>尤其是 <code>Pin</code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>好像大概知道 <code>Future</code> 在干什么又不完全知道<span class=\"mojikumi-line-start\">（</span><s>而且这本书好咕啊<span class=\"mojikumi-line-end\">，</span><code>TODO</code> 的章节应该是有生之年了</s></p>\n<p>没看完 async book<span class=\"mojikumi-line-end\">，</span>直接去看 <a href=\"https://tokio.rs/tokio/tutorial\">Tokio Tutorial</a> 和 <a href=\"https://book.async.rs/\">Async programming in Rust with async-std</a> 了<span class=\"mojikumi-line-end\">。</span>作为 async runtime 的教程<span class=\"mojikumi-line-end\">，</span>它们涉及到的具体原理和实现少一些<span class=\"mojikumi-line-end\">，</span>更注重怎么实际使用<span class=\"mojikumi-line-end\">，</span>读起来会容易理解一些<span class=\"mojikumi-line-end\">。</span>因为 Tokio 更 popular<span class=\"mojikumi-line-end\">，</span>主要看的是 Tokio 的教程<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"数据库-diesel\" class=\"heading\"><a href=\"#数据库-diesel\" class=\"heading-anchor\" aria-label=\"章节： 数据库: Diesel\" tabindex=\"-1\"></a><span>数据库: Diesel</span></h2>\n<p>感觉 <a href=\"https://diesel.rs/guides/\">diesel 的教程</a> 写的挺简略的<span class=\"mojikumi-line-end\">，</span>但对着 examples 硬查文档也勉强能看懂基本用法<span class=\"mojikumi-line-end\">。</span>ORM 看着就很<span class=\"mojikumi-line-start\">“</span>安全<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>只不过实在是太类型体操了<span class=\"mojikumi-line-end\">，</span>不仅文档查起来有点小麻烦<span class=\"mojikumi-line-end\">，</span>代码复用也经常因为繁琐的 trait bounds 写不太动<span class=\"mojikumi-line-start\">（</span>也可能是我没学会<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p><a href=\"https://crates.io/crates/diesel-derive-enum\">diesel-derive-enum</a> 是好用的<span class=\"mojikumi-line-end\">。</span></p>\n<p>Sqlite 的 <code>RETURNING</code> 语句需要启用 <code>returning_<wbr>clauses_<wbr>for_<wbr>sqlite_<wbr>3_<wbr>35</code> feature flag<span class=\"mojikumi-line-start\">（</span>并且需要至少 3.35 版本的 Sqlite<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>没启用的时候对着一堆 trait bound 不满足的错误信息<span class=\"mojikumi-line-start\">（</span>就和 C++ 模板感觉差不多了..<span class=\"mojikumi-line-end\">）</span>根本发现不了错误原因<span class=\"mojikumi-line-end\">，</span>还是翻文档翻半天发现的<span class=\"mojikumi-line-end\">。</span></p>\n<p>还遇到一个 Sqlite 锁死的坑<span class=\"mojikumi-line-end\">，</span>通过 <a href=\"https://stackoverflow.com/a/57717533\">使用 r2d2 设定 <code>busy_timeout</code></a> 并 <a href=\"https://github.com/the-lean-crate/criner/issues/1\">使用 WAL mode 以及 immediate transaction</a> <span class=\"mojikumi\">（</span>hopefully<span class=\"mojikumi-line-end\">）</span>解决了<span class=\"mojikumi-line-end\">。</span></p>",
            "url": "https://ouuan.moe/post/2022/08/learn-rust",
            "title": "初学 Rust",
            "summary": "\n\n<p>早就想学 Rust 了<span class=\"mojikumi-line-end\">，</span>但一直咕着<span class=\"mojikumi-line-end\">。</span>这次小学期的程设训练开了 Rust 课堂<span class=\"mojikumi-line-end\">，</span>就毫不犹豫地选了<span class=\"mojikumi-line-end\">，</span>也以此为契机学了 Rust<span class=\"mojikumi-line-end\">。</span></p>\n<p>这篇就是简单记录一下大体上的学习过程<span class=\"mojikumi-line-end\">，</span>如果有什么心得体会<span class=\"mojikumi-line-end\">、</span>经验分享之类应该会开新的文章<span class=\"mojikumi-line-end\">。</span></p>\n<p>顺便也算是程设训练的游记了（<span class=\"mojikumi\">“</span>游记<span class=\"mojikumi-line-end\">”</span>这个词来源于 OI 时期的习惯<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2022-08-15T15:11:45.000Z",
            "tags": [
                "Rust",
                "学习记录"
            ]
        }
    ]
}