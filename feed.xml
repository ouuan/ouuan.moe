<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ouuan's blog</title>
        <link>https://ouuan.moe</link>
        <description>ouuan 写东西的地方，涵盖了 Web 开发、计算机系统、Linux 使用、大学学习生活等多个主题。</description>
        <lastBuildDate>Sat, 04 Mar 2023 03:42:29 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>Copyright © 2022 - 2023 ouuan
Licensed under CC BY-SA 4.0</copyright>
        <atom:link href="https://ouuan.moe/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[当你的技术栈与软工交集为空（x]]></title>
            <link>https://ouuan.moe/post/2023/03/thuse</link>
            <guid>https://ouuan.moe/post/2023/03/thuse</guid>
            <pubDate>Sat, 04 Mar 2023 03:42:29 GMT</pubDate>
            <description><![CDATA[


<p>很好<span class="mojikumi-line-end">，</span>你已经学会了 Vue<span class="mojikumi-line-end">、</span>Rust<span class="mojikumi-line-end">、</span>Actix<span class="mojikumi-line-end">、</span>GitHub Actions<span class="mojikumi-line-end">、</span>pnpm<span class="mojikumi-line-end">、</span>Vitest<span class="mojikumi-line-end">、</span>Caddy</p>
<p>现在你可以使用 React<span class="mojikumi-line-end">、</span>Python<span class="mojikumi-line-end">、</span>Django<span class="mojikumi-line-end">、</span>GitLab CI<span class="mojikumi-line-end">、</span>yarn<span class="mojikumi-line-end">、</span>Jest<span class="mojikumi-line-end">、</span>Nginx 来完成软工作业了<span class="mojikumi-line-start">（</span></p>
]]></description>
            <content:encoded><![CDATA[


<p>很好<span class="mojikumi-line-end">，</span>你已经学会了 Vue<span class="mojikumi-line-end">、</span>Rust<span class="mojikumi-line-end">、</span>Actix<span class="mojikumi-line-end">、</span>GitHub Actions<span class="mojikumi-line-end">、</span>pnpm<span class="mojikumi-line-end">、</span>Vitest<span class="mojikumi-line-end">、</span>Caddy</p>
<p>现在你可以使用 React<span class="mojikumi-line-end">、</span>Python<span class="mojikumi-line-end">、</span>Django<span class="mojikumi-line-end">、</span>GitLab CI<span class="mojikumi-line-end">、</span>yarn<span class="mojikumi-line-end">、</span>Jest<span class="mojikumi-line-end">、</span>Nginx 来完成软工作业了<span class="mojikumi-line-start">（</span></p>

<p><picture><source type="image/webp" srcset="/assets/tech-stack.2c5179c8.webp"><img srcset="/assets/tech-stack.4ab32981.jpeg" loading="lazy" src="/assets/tech-stack.4ab32981.jpeg" width="500" height="626" alt="技术栈交集为空的 meme"></picture></p>
<p><span class="mojikumi-line-start">（</span>其实这里面比较有问题的就只有 React<span class="mojikumi-line-end">，</span>其他都还好<span class="mojikumi-line-end">，</span><s>只是数量多凑一点 meme 效果更好</s><span class="mojikumi-line-end">）</span></p>
<h2 id="小作业" class="heading"><a href="#小作业" class="heading-anchor" aria-label="章节： 小作业" tabindex="-1"></a><span>小作业</span></h2>
<h3 id="django-后端小作业" class="heading"><a href="#django-后端小作业" class="heading-anchor" aria-label="章节： Django 后端小作业" tabindex="-1"></a><span>Django 后端小作业</span></h3>
<p>每一处需要修改的代码都列出来了<span class="mojikumi-line-end">，</span>还有详细的注释告诉你要干什么<span class="mojikumi-line-end">。</span>Django 完全没学<span class="mojikumi-line-end">，</span>就根据提示查了一处文档<span class="mojikumi-line-end">，</span>代码的整体逻辑也没搞清楚<span class="mojikumi-line-end">。</span></p>
<p>感觉写完之后理解了 ChatGPT<span class="mojikumi-line-end">，</span>看着注释和示例补全代码根本就不需要学会如何写代码嘛<span class="mojikumi-line-start">（</span></p>
<h3 id="学-react" class="heading"><a href="#学-react" class="heading-anchor" aria-label="章节： 学 React" tabindex="-1"></a><span>学 React</span></h3>
<p>小作业应该不需要怎么学 React<span class="mojikumi-line-end">，</span>但还是把 <a href="https://beta.reactjs.org/learn">Learn React (Beta)</a> 完整过了一遍<span class="mojikumi-line-end">。</span></p>
<p>之前都在 Twitter 上云 React<span class="mojikumi-line-end">，</span>学了之后终于有喜欢 Vue 的自信了<span class="mojikumi-line-start">（</span><s>所以说 X 自信就是要允许 Y 才能有<span class="mojikumi-line-end">，</span>以 X 自信为名打压 Y 到底是什么操作</s></p>
<a id="vue-用户初学-react-感到不适的一些点" name="vue-用户初学-react-感到不适的一些点" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>Vue 用户初学 React 感到不适的一些点</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ul>
<li>我希望 HTML 放在统一<span class="mojikumi-line-end">、</span>独立的位置<span class="mojikumi-line-end">，</span>不分散在多处<span class="mojikumi-line-end">，</span>不和 JS 代码在结构上混在一起<span class="mojikumi-line-end">。</span></li>
<li><code>v-if</code> 要用 if-else / <code>?:</code> / <code>&#x26;&#x26;</code> 实现<span class="mojikumi-line-end">：</span>我不希望在 JSX 外部写 if-else<span class="mojikumi-line-end">；</span>表达式的括号可能引入额外的缩进<span class="mojikumi-line-end">；</span><code>?:</code> 实现多级 else if 可能看不清<span class="mojikumi-line-end">；</span>修改代码时不像 <code>v-if</code> 只需要添加一行不影响其他行<span class="mojikumi-line-end">。</span>总之就是感觉很丑<span class="mojikumi-line-start">（</span></li>
<li><code>v-for</code> 要自己使用 JS 计算得到<span class="mojikumi-line-end">。</span></li>
<li>不支持 named slot<span class="mojikumi-line-start">（</span>可以用 prop 替代但感觉不是很优雅<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>event handler 不能 <code>count += 1</code> 必须 <code>() => count += 1</code><span class="mojikumi-line-end">。</span></li>
<li>虽然只是个语法糖<span class="mojikumi-line-end">，</span>但似乎没有 <code>v-model</code> 等价物<span class="mojikumi-line-end">。</span></li>
<li>没有 event modifier (<code>@<wbr>click<wbr>.<wbr>stop</code>)<span class="mojikumi-line-end">，</span>需要手动 <code>e<wbr>.<wbr>stopPropagation<wbr>()</code><span class="mojikumi-line-end">。</span></li>
<li>需要用 setter function 来修改 state<span class="mojikumi-line-end">，</span><code>useState</code> 返回两个变量<span class="mojikumi-line-end">。</span></li>
<li>state 是 snapshot<span class="mojikumi-line-end">，</span>反直觉<span class="mojikumi-line-end">。</span>教程里说这样可以避免一些 timing mistake<span class="mojikumi-line-end">，</span>但我感觉在 Vue 里一般只要传值而不是 ref 就行？确实有一定意义但我还是更希望符合直觉<span class="mojikumi-line-end">。</span></li>
<li>修改 object / array state 很麻烦<span class="mojikumi-line-end">，</span>使用 Immer 的话似乎就和 Vue 差不多了<span class="mojikumi-line-end">。</span></li>
<li>state 绑定在树的每个位置上<span class="mojikumi-line-end">，</span>而非存在 component 里<span class="mojikumi-line-end">。</span></li>
<li><code>useMemo</code> 需要手动指定依赖<span class="mojikumi-line-end">，</span><code>computed</code> 不需要<span class="mojikumi-line-end">。</span></li>
</ul><p>本来想把 <code>useEffect</code> 也列出来<span class="mojikumi-line-end">，</span>但 React 的 <a href="https://beta.reactjs.org/learn/lifecycle-of-reactive-effects#thinking-from-the-effects-perspective">这种设计思路</a> 似乎也有一定道理<span class="mojikumi-line-end">。</span></p><p>但当我写出 <code>useEffect<wbr>(() => () => <wbr>clearInterval<wbr>(<wbr>timerRef<wbr>.<wbr>current<wbr>), [])</code> 的时候我还是不明白了<span class="mojikumi-line-end">，</span>这也能<span class="mojikumi-line-start">“</span>从 Effect 的角度思考<span class="mojikumi-line-end">”</span>吗<span class="mojikumi-line-end">，</span>给个 <code>onUnmounted</code> 不好吗<span class="mojikumi-line-end">。</span></p></div></details></aside>
<a id="高情商与低情商" name="高情商与低情商" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>高情商与低情商</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>我在群里问了个问题<span class="mojikumi-line-end">，</span>结果助教全都跑来加我好友<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-start">（</span></p><p>那我也不客气了<span class="mojikumi-line-end">，</span>上来就问为什么换成 React<span class="mojikumi-line-end">，</span>bksw<span class="mojikumi-line-start">（</span></p><p><picture><source type="image/webp" srcset="/assets/eq.9ae66d49.webp"><img srcset="/assets/eq.a2547205.png" loading="lazy" src="/assets/eq.a2547205.png" width="383" height="850" alt="和助教的消息记录"></picture></p><p><s>不难看出<span class="mojikumi-line-end">，</span>这里面情商最低的是我</s></p></div></details></aside>
<h3 id="react-next-js-前端小作业" class="heading"><a href="#react-next-js-前端小作业" class="heading-anchor" aria-label="章节： React (Next.js) 前端小作业" tabindex="-1"></a><span>React (Next.js) 前端小作业</span></h3>
<p>上来就看到 ESLint 是 4 空格缩进<span class="mojikumi-line-end">、</span>优先双引号<span class="mojikumi-line-end">，</span>这能忍吗<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">。</span>特意去确认了一下<span class="mojikumi-line-end">，</span>除了前端助教参与的几个项目<span class="mojikumi-line-end">，</span>随便找一个项目都是 2 空格缩进<span class="mojikumi-line-end">、</span>优先单引号<span class="mojikumi-line-start">（</span></p>
<p>再一写代码<span class="mojikumi-line-end">，</span>发现不对劲<span class="mojikumi-line-end">，</span>这个 ESLint 有啥 rule 啊<span class="mojikumi-line-end">，</span>怎么怎么写都没 lint error<span class="mojikumi-line-end">，</span>给我整不会了<span class="mojikumi-line-start">（</span></p>
<p>于是直接上了 <a href="https://github.com/ouuan/eslint-config"><code>@<wbr>ouuan<wbr>/<wbr>eslint<wbr>-<wbr>config<wbr>-<wbr>ts</code></a><span class="mojikumi-line-end">，</span>理论上来说我应该整一个给 tsx 用的 config<span class="mojikumi-line-end">，</span>但 ts 的 config 配合上小作业模板原有的应该也凑合着能用吧<span class="mojikumi-line-start">（</span></p>
<p>写完后的感觉和 Django 小作业差不多<span class="mojikumi-line-end">，</span>React 都白学了<span class="mojikumi-line-end">，</span>啥都不会就能写完<span class="mojikumi-line-start">（</span></p>
<blockquote>
<p>这是你前端小作业的最后一个 Step 了<span class="mojikumi-line-end">，</span>如果你已经完成了<span class="mojikumi-line-end">，</span>我相信你已经充分掌握了 Next.js 的入门知识<span class="mojikumi-line-end">。</span></p>
<p>事实上这份前端小作业几乎可以作为大作业的起始框架<span class="mojikumi-line-end">。</span>除了 Next.js 框架本身<span class="mojikumi-line-end">，</span>其包含了<span class="mojikumi-line-end">：</span></p>
<ul>
<li>代码风格检查与修正插件 ESLint<span class="mojikumi-line-end">，</span>配置文件为 <code>.<wbr>eslintrc<wbr>.<wbr>json</code></li>
<li>单元测试框架 Jest</li>
</ul>
</blockquote>
<p>不是<span class="mojikumi-line-end">，</span>你是认真的吗<span class="mojikumi-line-end">，</span>先不谈学会多少能算是<span class="mojikumi-line-start">《</span>充分掌握了入门知识<span class="mojikumi">》</span><span class="mojikumi-line-end">，</span>这个 eslintrc 真的能用吗<span class="mojikumi-line-start">（</span></p>
<p>第二天早上起来再看了下代码<span class="mojikumi-line-end">，</span>发现组件 unmount 时没有 <code>clearInterval</code><span class="mojikumi-line-end">，</span>而这需要在允许<span class="mojikumi-line-start">（</span>推荐<span class="mojikumi-line-end">）</span>的代码范围之外进行修改<span class="mojikumi-line-end">，</span>怎么回事<span class="mojikumi-line-start">（</span></p>
<p>网络请求也是<span class="mojikumi-line-end">，</span>unmount 时没有 abort / ignore<span class="mojikumi-line-end">，</span>但要改的话交互逻辑也会有些变化<span class="mojikumi-line-end">，</span>就懒得修了<span class="mojikumi-line-end">，</span>一个简陋的小作业而已<span class="mojikumi-line-start">（</span></p>
<h3 id="cicd-小作业" class="heading"><a href="#cicd-小作业" class="heading-anchor" aria-label="章节： CI/CD 小作业" tabindex="-1"></a><span>CI/CD 小作业</span></h3>
<p><a href="https://tuna.moe/event/2023/welcome-and-ipsec/">前一天的 Power TUNA</a> 上还有人问为什么 TUNA 有很多海外流量<span class="mojikumi-line-end">，</span>第二天就看到了在 Dockerfile 里硬编码 TUNA<span class="mojikumi-line-start">（</span></p>
<h3 id="小作业的一些锅" class="heading"><a href="#小作业的一些锅" class="heading-anchor" aria-label="章节： 小作业的一些锅" tabindex="-1"></a><span>小作业的一些锅</span></h3>
<p>deploy 之后发现一堆锅<span class="mojikumi-line-end">，</span>它们不影响我的小作业得分<span class="mojikumi-line-end">，</span>只会影响我能不能交上数学课作业<span class="mojikumi-line-end">，</span>但我还是修了<span class="mojikumi-line-end">，</span>数学课作业则是没写完就交了<span class="mojikumi-line-start">（</span></p>
<p>说到这就得怀念程设训练了<span class="mojikumi-line-end">，</span>还有 5 分的<span class="mojikumi-line-start">“</span>课堂参与<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>额外加在 100 分之外<span class="mojikumi-line-end">，</span>回答几个同学的提问<span class="mojikumi-line-end">、</span>开一些 issue 帮忙修锅就拿满了<span class="mojikumi-line-end">，</span><s>虽然最后这 5 分对 A+ 毫无帮助<span class="mojikumi-line-end">，</span>要是能移到软工就好了</s><span class="mojikumi-line-end">。</span></p>
<h4 id="next-js-static-html-export-有-dynamic-route-时报错" class="heading"><a href="#next-js-static-html-export-有-dynamic-route-时报错" class="heading-anchor" aria-label="章节： Next.js static HTML export 有 dynamic route 时报错" tabindex="-1"></a><span>Next.js static HTML export 有 dynamic route 时报错</span></h4>
<p>在 Next.js 13.0.7 之前<span class="mojikumi-line-end">，</span>具体来说是 <a href="https://github.com/vercel/next.js/releases/tag/v13.0.7-canary.5">13.0.7-canary.5</a> 之前<span class="mojikumi-line-end">，</span>通过 <code>next export</code> 得到 static HTML export 后<span class="mojikumi-line-end">，</span>如果访问一个能匹配上 dynamic route 的 static route<span class="mojikumi-line-end">，</span>会报<span class="mojikumi-line-start">“</span>Application error: a client-side exception has occurred<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>有 <code>pages<wbr>/[<wbr>id<wbr>].<wbr>tsx</code> 和 <code>pages<wbr>/<wbr>list<wbr>.<wbr>tsx</code> 时<span class="mojikumi-line-end">，</span>访问 <code>/list.html</code> 就会报错<span class="mojikumi-line-end">。</span></p>
<p>简单看了一下这个版本的 changelog<span class="mojikumi-line-end">，</span>有几个疑似和这个 bug 相关的<span class="mojikumi-line-end">，</span>但我没能确认具体是哪个<span class="mojikumi-line-end">。</span>本来想在本地 build Next.js 来进一步确认<span class="mojikumi-line-end">，</span>但我一 build 就报一万个类型错误<span class="mojikumi-line-end">，</span>搞了半天也没搞好<span class="mojikumi-line-end">，</span>就放弃了<span class="mojikumi-line-end">。</span>反正 bump 一下就修好了<span class="mojikumi-line-end">，</span><s>开课前为啥不 bump 一下啊</s><span class="mojikumi-line-end">。</span></p>
<h4 id="next-js-static-html-export-的-nginx-路由配置" class="heading"><a href="#next-js-static-html-export-的-nginx-路由配置" class="heading-anchor" aria-label="章节： Next.js static HTML export 的 Nginx 路由配置" tabindex="-1"></a><span>Next.js static HTML export 的 Nginx 路由配置</span></h4>
<p>感觉网上搜到的一些 Nginx 路由配置都很迷惑<span class="mojikumi-line-end">：</span><code>$uri</code> 是匹配不到 HTML 文件的<span class="mojikumi-line-end">，</span>需要 <code>$uri.html</code><span class="mojikumi-line-end">；</span><code>$uri/</code> 则可能匹配到目录<span class="mojikumi-line-end">，</span>导致 403<span class="mojikumi-line-end">；</span>动态路由如果不专门写路由配置的话<span class="mojikumi-line-end">，</span>就不能直接访问到正确的 HTML<span class="mojikumi-line-end">，</span>static HTML export 的作用就没有了<span class="mojikumi-line-end">，</span>而且<span class="mojikumi-line-end">，</span>fallback 到 <code>/<wbr>index<wbr>.<wbr>html</code> 可能导致加载一些不需要的页面内容和 JS<span class="mojikumi-line-end">，</span>实际上比直接 SPA 更劣<span class="mojikumi-line-end">。</span></p>
<h4 id="用户名格式检查" class="heading"><a href="#用户名格式检查" class="heading-anchor" aria-label="章节： 用户名格式检查" tabindex="-1"></a><span>用户名格式检查</span></h4>
<p>说来惭愧<span class="mojikumi-line-end">，</span>我一开始也没意识到用户名没校验格式的问题<span class="mojikumi-line-end">，</span>还是配路由的时候才想到用户名里会不会有 slash<span class="mojikumi-line-end">。</span></p>
<p>现在要修的话确实麻烦<span class="mojikumi-line-end">，</span>所以只要归结为<span class="mojikumi-line-start">《</span>由于小作业的简化<span class="mojikumi-line-end">》</span>就好了<span class="mojikumi-line-start">（</span></p>
<h4 id="忘记关测试用-docker-container" class="heading"><a href="#忘记关测试用-docker-container" class="heading-anchor" aria-label="章节： 忘记关测试用 Docker container" tabindex="-1"></a><span><s>忘记关测试用 Docker container</s></span></h4>
<p>第二天早上起来一看<span class="mojikumi-line-end">，</span>Plausible 特别卡<span class="mojikumi-line-end">，</span>再一看<span class="mojikumi-line-end">，</span>load avg 都快两位数了<span class="mojikumi-line-end">，</span>原来是在 VPS 上测试后端部署忘关了 🌚 不要随便在生产环境顺便测小作业<span class="mojikumi-line-start">（</span></p>
<h3 id="玩小作业" class="heading"><a href="#玩小作业" class="heading-anchor" aria-label="章节： 玩小作业" tabindex="-1"></a><span>玩小作业</span></h3>
<p>把 game of life 当成冬日绘板画画<span class="mojikumi-line-end">，</span>动态更新时钟<span class="mojikumi-line-end">，</span>从 LifeWiki 获取随机 pattern<span class="mojikumi-line-end">，</span>这是一个作业写不完的人能干的出来的吗<span class="mojikumi-line-end">，</span>共享后端是这样用的吗<span class="mojikumi-line-start">（</span></p>
<p>第二天早上起来一看<span class="mojikumi-line-start">（</span><s>怎么每段都有个第二天早上起来</s><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>大家都在画些啥<span class="mojikumi-line-end">，</span>我还是太保守了<span class="mojikumi-line-start">（</span></p>
<h3 id="回答同学提问" class="heading"><a href="#回答同学提问" class="heading-anchor" aria-label="章节： 回答同学提问" tabindex="-1"></a><span>回答同学提问</span></h3>
<p>软工的公开提问貌似只能在微信群<span class="mojikumi-line-end">，</span>而且助教有差不多 20 个<span class="mojikumi-line-end">，</span>回复速度实在是太快了<span class="mojikumi-line-end">。</span>程设训练的时候我还能偶尔抢在助教之前回答问题<span class="mojikumi-line-end">，</span>现在根本做不到<span class="mojikumi-line-start">（</span></p>
<h3 id="redacted" class="heading"><a href="#redacted" class="heading-anchor" aria-label="章节： [redacted]" tabindex="-1"></a><span>[redacted]</span></h3>
<p>这里是一段 13 天后才能公开的内容<span class="mojikumi-line-end">，</span>在这放个预告防止到时候忘了<span class="mojikumi-line-start">（</span></p>
<h3 id="node-js-和浏览器的不同-timer" class="heading"><a href="#node-js-和浏览器的不同-timer" class="heading-anchor" aria-label="章节： Node.js 和浏览器的不同 timer" tabindex="-1"></a><span>Node.js 和浏览器的不同 timer</span></h3>
<p>队友问了一个神奇的 bug<span class="mojikumi-line-end">，</span>说是 <code>clearInterval</code> clear 不掉<span class="mojikumi-line-end">，</span>我看了半天都没发现问题<span class="mojikumi-line-end">，</span>最后发现开头有个 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class="mojikumi-line-end">。</span></p>
<p>之前还真没注意过<span class="mojikumi-line-end">，</span>timer 有 Node.js 和浏览器两个版本<span class="mojikumi-line-end">，</span>Node.js 的 <code>setInterval</code> 返回的是一个 object<span class="mojikumi-line-end">，</span>浏览器返回的是一个 <code>number</code><span class="mojikumi-line-end">。</span></p>
<ul>
<li>直接写 <code>setInterval</code> 时<span class="mojikumi-line-end">，</span>在 TypeScript 中会被认为返回 <code>NodeJS<wbr>.<wbr>Timer</code><span class="mojikumi-line-end">，</span>而实际运行时在哪运行就用哪个版本的函数<span class="mojikumi-line-end">。</span></li>
<li>如果写的是 <code>window<wbr>.<wbr>setInterval</code><span class="mojikumi-line-end">，</span>在 TypeScript 中会被认为返回 <code>number</code><span class="mojikumi-line-end">，</span>在 Node.js 中运行会报错<span class="mojikumi-line-end">。</span></li>
<li>如果是 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class="mojikumi-line-end">，</span>即使是在浏览器中运行也会使用 Node.js 版本的函数<span class="mojikumi-line-end">。</span></li>
</ul>
<p>这里比较重要的是 <code>setInterval</code> 和 <code>clearInterval</code> 要配套<span class="mojikumi-line-end">，</span>不能一个用 Node.js 的一个用浏览器的<span class="mojikumi-line-end">，</span>否则会 clear 不掉甚至报错<span class="mojikumi-line-end">。</span></p>
<p>一般来说直接写<span class="mojikumi-line-start">（</span>不 <code>window.</code> 也不 <code>import from 'timers'</code><span class="mojikumi-line-end">）</span>就是最好的<span class="mojikumi-line-end">，</span>虽然看起来 TypeScript 会将 <code>number</code> 误认为是 <code>NodeJS<wbr>.<wbr>Timer</code><span class="mojikumi-line-end">，</span>但这个 <code>number</code> 本来就不该被当作一个 <code>number</code> 来使用<span class="mojikumi-line-end">，</span>这样的 typing 反而是好的<span class="mojikumi-line-end">。</span></p>
<p>这里如果再仔细研究一下可以单独写一篇博客了<span class="mojikumi-line-end">，</span>但还是算了吧<span class="mojikumi-line-start">（</span></p>
<h2 id="大作业" class="heading"><a href="#大作业" class="heading-anchor" aria-label="章节： 大作业" tabindex="-1"></a><span>大作业</span></h2>
<h3 id="组队" class="heading"><a href="#组队" class="heading-anchor" aria-label="章节： 组队" tabindex="-1"></a><span>组队</span></h3>
<p>在另外一个通识课上体验了一下差点没组上队<span class="mojikumi-line-start">（</span>虽然后来得知还有不少人比我更晚组上队<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>最后完全 rand 组队<span class="mojikumi-line-end">。</span>所以真的很感谢上学期就找我来组队的队友<span class="mojikumi-line-end">。</span></p>
<h3 id="起队名" class="heading"><a href="#起队名" class="heading-anchor" aria-label="章节： 起队名" tabindex="-1"></a><span>起队名</span></h3>
<blockquote>
<p>HardToName / 起个名好难队</p>
</blockquote>
<p><s>这是什么引用啊</s></p>
<p>队友提出了三个队名<span class="mojikumi-line-end">：</span>啊对对队<span class="mojikumi-line-end">、</span>BUG 全调队<span class="mojikumi-line-end">、</span>[redacted] 队<span class="mojikumi-line-end">。</span>前两个都被占了<span class="mojikumi-line-end">，</span>后一个太魔幻了<span class="mojikumi-line-end">，</span>于是最后还是用的我提出的队名<span class="mojikumi-line-end">：</span>lazy / 这个队特别懒<span class="mojikumi-line-end">，</span>什么都没留下~</p>
<p><span class="mojikumi-line-start">（</span>这 SECoder 怎么还在用这个很有年代感的个人描述 placeholder 啊<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/lazy-placeholder.65e936a3.webp"><img srcset="/assets/lazy-placeholder.aba50ccc.png" loading="lazy" src="/assets/lazy-placeholder.aba50ccc.png" width="1873" height="597" alt="学生列表，满屏都是“这个人特别懒，什么都没留下~”"></picture></p>
<p>俗话说得好<span class="mojikumi-line-end">，</span>贱名好养活<span class="mojikumi-line-end">，</span><s>取名叫 lazy 一定摆不起来<span class="mojikumi-line-start">（</span></s></p>
<p>其实本来还想过利用五个人的名字缩写之类的组一个队名<span class="mojikumi-line-end">，</span>但人脑去想一个符合要求且有意思的队名太难了<span class="mojikumi-line-end">，</span>输入法给出的候选词也没啥意思<span class="mojikumi-line-end">，</span>所以我还尝试了用 ChatGPT 来生成<span class="mojikumi-line-end">，</span>本来只是以为它会生成一些没意思的队名<span class="mojikumi-line-end">，</span>没想到它生成出来的队名不仅没意思<span class="mojikumi-line-end">，</span>而且拼音首字母甚至字数都完全不符合要求<span class="mojikumi-line-end">，</span>无论怎么拷打都认错不改 🌚</p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/Web">Web</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95">学习记录</category>
        </item>
        <item>
            <title><![CDATA[数字逻辑实验到底是数电实验还是数设实验（x]]></title>
            <link>https://ouuan.moe/post/2023/03/digital-logic</link>
            <guid>https://ouuan.moe/post/2023/03/digital-logic</guid>
            <pubDate>Thu, 02 Mar 2023 03:46:54 GMT</pubDate>
            <description><![CDATA[
<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class="mojikumi-line-end">，</span>但是数字逻辑电路是数电<span class="mojikumi-line-end">，</span>数字逻辑设计是数设<span class="mojikumi-line-end">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class="mojikumi-line-end">，</span>但叫它数电实验或者数设实验好像都不太对<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-start">（</span></p>
<p>上课的时候也是<span class="mojikumi-line-end">，</span>老师一会儿一个<span class="mojikumi-line-start">“</span>如果你是数设的同学<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>一会儿一个<span class="mojikumi-line-start">“</span>如果你没报上数设但想把数电学成数设<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>这课也太乱了<span class="mojikumi-line-start">（</span></p>
<p>我写游记都得把两个课放一起写<span class="mojikumi-line-end">，</span>课就不能合成一个吗<span class="mojikumi-line-start">（</span></p>
]]></description>
            <content:encoded><![CDATA[
<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class="mojikumi-line-end">，</span>但是数字逻辑电路是数电<span class="mojikumi-line-end">，</span>数字逻辑设计是数设<span class="mojikumi-line-end">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class="mojikumi-line-end">，</span>但叫它数电实验或者数设实验好像都不太对<span class="mojikumi-line-end">，</span>草<span class="mojikumi-line-start">（</span></p>
<p>上课的时候也是<span class="mojikumi-line-end">，</span>老师一会儿一个<span class="mojikumi-line-start">“</span>如果你是数设的同学<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>一会儿一个<span class="mojikumi-line-start">“</span>如果你没报上数设但想把数电学成数设<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>这课也太乱了<span class="mojikumi-line-start">（</span></p>
<p>我写游记都得把两个课放一起写<span class="mojikumi-line-end">，</span>课就不能合成一个吗<span class="mojikumi-line-start">（</span></p>

<p>写了一会儿后发现<span class="mojikumi-line-end">，</span>还是得两个课分开写<span class="mojikumi-line-end">，</span>dbqwcl<span class="mojikumi-line-start">（</span></p>
<p>这篇就是个游记<span class="mojikumi-line-end">，</span>具体学的内容如果我有时间的话会放在 <a href="/tag/ddpp">DDPP 学习笔记</a><span class="mojikumi-line-end">，</span>没时间<span class="mojikumi-line-start">（</span>没时间写笔记 or 没时间学 DDPP 只能跟着上课<span class="mojikumi-line-end">）</span>的话大概就不会放上来了<span class="mojikumi-line-start">（</span></p>
<p><s>某些人学都学不完了<span class="mojikumi-line-end">，</span>还有空写游记？<span class="mojikumi-line-start">（</span></s></p>
<h2 id="数字逻辑实验" class="heading"><a href="#数字逻辑实验" class="heading-anchor" aria-label="章节： 数字逻辑实验" tabindex="-1"></a><span>数字逻辑实验</span></h2>
<h3 id="sv-班的开设" class="heading"><a href="#sv-班的开设" class="heading-anchor" aria-label="章节： sv 班的开设" tabindex="-1"></a><span>sv 班的开设</span></h3>
<p>DDPP5 讲的是 Verilog<span class="mojikumi-line-end">，</span>以后造机应该也是用 Verilog<span class="mojikumi-line-end">，</span>但数字逻辑实验似乎是 VHDL<span class="mojikumi-line-end">。</span>就像软工强迫我把技术栈全换一遍一样<span class="mojikumi-line-end">，</span>多学一门语言也可以称作<span class="mojikumi-line-start">“</span>技多不压身<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>而且说到底我也还没学 Verilog<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>但终究是有些难受的<span class="mojikumi-line-end">。</span>所以看到第一节课的课件上说可以选择报 SystemVerilog 小班我还是很开心的<span class="mojikumi-line-end">，</span>顿时感觉这个课科学了许多<span class="mojikumi-line-start">（</span></p>
<blockquote>
<p>优势<span class="mojikumi-line-end">：</span>对后续课程有帮助</p>
<p>劣势<span class="mojikumi-line-end">：</span>花时间<span class="mojikumi-line-end">，</span>费精力<span class="mojikumi-line-end">。</span><span class="mojikumi-line-end">。</span><span class="mojikumi-line-end">。</span></p>
</blockquote>
<p>课件上是这么写的<span class="mojikumi-line-end">，</span>但 Verilog 本身应该不会比 VHDL 费精力<span class="mojikumi-line-end">，</span>课程内容的区别是多了个内存实验<span class="mojikumi-line-end">，</span>我猜这个 warning 的主要意义在于<span class="mojikumi-line-end">，</span>这是个新开的课<span class="mojikumi-line-end">，</span>可能各种出锅<span class="mojikumi-line-end">，</span>要让大家做好心理准备<span class="mojikumi-line-start">（</span>同样是新开的 <a href="/post/2022/08/learn-rust">Rust</a> 就非常科学<span class="mojikumi-line-start">（</span><s>起码完全自学人感觉很科学</s><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>我似乎反而更希望课是新开的<span class="mojikumi-line-end">，</span>而且这个 sv 班似乎也是 tuna 群友当助教<span class="mojikumi-line-start">（</span></p>
<p>但这个 sv 班的开设实在是有些坎坷<span class="mojikumi-line-end">，</span>说起来也有些冗长<span class="mojikumi-line-end">，</span>就折起来了<span class="mojikumi-line-end">。</span></p>
<a id="sv-班坎坷的开设过程" name="sv-班坎坷的开设过程" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>sv 班坎坷的开设过程</span></h4><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>简单来说<span class="mojikumi-line-end">，</span>数字逻辑实验有 5-1<span class="mojikumi-line-end">、</span>5-3<span class="mojikumi-line-end">、</span>5-4 三个班<span class="mojikumi-line-end">，</span>其中 5-1<span class="mojikumi-line-end">、</span>5-3 有开设 sv 班的机会<span class="mojikumi-line-end">，</span>但要求是 5-1 报名人数在 25~28 之间<span class="mojikumi-line-end">，</span>5-3 报名人数在 27~28 之间<span class="mojikumi-line-end">，</span>才分别能开班<span class="mojikumi-line-end">。</span></p><p>是不是感觉非常神秘<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>这确实很神秘<span class="mojikumi-line-end">，</span>但它背后竟然真的能有确切的原因<span class="mojikumi-line-start">（</span></p><ul>
<li>数字逻辑实验的课容量是 85<span class="mojikumi-line-end">，</span>5-1<span class="mojikumi-line-end">、</span>5-3<span class="mojikumi-line-end">、</span>5-4 分别有 85<span class="mojikumi-line-end">、</span>87<span class="mojikumi-line-start">（</span>草<span class="mojikumi-line-end">，</span>听说可能是因为重修？<span class="mojikumi">）</span><span class="mojikumi-line-end">、</span>69 人<span class="mojikumi-line-start">（</span>印象中当时的数据<span class="mojikumi-line-end">，</span>现在有点小变化<span class="mojikumi-line-end">）</span></li>
<li>因为设备<span class="mojikumi-line-end">、</span>实验室等资源限制<span class="mojikumi-line-end">，</span>一个普通班只能容纳 30 人<span class="mojikumi-line-end">，</span>一个 sv 班只能容纳 28 人<span class="mojikumi-line-end">，</span>一个时间段只能有三个班</li>
</ul><p>虽然说在这些限制下似乎也能在 5-4 开一个班<span class="mojikumi-line-start">（</span>9~28 人即可<span class="mojikumi-line-end">，</span>满足人数限制且不影响该时间段分班数量<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>但不知道是不是懒得再开一个班还是什么原因<span class="mojikumi-line-end">，</span>5-4 想报 sv 班的同学只能遗憾离场<span class="mojikumi-line-start">（</span></p><p>同学们当然觉得这样搞很毒瘤<span class="mojikumi-line-end">，</span>但老师似乎也知道这样很毒瘤<span class="mojikumi-line-end">，</span>说是之前申请过搞成二级选课<span class="mojikumi-line-end">，</span>但没通过<span class="mojikumi-line-end">。</span></p><p>一开始我担心的是很快报满报不上<span class="mojikumi-line-end">，</span>后来发现完全担心错了<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>真正的问题在于人数不够<span class="mojikumi-line-end">，</span>而且这个是先报先得<span class="mojikumi-line-end">，</span>我是通知发出来 7min 就报了<span class="mojikumi-line-end">，</span><s>虽然在选课系统里 7s 可能就慢了<span class="mojikumi-line-end">，</span>但是</s> 最后看名单我是第一个报的<span class="mojikumi-line-start">（</span></p><p>前两天大家都不吭声<span class="mojikumi-line-end">，</span>到了报名的 ddl 当天下午我才在群里问了下人数<span class="mojikumi-line-end">，</span>当时是 5-1 22 人 5-3 21 人<span class="mojikumi-line-end">。</span>于是我开始在班群推销<span class="mojikumi-line-end">，</span>也看到有人在课程群推销<span class="mojikumi-line-end">，</span>反正主要就是以后总得学 Verilog<span class="mojikumi-line-end">，</span>报 sv 班可以少学一门语言<span class="mojikumi-line-start">（</span></p><p>晚上 6 点 5-1 就开班了<span class="mojikumi-line-end">，</span>但 5-3 只有 24 个人报<span class="mojikumi-line-end">。</span>到了 23:44 还是 24<span class="mojikumi-line-start">（</span>实际上是 25<span class="mojikumi-line-end">，</span>我室友报了结果因未知原因被漏掉了<span class="mojikumi-line-end">，</span>草<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>就很崩溃<span class="mojikumi-line-end">。</span></p><p>当时我想了两个备选方案<span class="mojikumi-line-end">：</span></p><ul>
<li>改成 5-4 开 sv 班<span class="mojikumi-line-end">，</span>但我提出后被否了<span class="mojikumi-line-end">，</span>说是不方便再调整<span class="mojikumi-line-end">。</span></li>
<li>去 5-1 的 sv 班<span class="mojikumi-line-end">，</span>结果得知 5-1 已经报了 31 人<span class="mojikumi-line-end">。</span><s>早知道不推销了</s></li>
</ul><p>好在第二天又说报名 ddl 延长半天<span class="mojikumi-line-end">，</span>然后中午的时候竟然就报满了<span class="mojikumi-line-end">。</span>5-3 的 28 人有 10 个是信计的<span class="mojikumi-line-end">，</span><s>简单估计一下<span class="mojikumi-line-end">，</span>信计有 28/30 想报 sv</s><span class="mojikumi-line-end">，</span>实际上 5-1 的 sv 班只有两个信计<span class="mojikumi-line-end">，</span>只不过群里 5-4 求换课的还有好几个信计<span class="mojikumi-line-end">，</span>可惜都没换上<span class="mojikumi-line-end">，</span><s>再简单估计一下<span class="mojikumi-line-end">，</span>sv 班 12/56 是信计<span class="mojikumi-line-end">，</span>信计应该一共有 52 人</s><span class="mojikumi-line-start">（</span></p></div></details></aside>
<h3 id="sv-班课程文档" class="heading"><a href="#sv-班课程文档" class="heading-anchor" aria-label="章节： sv 班课程文档" tabindex="-1"></a><span>sv 班课程文档</span></h3>
<h4 id="本课程只有一学分！！" class="heading"><a href="#本课程只有一学分！！" class="heading-anchor" aria-label="章节： 本课程只有一学分！！" tabindex="-1"></a><span>本课程只有一学分！！</span></h4>
<p><picture><source type="image/webp" srcset="/assets/1-credit.4c4db750.webp"><img srcset="/assets/1-credit.3072c8e4.png" loading="lazy" src="/assets/1-credit.3072c8e4.png" width="219" height="88" alt="本课程只有一学分！！"></picture></p>
<p>开头第一句<span class="mojikumi-line-end">，</span>绷不住了<span class="mojikumi-line-start">（</span></p>
<h4 id="按钮详细功能" class="heading"><a href="#按钮详细功能" class="heading-anchor" aria-label="章节： 按钮详细功能" tabindex="-1"></a><span>按钮详细功能</span></h4>
<p>一般来说 admonition 经常是比较长的会折叠起来防止刷屏<span class="mojikumi-line-end">，</span>但在示波器的<span class="mojikumi-line-start">“</span>按钮详细功能<span class="mojikumi-line-end">”</span>一节<span class="mojikumi-line-end">，</span>被折叠的都是最短的那些<span class="mojikumi-line-end">，</span>比如<span class="mojikumi-line-end">：</span></p>
<blockquote>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h5 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>电源开关</span></h5><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>按一次打开电源<span class="mojikumi-line-end">，</span>再按一次关闭电源<span class="mojikumi-line-end">。</span></p></div></details></aside>
</blockquote>
<p>非常地理所当然<span class="mojikumi-line-end">，</span>但感觉这个事实莫名地很有意思<span class="mojikumi-line-start">（</span><s>而且把电源开关写出来再折起来就莫名喜感<span class="mojikumi-line-start">（</span>按一次打开 <code>&#x3C;details></code><span class="mojikumi-line-end">，</span>再按一次关闭 <code>&#x3C;details></code></s></p>
<h3 id="把人忽悠进来之后" class="heading"><a href="#把人忽悠进来之后" class="heading-anchor" aria-label="章节： 把人忽悠进来之后" tabindex="-1"></a><span><s>把人忽悠进来之后</s></span></h3>
<p>下面是两个课件的 diff<span class="mojikumi-line-end">，</span>虽然这个优势的意思实际上没变<span class="mojikumi-line-end">，</span>从 sv 班苛刻的开设条件基本上就能猜到没法随时退出<span class="mojikumi-line-end">，</span>但是<span class="mojikumi-line-start">（</span></p>
<blockquote>
<ul>
<li>SystemVerilog</li>
<li>为后续课程实验提供支撑
<ul>
<li>增加内存实验<del><span class="mojikumi-line-end">，</span>其他实验不变</del></li>
<li>课程成绩不与普通课堂区分<span class="mojikumi-line-end">，</span>评分标准<span class="mojikumi-line-end">，</span>比例与普通课堂一致</li>
</ul>
</li>
<li>优势<span class="mojikumi-line-end">：</span><del>对后续课程有帮助</del><ins>当前学期无</ins></li>
<li>劣势<span class="mojikumi-line-end">：</span>花时间<span class="mojikumi-line-end">，</span>费精力<span class="mojikumi-line-end">。</span><del><span class="mojikumi-line-end">。</span><span class="mojikumi-line-end">。</span></del></li>
<li>可随时退出<ins>？</ins></li>
</ul>
</blockquote>
<h2 id="数设" class="heading"><a href="#数设" class="heading-anchor" aria-label="章节： 数设" tabindex="-1"></a><span>数设</span></h2>
<h3 id="数设第二次课" class="heading"><a href="#数设第二次课" class="heading-anchor" aria-label="章节： 数设第二次课" tabindex="-1"></a><span>数设第二次课</span></h3>
<p>这节课讲了一堆数电背后的模电原理<span class="mojikumi-line-end">，</span>而且还是 TTL 电路<span class="mojikumi-line-end">，</span>不是 DDPP5 放在第 14 章的 CMOS<span class="mojikumi-line-end">。</span>感觉完全没听懂<span class="mojikumi-line-end">，</span>只不过说到底这一节是物理课不是计算机课<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>后面又说讲的大部分东西不考<span class="mojikumi-line-end">，</span>讲这些是为了补充一些数字电路发展的历史<span class="mojikumi-line-end">，</span>弥补思维上的跳跃<span class="mojikumi-line-end">。</span></p>
<p>我是完全没听懂<span class="mojikumi-line-end">，</span>其他同学大概也是没完全听懂<span class="mojikumi-line-end">。</span>老师吐槽说<span class="mojikumi-line-end">，</span>现在我们培养方案里电路知识几乎为零<span class="mojikumi-line-end">，</span>数设要从头开始讲<span class="mojikumi-line-end">，</span>不像他们那时候<span class="mojikumi-line-end">，</span>本科上五年<span class="mojikumi-line-end">，</span>什么物理都学了<span class="mojikumi-line-end">。</span>本来我还在想<span class="mojikumi-line-end">，</span>为什么我们只能上四年甚至三年<span class="mojikumi-line-end">，</span>要学这么多东西<span class="mojikumi-line-end">，</span>结果老师说他五年修了双学位 600+ 学分<span class="mojikumi-line-end">，</span>而且学分是和现在一样的学时<span class="mojikumi-line-end">，</span>震撼全班<span class="mojikumi-line-end">。</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/digital-design">digital-design</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95">学习记录</category>
        </item>
        <item>
            <title><![CDATA[一些博客排版优化小 trick]]></title>
            <link>https://ouuan.moe/post/2023/02/typography-tricks</link>
            <guid>https://ouuan.moe/post/2023/02/typography-tricks</guid>
            <pubDate>Thu, 09 Feb 2023 15:19:45 GMT</pubDate>
            <description><![CDATA[

<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class="mojikumi">（</span><s>hopefully</s><span class="mojikumi">）</span> 排版<span class="mojikumi-line-end">，</span>在这整理一下<span class="mojikumi-line-end">，</span>分享出来<span class="mojikumi-line-end">，</span>也是怕几年<span class="mojikumi-line-start">（</span><s>几天</s><span class="mojikumi-line-end">）</span>后想不起来这些奇怪的东西是在干什么<span class="mojikumi-line-end">。</span></p>
<p>主要是 text justify 相关和标点挤压相关<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[

<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class="mojikumi">（</span><s>hopefully</s><span class="mojikumi">）</span> 排版<span class="mojikumi-line-end">，</span>在这整理一下<span class="mojikumi-line-end">，</span>分享出来<span class="mojikumi-line-end">，</span>也是怕几年<span class="mojikumi-line-start">（</span><s>几天</s><span class="mojikumi-line-end">）</span>后想不起来这些奇怪的东西是在干什么<span class="mojikumi-line-end">。</span></p>
<p>主要是 text justify 相关和标点挤压相关<span class="mojikumi-line-end">。</span></p>

<p>我博客的 Markdown 渲染基于 <a href="https://github.com/unifiedjs/unified">unified</a><span class="mojikumi-line-end">，</span>所以下面的一些优化是以 unified 插件<span class="mojikumi-line-start">（</span>remark / remark-rehype / rehype 插件<span class="mojikumi-line-end">）</span>的形式实现的<span class="mojikumi-line-end">。</span></p>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-orange-1 dark:bg-orange-9 b-orange" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h2 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-alert-circle-outline text-orange" data-v-a2ab257f></span><!--v-if--><span data-v-a2ab257f>Warning</span></h2><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>为了直观地进行演示<span class="mojikumi-line-end">，</span>本文可能会在提到一个问题的段落通过设置文本和 CSS 特意制造出相应的问题<span class="mojikumi-line-end">，</span>并禁用对这个问题的处理措施以将问题展示出来<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h2 id="text-justify-相关" class="heading"><a href="#text-justify-相关" class="heading-anchor" aria-label="章节： text justify 相关" tabindex="-1"></a><span>text justify 相关</span></h2>
<p>在每行的宽度略有差异时<span class="mojikumi-line-end">，</span><a href="https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#line_adjustment">使用两端对齐会让中文排版更加美观</a><span class="mojikumi-line-end">，</span>这一般通过 <a href="https://developer.mozilla.org/docs/Web/CSS/text-align"><code>text-align</code> CSS 属性</a> 的 <code>justify</code> 选项实现<span class="mojikumi-line-end">。</span>但由于网页排版的不确定性<span class="mojikumi-line-end">，</span>每行的宽度可能不是略有差异而是有很大差异<span class="mojikumi-line-end">，</span>这时使用 text justify 就会造成过大的空隙<span class="mojikumi-line-end">，</span>所以需要避免出现过短的行<span class="mojikumi-line-end">，</span>或者在有必要时禁用 text justify<span class="mojikumi-line-end">。</span></p>
<h3 id="langzh-cn-对-text-justify-的影响" class="heading"><a href="#langzh-cn-对-text-justify-的影响" class="heading-anchor" aria-label="章节： lang=&#x22;zh-CN&#x22; 对 text justify 的影响" tabindex="-1"></a><span>lang="zh-CN" 对 text justify 的影响</span></h3>
<p>这个并不是 trick<span class="mojikumi-line-end">，</span>是基操<span class="mojikumi-line-end">，</span>但挺重要的<span class="mojikumi-line-end">，</span>还是写在这<span class="mojikumi-line-end">。</span></p>
<p>如果没有将 HTML 的 <a href="https://developer.mozilla.org/docs/Web/HTML/Global_attributes/lang"><code>lang</code> 属性</a> 设为中文<span class="mojikumi-line-end">，</span>在 Firefox 109<span class="mojikumi-line-start">（</span>以及其他版本 / 其他浏览器<span class="mojikumi-line-end">，</span>但不包括 Chrome 109<span class="mojikumi-line-end">）</span>中就会按照英文的规则<span class="mojikumi-line-end">，</span>将连续的汉字视作一个单词<span class="mojikumi-line-end">，</span>而只在词与词之间增大间距<span class="mojikumi-line-end">，</span>不改变汉字之间的间距<span class="mojikumi-line-end">，</span>如下所示<span class="mojikumi-line-end">：</span></p>
<p lang="en" style="margin: auto; width: 12em; border: gray solid 1px;">这是一个设置了 <code>lang="en"</code> 和固定宽度的段落<span class="mojikumi-line-end">，</span>这是一个 loooooooooooooooong word<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/firefox-text-justify-en.e05e8739.webp"><img srcset="/assets/firefox-text-justify-en.2157e1dd.png" loading="lazy" src="/assets/firefox-text-justify-en.2157e1dd.png" width="243" height="162" alt="上面的 lang 设为 en 的段落在 Firefox 109 中的渲染效果"></picture></p>
<p>其中<span class="mojikumi-line-end">，</span>第一行没有两端对齐<span class="mojikumi-line-end">，</span>而第三行只在逗号后面增加了间距<span class="mojikumi-line-end">。</span></p>
<p>如果设置了 <code>lang<wbr>="<wbr>zh<wbr>-<wbr>CN<wbr>"</code> 则会在汉字间添加间距<span class="mojikumi-line-end">：</span></p>
<p lang="zh-CN" style="margin: auto; width: 12em; border: gray solid 1px;">这是一个设置了 <code>lang="zh-CN"</code> 和固定宽度的段落<span class="mojikumi-line-end">，</span>这是一个 loooooooooooooooong word<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/firefox-text-justify-zh-CN.5f0808bf.webp"><img srcset="/assets/firefox-text-justify-zh-CN.b7336c2c.png" loading="lazy" src="/assets/firefox-text-justify-zh-CN.b7336c2c.png" width="245" height="161" alt="上面的 lang 设为 zh-CN 的段落在 Firefox 109 中的渲染效果"></picture></p>
<p>当然<span class="mojikumi-line-end">，</span>设置 HTML 的 <code>lang</code> 属性还有其他作用<span class="mojikumi-line-end">，</span>不管怎么样总是得设一个的<span class="mojikumi-line-end">。</span></p>
<h3 id="断开过长的行内代码" class="heading"><a href="#断开过长的行内代码" class="heading-anchor" aria-label="章节： 断开过长的行内代码" tabindex="-1"></a><span>断开过长的行内代码</span></h3>
<p>有时候会遇到一些 <code style="word-break: normal;">veryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongInlineCode</code><span class="mojikumi-line-end">，</span>为了让它不断开<span class="mojikumi-line-end">，</span>前面的一行就会非常短<span class="mojikumi-line-end">，</span>justify 后间隙就非常大<span class="mojikumi-line-end">。</span>当然<span class="mojikumi-line-end">，</span>这样的问题不局限于行内代码<span class="mojikumi-line-end">，</span>但正常的英文很少会遇到特别长的单词<span class="mojikumi-line-end">，</span>代码则经常遇到<span class="mojikumi-line-end">，</span>所以我选择对代码进行处理<span class="mojikumi-line-start">（</span>主要是因为不需要分词套 <code>&#x3C;span></code><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>思路很简单<span class="mojikumi-line-end">，</span>就是把过长的 <code>:not(pre) > code</code> 通过 <a href="https://developer.mozilla.org/docs/Web/HTML/Element/wbr"><code>&#x3C;wbr></code></a> 或者 <a href="https://developer.mozilla.org/docs/Web/CSS/word-break"><code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code></a> 断开<span class="mojikumi-line-end">，</span>让它不可断开的部分没那么长<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">：</span><code>&#x3C;<wbr>code<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>: &#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;/<wbr>code<wbr>></code><span class="mojikumi-line-end">、</span><code>&#x3C;<wbr>code<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;: &#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;/&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;/<wbr>code<wbr>></code>……<span class="mojikumi-line-start">（</span><s>禁止禁止套娃</s><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>具体实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/rehype/breakLongCode.ts"><code>breakLongCode<wbr>.<wbr>ts</code></a></p>
<ol>
<li>如果按空格分开没有超过 10 个字符的部分<span class="mojikumi-line-end">，</span>不进行处理<span class="mojikumi-line-end">；</span></li>
<li>如果按正则表达式的 <code>\b</code> 分开没有超过 12 个字符的部分<span class="mojikumi-line-end">，</span>则在 <code>\b</code> 处插入 <code>&#x3C;wbr></code><span class="mojikumi-line-end">；</span></li>
<li>如果按 <code>\b</code> 以及下划线分开没有超过 15 个字符的部分<span class="mojikumi-line-end">，</span>则在相应位置插入 <code>&#x3C;wbr></code><span class="mojikumi-line-end">；</span></li>
<li>否则<span class="mojikumi-line-end">，</span>没救了<span class="mojikumi-line-end">，</span>直接 <code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code><span class="mojikumi-line-end">。</span></li>
</ol>
<p>当然这个粗糙的处理方式还是有一些问题<span class="mojikumi-line-end">，</span>比如从上面的示例就可以看出来<span class="mojikumi-line-end">，</span>期望结果可能是 <code>&#x3C;wbr></code> / <code>&#x3C;code></code> 不被断开<span class="mojikumi-line-end">，</span>但实际上会在 <code>&#x3C;</code> 后 / <code>></code> 前断开<span class="mojikumi-line-end">。</span></p>
<h3 id="在小屏幕上对窄的元素禁用-text-justify" class="heading"><a href="#在小屏幕上对窄的元素禁用-text-justify" class="heading-anchor" aria-label="章节： 在小屏幕上对窄的元素禁用 text justify" tabindex="-1"></a><span>在小屏幕上对窄的元素禁用 text justify</span></h3>
<p style="margin: auto; width: 7em; border: gray solid 1px;">有的时候容器宽度太小<span class="mojikumi-line-end">，</span>即使是正常的普通文本也不适合进行 text justify<span class="mojikumi-line-end">。</span></p>
<p>我选择了一个非常简单粗暴的处理方法<span class="mojikumi-line-end">：</span>认为窄的元素 = 小屏幕上嵌套了多级的元素<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="css 代码块" data-v-ad49d235>css</h4><ile-root id="ile-1"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-1--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C5E478">.article-style</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">justify</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C5E478">.article-style</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">initial</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C792EA">@media</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">(</span><span style="color: #80CBC4">min-width</span><span style="color: #D6DEEB">: </span><span style="color: #F78C6C">40</span><span style="color: #FFEB95">em</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">.article-style</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #C792EA"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #80CBC4">text-align</span><span style="color: #D6DEEB">: </span><span style="color: #FF6363">inherit</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  }</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">.article-style</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">justify</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #4876D6">.article-style</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">initial</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #994CC3">@media</span><span style="color: #403F53"> </span><span style="color: #111111">(</span><span style="color: #0C969B">min-width</span><span style="color: #403F53">: </span><span style="color: #AA0982">40em</span><span style="color: #111111">)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">.article-style</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #994CC3"> </span><span style="color: #0C969B">&gt;</span><span style="color: #994CC3"> </span><span style="color: #0C969B">*</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">text-align</span><span style="color: #403F53">: </span><span style="color: #C96765">inherit</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  }</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><span class="mojikumi-line-start">（</span>上面放的是编译出来的 CSS<span class="mojikumi-line-end">，</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/styles/article.scss">源码</a>是使用 UnoCSS 的 SCSS<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>一些细节<span class="mojikumi-line-end">：</span></p>
<ul>
<li>使用 <code>*</code> 选择器<span class="mojikumi-line-end">，</span><a href="https://developer.mozilla.org/docs/Web/CSS/Specificity">specificity</a> 很低<span class="mojikumi-line-end">，</span>便于 override<span class="mojikumi-line-end">。</span></li>
<li>只选择 <code>> * > *</code> 而非 <code> * *</code><span class="mojikumi-line-end">，</span>这样的话嵌套更深的元素依然从 parent 继承 <code>text-align</code><span class="mojikumi-line-end">，</span>就可以设置 CSS override 掉一整个子树<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>之前我一度以为 katex 不自带行间公式居中<span class="mojikumi-line-end">，</span>后来发现是被我的 CSS 改掉了 <code>text-align</code><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></li>
<li>使用 <code>inherit</code> 而非 <code>justify</code> 进行撤销<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="对包含过长行内公式的元素禁用-text-justify" class="heading"><a href="#对包含过长行内公式的元素禁用-text-justify" class="heading-anchor" aria-label="章节： 对包含过长行内公式的元素禁用 text justify" tabindex="-1"></a><span>对包含过长行内公式的元素禁用 text justify</span></h3>
<p>除了 <code>行内代码</code><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>行内公式</mtext></mrow><annotation encoding="application/x-tex">\text{行内公式}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord text"><span class="mord cjk_fallback">行内公式</span></span></span></span></span></span> 也是常见的过长的不可断元素<span class="mojikumi-line-end">。</span>这里我采用了一个本文最 dirty 的处理方式<span class="mojikumi-line-end">：</span>在客户端通过 JavaScript 检测宽度过大的行内公式<span class="mojikumi-line-end">。</span></p>
<p>具体实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/components/TextJustifyFix.vue"><code>TextJustifyFix<wbr>.<wbr>vue</code></a></p>
<ul>
<li>只修改 <code>text<wbr>-<wbr>align<wbr>: <wbr>justify</code> 的元素<span class="mojikumi-line-end">，</span>如果已经设置为其他对齐方式<span class="mojikumi-line-start">（</span>例如表格中的居中对齐<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>就不应修改<span class="mojikumi-line-end">。</span></li>
<li>使用了 <a href="https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready"><code>document<wbr>.<wbr>fonts<wbr>.<wbr>ready</code></a> 来等待字体全部加载好再检查宽度<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="标点挤压" class="heading"><a href="#标点挤压" class="heading-anchor" aria-label="章节： 标点挤压" tabindex="-1"></a><span>标点挤压</span></h2>
<p>代码实现<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/remark/mojikumi.ts"><code>mojikumi<wbr>.<wbr>ts</code></a><span class="mojikumi-line-end">、</span><a href="https://github.com/ouuan/iles-blog/blob/master/src/styles/mojikumi.scss"><code>mojikumi<wbr>.<wbr>scss</code></a><span class="mojikumi-line-end">。</span></p>
<h3 id="相邻标点的挤压" class="heading"><a href="#相邻标点的挤压" class="heading-anchor" aria-label="章节： 相邻标点的挤压" tabindex="-1"></a><span>相邻标点的挤压</span></h3>
<p>例如<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">「</span><span class="no-mojikumi"><span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">“</span><span class="mojikumi">。</span><span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></span><span class="mojikumi-line-end">」</span>→<span class="mojikumi-line-start">「</span><span><span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">“</span><span class="mojikumi">。</span><span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span><span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></span><span class="mojikumi">」</span><span class="mojikumi-line-end">。</span>当然本页其他地方也有一些例子<span class="mojikumi-line-end">。</span></p>
<p>具体规则 <a href="https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#compression_rules_for_consecutive_punctuation_marks">clreq</a> 中说的比较模糊<span class="mojikumi-line-end">，</span>可以参考 <a href="https://www.w3.org/TR/2020/NOTE-jlreq-20200811/#positioning_of_consecutive_opening_brackets_closing_brackets_comma_full_stops_and_middle_dots">jlreq</a><span class="mojikumi-line-end">。</span></p>
<h3 id="使用-css-去除标点的一半空白" class="heading"><a href="#使用-css-去除标点的一半空白" class="heading-anchor" aria-label="章节： 使用 CSS 去除标点的一半空白" tabindex="-1"></a><span>使用 CSS 去除标点的一半空白</span></h3>
<p>CSS 实现标点挤压有两种方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>使用 <a href="https://developer.mozilla.org/docs/Web/CSS/letter-spacing"><code>letter<wbr>-<wbr>spacing<wbr>: -<wbr>0<wbr>.<wbr>5em</code></a> 去掉右侧空白<span class="mojikumi-line-end">，</span><code>margin<wbr>-<wbr>left<wbr>: -<wbr>0<wbr>.<wbr>5em</code> 去掉左侧空白<span class="mojikumi-line-end">。</span></li>
<li>使用 <a href="https://developer.mozilla.org/docs/Web/CSS/font-feature-settings"><code>font<wbr>-<wbr>feature<wbr>-<wbr>settings<wbr>:</code></a> <a href="https://learn.microsoft.com/typography/opentype/spec/features_fj#halt"><code>"halt"</code></a> 将支持 halt 特性的字体变为半宽<span class="mojikumi-line-end">。</span></li>
</ul>
<p>使用 <code>letter<wbr>-<wbr>spacing</code> 是有讲究的<span class="mojikumi-line-end">，</span>比 <code>margin<wbr>-<wbr>right</code> 靠谱<span class="mojikumi-line-end">，</span>因为字符真的会只占半宽<span class="mojikumi-line-end">，</span>而不是占全宽但一半和下一个字符重叠<span class="mojikumi-line-end">，</span>甚至造成 overflow<span class="mojikumi-line-end">，</span>可能导致滚动条出现<span class="mojikumi-line-end">。</span>但 <code>letter<wbr>-<wbr>spacing</code> 不能去掉左侧空白<span class="mojikumi-line-end">，</span>就只能使用 <code>margin<wbr>-<wbr>left</code> 了<span class="mojikumi-line-end">。</span></p>
<p>通过 halt 特性变为半宽是更加靠谱的做法<span class="mojikumi-line-end">，</span>但不是所有字体都支持这一特性<span class="mojikumi-line-end">，</span>思源宋体是支持的<span class="mojikumi-line-end">，</span><span class="font-kai">霞鹜文楷</span> 不支持<span class="mojikumi-line-end">。</span>并且<span class="mojikumi-line-end">，</span>halt 只能变为半宽<span class="mojikumi-line-end">，</span>不能变成其他宽度<span class="mojikumi-line-end">。</span></p>
<h3 id="行首行尾标点的挤压" class="heading"><a href="#行首行尾标点的挤压" class="heading-anchor" aria-label="章节： 行首行尾标点的挤压" tabindex="-1"></a><span>行首行尾标点的挤压</span></h3>
<p>这里参考了 <a href="https://github.com/ethantw/Han">Han.css</a> 的实现<span class="mojikumi-line-end">，</span>就是把全宽的标点改成半宽标点和一个通过 <code>::before</code> 或 <code>::end</code> 添加的半宽的空格<span class="mojikumi-line-end">：</span></p>
<ul>
<li>因为是 pseudo element<span class="mojikumi-line-end">，</span>所以不影响文本内容<span class="mojikumi-line-start">（</span>例如复制出来的文本<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>因为是空格<span class="mojikumi-line-end">，</span>所以位于行首或行尾时就会发生<a href="https://www.w3.org/TR/2023/CRD-css-text-3-20230127/#white-space-phase-2">空格塌陷</a><span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="英文标点的处理" class="heading"><a href="#英文标点的处理" class="heading-anchor" aria-label="章节： 英文标点的处理" tabindex="-1"></a><span>英文标点的处理</span></h3>
<p>我采用了一个比较简单的判断英文标点的方法<span class="mojikumi-line-end">：</span></p>
<ul>
<li>空白一侧<span class="mojikumi-line-start">（</span>左括号<span class="mojikumi-line-end">、</span>左引号等是左侧<span class="mojikumi-line-end">，</span>其他一般是右侧<span class="mojikumi-line-end">）</span>是空格时是英文标点<span class="mojikumi-line-end">；</span></li>
<li>右单引号右侧是字母时是撇号<span class="mojikumi-line-end">。</span></li>
</ul>
<p>英文标点一般调为半宽即可<span class="mojikumi-line-end">，</span>但撇号半宽还是有些太宽了<span class="mojikumi-line-end">，</span>应该<span class="mojikumi-line-start">（</span>根据字体而定<span class="mojikumi-line-end">）</span>调成大约三分之一宽<span class="mojikumi-line-end">，</span>单引号也可以调窄一点<span class="mojikumi-line-end">，</span>所以可以特判一下单引号<span class="mojikumi-line-end">，</span>使用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class="mojikumi-line-end">。</span></p>
<h3 id="给霞鹜文楷添加-halt-特性" class="heading"><a href="#给霞鹜文楷添加-halt-特性" class="heading-anchor" aria-label="章节： 给霞鹜文楷添加 halt 特性" tabindex="-1"></a><span>给霞鹜文楷添加 halt 特性</span></h3>
<p>因为 <a href="https://github.com/lxgw/LxgwWenKai/issues/104">添加 halt 特性的 issue</a> 被拒了<span class="mojikumi-line-end">，</span>我就自己改了一个 <a href="https://github.com/ouuan/XiaWu-Punctuations">标点字体</a><span class="mojikumi-line-end">，</span>顺便把引号改成了和思源宋体一致的全宽以方便一起处理<span class="mojikumi-line-start">（</span>也可以理解为改引号宽度顺便添加 halt 特性<span class="mojikumi-line-end">，</span>毕竟没有 halt 也可以用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code> 凑合一下<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>具体可以看仓库里的 patch 文件<span class="mojikumi-line-end">。</span></p>
<h3 id="关于-chws-特性" class="heading"><a href="#关于-chws-特性" class="heading-anchor" aria-label="章节： 关于 chws 特性" tabindex="-1"></a><span>关于 chws 特性</span></h3>
<p><a href="https://learn.microsoft.com/typography/opentype/spec/features_ae#chws">chws 特性</a> 可以根据上下文自动挤压连续标点<span class="mojikumi-line-end">，</span>一眼看上去似乎比 halt 更好用<span class="mojikumi-line-end">。</span></p>
<p>思源宋体不支持这一特性<span class="mojikumi-line-end">，</span>只不过有 <a href="https://github.com/googlefonts/chws_tool">chws_tool</a> 可以用来转换<span class="mojikumi-line-end">。</span></p>
<p>但是<span class="mojikumi-line-end">，</span>chws 不支持行首行尾标点挤压<span class="mojikumi-line-end">，</span>而如果要支持行首行尾挤压<span class="mojikumi-line-end">，</span>就得把支持连续标点挤压的工作做一遍<span class="mojikumi-line-start">（</span>因为要知道哪些标点已经被挤成了半宽哪些只在行首行尾挤成半宽<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>这样一来 chws 就没多大意义了<span class="mojikumi-line-end">。</span></p>
<h3 id="yet-another-mojikumi？" class="heading"><a href="#yet-another-mojikumi？" class="heading-anchor" aria-label="章节： Yet another mojikumi？" tabindex="-1"></a><span>Yet another mojikumi？</span></h3>
<p>有一些现成的支持标点挤压的库<span class="mojikumi-line-end">，</span>例如 <a href="https://github.com/sivan/heti">heti</a> 和 <a href="https://github.com/ethantw/Han">Han.css</a><span class="mojikumi-line-end">。</span>但是我有一些需求<span class="mojikumi-line-end">：</span></p>
<ul>
<li>要能 SSG <span class="mojikumi">（</span>SSR<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>不能在客户端运行<span class="mojikumi-line-end">。</span>最好是能在 remark / rehype 中进行处理<span class="mojikumi-line-end">。</span></li>
<li>最好是尽量使用 halt 而非 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class="mojikumi-line-end">。</span></li>
<li>要能添加一些自定义的规则<span class="mojikumi-line-end">，</span>比如对单引号特殊处理<span class="mojikumi-line-end">。</span></li>
<li>我只需要标点挤压<span class="mojikumi-line-end">，</span>不想要一个 CSS 全家桶<span class="mojikumi-line-end">，</span>或者带有其他功能的 JS<span class="mojikumi-line-end">。</span></li>
</ul>
<p>现有的库难以同时满足上面这些需求<span class="mojikumi-line-end">，</span>所以我就自己写了<span class="mojikumi-line-end">。</span></p>
<p>本来想写一个通用的库<span class="mojikumi-line-end">，</span>但通用的逻辑貌似没多少代码<span class="mojikumi-line-end">，</span>不值得写成一个库<span class="mojikumi-line-end">。</span>而我的整个 remark 插件又有点 opinionated<span class="mojikumi-line-end">，</span>可能不太适合做成库<span class="mojikumi-line-start">（</span><s>懒得做成库</s><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>想用的话可以在遵守 <a href="https://github.com/ouuan/iles-blog/blob/master/LICENSE">AGPL 3.0</a> 的前提下直接复制<span class="mojikumi-line-start">（</span>本文提到的其他代码也是一样<span class="mojikumi-line-end">，</span>当然<span class="mojikumi-line-end">，</span>如果是两三行的代码片段就不至于 AGPL 了<span class="mojikumi-line-end">，</span>简单标一下出处就 OK<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h2 id="代码中的-unicode（cjk）的字体" class="heading"><a href="#代码中的-unicode（cjk）的字体" class="heading-anchor" aria-label="章节： 代码中的 Unicode（CJK）的字体" tabindex="-1"></a><span>代码中的 Unicode<span class="mojikumi-line-start">（</span>CJK<span class="mojikumi-line-end">）</span>的字体</span></h2>
<p><s>为什么马上要考抽代了你在这更新博客<span class="mojikumi-line-end">，</span>我也很想知道<span class="mojikumi-line-start">（</span></s> 其实是在一个群里看到有人在聊博客的等宽字体<span class="mojikumi-line-end">，</span>然后看了一眼自己的等宽字体<span class="mojikumi-line-end">，</span>差点没想起来这个 trick 在干什么<span class="mojikumi-line-end">。</span></p>
<p>很多等宽字体是没有 CJK 字形的<span class="mojikumi-line-end">，</span>在 Windows 的默认字体下<span class="mojikumi-line-end">，</span>fallback 到 <code>monospace</code> 时中文会显示为<code style="font-family: NSimSun, SimSun, serif;">宋体</code><span class="mojikumi-line-end">，</span>而一般来说应当是<code>黑体</code><span class="mojikumi-line-end">。</span>所以可以为 Unicode 部分专门指定一个 fallback font<span class="mojikumi-line-end">，</span>通过指定 <code>unicode<wbr>-<wbr>range</code> 来让 ASCII 字符依然 fallback 到 <code>monospace</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="css 代码块" data-v-ad49d235>css</h3><ile-root id="ile-2"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-2--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">@font-face</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">font-family</span><span style="color: #D6DEEB">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Monospace Unicode Fallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">src</span><span style="color: #D6DEEB">: </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Noto Sans Mono CJK SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Source Han Mono SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Noto Sans CJK SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Source Han Sans SC</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">       </span><span style="color: #C5E478">local</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Microsoft YaHei</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #80CBC4">unicode-range</span><span style="color: #D6DEEB">: </span><span style="color: #82AAFF">U+1000-fffff</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C5E478">:root</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">--default-mono-font</span><span style="color: #D6DEEB">: </span><span style="color: #7FDBCA">ui-monospace</span><span style="color: #D6DEEB">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Monospace Unicode Fallback</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">monospace</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">var</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">--default-emoji-font</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">@font-face</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">font-family</span><span style="color: #403F53">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Monospace Unicode Fallback</span><span style="color: #111111">&quot;</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">src</span><span style="color: #403F53">: </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Noto Sans Mono CJK SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Source Han Mono SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Noto Sans CJK SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Source Han Sans SC</span><span style="color: #111111">&quot;</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">       </span><span style="color: #4876D6">local</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Microsoft YaHei</span><span style="color: #111111">&quot;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">unicode-range</span><span style="color: #403F53">: </span><span style="color: #4876D6">U+1000-fffff</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #4876D6">:root</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">--default-mono-font</span><span style="color: #403F53">: </span><span style="color: #0C969B">ui-monospace</span><span style="color: #403F53">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Monospace Unicode Fallback</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #0C969B">monospace</span><span style="color: #403F53">, </span><span style="color: #4876D6">var</span><span style="color: #403F53">(</span><span style="color: #4876D6">--default-emoji-font</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/blog">blog</category>
            <category domain="https://ouuan.moe/tag/CSS">CSS</category>
            <category domain="https://ouuan.moe/tag/Web">Web</category>
            <category domain="https://ouuan.moe/tag/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB">经验分享</category>
        </item>
        <item>
            <title><![CDATA[DDPP 第四章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/01/ddpp-4</link>
            <guid>https://ouuan.moe/post/2023/01/ddpp-4</guid>
            <pubDate>Tue, 07 Feb 2023 07:58:32 GMT</pubDate>
            <description><![CDATA[







<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第四章 <span class="mojikumi">“</span>Digital Design Practices<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为数字设计的文档规范<span class="mojikumi-line-end">、</span>初步认识 circuit timing<span class="mojikumi-line-end">、</span>基于 HDL 的数字设计所使用的工具与设计流程<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[







<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第四章 <span class="mojikumi">“</span>Digital Design Practices<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为数字设计的文档规范<span class="mojikumi-line-end">、</span>初步认识 circuit timing<span class="mojikumi-line-end">、</span>基于 HDL 的数字设计所使用的工具与设计流程<span class="mojikumi-line-end">。</span></p>

<h2 id="documentation-standards" class="heading"><a href="#documentation-standards" class="heading-anchor" aria-label="章节： Documentation Standards" tabindex="-1"></a><span>Documentation Standards</span></h2>
<p>一个 <dfn>document package</dfn> 通常至少包含以下内容<span class="mojikumi-line-end">：</span></p>
<dl>
<dt>specification (<i>spec</i>)</dt>
<dd>准确地描述系统的所有输入和输出以及功能<span class="mojikumi-line-end">。</span>
</dd>
<dt>block diagram</dt>
<dd>大致描述系统的主要模块之间的连接<span class="mojikumi-line-end">。</span>
</dd>
<dt>logic-device description</dt>
<dd>分别描述每个 <span class="mojikumi">“</span>custom<span class="mojikumi">”</span> logic device 的功能<span class="mojikumi-line-end">，</span>这里 <span class="mojikumi">“</span>custom<span class="mojikumi">”</span> 是与现成的<span class="mojikumi-line-end">、</span>由其他制造商生产的相对<span class="mojikumi-line-end">，</span>例如 ASIC<span class="mojikumi-line-end">、</span>FPGA<span class="mojikumi-line-end">、</span>CPLD 等都是 custom 的<span class="mojikumi-line-end">。</span>
</dd>
<dt>schematic diagram</dt>
<dd>对每个模块的细节描述<span class="mojikumi-line-end">，</span>比 <i>logic diagram</i> 更加细致<span class="mojikumi-line-end">，</span>在 board-level design 中是包括 IC type<span class="mojikumi-line-end">、</span>reference designator<span class="mojikumi-line-end">、</span>signal name<span class="mojikumi-line-end">、</span>pin number 等细节信息的电路图<span class="mojikumi-line-end">，</span>在 FPGA<span class="mojikumi-line-end">、</span>CPLD 中则由 HDL model 来充当这一角色<span class="mojikumi-line-end">。</span>
</dd>
<dt>timing diagram</dt>
<dd>展示各个信号随时间的变化情况<span class="mojikumi-line-end">。</span>
</dd>
<dt>circuit description</dt>
<dd>解释电路的工作原理以及注意事项<span class="mojikumi-line-end">。</span>
</dd>
<dt>test plan</dt>
<dd>如何对系统进行测试<span class="mojikumi-line-end">。</span>
</dd>
</dl>
<p>感觉大致上来说<span class="mojikumi-line-end">，</span>与软件进行类比的话<span class="mojikumi-line-end">，</span>logic-device description 像是组件的 API 文档<span class="mojikumi-line-end">，</span>circuit description 像是代码内的注释<span class="mojikumi-line-end">，</span>block diagram 像是整个程序的结构图<span class="mojikumi-line-end">，</span>schematic 则是<span class="mojikumi-line-start">“</span>代码<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span>总之<span class="mojikumi-line-end">，</span>这个 document package 和软件的文档不一样<span class="mojikumi-line-end">，</span>还包含 schematic 这种具体实现<span class="mojikumi-line-end">。</span></p>
<h3 id="block-diagrams" class="heading"><a href="#block-diagrams" class="heading-anchor" aria-label="章节： Block Diagrams" tabindex="-1"></a><span>Block Diagrams</span></h3>
<p>大概就是 DDPP5 Fig.4-1 这种感觉<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-1.2330b557.webp"><img srcset="/assets/ddpp-fig-4-1.9607283c.png" loading="lazy" src="/assets/ddpp-fig-4-1.9607283c.png" width="914" height="856" alt="block diagram for a shift-and-add multiplier"></picture></p>
<p>整个系统被划分为若干 component<span class="mojikumi-line-end">，</span>block diagram 展示它们之间最主要的一些连线而略去细节<span class="mojikumi-line-end">。</span></p>
<p>在 block diagram 中<span class="mojikumi-line-end">，</span>信号的流动可以是任意方向的<span class="mojikumi-line-end">，</span>不需要都沿一个方向<span class="mojikumi-line-end">。</span></p>
<h3 id="gate-symbols" class="heading"><a href="#gate-symbols" class="heading-anchor" aria-label="章节： Gate Symbols" tabindex="-1"></a><span>Gate Symbols</span></h3>
<p>根据 generalized DeMorgan<span class="mojikumi-narrow-left">’</span>s theorem<span class="mojikumi-line-end">，</span>AND<span class="mojikumi-line-end">、</span>OR<span class="mojikumi-line-end">、</span>NAND<span class="mojikumi-line-end">、</span>NOR<span class="mojikumi-line-end">、</span>NOT (inverter)<span class="mojikumi-line-end">、</span>BUFFER (non-inverting buffer) 各自都有两种不同的画法<span class="mojikumi-line-end">，</span>如 DDPP5 Fig.4-4 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-4.93ea8d42.webp"><img srcset="/assets/ddpp-fig-4-4.0796c532.png" loading="lazy" src="/assets/ddpp-fig-4-4.0796c532.png" width="1324" height="517" alt="在 generalized DeMorgan&#39;s theorem 下等价的 gate symbols"></picture></p>
<h3 id="signal-names-and-active-levels" class="heading"><a href="#signal-names-and-active-levels" class="heading-anchor" aria-label="章节： Signal Names and Active Levels" tabindex="-1"></a><span>Signal Names and Active Levels</span></h3>
<p>为了兼容更多的 HDL 和 EDA<span class="mojikumi-line-end">，</span>signal name 最好不要有特殊字符<span class="mojikumi-line-end">，</span>而是只使用字母<span class="mojikumi-line-end">、</span>数字<span class="mojikumi-line-end">、</span>下划线<span class="mojikumi-line-end">，</span>以字母开头<span class="mojikumi-line-end">。</span></p>
<p>signal name 往往代表某种状态或某种操作<span class="mojikumi-line-end">，</span>但并不总是在位于 HIGH 时表示相应的意思<span class="mojikumi-line-end">。</span>每个 signal name 会有一个 <dfn>active level</dfn><span class="mojikumi-line-end">，</span><dfn>active-high</dfn> 意味着这个 signal 位于 HIGH 时<span class="mojikumi-line-start">（</span>在 positive-logic 中即为 1 时<span class="mojikumi-line-end">）</span>表示这某种状态或某种操作<span class="mojikumi-line-end">，</span><dfn>active-low</dfn> 则与之相反<span class="mojikumi-line-end">。</span>一个 signal 位于其 active level 时<span class="mojikumi-line-end">，</span>我们说它 is <dfn>asserted</dfn><span class="mojikumi-line-end">，</span>反之则说它 is <dfn>negated</dfn> (<i>deasserted</i>)<span class="mojikumi-line-end">。</span></p>
<p>signal name 会以某种 naming convention 来表示其 active level<span class="mojikumi-line-end">，</span>DDPP5 采用的 convention 是 active-high 保持不变<span class="mojikumi-line-end">，</span>而 active-low 加上 <code>_L</code> 后缀<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span><code>READY</code> 为 1 / <code>READY_L</code> 为 0 表示 ready<span class="mojikumi-line-end">，</span><code>READY</code> 为 0 / <code>READY_L</code> 为 1 表示没有 ready<span class="mojikumi-line-end">。</span></p>
<p>一般来说 active-high 理解起来相对容易<span class="mojikumi-line-end">，</span>但由于性能<span class="mojikumi-line-end">、</span>兼容性等原因也经常会需要 active-low<span class="mojikumi-line-end">。</span></p>
<h3 id="active-levels-for-pins" class="heading"><a href="#active-levels-for-pins" class="heading-anchor" aria-label="章节： Active Levels for Pins" tabindex="-1"></a><span>Active Levels for Pins</span></h3>
<p>gate 或其他 logic element 的 pin 上有 inversion bubble 时<span class="mojikumi-line-end">，</span>除了理解成不同的逻辑函数<span class="mojikumi-line-end">，</span>也可以理解成 active-low 的输入/输出<span class="mojikumi-line-end">。</span></p>
<p>例如<span class="mojikumi-line-end">，</span>AND<span class="mojikumi-line-end">、</span>NAND<span class="mojikumi-line-end">、</span>NOR<span class="mojikumi-line-end">、</span>OR 可以表示四种不同 active level 的 AND<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>DDPP5 Fig.4-6<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-6.751e7c1c.webp"><img srcset="/assets/ddpp-fig-4-6.ab9cd084.png" loading="lazy" src="/assets/ddpp-fig-4-6.ab9cd084.png" width="1317" height="134" alt="四种不同 active level 的 AND: AND, NAND, NOR, OR"></picture></p>
<p>因为 inverting gate 往往性能更好<span class="mojikumi-line-end">，</span>可以将 noninverting gate 替换为 inverting gate<span class="mojikumi-line-end">，</span>而理解成输入输出的 active level 相反的 noninverting gate<span class="mojikumi-line-end">。</span></p>
<h3 id="bubble-to-bubble-logic-design" class="heading"><a href="#bubble-to-bubble-logic-design" class="heading-anchor" aria-label="章节： Bubble-to-Bubble Logic Design" tabindex="-1"></a><span>Bubble-to-Bubble Logic Design</span></h3>
<p>在画电路图时<span class="mojikumi-line-end">，</span>尽量将 active-low 的信号连接到 inversion bubble 上<span class="mojikumi-line-end">，</span>在理解电路时就可以少一些 logical negation<span class="mojikumi-line-start">（</span>本质上是因为 active-low 信号的两侧都有 inversion bubble<span class="mojikumi-line-end">，</span>从而能够消去<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>使电路更好理解<span class="mojikumi-line-end">。</span></p>
<h3 id="constant-logic-signals" class="heading"><a href="#constant-logic-signals" class="heading-anchor" aria-label="章节： Constant Logic Signals" tabindex="-1"></a><span>Constant Logic Signals</span></h3>
<p>电路设计中偶尔会用到 constant 0 <span class="mojikumi">（</span><i>ground</i><span class="mojikumi">）</span> 和 constant 1 <span class="mojikumi">（</span><i>power-supply voltage</i><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>在电路图中它们的记号如下图所示<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>DDPP5 Fig.4-9 (b))</p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-9-b.998459d0.webp"><img srcset="/assets/ddpp-fig-4-9-b.84bd89c1.png" loading="lazy" src="/assets/ddpp-fig-4-9-b.84bd89c1.png" width="502" height="273" alt="constant 0 and 1 inputs with individual gates"></picture></p>
<h3 id="drawing-layout" class="heading"><a href="#drawing-layout" class="heading-anchor" aria-label="章节： Drawing Layout" tabindex="-1"></a><span>Drawing Layout</span></h3>
<p>logic diagram 和 schematic 一般要从左到右画<span class="mojikumi-line-end">，</span>所有输入都在最左侧<span class="mojikumi-line-end">，</span>所有输出都在最右侧<span class="mojikumi-line-end">。</span></p>
<p>在线路发生交叉时<span class="mojikumi-line-end">，</span>有两种区分重叠和连接的方法<span class="mojikumi-line-end">：</span></p>
<ul>
<li>连接处打点<span class="mojikumi-line-end">，</span>重叠不打点</li>
<li>连接都形如 ⟂ / ⊤<span class="mojikumi-line-end">，</span>重叠则形如 +</li>
</ul>
<p>由于 schematic 需要很多细节<span class="mojikumi-line-end">，</span>一张图可能画不下<span class="mojikumi-line-end">，</span>有两种处理方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>分为多张并列的图<span class="mojikumi-line-end">，</span>标注出跨越两张图的连线<span class="mojikumi-line-end">。</span></li>
<li>将图组织为树状<span class="mojikumi-line-start">（</span>与 Web 前端的 component 类似<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>树根与 block diagram 类似<span class="mojikumi-line-end">。</span>图中的 component 可以是另一张 schematic<span class="mojikumi-line-end">，</span>也可以是 standard logic device 或者 HDL model<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="buses" class="heading"><a href="#buses" class="heading-anchor" aria-label="章节： Buses" tabindex="-1"></a><span>Buses</span></h3>
<p>为了方便画图<span class="mojikumi-line-end">，</span>多个并列的信号可以画成一个 <dfn>bus</dfn><span class="mojikumi-line-end">。</span></p>
<p>bus 的名字一般形如 <code>ADDR[15:0]</code><span class="mojikumi-line-end">，</span>表示 <code>ADDR15</code><span class="mojikumi-line-end">、</span><code>ADDR14</code><span class="mojikumi-line-end">、</span>……<span class="mojikumi-line-end">、</span><code>ADDR1</code><span class="mojikumi-line-end">、</span><code>ADDR0</code><span class="mojikumi-line-end">。</span></p>
<p>在图上 bus 用一条较粗的线表示<span class="mojikumi-line-end">，</span>从这条粗线上连出一条细线表示从中 <span class="mojikumi">“</span>pull<span class="mojikumi">”</span> 出单独一个信号<span class="mojikumi-line-end">。</span></p>
<h3 id="additional-schematic-information" class="heading"><a href="#additional-schematic-information" class="heading-anchor" aria-label="章节： Additional Schematic Information" tabindex="-1"></a><span>Additional Schematic Information</span></h3>
<p>在 board-level design 中<span class="mojikumi-line-end">，</span>一个 schematic 在电路图的基础上还需要标明 IC type<span class="mojikumi-line-end">、</span>reference designator<span class="mojikumi-line-end">、</span>pin number 等信息<span class="mojikumi-line-end">，</span>用来精确地描述电路<span class="mojikumi-line-end">。</span></p>
<p>其中<span class="mojikumi-line-end">，</span>IC type 描述了 IC 的功能<span class="mojikumi-line-end">，</span><dfn>reference designator</dfn> 用来在一类 IC 中指定特定的一个实例<span class="mojikumi-line-end">，</span><dfn>pin number</dfn> 用来指定从哪连到哪<span class="mojikumi-line-end">。</span></p>
<p>全都标上长这样<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>DDPP5 Fig.4-18<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-18.957dcbfd.webp"><img srcset="/assets/ddpp-fig-4-18.e9c4823e.png" loading="lazy" src="/assets/ddpp-fig-4-18.e9c4823e.png" width="980" height="645" alt="schematic diagram for a circuit using several SSI parts"></picture></p>
<h2 id="circuit-timing" class="heading"><a href="#circuit-timing" class="heading-anchor" aria-label="章节： Circuit Timing" tabindex="-1"></a><span>Circuit Timing</span></h2>
<p>在时序电路中<span class="mojikumi-line-end">，</span>电路由一个 clock 控制<span class="mojikumi-line-end">，</span>而 clock 的频率会根据完成一步操作在最坏情况下的用时来制订<span class="mojikumi-line-end">，</span>所以计算<span class="mojikumi-line-end">、</span>优化电路的 timing 对电路的性能和正确性都非常重要<span class="mojikumi-line-end">。</span></p>
<h3 id="timing-diagrams" class="heading"><a href="#timing-diagrams" class="heading-anchor" aria-label="章节： Timing Diagrams" tabindex="-1"></a><span>Timing Diagrams</span></h3>
<p><i>timing diagram</i> 用来展示电路里各个信号随时间变化的情况<span class="mojikumi-line-end">，</span>如 DDPP5 Fig.4-19 (b)(c) 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-19-bc.303e1075.webp"><img srcset="/assets/ddpp-fig-4-19-bc.010519a3.png" loading="lazy" src="/assets/ddpp-fig-4-19-bc.010519a3.png" width="907" height="729" alt="(b) 展示 causality 和 propagation delay 的 timing diagram (c) 展示 minimum / maximum delay 的 timing diagram"></picture></p>
<p>信号的转变不是瞬间发生的<span class="mojikumi-line-end">，</span>从一个状态到另一个状态的用时称作 <dfn>transition time</dfn><span class="mojikumi-line-end">，</span>从 LOW 到 HIGH 的用时叫做 <dfn>rise time</dfn><span class="mojikumi-line-end">，</span>从 HIGH 到 LOW 的用时叫做 <dfn>fall time</dfn><span class="mojikumi-line-end">。</span></p>
<p>在图 (b) 中<span class="mojikumi-line-end">，</span>不同的箭头用来表示 transition 之间的 causality <span class="mojikumi">（</span>因果关系<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>有因果关系的 transition 并不是立刻一个接着一个发生<span class="mojikumi-line-end">，</span>而是会有 <i>delay</i><span class="mojikumi-line-end">，</span>不同的信号<span class="mojikumi-line-end">、</span>路径会有不同的 delay<span class="mojikumi-line-end">。</span>delay 一般是指两个 transition 各自中点的距离<span class="mojikumi-line-end">。</span></p>
<p>很多因素都会对 delay 造成影响<span class="mojikumi-line-end">，</span>所以 delay 一般不是单个数字<span class="mojikumi-line-end">，</span>而是一个区间<span class="mojikumi-line-end">。</span>图 (c) 中标明了 minimum delay 和 maximum delay<span class="mojikumi-line-end">。</span></p>
<p>有时候 timing diagram 不需要区分 rise 和 fall<span class="mojikumi-line-end">，</span>例如用来存储数据的信号<span class="mojikumi-line-end">，</span>就可以如 DDPP5 Fig.4-20 (a) 这样画<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-20-a.b0a1e1fd.webp"><img srcset="/assets/ddpp-fig-4-20-a.8ccddcf9.png" loading="lazy" src="/assets/ddpp-fig-4-20-a.8ccddcf9.png" width="799" height="365" alt="不区分 rise 和 fall 的 timing diagram"></picture></p>
<p>可以将一个 bus 画在一起<span class="mojikumi-line-end">，</span>也可以用数字标注 bus 的取值<span class="mojikumi-line-end">，</span>如 DDPP5 Fig.4-20 (b) 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-4-20-b.97c7ef5b.webp"><img srcset="/assets/ddpp-fig-4-20-b.d8170ed4.png" loading="lazy" src="/assets/ddpp-fig-4-20-b.d8170ed4.png" width="794" height="229" alt="将 bus 画在一起的 timing diagram"></picture></p>
<h3 id="propagation-delay" class="heading"><a href="#propagation-delay" class="heading-anchor" aria-label="章节： Propagation Delay" tabindex="-1"></a><span>Propagation Delay</span></h3>
<p><dfn>propagation delay</dfn> 指的是电路的某个输入发生改变后沿着某个路径产生某个输出的 delay<span class="mojikumi-line-end">，</span>一般记作 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi mathvariant="normal">p</mi><mi mathvariant="normal">X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{\mathrm{pX}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9012em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">pX</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>其中 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">X</mi></mrow><annotation encoding="application/x-tex">\mathrm{X}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathrm">X</span></span></span></span></span> 用来标识这个路径<span class="mojikumi-line-end">。</span></p>
<p>影响 propagation delay 的因素有很多<span class="mojikumi-line-end">，</span>例如<span class="mojikumi-line-end">：</span></p>
<ul>
<li>Power-supply voltage: 包括标定的电压<span class="mojikumi-line-end">，</span>以及小的电压波动</li>
<li>Temperature: 包括环境温度和电路工作产生的热量</li>
<li>Output loading: 电路的输出可能与后续电路的很多个输入相连<span class="mojikumi-line-end">，</span>连接到的输入越多<span class="mojikumi-line-end">，</span>将信号传递过去就用时越长</li>
<li>Input rise and fall times: 如果输入的 transition 慢<span class="mojikumi-line-end">，</span>也会计入 propagation delay</li>
<li>Transition direction: 有时 rise 和 fall 的用时会不同</li>
<li>Speed-of-light delays: 如果电路的物理尺寸大<span class="mojikumi-line-end">，</span>或者电路速度非常快<span class="mojikumi-line-end">，</span>光速的限制就不能忽略</li>
<li>Noise and crosstalk: 环境中的各种干扰<span class="mojikumi-line-end">，</span>以及相邻线路之间的干扰</li>
<li>Manufacturing tolerances: 元件被制造出来的时候可能有细微的差异</li>
</ul>
<p>一般来说<span class="mojikumi-line-end">，</span>计算 propagation delay 可以不考虑这么多因素<span class="mojikumi-line-end">，</span>而只需根据生产商提供的元件的 <span class="mojikumi">“</span>maximum<span class="mojikumi">”</span> <span class="mojikumi">“</span>typical<span class="mojikumi">”</span> <span class="mojikumi">“</span>minimum<span class="mojikumi">”</span> propagation delay 来进行计算<span class="mojikumi-line-end">。</span></p>
<p>如果电路有多个输入输出<span class="mojikumi-line-end">，</span>就会有很多条路径需要计算 delay<span class="mojikumi-line-end">。</span></p>
<a id="glitch-与-delay" name="glitch-与-delay" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>glitch 与 delay</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>第三章中提到的 <a href="/post/2023/01/ddpp-3#timing-hazards">glitch</a> 是否实际发生<span class="mojikumi-line-end">，</span>与电路的 delay 密切相关<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h3 id="timing-specifications" class="heading"><a href="#timing-specifications" class="heading-anchor" aria-label="章节： Timing Specifications" tabindex="-1"></a><span>Timing Specifications</span></h3>
<p>生产商一般会提供元件在某种条件下每个路径<span class="mojikumi-line-end">、</span>每种 transition 方向的 propagation delay 的范围<span class="mojikumi-line-end">，</span>一般会提供 maximum delay 和 minimum delay<span class="mojikumi-line-end">，</span>也可能提供一个 <span class="mojikumi">“</span>typical<span class="mojikumi">”</span> delay<span class="mojikumi-line-end">。</span></p>
<p>一般情况下<span class="mojikumi-line-end">，</span>maximum delay 是最重要的<span class="mojikumi-line-end">，</span>minimum delay 只在少数情况下需要考虑<span class="mojikumi-line-end">，</span>而依赖于 typical delay 是不靠谱的<span class="mojikumi-line-end">。</span></p>
<h3 id="timing-analysis-tools" class="heading"><a href="#timing-analysis-tools" class="heading-anchor" aria-label="章节： Timing Analysis Tools" tabindex="-1"></a><span>Timing Analysis Tools</span></h3>
<p>在复杂的电路中<span class="mojikumi-line-end">，</span>往往需要借助 EDA tool 来计算 timing<span class="mojikumi-line-end">。</span>比起手动计算<span class="mojikumi-line-end">，</span>EDA 可能会利用元件附带的比 min/max delay 更加详细的信息来更加精确地计算 delay<span class="mojikumi-line-end">。</span>可以使用模拟器<span class="mojikumi-line-end">，</span>手动设计输入<span class="mojikumi-line-end">，</span>来计算 delay<span class="mojikumi-line-end">。</span>也可以使用 timing analysis program<span class="mojikumi-line-end">，</span>来自动计算出所有可能的 delay<span class="mojikumi-line-end">。</span></p>
<p>在设计的不同阶段可能会对 timing 进行多次估计和计算<span class="mojikumi-line-end">，</span>在设计基本完成时如果发现 propagation delay 不符合设计要求<span class="mojikumi-line-end">，</span>可能需要进行调整<span class="mojikumi-line-end">，</span>例如针对 critical path 进行线路优化<span class="mojikumi-line-end">，</span>将 critical path 上的元件尽量放在相邻的位置<span class="mojikumi-line-end">，</span>将 high-fanout 的信号复制几分来减轻 output load……这样对 timing 进行调整的过程可能会反复进行很多遍<span class="mojikumi-line-end">，</span>被称作 <dfn>timing closure</dfn><span class="mojikumi-line-end">。</span></p>
<h2 id="hdl-based-digital-design" class="heading"><a href="#hdl-based-digital-design" class="heading-anchor" aria-label="章节： HDL-Based Digital Design" tabindex="-1"></a><span>HDL-Based Digital Design</span></h2>
<h3 id="eda-tool-suites-for-hdls" class="heading"><a href="#eda-tool-suites-for-hdls" class="heading-anchor" aria-label="章节： EDA Tool Suites for HDLs" tabindex="-1"></a><span>EDA Tool Suites for HDLs</span></h3>
<dl>
<dt>text editor</dt>
<dd>包含代码高亮等功能的 HDL source file 编辑器<span class="mojikumi-line-end">。</span>
</dd>
<dt>compiler</dt>
<dd>检查代码中的语法错误<span class="mojikumi-line-end">，</span>将 HDL 编译为 RTL <span class="mojikumi">（</span>register-transfer language<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>
</dd>
<dt>synthesizer (synthesis tool)</dt>
<dd>将 RTL design synthesis 到某个具体的 hardware technology 上<span class="mojikumi-line-end">，</span>通常分为若干步骤<span class="mojikumi-line-end">：</span>
<ol>
<li>mapping: 将 RTL design 对应到具体的 hardware element</li>
<li>placement: 在 FPGA / CPLD 设计中<span class="mojikumi-line-end">，</span>为每个 element 选择具体的 programmable resource instance<span class="mojikumi-line-end">；</span>在 ASIC 设计中<span class="mojikumi-line-end">，</span>为各种 basic building block 安排位置</li>
<li>routing: 在 FPGA / ASIC 设计中<span class="mojikumi-line-end">，</span>在 element 之间连线<span class="mojikumi-line-start">（</span>CPLD 中连线是固定的<span class="mojikumi-line-end">，</span>要根据连线选择 programmable resource<span class="mojikumi-line-end">）</span></li>
</ol>
</dd>
<dt>simulator</dt>
<dd>对给定的 HDL model 和随时间变化的输入<span class="mojikumi-line-end">，</span>计算出随时间变化的输出<span class="mojikumi-line-end">。</span>输入可以是手动编辑的<span class="mojikumi-line-end">，</span>由 <i>test bench</i> 生成的<span class="mojikumi-line-end">，</span>或者通过 <i>waveform editor</i> 编辑的<span class="mojikumi-line-end">。</span>输出可以是波形图或者列表<span class="mojikumi-line-end">，</span>还可能包含警告<span class="mojikumi-line-end">。</span>
</dd>
<dt>template generator</dt>
<dd>生成常用的代码模板<span class="mojikumi-line-end">。</span>
</dd>
<dt>schematic viewer</dt>
<dd>由 HDL model <span class="mojikumi">（</span>RTL<span class="mojikumi">）</span> 或 synthesized result 生成 schematic diagram<span class="mojikumi-line-end">，</span>synthesis 前后的 schematic diagram 可能会有很大的不同<span class="mojikumi-line-end">，</span>但功能是一致的<span class="mojikumi-line-end">。</span>
</dd>
<dt>chip viewer</dt>
<dd>查看 synthesized result 中的物理布局和连线<span class="mojikumi-line-end">。</span>
</dd>
<dt>constraints editor</dt>
<dd>给 synthesizer 调参<span class="mojikumi-line-end">，</span>例如设置 timing 要求<span class="mojikumi-line-end">，</span>调整优化目标<span class="mojikumi-line-end">。</span>
</dd>
<dt>timing analyzer</dt>
<dd>计算某些或全部路径的 delay<span class="mojikumi-line-end">。</span>
</dd>
<dt>back annotator</dt>
<dd>将 timing analyzer 的计算结果插入到 HDL model 中<span class="mojikumi-line-end">，</span>以在 simulation 中展现出 timing<span class="mojikumi-line-end">。</span>
</dd>
</dl>
<h3 id="hdl-based-design-flow" class="heading"><a href="#hdl-based-design-flow" class="heading-anchor" aria-label="章节： HDL-Based Design Flow" tabindex="-1"></a><span>HDL-Based Design Flow</span></h3>
<ol>
<li>specification / hierarchy / block diagram</li>
<li>coding</li>
<li>compilation</li>
<li>simulation / functional verification / pre-fitting timing verification</li>
<li>mapping</li>
<li>fitting / place &#x26; route</li>
<li>post-fitting timing verification</li>
</ol>
<p>其中<span class="mojikumi-line-end">，</span>前四步被称作 <dfn>front-end steps</dfn><span class="mojikumi-line-end">，</span>后三步被称作 <dfn>back-end steps</dfn><span class="mojikumi-line-end">。</span></p>
<p>设计过程一般不会是一步一步顺着来的<span class="mojikumi-line-end">，</span>而是会不断反复<span class="mojikumi-line-end">。</span>为了少折腾<span class="mojikumi-line-end">，</span>第一步中总体设计的合理性<span class="mojikumi-line-end">，</span>以及第四步中进入 back-end steps 前的测试<span class="mojikumi-line-end">，</span>都非常重要<span class="mojikumi-line-end">。</span>由于精确的 timing 计算依赖于具体的 fitting<span class="mojikumi-line-end">，</span>在第七步发现 timing 不符合要求而推倒重来也是很有可能的<span class="mojikumi-line-end">。</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/ddpp">ddpp</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[String.prototype.replace 与隐藏的“$”]]></title>
            <link>https://ouuan.moe/post/2023/01/string-prototype-replace</link>
            <guid>https://ouuan.moe/post/2023/01/string-prototype-replace</guid>
            <pubDate>Sun, 29 Jan 2023 12:16:32 GMT</pubDate>
            <description><![CDATA[<p>tl;dr: <code>replace</code> 的第二个参数应当使用字面量或函数<span class="mojikumi-line-end">，</span>不应使用带变量的字符串表达式<span class="mojikumi-line-end">，</span>否则可能发生意想不到的错误替换<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p>tl;dr: <code>replace</code> 的第二个参数应当使用字面量或函数<span class="mojikumi-line-end">，</span>不应使用带变量的字符串表达式<span class="mojikumi-line-end">，</span>否则可能发生意想不到的错误替换<span class="mojikumi-line-end">。</span></p>

<h2 id="string-prototype-replace-的第二个参数" class="heading"><a href="#string-prototype-replace-的第二个参数" class="heading-anchor" aria-label="章节： String.prototype.replace 的第二个参数" tabindex="-1"></a><span>String.prototype.replace 的第二个参数</span></h2>
<p>(reference: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_the_replacement"><code>String<wbr>.<wbr>prototype<wbr>.<wbr>replace<wbr>()</code> - JavaScript | MDN</a>)</p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="javascript 代码块" data-v-ad49d235>javascript</h3><ile-root id="ile-3"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-3--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">replace</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">pattern</span><span style="color: #D6DEEB">, </span><span style="color: #D7DBE0">replacement</span><span style="color: #D6DEEB">);</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">replace</span><span style="color: #403F53">(pattern, replacement);</span></span></code></pre></div></section>
<p>第二个参数 <code>replacement</code> 可以是字符串或函数<span class="mojikumi-line-end">，</span>如果是函数<span class="mojikumi-line-end">，</span>则由匹配信息作为参数计算出 replacement<span class="mojikumi-line-end">，</span>如果是字符串<span class="mojikumi-line-end">，</span>则可以使用一些 special replacement pattern<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto my-6"><table>
<thead>
<tr>
<th align="center">Pattern</th>
<th align="center">Inserts</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><code>$$</code></td>
<td align="center">Inserts a <code>"$"</code>.</td>
</tr>
<tr>
<td align="center"><code>$&#x26;</code></td>
<td align="center">Inserts the matched substring.</td>
</tr>
<tr>
<td align="center"><code>$`</code></td>
<td align="center">Inserts the portion of the string that precedes the matched substring.</td>
</tr>
<tr>
<td align="center"><code>$'</code></td>
<td align="center">Inserts the portion of the string that follows the matched substring.</td>
</tr>
<tr>
<td align="center"><code>$n</code></td>
<td align="center">Inserts the <code>n</code>th (1-indexed) capturing group where <code>n</code> is a positive integer less than 100.</td>
</tr>
<tr>
<td align="center"><code class="important-whitespace-nowrap">$&lt;Name&gt;</code></td>
<td align="center">Inserts the named capturing group where <code>Name</code> is the group name.</td>
</tr>
</tbody>
</table></div>
<h2 id="使用变量作为-replacement-带来的问题" class="heading"><a href="#使用变量作为-replacement-带来的问题" class="heading-anchor" aria-label="章节： 使用变量作为 replacement 带来的问题" tabindex="-1"></a><span>使用变量作为 replacement 带来的问题</span></h2>
<p>我实际遇到的问题是 <a href="https://github.com/ElMassimo/iles/issues/224">iles#224</a><span class="mojikumi-line-end">，</span>由于使用了模板字符串作为 replacement<span class="mojikumi-line-end">，</span>在变量中包含上面这些 special replacement pattern 时<span class="mojikumi-line-end">，</span>就会错误地替换<span class="mojikumi-line-end">。</span></p>
<p>解决方法也很简单<span class="mojikumi-line-end">，</span>将含变量的表达式改成函数<span class="mojikumi-line-start">（</span>前面加上 <code>() => </code><span class="mojikumi-line-end">）</span>就可以了<span class="mojikumi-line-end">：</span><a href="https://stackoverflow.com/questions/28102491/javascript-better-way-to-escape-dollar-signs-in-the-string-used-by-string-prot">regex - javascript - Better Way to Escape Dollar Signs in the String Used By <code>String<wbr>.<wbr>prototype<wbr>.<wbr>replace</code> - Stack Overflow</a><span class="mojikumi-line-end">。</span></p>
<p>因为解决的代价非常小<span class="mojikumi-line-end">，</span>虽然有的时候根据代码逻辑可以推断出 replacement 不含 <code>$</code><span class="mojikumi-line-end">，</span>依然可以认为<span class="mojikumi-line-end">，</span>凡是 replacement 需要用到变量的<span class="mojikumi-line-end">，</span>都应当替换成函数<span class="mojikumi-line-end">。</span></p>
<h2 id="使用-eslint-检测这一问题" class="heading"><a href="#使用-eslint-检测这一问题" class="heading-anchor" aria-label="章节： 使用 ESLint 检测这一问题" tabindex="-1"></a><span>使用 ESLint 检测这一问题</span></h2>
<p><a href="https://github.com/ouuan/eslint-config/commit/166e332dbdf8dc2ab9ff918302ada13fbd487ead">写了个</a> <a href="https://eslint.org/docs/latest/rules/no-restricted-syntax"><code>no<wbr>-<wbr>restricted<wbr>-<wbr>syntax</code></a> 的配置<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="javascript 代码块" data-v-ad49d235>javascript</h3><ile-root id="ile-4"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-4--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">  rules: {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">no-restricted-syntax</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">: [</span></span>
<span><span style="color: #D6DEEB">      </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">error</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">      {</span></span>
<span><span style="color: #D6DEEB">        selector: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">CallExpression[callee.property.name=&#39;replace&#39;] &gt; .arguments:nth-child(2):not(Literal):not(ArrowFunctionExpression):not(FunctionExpression)</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">        message: </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">Only literals and functions are permitted as the 2nd argument of String.prototype.replace. Use a function that returns the expression instead.</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">      },</span></span>
<span><span style="color: #D6DEEB">    ],</span></span>
<span><span style="color: #D6DEEB">  },</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">  rules: {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #111111">&#39;</span><span style="color: #C96765">no-restricted-syntax</span><span style="color: #111111">&#39;</span><span style="color: #403F53">: [</span></span>
<span><span style="color: #403F53">      </span><span style="color: #111111">&#39;</span><span style="color: #C96765">error</span><span style="color: #111111">&#39;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">      {</span></span>
<span><span style="color: #403F53">        selector: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">CallExpression[callee.property.name=&#39;replace&#39;] &gt; .arguments:nth-child(2):not(Literal):not(ArrowFunctionExpression):not(FunctionExpression)</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">        message: </span><span style="color: #111111">&#39;</span><span style="color: #C96765">Only literals and functions are permitted as the 2nd argument of String.prototype.replace. Use a function that returns the expression instead.</span><span style="color: #111111">&#39;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">      },</span></span>
<span><span style="color: #403F53">    ],</span></span>
<span><span style="color: #403F53">  },</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p>因为只是分析 AST<span class="mojikumi-line-end">，</span>有很多情况会误报<span class="mojikumi-line-end">，</span>例如 replacement 是一个函数名<span class="mojikumi-line-end">，</span>但实际代码应该很少出现这样的情况<span class="mojikumi-line-end">，</span>真遇到了的话再套一层函数就 ok 了<span class="mojikumi-line-end">，</span>实在不行还能用注释 disable 掉 lint<span class="mojikumi-line-end">。</span></p>
<p>没研究过<span class="mojikumi-line-end">，</span>不知道写 ESLint plugin 能不能更加准确地检测<span class="mojikumi-line-end">，</span><s>但是差不多得了</s><span class="mojikumi-line-start">（</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/JavaScript">JavaScript</category>
            <category domain="https://ouuan.moe/tag/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95">问题解决记录</category>
        </item>
        <item>
            <title><![CDATA[DDPP 第三章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/01/ddpp-3</link>
            <guid>https://ouuan.moe/post/2023/01/ddpp-3</guid>
            <pubDate>Sun, 29 Jan 2023 07:52:32 GMT</pubDate>
            <description><![CDATA[
<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第三章 <span class="mojikumi">“</span>Switching Algebra and Combinational Logic<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为逻辑代数<span class="mojikumi-line-end">、</span>逻辑代数在电路中的使用及化简<span class="mojikumi-line-end">、</span>timing hazard<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[
<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第三章 <span class="mojikumi">“</span>Switching Algebra and Combinational Logic<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为逻辑代数<span class="mojikumi-line-end">、</span>逻辑代数在电路中的使用及化简<span class="mojikumi-line-end">、</span>timing hazard<span class="mojikumi-line-end">。</span></p>

<h2 id="switching-algebra" class="heading"><a href="#switching-algebra" class="heading-anchor" aria-label="章节： Switching Algebra" tabindex="-1"></a><span>Switching Algebra</span></h2>
<p>这一节基本上就是离散数学 (1) 开头两章的内容<span class="mojikumi-line-end">，</span>术语和记号有很多不同<span class="mojikumi-line-end">，</span><s>幸好忘的差不多了<span class="mojikumi-line-end">，</span>不然都要搞混了</s><span class="mojikumi-line-end">。</span></p>
<h3 id="记号" class="heading"><a href="#记号" class="heading-anchor" aria-label="章节： 记号" tabindex="-1"></a><span>记号</span></h3>
<ul>
<li>AND<span class="mojikumi-line-end">：</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi></mrow><annotation encoding="application/x-tex">X\ \cdot\ Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></span></li>
<li><span class="inline-block w-3"></span>OR<span class="mojikumi-line-end">：</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X + Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span></span></li>
<li>NOT<span class="mojikumi-line-end">：</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">X'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></li>
<li>AND 的优先级高于 OR</li>
</ul>
<p><span class="mojikumi-line-start">（</span>yysy 我还是更喜欢 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo><mo separator="true">,</mo><mo>∧</mo></mrow><annotation encoding="application/x-tex">\lor, \land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.75em;vertical-align:-0.1944em;"></span><span class="mord">∨</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∧</span></span></span></span></span><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></span> 也还行<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span></span></span></span></span> 真的有点难以接受<span class="mojikumi">。</span><span class="mojikumi">）</span><wbr><span class="mojikumi-line-start">（</span><s>它们明明是对偶的怎么搞得像个环一样<span class="mojikumi-line-end">。</span></s><span class="mojikumi">）</span><wbr><span class="mojikumi-line-start">（</span>主要还是下面这些定理用加号看起来真的好怪<span class="mojikumi">。</span><span class="mojikumi">）</span><wbr><span class="mojikumi-line-start">（</span>异或不是还号称二进制加法吗<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h3 id="公理" class="heading"><a href="#公理" class="heading-anchor" aria-label="章节： 公理" tabindex="-1"></a><span>公理</span></h3>
<div class="math math-display"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A1)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo mathvariant="normal">≠</mo><mn>1</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>X</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A1D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo mathvariant="normal">≠</mo><mn>0</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>X</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A2)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>=</mo><mn>0</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A2D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>=</mo><mn>1</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A3)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A3D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A4)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A4D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A5)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mn>1</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(A5D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rl}
\text{(A1)} &#x26; X \ne 1 \implies X = 0 \\
\text{(A1D)} &#x26; X \ne 0 \implies X = 1 \\\\
\text{(A2)} &#x26; X = 0 \implies X' = 1 \\
\text{(A2D)} &#x26; X = 1 \implies X' = 0 \\\\
\text{(A3)} &#x26; 0 \ \cdot\  0 = 0 \\
\text{(A3D)} &#x26; 1 + 1 = 1 \\\\
\text{(A4)} &#x26; 1 \ \cdot\  1 = 1 \\
\text{(A4D)} &#x26; 0 + 0 = 0 \\\\
\text{(A5)} &#x26; 0 \ \cdot\  1 = 1 \ \cdot\  0 = 0 \\
\text{(A5D)} &#x26; 1 + 0 = 0 + 1 = 1
\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:16.8em;vertical-align:-8.15em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.65em;"><span style="top:-10.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A1)</span></span></span></span><span style="top:-9.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A1D)</span></span></span></span><span style="top:-8.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-7.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A2)</span></span></span></span><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A2D)</span></span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A3)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A3D)</span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A4)</span></span></span></span><span style="top:1.19em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A4D)</span></span></span></span><span style="top:2.39em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:3.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A5)</span></span></span></span><span style="top:4.79em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(A5D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.65em;"><span style="top:-10.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-9.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-7.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:1.19em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:3.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:4.79em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></div>
<h3 id="定理" class="heading"><a href="#定理" class="heading-anchor" aria-label="章节： 定理" tabindex="-1"></a><span>定理</span></h3>
<p>中文名来自<span class="mojikumi-line-start">《</span>数理逻辑与集合论<span class="mojikumi-line-start">（</span>第二版<span class="mojikumi">）</span><span class="mojikumi-line-end">》</span>2.2 节<span class="mojikumi-line-start">“</span>等值公式<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span></p>
<div class="math math-display"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T1)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mn>0</mn><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T1D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Identities（同一律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T2)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T2D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Null elements（零律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T3)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T3D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Idempotency（幂等律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="1em"></mspace><mtext> (T4)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Involution（双重否定律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T5)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T5D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Complements（补余律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T6)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mi>Y</mi><mo>=</mo><mi>Y</mi><mo>+</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T6D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mo>=</mo><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Commutativity（交换律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T7)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>+</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo>+</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T7D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mo>=</mo><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Associativity（结合律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T8)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>=</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mtext> </mtext><mtext> </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T8D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mtext> </mtext><mtext> </mtext><mo>=</mo><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Distributivity（分配律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T9)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext>(T9D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Covering（吸收律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T10)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>Y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext> </mtext><mtext> </mtext><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T10D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><msup><mi>Y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Combining</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T11)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mi>Z</mi><mo>+</mo><mi>Y</mi><mo>⋅</mo><mi>Z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><mtext> </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mi>Z</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T11D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><mtext> </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Consensus</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T12)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T12D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Generalized idempotency</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T13)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mi>X</mi><mtext>  </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mtext>  </mtext><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> </mtext><mtext> </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T13D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mi>X</mi><mo>+</mo><mi>X</mi><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> </mtext><mtext> </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>DeMorgan’s theorem</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>（摩根律）</mtext></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mspace width="0.5em"></mspace><mtext> (T14)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">[</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo separator="true">,</mo><mo>+</mo><mo separator="true">,</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext> </mtext><mi>F</mi><mo stretchy="false">(</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>X</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>X</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo separator="true">,</mo><mo>+</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Generalized</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>DeMorgan’s theorem</mtext></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ll}

\begin{array}{rl}
\enspace\text{(T1)} &#x26; X + 0 = X \\
\enspace\text{(T1D)} &#x26; X \ \cdot\  1 = X
\end{array}
&#x26; \text{Identities（同一律）}
\\\\

\begin{array}{rl}
\enspace\text{(T2)} &#x26; X + 1 = 1 \\
\enspace\text{(T2D)} &#x26; X \ \cdot\  0 = 0
\end{array}
&#x26; \text{Null elements（零律）}
\\\\

\begin{array}{rl}
\enspace\text{(T3)} &#x26; X + X = X \\
\enspace\text{(T3D)} &#x26; X \ \cdot\  X = X
\end{array}
&#x26; \text{Idempotency（幂等律）}
\\\\

\begin{array}{rl}
\quad\ \text{(T4)} &#x26; (X')' = X
\end{array}
&#x26; \text{Involution（双重否定律）}
\\\\

\begin{array}{rl}
\enspace\text{(T5)} &#x26; X + X' = 1 \\
\enspace\text{(T5D)} &#x26; X \ \cdot\  X' = 0
\end{array}
&#x26; \text{Complements（补余律）}
\\\\

\begin{array}{rl}
\enspace\text{(T6)} &#x26; X + Y = Y + X \\
\enspace\text{(T6D)} &#x26; X \ \cdot\  Y = Y \ \cdot\  X
\end{array}
&#x26; \text{Commutativity（交换律）}
\\\\

\begin{array}{rl}
\enspace\text{(T7)} &#x26; (X + Y) + Z = X + (Y + Z) \\
\enspace\text{(T7D)} &#x26; (X \ \cdot\  Y) \ \cdot\  Z = X \ \cdot\  (Y \ \cdot\  Z)
\end{array}
&#x26; \text{Associativity（结合律）}
\\\\

\begin{array}{rl}
\enspace\text{(T8)} &#x26; X \ \cdot\  (Y + Z) = \,\: X \ \cdot\  Y \,\: + \,\: X \ \cdot\  Z \,\: \\
\enspace\text{(T8D)} &#x26; X + \,\: Y \ \cdot\  Z \,\: = (X + Y) \ \cdot\  (X + Z)
\end{array}
&#x26; \text{Distributivity（分配律）}
\\\\

\begin{array}{rl}
\enspace\text{(T9)} &#x26; X + \,\: X \ \cdot\  Y \,\: = X \\
\enspace\text{(T9D)} &#x26; X \ \cdot\  (X + Y) = X
\end{array}
&#x26; \text{Covering（吸收律）}
\\\\

\begin{array}{rl}
\text{(T10)} &#x26; \,\: X \ \cdot\  Y \,\: + \,\: X \ \cdot\  Y' \,\: = X \\
\text{(T10D)} &#x26; (X + Y) \ \cdot\  (X + Y') = X
\end{array}
&#x26; \text{Combining}
\\\\

\begin{array}{rl}
\text{(T11)} &#x26; \begin{aligned} &#x26; X \cdot Y + X' \cdot Z + Y \cdot Z \\[-0.2em] =\ &#x26; X \cdot Y + X' \cdot Z \end{aligned} \\
\text{(T11D)} &#x26; \begin{aligned} &#x26; (X + Y) \cdot (X' + Z) \cdot (Y + Z) \\[-0.2em] =\ &#x26; (X + Y) \cdot (X' + Z) \end{aligned}
\end{array}
&#x26; \text{Consensus}
\\\\

\begin{array}{rl}
\text{(T12)}  &#x26; X + X + \cdots + X = X \\
\text{(T12D)} &#x26; X \ \cdot\  X \ \cdot\ \cdots\ \cdot\  X = X
\end{array}
&#x26; \text{Generalized idempotency}
\\\\

\begin{array}{rl}
\text{(T13)} &#x26;
\begin{aligned}
&#x26; (X \ \ \cdot\  X \ \ \cdot\ \cdots\ \cdot\  X)' \\[-0.2em]
= &#x26; \,\: X' + X' + \cdots + X'
\end{aligned}
\\
\text{(T13D)} &#x26;
\begin{aligned}
&#x26; (X + X + \cdots + X)' \\[-0.2em]
= &#x26; \,\: X' \cdot\  X' \cdot\  \cdots \ \cdot\  X'
\end{aligned}
\end{array}
&#x26; \begin{array}{c} \text{DeMorgan’s theorem} \\ \text{（摩根律）} \end{array}
\\\\

\begin{array}{rl}
\enspace\ \text{(T14)} &#x26;
\begin{aligned}
 &#x26; [F(X_1, X_2, \ldots, X_n, +, \ \cdot\ )]' \\[-0.2em]
=&#x26;\ F(X_1', X_2', \ldots, X_n', \ \cdot\ , +)
\end{aligned}
\end{array}
&#x26; \begin{array}{c} \text{Generalized} \\ \text{DeMorgan’s theorem} \end{array}
\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:54.81em;vertical-align:-27.155em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:27.655em;"><span style="top:-31.255em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T1)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T1D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-29.465em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-27.655em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T2)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T2D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-25.865em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-24.055em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T3)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T3D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-22.265em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-21.055em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:1em;"></span><span class="mspace"> </span><span class="mord text"><span class="mord">(T4)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-19.855em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-18.045em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T5)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T5D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-16.255em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-14.445em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T6)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T6D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-12.655em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-10.845em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T7)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T7D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-9.055em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-7.245em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T8)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T8D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-5.455em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-3.645em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T9)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mord text"><span class="mord">(T9D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:-1.855em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:-0.045em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T10)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T10D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:1.745em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:5.155em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span style="top:-5.05em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord text"><span class="mord">(T11)</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord text"><span class="mord">(T11D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span style="top:-5.05em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace"> </span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace"> </span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:8.545em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:10.355em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T12)</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T12D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:12.145em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:15.555em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span style="top:-5.05em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord text"><span class="mord">(T13)</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord text"><span class="mord">(T13D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span style="top:-5.05em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="minner">⋯</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:18.945em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"></span></span><span style="top:20.955em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.65em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mspace" style="margin-right:0.5em;"></span><span class="mspace"> </span><span class="mord text"><span class="mord">(T14)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.65em;"><span class="pstrut" style="height:3.65em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.65em;"><span style="top:-3.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">⋅</span><span class="mspace"> </span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.51em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">⋅</span><span class="mspace"> </span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">+</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:27.155em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:27.655em;"><span style="top:-31.255em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Identities</span><span class="mord cjk_fallback">（同一律）</span></span></span></span><span style="top:-27.655em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Null elements</span><span class="mord cjk_fallback">（零律）</span></span></span></span><span style="top:-24.055em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Idempotency</span><span class="mord cjk_fallback">（幂等律）</span></span></span></span><span style="top:-21.055em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Involution</span><span class="mord cjk_fallback">（双重否定律）</span></span></span></span><span style="top:-18.045em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Complements</span><span class="mord cjk_fallback">（补余律）</span></span></span></span><span style="top:-14.445em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Commutativity</span><span class="mord cjk_fallback">（交换律）</span></span></span></span><span style="top:-10.845em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Associativity</span><span class="mord cjk_fallback">（结合律）</span></span></span></span><span style="top:-7.245em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Distributivity</span><span class="mord cjk_fallback">（分配律）</span></span></span></span><span style="top:-3.645em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Covering</span><span class="mord cjk_fallback">（吸收律）</span></span></span></span><span style="top:-0.045em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Combining</span></span></span></span><span style="top:5.155em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Consensus</span></span></span></span><span style="top:10.355em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord text"><span class="mord">Generalized idempotency</span></span></span></span><span style="top:15.555em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">DeMorgan’s theorem</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord cjk_fallback">（摩根律）</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span><span style="top:20.955em;"><span class="pstrut" style="height:5.05em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Generalized</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">DeMorgan’s theorem</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:27.155em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></div>
<div class="math math-display"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnalign="right left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>Shannon’s expansion theorems</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T15)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mtext> </mtext><msub><mi>X</mi><mn>1</mn></msub><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>F</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>+</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>F</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>(T15D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><msub><mi>X</mi><mn>1</mn></msub><mo>+</mo><mi>F</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>⋅</mo><mo stretchy="false">[</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>+</mo><mi>F</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{rl}
&#x26; \text{Shannon’s expansion theorems} \\[0.3em]
\text{(T15)} &#x26; F(X_1, X_2, \ldots, X_n) = \ X_1 \ \cdot\  F(1, X_2, \ldots, X_n) + X_1' \ \cdot\  F(0, X_2, \ldots, X_n) \\
\text{(T15D)} &#x26; F(X_1, X_2, \ldots, X_n) = [X_1 + F(1, X_2, \ldots, X_n)] \cdot [X_1' + F(0, X_2, \ldots, X_n)]
\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.9em;vertical-align:-1.7em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2em;"><span style="top:-4.36em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-2.86em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T15)</span></span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">(T15D)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2em;"><span style="top:-4.36em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Shannon’s expansion theorems</span></span></span></span><span style="top:-2.86em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></div>
<p><span class="mojikumi-line-start">（</span><s>草<span class="mojikumi-line-end">，</span>对齐好累<span class="mojikumi-line-end">，</span>我为什么要浪费这个时间<span class="mojikumi-line-end">。</span></s><span class="mojikumi-line-end">）</span></p>
<h3 id="duality" class="heading"><a href="#duality" class="heading-anchor" aria-label="章节： Duality" tabindex="-1"></a><span>Duality</span></h3>
<p>将一个等式中所有的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span> 换成 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span><span class="mojikumi-line-end">、</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 换成 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span><span class="mojikumi-line-end">、</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span></span></span></span></span> 换成 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></span><span class="mojikumi-line-end">、</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></span> 换成 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span></span></span></span></span><span class="mojikumi-line-end">，</span>等式依然成立<span class="mojikumi-line-end">。</span></p>
<p>上面的定理中带 <span class="mojikumi">“</span>D<span class="mojikumi">”</span> 的都是上一条的对偶<span class="mojikumi-line-end">。</span></p>
<h3 id="standard-representations-of-logic-functions" class="heading"><a href="#standard-representations-of-logic-functions" class="heading-anchor" aria-label="章节： Standard Representations of Logic Functions" tabindex="-1"></a><span>Standard Representations of Logic Functions</span></h3>
<p>这里需要翻出来我离散 (1) 写的 <a href="https://ouuan.github.io/truth-table-generator/">真值表生成器</a><span class="mojikumi-line-start">（</span>其实可以去加上 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">+</span></span></span></span></span> 和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord">⋅</span></span></span></span></span> 作为 alias<span class="mojikumi-line-end">，</span>但如果要加 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的话会很麻烦所以干脆不加了吧<span class="mojikumi-line-start">（</span></p>
<p>logic function 有若干精确的标准表示方法<span class="mojikumi-line-end">：</span></p>
<ul>
<li>真值表</li>
<li>canonical sum: 主析取范式<span class="mojikumi-line-end">，</span>极小项 (minterm) 的和</li>
<li>使用 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span></span></span></span></span> 表示的 minterm list</li>
<li>canonical product: 主合取范式<span class="mojikumi-line-end">，</span>极大项 (maxterm) 的和</li>
<li>使用 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∏</mo></mrow><annotation encoding="application/x-tex">\prod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span></span></span></span></span> 表示的 maxterm list</li>
<li>Verilog <code>case</code> 语句</li>
</ul>
<p>这里用 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∏</mo></mrow><annotation encoding="application/x-tex">\prod</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span></span></span></span></span> 表示 maxterm list 的下标比离散 (1) 讲的舒服多了<span class="mojikumi-line-end">：</span>minterm 的 index 就是哪组变量取值下表达式值为 1<span class="mojikumi-line-end">，</span>maxterm 的 index 就是哪组变量取值下表达式为 0<span class="mojikumi-line-end">，</span>所以两种范式的下标刚好是补集<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">X, Y, Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></span> 三个变量<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">X' \cdot Y \cdot Z'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的下标是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi>Y</mi><mo>+</mo><msup><mi>Z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">X' + Y + Z'</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8352em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的下标是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn></mrow><annotation encoding="application/x-tex">5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></span><span class="mojikumi-line-end">；</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>6</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><msup><mi>Y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mi>Z</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msub><mo>∏</mo><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi></mrow></msub><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{X,Y,Z}(1,2,6) = X' \cdot Y' \cdot Z + X' \cdot Y \cdot Z' + X \cdot Y \cdot Z' = \prod_{X,Y,Z}(0,3,4,5,7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">Z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8352em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1786em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">Z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span></span><span class="mojikumi-line-end">。</span></p>
<p>Verilog 的 <code>case</code> 语句大概是这个样子<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>虽然还完全没学 Verilog<span class="mojikumi-line-end">，</span>但我感觉 Shiki 自带的 system-verilog 高亮看起来就比 verilog 正确许多<span class="mojikumi-line-end">，</span>以后可能也用 system-verilog 的高亮了<span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="system-verilog 代码块" data-v-ad49d235>system-verilog</h4><ile-root id="ile-5"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-5--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">case</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">{</span><span style="color: #82AAFF">X</span><span style="color: #D6DEEB">,</span><span style="color: #82AAFF">Y</span><span style="color: #D6DEEB">,</span><span style="color: #82AAFF">Z</span><span style="color: #C792EA">}</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">,</span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">,</span><span style="color: #F78C6C">6</span><span style="color: #C792EA">:</span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">F</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">default:</span><span style="color: #D6DEEB">  </span><span style="color: #82AAFF">F</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">endcase</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">case</span><span style="color: #403F53"> (</span><span style="color: #994CC3">{</span><span style="color: #4876D6">X</span><span style="color: #403F53">,</span><span style="color: #4876D6">Y</span><span style="color: #403F53">,</span><span style="color: #4876D6">Z</span><span style="color: #994CC3">}</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">  </span><span style="color: #AA0982">1</span><span style="color: #403F53">,</span><span style="color: #AA0982">2</span><span style="color: #403F53">,</span><span style="color: #AA0982">6</span><span style="color: #994CC3">:</span><span style="color: #403F53">    </span><span style="color: #4876D6">F</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">default:</span><span style="color: #403F53">  </span><span style="color: #4876D6">F</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">endcase</span></span></code></pre></div></section>
<h2 id="combinational-circuit-analysis" class="heading"><a href="#combinational-circuit-analysis" class="heading-anchor" aria-label="章节： Combinational-Circuit Analysis" tabindex="-1"></a><span>Combinational-Circuit Analysis</span></h2>
<p>这一节就是说给你一个电路图怎么搞出它的 logic function<span class="mojikumi-line-end">。</span>其实没啥好说的<span class="mojikumi-line-end">，</span>就<span class="mojikumi-line-start">（</span>按拓扑序<span class="mojikumi-line-end">）</span>一个一个 gate 递推就行<span class="mojikumi-line-end">，</span>可以用真值表也可以用逻辑表达式<span class="mojikumi-line-end">。</span></p>
<p>有一个小 trick<span class="mojikumi-line-end">：</span>DeMorgan<span class="mojikumi-narrow-left">’</span>s theorem 在电路图中表现为<span class="mojikumi-line-end">，</span>将 inversion bubble 换到另一侧<span class="mojikumi-line-start">（</span>输入 / 输出<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>并且改变 gate 的类型<span class="mojikumi-line-start">（</span>AND / OR<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>这样的话<span class="mojikumi-line-end">，</span>如果两个 inversion bubble 在一条 wire 上就可以消掉<span class="mojikumi-line-end">。</span></p>
<h2 id="combinational-circuit-synthesis" class="heading"><a href="#combinational-circuit-synthesis" class="heading-anchor" aria-label="章节： Combinational-Circuit Synthesis" tabindex="-1"></a><span>Combinational-Circuit Synthesis</span></h2>
<p>在 digital design 中<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>Synthesis<span class="mojikumi">”</span> 有若干种含义<span class="mojikumi-line-start">（</span>例如从 HDL 到 FPGA<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>而在这一节只是指从 formal description 到 gate-level circuit<span class="mojikumi-line-end">。</span></p>
<h3 id="circuit-descriptions-and-designs" class="heading"><a href="#circuit-descriptions-and-designs" class="heading-anchor" aria-label="章节： Circuit Descriptions and Designs" tabindex="-1"></a><span>Circuit Descriptions and Designs</span></h3>
<p>自然语言描述 → 逻辑表达式 / 真值表<span class="mojikumi-line-start">（</span>canonical sum / product<span class="mojikumi">）</span> → 电路</p>
<p>很多时候写出逻辑表达式会比列出真值表简单一些<span class="mojikumi-line-end">，</span>但在面对较为复杂的逻辑关系时<span class="mojikumi-line-end">，</span>列出真值表可以强制设计师考虑到每种情况<span class="mojikumi-line-end">，</span>从而避免漏掉 corner case<span class="mojikumi-line-end">。</span></p>
<p>一个输出是某个逻辑表达式的电路被称作 <i>realize</i> 了这个表达式<span class="mojikumi-line-end">，</span>是这个表达式的 <i>realization</i> 或者 <i>implementation</i><span class="mojikumi-line-end">。</span></p>
<h3 id="circuit-manipulations" class="heading"><a href="#circuit-manipulations" class="heading-anchor" aria-label="章节： Circuit Manipulations" tabindex="-1"></a><span>Circuit Manipulations</span></h3>
<p>在多数电路技术<span class="mojikumi-line-start">（</span>包括 CMOS<span class="mojikumi-line-end">）</span>中<span class="mojikumi-line-end">，</span>NAND / NOR 比 AND / OR 效率更高<span class="mojikumi-line-end">，</span>所以一般会修改电路来尽量使用 inverting gate 而非 noninverting gate<span class="mojikumi-line-end">：</span></p>
<ul>
<li>在 wire 上移动 inversion bubble<span class="mojikumi-line-start">（</span>从上一个输出移到下一个输入<span class="mojikumi-line-end">）</span></li>
<li>在 wire 的两侧同时加上 inversion bubble<span class="mojikumi-line-start">（</span>或者 NOT gate<span class="mojikumi-line-end">）</span></li>
<li>消除同一根 wire 上的两个 inversion bubble</li>
<li>将 inversion bubble 换到另一侧<span class="mojikumi-line-start">（</span>输入 / 输出<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>并且改变 gate 的类型<span class="mojikumi-line-start">（</span>AND / OR<span class="mojikumi-line-end">）</span></li>
</ul>
<h3 id="combinational-circuit-minimization" class="heading"><a href="#combinational-circuit-minimization" class="heading-anchor" aria-label="章节： Combinational-Circuit Minimization" tabindex="-1"></a><span>Combinational-Circuit Minimization</span></h3>
<p>一般情况下<span class="mojikumi-line-end">，</span>逻辑表达式的化简主要用的是定理 T10<span class="mojikumi-line-start">（</span>Combining<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>就是在 sum of products 中找到仅有一项相反的两个 product 将它们合并<span class="mojikumi-line-end">，</span>最终得到的也是一个 sum of products<span class="mojikumi-line-end">，</span>实现为 2-level<span class="mojikumi-line-start">（</span>first-level 计算 product<span class="mojikumi-line-end">，</span>second-level 计算 sum<span class="mojikumi-line-end">）</span>的电路<span class="mojikumi-line-end">。</span></p>
<p>product of sums 电路是对偶的<span class="mojikumi-line-end">，</span>就不重复了<span class="mojikumi-line-end">，</span>下文也是一样<span class="mojikumi-line-end">。</span></p>
<h3 id="karnaugh-maps" class="heading"><a href="#karnaugh-maps" class="heading-anchor" aria-label="章节： Karnaugh Maps" tabindex="-1"></a><span>Karnaugh Maps</span></h3>
<p>如 DDPP5 Figure 3-23 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-3-23.15ec6efa.webp"><img srcset="/assets/ddpp-fig-3-23.43ab9a40.png" loading="lazy" src="/assets/ddpp-fig-3-23.43ab9a40.png" width="1235" height="457" alt="2-variable, 3-variable, and 4-variable Karnaugh maps"></picture></p>
<p>在 Karnaugh map 中<span class="mojikumi-line-end">，</span>每一个表示一个 minterm<span class="mojikumi-line-end">，</span>相邻<span class="mojikumi-line-start">（</span>包括跨过边界到另一侧的相邻<span class="mojikumi-line-end">）</span>的格子仅有一位相反<span class="mojikumi-line-end">，</span>所以边长为 1 / 2 / 4 的矩形可以合并<span class="mojikumi-line-end">。</span></p>
<p>选出若干矩形<span class="mojikumi-line-end">，</span>恰好覆盖所有输出为 1 的格子<span class="mojikumi-line-end">，</span>就可以化简逻辑表达式<span class="mojikumi-line-end">。</span></p>
<p>如果一个矩形覆盖的全是 1<span class="mojikumi-line-end">，</span>并且是极大的<span class="mojikumi-line-start">（</span>在其对应的 product 中减少任何一个输入都会使其覆盖到 0<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>就称作一个 <i>prime implicant</i><span class="mojikumi-line-end">。</span>最简的逻辑表达式是若干 prime implicant 的 sum<span class="mojikumi-line-end">。</span></p>
<p>有的函数的 Karnaugh map 非常分散<span class="mojikumi-line-start">（</span>例如 parity function<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>没有连成一块的 1<span class="mojikumi-line-end">，</span>就需要多级而非 2-level 的电路来进行化简<span class="mojikumi-line-end">。</span></p>
<p>在 FPGA 中<span class="mojikumi-line-end">，</span>输入数量较少的电路都是通过 lookup table (LUT) 而非 gate-level circuit 来实现<span class="mojikumi-line-end">，</span>只需真值表就可以<span class="mojikumi-line-end">。</span>但复杂的电路需要由多个 LUT 组合起来<span class="mojikumi-line-end">，</span>此时逻辑表达式的化简依然有用<span class="mojikumi-line-end">。</span></p>
<h2 id="timing-hazards" class="heading"><a href="#timing-hazards" class="heading-anchor" aria-label="章节： Timing Hazards" tabindex="-1"></a><span>Timing Hazards</span></h2>
<p>真实的电路中会有 delay<span class="mojikumi-line-end">，</span>而上面研究的都是 combinational logic circuit 的 <i>steady-state behavior</i><span class="mojikumi-line-end">，</span>没有考虑到 <i>transient behavior</i><span class="mojikumi-line-end">。</span></p>
<p>因为 delay 的存在<span class="mojikumi-line-end">，</span>可能会发生这样的情况<span class="mojikumi-line-end">：</span>输入发生了改变<span class="mojikumi-line-end">，</span>稳态下的输出不变<span class="mojikumi-line-end">，</span>但在一瞬间内输出发生了变化<span class="mojikumi-line-start">（</span>产生了一个 short pulse<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>这样的 pulse 被称作 <i>glitch</i><span class="mojikumi-line-end">。</span></p>
<p>如果一个电路有产生 glitch 的可能性<span class="mojikumi-line-end">，</span>则称这个电路存在 <i>hazard</i><span class="mojikumi-line-end">。</span>实际物理电路的 delay 大小等因素难以控制<span class="mojikumi-line-end">，</span>所以这里只是考虑产生 glitch 的可能性<span class="mojikumi-line-end">，</span>而非实际是否有 glitch 产生<span class="mojikumi-line-start">（</span>有点类似于并发编程中要保证所有可能的执行顺序下都不出错<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h3 id="static-hazards" class="heading"><a href="#static-hazards" class="heading-anchor" aria-label="章节： Static Hazards" tabindex="-1"></a><span>Static Hazards</span></h3>
<p><i>static-1 hazard</i><span class="mojikumi-line-end">：</span>稳态输出是 1<span class="mojikumi-line-end">，</span>改变某一个输入后稳态输出还是 1<span class="mojikumi-line-end">，</span>但这一个输入改变时可能会短暂地输出 0<span class="mojikumi-line-end">。</span>static-0 hazard 是类似的<span class="mojikumi-line-end">。</span></p>
<p>书上给了个例子<span class="mojikumi-line-end">，</span>但这个其实很好理解<span class="mojikumi-line-end">，</span>就是电路的一个输入作为多个 gate 的输入<span class="mojikumi-line-end">，</span>而这些 gate 的输出变化得有快有慢<span class="mojikumi-line-end">。</span></p>
<h3 id="finding-static-hazards-using-maps" class="heading"><a href="#finding-static-hazards-using-maps" class="heading-anchor" aria-label="章节： Finding Static Hazards Using Maps" tabindex="-1"></a><span>Finding Static Hazards Using Maps</span></h3>
<p>正常的 sum of products 电路中不会有 static-0 hazard<span class="mojikumi-line-end">，</span>可能有 static-1 hazard<span class="mojikumi-line-end">。</span></p>
<p>可以用 Karnaugh map 来找到 hazard<span class="mojikumi-line-end">：</span>如果两个相邻的 1 没有被同一个 gate 覆盖<span class="mojikumi-line-end">，</span>从其中一个变为另一个时就可能产生 glitch<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>因为极端情况下可能所有覆盖原来那一格的 gate 先全部变为 0<span class="mojikumi-line-end">，</span>覆盖后来那一格的 gate 才变为 1<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>消除 hazard 就是用冗余的 gate 来覆盖这样的相邻的 1<span class="mojikumi-line-end">，</span>类似于定理 T11<span class="mojikumi-line-start">（</span>Consensus<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h3 id="dynamic-hazards" class="heading"><a href="#dynamic-hazards" class="heading-anchor" aria-label="章节： Dynamic Hazards" tabindex="-1"></a><span>Dynamic Hazards</span></h3>
<p>如果变化一个输入时可能产生不止一次 glitch<span class="mojikumi-line-end">，</span>就称作 <i>dynamic hazard</i><span class="mojikumi-line-end">。</span></p>
<p>一个正常的 2-level sum of products / product of sums 电路中不会有 dynamic hazard<span class="mojikumi-line-end">。</span></p>
<h3 id="designing-hazard-free-circuits" class="heading"><a href="#designing-hazard-free-circuits" class="heading-anchor" aria-label="章节： Designing Hazard-Free Circuits" tabindex="-1"></a><span>Designing Hazard-Free Circuits</span></h3>
<p>在多数电路中<span class="mojikumi-line-start">（</span>尤其是 synchronous digital system 中<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>hazard 不会造成什么影响<span class="mojikumi-line-end">。</span>但在某些电路<span class="mojikumi-line-start">（</span>asynchronous sequential circuits<span class="mojikumi-line-end">）</span>中<span class="mojikumi-line-end">，</span>需要避免 hazard 的存在<span class="mojikumi-line-end">。</span></p>
<p>在一般的电路中消除 hazard 是复杂的<span class="mojikumi-line-end">，</span>而在 sum of products 中<span class="mojikumi-line-end">，</span>可以用 Karnaugh map 或者取遍所有 prime implicant<span class="mojikumi-line-start">（</span>称作 <i>complete sum</i><span class="mojikumi-line-end">）</span>来消除 hazard<span class="mojikumi-line-end">。</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/ddpp">ddpp</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[DDPP 第二章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/01/ddpp-2</link>
            <guid>https://ouuan.moe/post/2023/01/ddpp-2</guid>
            <pubDate>Tue, 24 Jan 2023 14:37:12 GMT</pubDate>
            <description><![CDATA[

<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第二章 <span class="mojikumi">“</span>Number Systems and Codes<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为一些常用的编码以及纠错码的原理<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[

<p><a href="https://wakerly.org/DDPP/">DDPP5</a> 第二章 <span class="mojikumi">“</span>Number Systems and Codes<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>本章的主要内容为一些常用的编码以及纠错码的原理<span class="mojikumi-line-end">。</span></p>

<p>开头整数编码的内容很多是 <a href="/post/2022/09/csapp-2">CS:APP 第二章</a> 讲过的<span class="mojikumi-line-end">，</span>也有一些新内容<span class="mojikumi-line-end">，</span>但基本上都是标星的可选内容<span class="mojikumi-line-end">，</span>我看是看了但懒得写笔记了<span class="mojikumi-line-start">（</span></p>
<hr>
<p>一套编码被称作一个 <i>code</i><span class="mojikumi-line-end">，</span>一个 code 中的单个合法编码<span class="mojikumi-line-start">（</span>二进制串<span class="mojikumi-line-end">）</span>被称作一个 <i>code word</i><span class="mojikumi-line-end">。</span></p>
<h2 id="gray-code" class="heading"><a href="#gray-code" class="heading-anchor" aria-label="章节： Gray Code" tabindex="-1"></a><span>Gray Code</span></h2>
<p>Gray code 的性质<span class="mojikumi-line-end">：</span>相邻两个数的 code word 只有一位不同<span class="mojikumi-line-end">，</span>且 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 的 code word 中只有一个 1<span class="mojikumi-line-start">（</span>也就是说 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit Gray code 的首尾也只有一位不同<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<a id="4-bit-gray-code" name="4-bit-gray-code" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><details class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><summary class="p-3 flex justify-between items-center cursor-pointer" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>4-bit Gray code</span></h3><span class="details-icon text-5" data-v-a2ab257f></span></summary><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-6"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-6--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb"> 0: 0000</span></span>
<span><span style="color: #d6deeb"> 1: 0001</span></span>
<span><span style="color: #d6deeb"> 2: 0011</span></span>
<span><span style="color: #d6deeb"> 3: 0010</span></span>
<span><span style="color: #d6deeb"> 4: 0110</span></span>
<span><span style="color: #d6deeb"> 5: 0111</span></span>
<span><span style="color: #d6deeb"> 6: 0101</span></span>
<span><span style="color: #d6deeb"> 7: 0100</span></span>
<span><span style="color: #d6deeb"> 8: 1100</span></span>
<span><span style="color: #d6deeb"> 9: 1101</span></span>
<span><span style="color: #d6deeb">10: 1111</span></span>
<span><span style="color: #d6deeb">11: 1110</span></span>
<span><span style="color: #d6deeb">12: 1010</span></span>
<span><span style="color: #d6deeb">13: 1011</span></span>
<span><span style="color: #d6deeb">14: 1001</span></span>
<span><span style="color: #d6deeb">15: 1000</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53"> 0: 0000</span></span>
<span><span style="color: #403f53"> 1: 0001</span></span>
<span><span style="color: #403f53"> 2: 0011</span></span>
<span><span style="color: #403f53"> 3: 0010</span></span>
<span><span style="color: #403f53"> 4: 0110</span></span>
<span><span style="color: #403f53"> 5: 0111</span></span>
<span><span style="color: #403f53"> 6: 0101</span></span>
<span><span style="color: #403f53"> 7: 0100</span></span>
<span><span style="color: #403f53"> 8: 1100</span></span>
<span><span style="color: #403f53"> 9: 1101</span></span>
<span><span style="color: #403f53">10: 1111</span></span>
<span><span style="color: #403f53">11: 1110</span></span>
<span><span style="color: #403f53">12: 1010</span></span>
<span><span style="color: #403f53">13: 1011</span></span>
<span><span style="color: #403f53">14: 1001</span></span>
<span><span style="color: #403f53">15: 1000</span></span></samp></pre></div></section></div></details></aside>
<p>递归构造<span class="mojikumi-line-end">：</span></p>
<ol>
<li><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span>-bit Gray code: 0 是 0<span class="mojikumi-line-end">，</span>1 是 1</li>
<li><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>-bit Gray code:
<ul>
<li>前 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 个数和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit Gray code 相同<span class="mojikumi-line-start">（</span>开头加上 0<span class="mojikumi-line-end">）</span></li>
<li>后 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 个数是把 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit Gray code 逆序排列再在开头加上 1</li>
</ul>
</li>
</ol>
<p>直接计算单个数的 Gray code<span class="mojikumi-line-end">：</span></p>
<ul>
<li>递归就能直接计算<span class="mojikumi-line-end">，</span><s>相信大家都会做 <a href="https://uoj.ac/problem/488">NOIPD1T1</a> 吧<span class="mojikumi-line-end">，</span>记得开 <code>unsigned long long</code></s><span class="mojikumi-line-start">（</span></li>
<li>也可以这么算<span class="mojikumi-line-end">：</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 的 Gray code 第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 位为 1 当且仅当 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 的二进制中第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 位和第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 位不同</li>
</ul>
<p>书中描述了一个使用场景<span class="mojikumi-line-end">：</span>一个磁盘的每个扇区需要编码<span class="mojikumi-line-end">，</span>从扇区上读取若干 bits 来识别当前处于哪个扇区<span class="mojikumi-line-end">，</span>在两个相邻扇区的交界处可能有部分 bits 来自其中一个扇区<span class="mojikumi-line-end">，</span>另外的 bits 来自另一个扇区<span class="mojikumi-line-end">，</span>Gray code 可以使最终读取到的结果一定是这两个扇区之一<span class="mojikumi-line-end">。</span></p>
<h2 id="codes-for-actions-conditions-and-states" class="heading"><a href="#codes-for-actions-conditions-and-states" class="heading-anchor" aria-label="章节： Codes for Actions, Conditions, and States" tabindex="-1"></a><span>Codes for Actions, Conditions, and States</span></h2>
<p>说白了就是如何编码一个 enum<span class="mojikumi-line-end">。</span>不同的编码方式有各自的特点<span class="mojikumi-line-end">，</span>可以从编码长度<span class="mojikumi-line-end">、</span>电路开销<span class="mojikumi-line-end">、</span>设计难度<span class="mojikumi-line-end">、</span>可纠错性等角度考虑<span class="mojikumi-line-end">，</span>选择最合适的编码方式<span class="mojikumi-line-end">，</span>或者组合使用多种编码方式<span class="mojikumi-line-end">。</span></p>
<ul>
<li>顺着编码为二进制可以使编码长度最短<span class="mojikumi-line-start">（</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \log_2 n \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⌉</span></span></span></span></span><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li><i>1-out-of-n-code</i><span class="mojikumi-line-end">：</span>合法的 code word 只有一位是 1<span class="mojikumi-line-end">，</span>每个 enum 对应某一位为 1<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>控制哪个灯开时<span class="mojikumi-line-end">，</span>这种编码方式无需再有电路来选择要开的灯<span class="mojikumi-line-end">，</span>直接将编码的每一位连到一盏灯就可以了<span class="mojikumi-line-end">。</span></li>
<li><i>m-out-of-n-code</i><span class="mojikumi-line-end">：</span>合法的 code word 恰有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span> 位是 1<span class="mojikumi-line-end">。</span>要检测一个 code word<span class="mojikumi-line-end">，</span>只需使用一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span>-input AND gate<span class="mojikumi-line-end">，</span>电路较为简单<span class="mojikumi-line-end">。</span>而 code word 总数有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>m</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\binom nm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>也很多<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="n-cubes-and-distance" class="heading"><a href="#n-cubes-and-distance" class="heading-anchor" aria-label="章节： n-Cubes and Distance" tabindex="-1"></a><span>n-Cubes and Distance</span></h2>
<p>以 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> 个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit 二进制串作为顶点<span class="mojikumi-line-end">，</span>在只有一个 bit 不同的串之间连边<span class="mojikumi-line-end">，</span>得到的图被称作 <i><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-cube</i><span class="mojikumi-line-end">，</span>可以画成一个<span class="mojikumi-line-start">（</span>超<span class="mojikumi-line-end">）</span>立方体<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>DDPP5 Figure 2-8<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-2-8.a7fd31fd.webp"><img srcset="/assets/ddpp-fig-2-8.8dc5d6f5.png" loading="lazy" src="/assets/ddpp-fig-2-8.8dc5d6f5.png" width="1213" height="827" alt="n-cubes for n = 1, 2, 3, and 4."></picture></p>
<p>图上两个二进制串之间的距离被称作 <i>Hamming distance</i><span class="mojikumi-line-end">，</span>表示两个串中不相同的位数<span class="mojikumi-line-end">。</span></p>
<h2 id="codes-for-detecting-and-correcting-errors" class="heading"><a href="#codes-for-detecting-and-correcting-errors" class="heading-anchor" aria-label="章节： Codes for Detecting and Correcting Errors" tabindex="-1"></a><span>Codes for Detecting and Correcting Errors</span></h2>
<p>实际存储<span class="mojikumi-line-end">、</span>传输编码时<span class="mojikumi-line-end">，</span>可能会发生错误<span class="mojikumi-line-end">。</span>错误的具体行为可以由 <i>error model</i> 刻画<span class="mojikumi-line-end">。</span>最简单的 error model 是 <i>independent error model</i><span class="mojikumi-line-end">，</span>即每个错误只独立地改变编码中的一位<span class="mojikumi-line-end">，</span>多位同时发生错误的概率比一位发生错误的概率小得多<span class="mojikumi-line-end">。</span></p>
<h3 id="error-detecting-codes" class="heading"><a href="#error-detecting-codes" class="heading-anchor" aria-label="章节： Error-Detecting Codes" tabindex="-1"></a><span>Error-Detecting Codes</span></h3>
<p>对于一个 code<span class="mojikumi-line-end">，</span>不是 code word 的二进制串称作 <i>noncode word</i><span class="mojikumi-line-end">。</span></p>
<p><i>error-detecting code</i> 具有这样的性质<span class="mojikumi-line-end">：</span>任何一个 code word 在任意修改一位后都会得到一个 noncode word<span class="mojikumi-line-end">。</span></p>
<p>使用 error-detecting code 时<span class="mojikumi-line-end">，</span>可以认为只要是 code word 都没有发生错误<span class="mojikumi-line-end">，</span>noncode word 则一定发生了错误<span class="mojikumi-line-end">。</span></p>
<p>一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit error-detecting code 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-cube 的一个点独立集<span class="mojikumi-line-end">，</span>也就是说任意两个 code word 的 Hamming distance 都至少为 2<span class="mojikumi-line-end">。</span></p>
<p>奇偶性可以用来设计 error-detecting code<span class="mojikumi-line-end">：</span>任给一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>-bit code<span class="mojikumi-line-end">，</span>将第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 位设为前 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 位中 1 的个数的奇偶性<span class="mojikumi-line-start">（</span>称作 <i>parity bit</i><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>则可以得到一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>-bit error-detecting code<span class="mojikumi-line-end">。</span>这样的编码称作 <i>1-bit parity code</i><span class="mojikumi-line-end">，</span>若 code word 都有偶数个 1 则称作 <i>even-parity code</i><span class="mojikumi-line-end">，</span>有奇数个 1 则称作 <i>odd-parity code</i><span class="mojikumi-line-end">。</span></p>
<h3 id="error-correcting-and-multiple-error-detecting-codes" class="heading"><a href="#error-correcting-and-multiple-error-detecting-codes" class="heading-anchor" aria-label="章节： Error-Correcting and Multiple-Error-Detecting Codes" tabindex="-1"></a><span>Error-Correcting and Multiple-Error-Detecting Codes</span></h3>
<p>如果一个 code 中两个 code word 的最小 Hamming distance 有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>c</mi><mo>+</mo><mi>d</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2c+d+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span><span class="mojikumi-line-end">，</span>则可以对最多 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></span> 位的错误进行纠正<span class="mojikumi-line-end">，</span>并且检测到最多 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">c+d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span></span> 位的错误<span class="mojikumi-line-start">（</span>一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>+</mo><mi>d</mi><mo>+</mo><mn>1</mn><mo>∼</mo><mn>2</mn><mi>c</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">c+d+1 \sim 2c+d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span></span> 位的错误会被认为是来自另一个方向的错误而被错误地纠正<span class="mojikumi-line-end">，</span>从而不能被检测到<span class="mojikumi-line-end">；</span>可以选择少纠错几位来检测到更多位的错误<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>纠错就是找到和一个 noncode word 的 Hamming distance 最小的唯一一个 code word<span class="mojikumi-line-end">，</span>进行纠错的硬件被称作 error-correcting decoder<span class="mojikumi-line-end">。</span></p>
<h3 id="hamming-codes" class="heading"><a href="#hamming-codes" class="heading-anchor" aria-label="章节： Hamming Codes" tabindex="-1"></a><span>Hamming Codes</span></h3>
<p><i>Hamming code</i> 是一种通用的最小距离为 3 的编码<span class="mojikumi-line-end">。</span>一个有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 个 check bit 的 Hamming code 最多可以存储 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 个 information bit<span class="mojikumi-line-end">，</span>从而总共有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 个 bit<span class="mojikumi-line-end">。</span></p>
<p>一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2^n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>-bit Hamming code 的 bit 依次编号为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \sim 2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span><span class="mojikumi-line-end">，</span>编号为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">1, 2, 4, \ldots, 2^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span> 的 bit 是 check bit<span class="mojikumi-line-end">。</span>每个 check bit 代表一个 group<span class="mojikumi-line-end">，</span>编号为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span> 的 check bit 所代表的 group 包含的是编号的二进制中包含 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span></span> 的所有 bit<span class="mojikumi-line-end">。</span>check bit 的取值使得每个 group 都含偶数个 1<span class="mojikumi-line-end">。</span></p>
<p>实际使用的 Hamming code 往往会将 check bit 移到末尾<span class="mojikumi-line-end">，</span>例如一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>15</mn></mrow><annotation encoding="application/x-tex">15</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">15</span></span></span></span></span>-bit Hamming code 中 bit 的编号依次为 15, 14, 13, 12, 11, 10, 9, 7, 6, 5, 3, 8, 4, 2, 1<span class="mojikumi-line-end">。</span></p>
<p>因为每个 bit 都至少属于一个 group<span class="mojikumi-line-end">，</span>改变一个 bit 会得到 noncode word<span class="mojikumi-line-end">。</span>改变编号为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span> 的两个 bit 时<span class="mojikumi-line-end">，</span>会改变 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 异或 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span> 对应的 group<span class="mojikumi-line-end">，</span>所以改变两个 bit 会得到 noncode word<span class="mojikumi-line-end">。</span>所以 Hamming code 中两个 code word 的 Hamming distance 至少为 3<span class="mojikumi-line-end">。</span></p>
<p>纠错时<span class="mojikumi-line-end">，</span>只要将错误的 check bit 的编号或起来就可以得到错误的 bit 的编号<span class="mojikumi-line-end">。</span></p>
<p>可以通过增加一个 parity bit 来得到一个最小距离为 4 的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>-bit extended Hamming code<span class="mojikumi-line-end">。</span></p>
<h3 id="crc-codes" class="heading"><a href="#crc-codes" class="heading-anchor" aria-label="章节： CRC Codes" tabindex="-1"></a><span>CRC Codes</span></h3>
<p><i>cyclic-redundancy-check (CRC) codes</i> 是一种得到广泛应用的 error-correcting code<span class="mojikumi-line-end">，</span>例如被用在文件系统和网络通信中<span class="mojikumi-line-end">，</span>它可以检测到成团出现的多位错误<span class="mojikumi-line-end">，</span>在一些场景中这种错误比随机出现的错误概率更高<span class="mojikumi-line-end">。</span></p>
<h3 id="two-dimensional-codes" class="heading"><a href="#two-dimensional-codes" class="heading-anchor" aria-label="章节： Two-Dimensional Codes" tabindex="-1"></a><span>Two-Dimensional Codes</span></h3>
<p>如 DDPP5 Figure 2-14 (a) 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/ddpp-fig-2-14-a.6b397e71.webp"><img srcset="/assets/ddpp-fig-2-14-a.ecefd691.png" loading="lazy" src="/assets/ddpp-fig-2-14-a.ecefd691.png" width="776" height="529" alt="所有 bits 排列成一个矩阵，矩阵被划分为四个部分: information bits, checks on rows, checks on columns, checks on checks."></picture></p>
<p>选择 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{row}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">row</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{col}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">col</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 两种编码方式<span class="mojikumi-line-end">，</span>设置 checks on rows 使得 information bits 所在的每一行都是一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{row}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">row</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class="mojikumi-line-end">，</span>设置 checks on columns 使得 information bits 所在的每一列都是一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{col}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">col</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class="mojikumi-line-end">，</span>而 checks on checks 则可以选择<span class="mojikumi-line-end">，</span>要么每一行都是一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{row}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">row</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class="mojikumi-line-end">，</span>要么每一列都是一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{col}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">col</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class="mojikumi-line-end">。</span></p>
<p>这样得到的 <i>two-dimensional code</i> 的最小距离是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{row}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight" style="margin-right:0.01389em;">row</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{\mathrm{col}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">col</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的乘积<span class="mojikumi-line-end">，</span>所以 two-dimensional code 也被叫做 <i>product code</i><span class="mojikumi-line-end">。</span></p>
<p>RAID 就可以看作使用了 two-dimensional code<span class="mojikumi-line-end">：</span>每块数据盘内的每个 block 都有 CRC code<span class="mojikumi-line-end">，</span>还有一块硬盘用来存所有数据盘的 parity bits<span class="mojikumi-line-end">。</span></p>
<h3 id="checksum-codes" class="heading"><a href="#checksum-codes" class="heading-anchor" aria-label="章节： Checksum Codes" tabindex="-1"></a><span>Checksum Codes</span></h3>
<p>parity bit 可以看作是 bits 在模 2 意义下的和<span class="mojikumi-line-end">，</span>可以推广为 <i>checksum</i><span class="mojikumi-line-end">。</span></p>
<p>例如<span class="mojikumi-line-end">，</span>模 256 意义下<span class="mojikumi-line-end">，</span>可以计算 bytes 的和<span class="mojikumi-line-end">，</span>来检测 bytes 的错误<span class="mojikumi-line-end">。</span></p>
<p>除了改变模数<span class="mojikumi-line-end">，</span>还可以改变计算方式<span class="mojikumi-line-end">，</span>例如使用 ones<span class="mojikumi-narrow-left">’</span> complement 加法来计算模 255 或 65535 意义下的 checksum<span class="mojikumi-line-end">。</span></p>
<h3 id="m-out-of-n-codes" class="heading"><a href="#m-out-of-n-codes" class="heading-anchor" aria-label="章节： m-out-of-n Codes" tabindex="-1"></a><span>m-out-of-n Codes</span></h3>
<p><a href="#codes-for-actions-conditions-and-states">m-out-of-n code</a> 的最小距离为 2<span class="mojikumi-line-end">，</span>并且能够检测到 <i>unidirectional multiple errors</i><span class="mojikumi-line-end">，</span>即所有错误都是 0 变 1 或 1 变 0 的改变多位的错误<span class="mojikumi-line-end">。</span></p>
<h2 id="codes-for-transmitting-and-storing-serial-data" class="heading"><a href="#codes-for-transmitting-and-storing-serial-data" class="heading-anchor" aria-label="章节： Codes for Transmitting and Storing Serial Data" tabindex="-1"></a><span>Codes for Transmitting and Storing Serial Data</span></h2>
<ul>
<li>parallel data transmission: 一个 data word 的所有 bit 同时传输</li>
<li>serial data transmission: 一个 bit 一个 bit 传输</li>
</ul>
<p>在某些场景下<span class="mojikumi-line-end">，</span>serial data transmission 可以减少线路开销<span class="mojikumi-line-end">，</span>或者减少一些设计上的困难<span class="mojikumi-line-end">。</span></p>
<p>最基本的 serial data transmission 需要三个信号<span class="mojikumi-line-end">：</span></p>
<ul>
<li>CLOCK: 将时间划分为一个个 <i>bit cell</i><span class="mojikumi-line-end">，</span>标识出每个 bit 所处的时间范围</li>
<li>SERDATA: 实际传输的数据<span class="mojikumi-line-end">，</span>具体内容依 <i>line code</i> 而定</li>
<li>SYNC: 用来标识 bit 的 significance<span class="mojikumi-line-end">，</span>例如传输 bytes 时用来标记每个 byte 的开头</li>
</ul>
<p>实际上<span class="mojikumi-line-end">，</span>也可以选择合适的 line code 从而只需传输一个信号<span class="mojikumi-line-end">，</span>从数据信号中读取出 CLOCK 和 SYNC 的信息<span class="mojikumi-line-end">。</span></p>
<a id="serial-line-codes" name="serial-line-codes" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-gray-2 dark:bg-gray-11 b-gray-6" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-timer-sand text-gray" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>WIP: </span><span data-v-a2ab257f>Serial Line Codes</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>Serial Line Codes 这一节我感觉有些地方没完全理解<span class="mojikumi-line-end">，</span>也有和 Wikipedia 有出入的地方<span class="mojikumi-line-end">，</span>也标星了<span class="mojikumi-line-end">，</span>感觉后面不一定用得上<span class="mojikumi-line-end">，</span>就先咕了<span class="mojikumi-line-end">。</span></p></div></div></aside>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/ddpp">ddpp</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[另一种很新的中文字体网页嵌入方案]]></title>
            <link>https://ouuan.moe/post/2023/01/glyph-segregator</link>
            <guid>https://ouuan.moe/post/2023/01/glyph-segregator</guid>
            <pubDate>Thu, 19 Jan 2023 13:15:05 GMT</pubDate>
            <description><![CDATA[<p>当你看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>但是懒得优化 DP<span class="mojikumi-line-end">，</span>也不会进化算法<span class="mojikumi-line-end">，</span>你可以……</p>
<p>整一个<a href="https://github.com/ouuan/glyph-segregator"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-start">（</span></p>
]]></description>
            <content:encoded><![CDATA[<p>当你看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>但是懒得优化 DP<span class="mojikumi-line-end">，</span>也不会进化算法<span class="mojikumi-line-end">，</span>你可以……</p>
<p>整一个<a href="https://github.com/ouuan/glyph-segregator"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-start">（</span></p>

<p><s>这就是你 <a href="/post/2023/01/ddpp">开坑 DDPP</a> 不填的理由吗</s></p>
<h2 id="背景" class="heading"><a href="#背景" class="heading-anchor" aria-label="章节： 背景" tabindex="-1"></a><span>背景</span></h2>
<p>前不久看到 <a href="https://ayu.land/webfont">一种很新的中文字体网页嵌入方案</a><span class="mojikumi-line-end">，</span>还想着没必要做这种优化<span class="mojikumi-line-end">，</span>毕竟按 Google Fonts 进行子集化就可以做到每页 1MB 左右<span class="mojikumi-line-end">，</span>按现代的网速不会有太大问题<span class="mojikumi-line-end">，</span>用 devtools 开节流试了下看起来也还行<span class="mojikumi-line-end">。</span></p>
<p>然后我回家了<span class="mojikumi-line-end">，</span>离开了校园网<span class="mojikumi-line-end">。</span>虽然自定义域名的 Cloudflare Pages 还能访问<span class="mojikumi-line-end">，</span>但速度暂且不论<span class="mojikumi-line-end">，</span>丢包率就很有点恐怖<span class="mojikumi-line-end">，</span>经常页面加载一半就卡住了<span class="mojikumi-line-end">。</span></p>
<p>再然后<span class="mojikumi-line-end">，</span>Google Fonts 里 Noto Serif SC 的 unicode range 不含单引号<span class="mojikumi-line-start">（</span>和撇号是同一个字符<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>导致 <a href="/post/2023/01/ddpp">DDPP 序</a> 里引用的那段话的撇号在我的手机上显示成了很宽的另一种字体<span class="mojikumi-line-end">，</span>才让我<a href="https://github.com/ouuan/iles-blog/commit/080bd7112f88d2eae1e86594f8820c0c517e37ce">发现这个问题</a><span class="mojikumi-line-end">。</span>为了以后能及时发现这种问题<span class="mojikumi-line-end">，</span>我就设置了不使用本地字体直接使用 web font 的 Stylus<span class="mojikumi-line-end">。</span></p>
<p>恐怖的丢包率<span class="mojikumi-line-end">，</span>加上自己亲身体验 web font 加载<span class="mojikumi-line-end">，</span>让我意识到了<span class="mojikumi-line-end">，</span>在国内普通网络环境下<span class="mojikumi-line-end">，</span>如果你的设备没有安装思源宋体<span class="mojikumi-line-end">，</span>访问我的博客会是多么难受<span class="mojikumi-line-start">（</span></p>
<h2 id="主体思路" class="heading"><a href="#主体思路" class="heading-anchor" aria-label="章节： 主体思路" tabindex="-1"></a><span>主体思路</span></h2>
<p><span class="mojikumi-line-start">“</span>另一种<span class="mojikumi-line-end">”</span>的主体思路<a href="https://ayu.land/webfont#principle">和<span class="mojikumi-line-start">“</span>一种<span class="mojikumi-line-end">”</span>是一样的</a><span class="mojikumi-line-end">，</span>就是把字体划分成常用字和非常用字<span class="mojikumi-line-end">。</span>但是<span class="mojikumi-line-start">“</span>一种<span class="mojikumi-line-end">”</span>在这之后选择了使用动态规划 + 进化算法来对常用字进行进一步的拆分<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>另一种<span class="mojikumi-line-end">”</span>所做的优化则基于这样一个观察<span class="mojikumi-line-end">：</span>虽然一个博客有一堆页面<span class="mojikumi-line-end">，</span>但 80% 的人只会访问 20% 的页面<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>一个字体是否常用<span class="mojikumi-line-end">，</span>不仅要看出现在几个页面<span class="mojikumi-line-end">，</span>还要看出现在哪些页面<span class="mojikumi-line-end">。</span></p>
<p>这时候<span class="mojikumi-line-end">，</span><s>一直充当<a href="https://busuanzi.ibruce.info/">不蒜子</a>平替<span class="mojikumi-line-start">（</span>哪平价了啊<span class="mojikumi-line-end">）</span>的</s> Plausible Analytics 就发挥作用了<span class="mojikumi-line-end">：</span>近段时间的页面访问量可以用来估计每个页面被访问的概率<span class="mojikumi-line-end">，</span>为常用字的划分提供可靠的数据支撑<span class="mojikumi-line-end">。</span></p>
<p>一旦估计出了每个页面的被访问概率<span class="mojikumi-line-end">，</span>就可以对每个 glyph 分别计算出<span class="mojikumi-line-end">，</span>如果在每一个使用了它的页面上都加载一遍<span class="mojikumi-line-end">，</span>期望代价是多少<span class="mojikumi-line-end">，</span>也就是使用了它的所有页面的被访问概率之和<span class="mojikumi-line-end">。</span>如果这个数大于 1<span class="mojikumi-line-end">，</span>就设为常用<span class="mojikumi-line-end">，</span>否则设为不常用<span class="mojikumi-line-end">。</span></p>
<p>这个思路还是非常简单的<span class="mojikumi-line-end">，</span>可以说只是<span class="mojikumi-line-start">“</span>结合实际<span class="mojikumi-line-end">，</span>采取启发式方法<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>也称不上是一种新的方案<span class="mojikumi-line-start">（</span></p>
<h2 id="具体实现" class="heading"><a href="#具体实现" class="heading-anchor" aria-label="章节： 具体实现" tabindex="-1"></a><span>具体实现</span></h2>
<p>虽然思路简单<span class="mojikumi-line-end">，</span>但实现起来还是有点复杂的<span class="mojikumi-line-end">，</span>坑有点多<span class="mojikumi-line-end">。</span></p>
<h3 id="获取页面使用的字体" class="heading"><a href="#获取页面使用的字体" class="heading-anchor" aria-label="章节： 获取页面使用的字体" tabindex="-1"></a><span>获取页面使用的字体</span></h3>
<p>如果整个页面都使用一种字体<span class="mojikumi-line-end">，</span>直接看 HTML 里有哪些中文就差不多了<span class="mojikumi-line-end">，</span>但我不仅<span class="font-sans">非正文用的是黑体</span><span class="mojikumi-line-end">，</span><span class="font-kai">引用块还是楷体</span><span class="mojikumi-line-end">，</span>说不定在哪冒出来个<code>等宽</code>或者 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX公式</mtext></mrow><annotation encoding="application/x-tex">\LaTeX\text{公式}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8988em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span style="top:-2.905em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4678em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span><span class="mord text"><span class="mord cjk_fallback">公式</span></span></span></span></span></span><span class="mojikumi-line-end">，</span>有时候还会<strong>加粗</strong><span class="mojikumi-line-end">，</span>更别提心情好的时候会像这段一样直接塞 <code>&#x3C;span class=""></code> 来修改样式<span class="mojikumi-line-end">。</span></p>
<p>一开始我通过 <a href="https://github.com/Munter/subfont">subfont</a> 找到了 <a href="https://github.com/assetgraph/font-tracer">assetgraph/font-tracer</a><span class="mojikumi-line-end">，</span>但这个 font-tracer 就两个 star<span class="mojikumi-line-end">，</span>没有文档<span class="mojikumi-line-end">，</span><a href="https://github.com/assetgraph/assetgraph">AssetGraph</a> 又是一个 12 年前的老项目<span class="mojikumi-line-end">，</span>连 Definitely Typed 都没有<span class="mojikumi-line-end">，</span>试了一下完全用不会<span class="mojikumi-line-end">。</span></p>
<p>想了想<span class="mojikumi-line-end">，</span>最靠谱的还是直接交给浏览器来处理<span class="mojikumi-line-end">，</span>所以就用 <a href="https://github.com/puppeteer/puppeteer">puppeteer</a> 了<span class="mojikumi-line-end">。</span>目前采用的算法是<span class="mojikumi-line-end">：</span>遍历 <code>&#x3C;body></code><span class="mojikumi-line-end">，</span>跳过 <code>&#x3C;script></code> 和 <code>&#x3C;style></code> 子树<span class="mojikumi-line-end">，</span>找到所有 <a href="https://developer.mozilla.org/docs/Web/API/Text">Text 节点</a><span class="mojikumi-line-end">，</span>再加上所有 <code>&#x3C;img></code> 的 <code>alt</code> 属性<span class="mojikumi-line-end">。</span>找到节点后<span class="mojikumi-line-end">，</span>可以用 <a href="https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle"><code class="break-all">getComputedStyle</code></a> 获取 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 等信息<span class="mojikumi-line-end">。</span></p>
<p>因为要处理很多页面<span class="mojikumi-line-end">，</span>也要花一点时间<span class="mojikumi-line-end">，</span>所以用了 <a href="https://github.com/thomasdondorf/puppeteer-cluster">puppeteer-cluster</a> 来并行处理<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>不知道为什么<span class="mojikumi-line-end">，</span>在 vitest 和 iles 中运行时<span class="mojikumi-line-end">，</span>不加参数会报错<span class="mojikumi-line-end">，</span>而加了 <code>--<wbr>no<wbr>-<wbr>sandbox<wbr> --<wbr>no<wbr>-<wbr>zygote</code> 之后并行的优化效果就差一些<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/getPagesFontInfo.ts"><code class="break-all">getPagesFontInfo.ts</code></a></p>
<h3 id="字体匹配" class="heading"><a href="#字体匹配" class="heading-anchor" aria-label="章节： 字体匹配" tabindex="-1"></a><span>字体匹配</span></h3>
<p><a href="https://www.w3.org/TR/css-fonts-4/#font-style-matching">完整的字体匹配</a>是非常复杂的<span class="mojikumi-line-end">，</span>我也没找到相关的库<span class="mojikumi-line-end">，</span>就自己写了一个简陋的只匹配完整 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 的算法<span class="mojikumi-line-end">。</span></p>
<p>其实一般 <code>font<wbr>-<wbr>weight</code> 也就 400 和 700<span class="mojikumi-line-end">，</span>但我还是实现了一个 <a href="https://developer.mozilla.org/docs/Web/CSS/font-weight#fallback_weights">完整的 <code>font<wbr>-<wbr>weight</code> fallback</a><span class="mojikumi-line-end">。</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/matchFonts.ts"><code>matchFonts<wbr>.<wbr>ts</code></a></p>
<h3 id="常用字体划分" class="heading"><a href="#常用字体划分" class="heading-anchor" aria-label="章节： 常用字体划分" tabindex="-1"></a><span>常用字体划分</span></h3>
<p>最关键的这一步实现起来是最简单的<span class="mojikumi-line-end">，</span>因为是纯算法的<span class="mojikumi-line-end">，</span>不涉及到可怕的 Web<span class="mojikumi-line-start">（</span></p>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/getCommonGlyphs.ts"><code>getCommonGlyphs<wbr>.<wbr>ts</code></a></p>
<h3 id="生成字体文件和-font-face" class="heading"><a href="#生成字体文件和-font-face" class="heading-anchor" aria-label="章节： 生成字体文件和 @font-face" tabindex="-1"></a><span>生成字体文件和 @font-face</span></h3>
<p>我使用的是 <a href="https://github.com/papandreou/subset-font">subset-font</a> 来生成字体子集文件<span class="mojikumi-line-end">。</span></p>
<p>这一步最大的困难<span class="mojikumi-line-end">，</span>是正确地写出 <code>@font-face</code><span class="mojikumi-line-end">。</span></p>
<p>一开始我是给常用字 (common) 和非常用字 (unique) 不同的 <code>font<wbr>-<wbr>family</code><span class="mojikumi-line-end">，</span>然后发现<span class="mojikumi-line-end">，</span>在特殊情况下<span class="mojikumi-line-start">（</span>幸好我的博客文章列表就触发了这个问题<span class="mojikumi-line-end">，</span>不然真没想到<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>某个字的常规样式属于 common 而粗体属于 unique<span class="mojikumi-line-end">，</span>由于 <code>font<wbr>-<wbr>family</code> 里 common 排在 unique 前面<span class="mojikumi-line-end">，</span>就会匹配到常规样式<span class="mojikumi-line-end">，</span>而加载不出粗体<span class="mojikumi-line-end">。</span></p>
<p>为了解决这个问题<span class="mojikumi-line-end">，</span>common 和 unique 需要使用同一个 <code>font<wbr>-<wbr>family</code><span class="mojikumi-line-end">。</span>因为用过 Google Fonts 子集划分方案<span class="mojikumi-line-end">，</span>我知道有不同 <code>unicode<wbr>-<wbr>range</code> 的 <code>@font-face</code> 是可以组合在一起的<span class="mojikumi-line-end">，</span>难道我需要计算出精确的 <code>unicode<wbr>-<wbr>range</code> 写在 CSS 里？</p>
<p>为此<span class="mojikumi-line-end">，</span>我粗略地读了半天<span class="mojikumi-line-start">（</span><s>这两个词不冲突</s><span class="mojikumi-line-end">）</span><a href="https://www.w3.org/TR/css-fonts-4/">CSS Fonts Module Level 4 W3C Working Draft</a><span class="mojikumi-line-end">，</span>发现它说<span class="mojikumi-line-end">，</span><code>unicode<wbr>-<wbr>range</code> 可以比真实的 character map 大很多<span class="mojikumi-line-end">，</span>若干 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 也可以相交<span class="mojikumi-line-end">。</span>但是<span class="mojikumi-line-end">，</span>它没说两个 <code>@font-face</code> 能不能除了 <code>src</code> 啥都一样<span class="mojikumi-line-end">，</span><a href="https://www.w3.org/TR/css-fonts-4/#composite-fonts">而只说了</a><span class="mojikumi-line-end">：</span></p>
<blockquote>
<p>Multiple @font-face rules with different unicode ranges for the same family and style descriptor values can be used to create composite fonts that mix the glyphs from different fonts for different scripts.</p>
</blockquote>
<p>我也不敢依赖于实验结果<span class="mojikumi-line-end">，</span>就没做实验<span class="mojikumi-line-end">，</span>直接加上了粗略但是保证 common 和 unique 不相同的 <code>unicode<wbr>-<wbr>range</code><span class="mojikumi-line-end">，</span>具体来说就是 0 到最大的 code point<span class="mojikumi-line-end">。</span></p>
<p>这里从 0 开始也是有一定原因的<span class="mojikumi-line-end">：</span>我在看 specification 的时候注意到一个奇怪的东西叫 <a href="https://www.w3.org/TR/css-fonts-4/#first-available-font"><i>first available font</i></a><span class="mojikumi-line-end">，</span>虽然没太看懂具体是什么意思<span class="mojikumi-line-end">，</span>但大致上感觉最好是让 <code>unicode<wbr>-<wbr>range</code> 包含空格<span class="mojikumi-line-end">，</span>为了保险就从 0 开始了<span class="mojikumi-line-end">。</span></p>
<p>最后还有一个坑<span class="mojikumi-line-end">：</span>如果 composite font 中两个 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 相交<span class="mojikumi-line-end">，</span>给交集内的字符匹配字体时<span class="mojikumi-line-end">，</span>会按出现位置的逆序进行匹配<span class="mojikumi-line-end">。</span></p>
<p>这能有什么坑呢<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>如果不动手试一试真的很难想到.. 按照整体的设计<span class="mojikumi-line-end">，</span>访问一个页面时很有可能是 common 字体已经缓存好了<span class="mojikumi-line-end">，</span>需要下载 unique 字体<span class="mojikumi-line-end">，</span>如果 unique 的 <code>@font-face</code> 放在 common 的后面<span class="mojikumi-line-end">，</span>就会优先匹配<span class="mojikumi-line-end">，</span>从而阻塞住已经缓存的 common 字体<span class="mojikumi-line-end">，</span>整个页面都要等 unique 下载好才切换字体<span class="mojikumi-line-end">，</span>而不是先显示 common 再显示剩下的 unique<span class="mojikumi-line-end">。</span>当然<span class="mojikumi-line-end">，</span>反过来的话<span class="mojikumi-line-end">，</span>unique 也会等 common<span class="mojikumi-line-end">，</span>但这样一般来说是更好的<span class="mojikumi-line-end">。</span></p>
<p>还有一些细节优化<span class="mojikumi-line-end">：</span></p>
<ul>
<li>生成 unique 字体文件时<span class="mojikumi-line-end">，</span>文件名里有 hash 就够了<span class="mojikumi-line-end">，</span>不要再添加和页面有关的信息<span class="mojikumi-line-end">，</span>这样的话如果两个页面刚好 unique glyph 集合相同就可以共用一个字体文件<span class="mojikumi-line-end">。</span></li>
<li>如果一个页面一个 common glyph 都没用<span class="mojikumi-line-end">，</span>就可以不添加 common font 的 <code>@font-face</code><span class="mojikumi-line-end">。</span></li>
</ul>
<p>代码<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/generateFontFiles.ts"><code class="break-all">generateFontFiles.ts</code></a></p>
<h3 id="将-css-写入-html-文件" class="heading"><a href="#将-css-写入-html-文件" class="heading-anchor" aria-label="章节： 将 CSS 写入 HTML 文件" tabindex="-1"></a><span>将 CSS 写入 HTML 文件</span></h3>
<p>虽然也有想过直接找到 <code>&#x3C;/head></code> 文本替换<span class="mojikumi-line-end">，</span>但为了靠谱还是用的 <a href="https://github.com/jsdom/jsdom"><code>jsdom</code></a><span class="mojikumi-line-end">。</span></p>
<p>这部分的代码是最短的<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/glyph-segregator/blob/master/src/injectCSS.ts"><code>injectCSS<wbr>.<wbr>ts</code></a></p>
<h3 id="给项目起名" class="heading"><a href="#给项目起名" class="heading-anchor" aria-label="章节： 给项目起名" tabindex="-1"></a><span>给项目起名</span></h3>
<p>主体思路是把 glyph 分成两类分别对待<span class="mojikumi-line-end">，</span>就很有 segregate 的感觉<span class="mojikumi-line-start">（</span></p>
<p>主要还是因为刚写了一个 <a href="/post/2022/11/csapp-9#segregated-fit">segregated fit</a> 印象比较深刻<span class="mojikumi-line-end">，</span>所以就取了这么个名字<span class="mojikumi-line-end">。</span></p>
<h3 id="在博客中使用" class="heading"><a href="#在博客中使用" class="heading-anchor" aria-label="章节： 在博客中使用" tabindex="-1"></a><span>在博客中使用</span></h3>
<p>就是 <a href="https://iles-docs.netlify.app/config#ssg-onsiterendered">从 iles 获取页面信息</a><span class="mojikumi-line-end">，</span>从 <a href="https://plausible.io/docs/stats-api#get-apiv1statsbreakdown">Plausible Stats API</a> 获取访问量<span class="mojikumi-line-end">，</span>调用 <a href="https://vitejs.dev/guide/api-javascript.html#preview">Vite API</a> 跑一个 preview server<span class="mojikumi-line-end">，</span>然后调用 <code>glyph<wbr>-<wbr>segregator</code><span class="mojikumi-line-end">。</span>直接看<a href="https://github.com/ouuan/iles-blog/commit/695f8b22ca3a791ceeb5440e81a6fa377b50bb3b#diff-ca899b3bf20a893bb3dfb058072a2b279953ce008f562727ad74a76d520be662">代码</a>吧<span class="mojikumi-line-end">。</span></p>
<p>访问概率的计算方式是<span class="mojikumi-line-end">，</span>看每个页面近 90 天的访客数<span class="mojikumi-line-end">，</span>加一后除以其中最高的加二<span class="mojikumi-line-start">（</span>其实这个加一加二基本没啥用<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>用最高页面访客数而非实际总访客数作分母<span class="mojikumi-line-end">，</span>是想在算法的基础上更加偏向于划分到常用字一些<span class="mojikumi-line-end">，</span>稍微优化一点访问页面较多的访客的体验<span class="mojikumi-line-end">，</span>也可以少一次 API 查询<span class="mojikumi-line-end">。</span></p>
<p>更新常用字集合用的是 <a href="https://github.com/ouuan/iles-blog/blob/master/.github/workflows/update-fonts.yml">scheduled GitHub Actions</a><span class="mojikumi-line-end">，</span>在 Docker 里跑是因为 <a href="https://stackoverflow.com/questions/74332455/connection-refused-for-local-server-in-github-actions-workflow/74341376">Connection refused for local server in github actions workflow</a><span class="mojikumi-line-end">。</span></p>
<h2 id="实际效果" class="heading"><a href="#实际效果" class="heading-anchor" aria-label="章节： 实际效果" tabindex="-1"></a><span>实际效果</span></h2>
<p>整个 <code>glyphSegregator</code> 用时 40s 左右<span class="mojikumi-line-end">，</span>glyph 数量和 common font file size (woff2) 如表所示<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto my-6"><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">Noto Serif SC Regular</th>
<th align="center">Noto Serif SC Bold</th>
<th align="center">LXGW WenKai Regular</th>
<th align="center">LXGW WenKai Bold</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center"><span class="whitespace-nowrap">common</span></td>
<td align="center">575 (162.7KiB)</td>
<td align="center">25 (8.5KiB)</td>
<td align="center">37 (5.2KiB)</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">unique</td>
<td align="center">2311</td>
<td align="center">1536</td>
<td align="center">161</td>
<td align="center">0</td>
</tr>
</tbody>
</table></div>
<p>首页只需加载两个 Regular 的 common font<span class="mojikumi-line-end">，</span>每个页面需要加载的字体文件总大小缩减到了原来使用子集化的 1/4 左右<span class="mojikumi-line-end">，</span>并且加载的字体文件数量从 10~30 个缩减到了 2~6 个<span class="mojikumi-line-end">。</span></p>
<p>作为对比<span class="mojikumi-line-end">，</span>如果出现在两个页面就设为常用字<span class="mojikumi-line-end">，</span>Noto Serif SC Regular 的 common 有 299KiB<span class="mojikumi-line-end">，</span>出现在三个页面则是 227KiB<span class="mojikumi-line-end">。</span></p>
<h2 id="后记：font-subsetting-与-kerning" class="heading"><a href="#后记：font-subsetting-与-kerning" class="heading-anchor" aria-label="章节： 后记：font subsetting 与 kerning" tabindex="-1"></a><span>后记<span class="mojikumi-line-end">：</span>font subsetting 与 kerning</span></h2>
<p>因为通过 Stylus 设置了不使用本地字体<span class="mojikumi-line-end">，</span>我可以轻松地在本地字体和 web font 之间切换<span class="mojikumi-line-end">。</span>然后我就偶然发现<span class="mojikumi-line-end">，</span>切换时一些标题发生了字符的偏移<span class="mojikumi-line-end">。</span>原因也很简单<span class="mojikumi-line-end">，</span>就是相邻的两个字符本来有 kerning (字距调整)<span class="mojikumi-line-end">，</span>但它们被划分到了不同的子集中<span class="mojikumi-line-end">，</span>生成字体子集时就丢失了 kerning 信息<span class="mojikumi-line-end">。</span></p>
<p>我在 glyph-segregator 中 <a href="https://github.com/ouuan/glyph-segregator/commit/ae3ddd5cbb91f0eb6bbfec7071ee408c28b36dec">添加了 <code class="break-all">alwaysCommonGlyphs</code> 选项</a><span class="mojikumi-line-start">（</span>ASCII 字符总是设为 common<span class="mojikumi-line-end">，</span>如果需要处理非 ASCII 字符的 kerning 也可以修改设置<span class="mojikumi-line-end">，</span>但我的博客就假设只有 ASCII 字符会遇到这个问题<span class="mojikumi-line-end">）</span>来解决这一问题<span class="mojikumi-line-end">。</span>最好的解决方案是真的去看一下字体里有哪些 kerning 信息然后相应地处理<span class="mojikumi-line-end">，</span>但是差不多得了<span class="mojikumi-line-start">（</span></p>
<a id="font-kerning-示例" name="font-kerning-示例" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>font kerning 示例</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ul>
<li>有 kerning: <span style="font-kerning: normal; font-size: 2rem;">TAVeYoW</span></li>
<li>没 kerning: <span style="font-kerning: none; font-size: 2rem;">TAVeYoW</span></li>
</ul></div></div></aside>
<p>后记的后记<span class="mojikumi-line-end">：</span>还是改成了<a href="https://github.com/ouuan/glyph-segregator/commit/e955eb1c935d77adf0e4bcb5c870fee0614801b6">即使未被使用也添加进 common glyph set</a><span class="mojikumi-line-end">，</span>否则如果新加一个 always common 的 glyph<span class="mojikumi-line-end">，</span>为了让它 common<span class="mojikumi-line-end">，</span>就会改变 common glyph set<span class="mojikumi-line-end">，</span>导致 cache 失效<span class="mojikumi-line-end">。</span>这里有一定的 trade-off<span class="mojikumi-line-end">，</span>要在 cache 失效 / 多塞一些未被使用的 glyph / kerning 挂掉之间进行选择<span class="mojikumi-line-end">，</span>我还是选择了多塞一些未被使用的 glyph<span class="mojikumi-line-end">，</span>毕竟整个 ASCII 也没多大<span class="mojikumi-line-end">。</span>最好是借助人类智慧来预测一下哪些 glyph 更有可能在未来被添加而放进 common glyph set 里<span class="mojikumi-line-end">，</span>其他 glyph 就只有使用了才放<span class="mojikumi-line-end">，</span>但是差不多得了<span class="mojikumi-line-start">（</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/blog">blog</category>
            <category domain="https://ouuan.moe/tag/Web">Web</category>
            <category domain="https://ouuan.moe/tag/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91">项目开发</category>
        </item>
        <item>
            <title><![CDATA[DDPP 学习笔记系列 序]]></title>
            <link>https://ouuan.moe/post/2023/01/ddpp</link>
            <guid>https://ouuan.moe/post/2023/01/ddpp</guid>
            <pubDate>Sun, 15 Jan 2023 11:49:22 GMT</pubDate>
            <description><![CDATA[<p><a href="https://wakerly.org/DDPP/">Digital Design Principles and Practices</a> 5th edition 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p><a href="https://wakerly.org/DDPP/">Digital Design Principles and Practices</a> 5th edition 的学习笔记<span class="mojikumi-line-end">。</span></p>

<hr>
<p>下学期要选数电或数设<span class="mojikumi-line-end">，</span>听说数电是纯考试<span class="mojikumi-line-end">，</span>数设是考试 + 大作业<span class="mojikumi-line-end">，</span>又听说数设助教全是 tuna 群友<span class="mojikumi-line-end">，</span>就选了数设<span class="mojikumi-line-end">，</span>还好没掉课<span class="mojikumi-line-start">（</span></p>
<p>虽然不知道讲课内容和 DDPP 有多少是正交的<span class="mojikumi-line-end">，</span>但看一看 <s>除了没时间学缓考的课有挂科风险</s> 也没啥坏处<span class="mojikumi-line-end">。</span></p>
<p>上学期 <a href="/post/2022/09/csapp">在上课期间学 CS:APP</a> 还是挺痛苦的<span class="mojikumi-line-end">，</span>希望这次寒假能多学一点<span class="mojikumi-line-end">。</span>本来想寒假补完一下 CS:APP<span class="mojikumi-line-end">，</span>但大概是没时间了<span class="mojikumi-line-end">。</span>先学 DDPP 可能对 CS:APP 的第四章也会有些帮助 (?)<span class="mojikumi-line-end">。</span></p>
<p>看了下 preface 和 chapter 1 开头<span class="mojikumi-line-end">，</span>感觉这个作者说话挺有意思的<span class="mojikumi-line-end">，</span>joke 含量很高<span class="mojikumi-line-end">。</span>下面这句摘自 chapter 1 开头<span class="mojikumi-line-end">，</span>两词三义<span class="mojikumi-line-end">，</span><s><a href="https://zh.moegirl.org.cn/%E5%AE%AB%E4%B8%8B%E7%88%B1"><span class="text-aisan">爱姐</span></a><a href="https://zh.moegirl.org.cn/%E5%86%85%E7%94%B0%E7%A7%80"><span class="text-mia">秀酱</span></a>狂喜</s><span class="mojikumi-line-end">，</span><s>又多了一个不读中文翻译的理由</s><span class="mojikumi-line-end">，</span><s>让技术书籍的翻译也来体验一下<span class="text-nijigasaki">虹咲</span>烤肉 man 的痛苦吧</s><span class="mojikumi-line-end">。</span></p>
<blockquote>
<p>Or perhaps you<span class="mojikumi-narrow-left">’</span>re an electrical engineering student who already knows something about analog electronics and circuit design, but you wouldn<span class="mojikumi-narrow-left">’</span>t know a bit if it bit you.</p>
</blockquote>
<p>P.S. 为什么不是 <span class="mojikumi">“</span>DD:PP<span class="mojikumi">”</span> 呢 🤔 <s>是不是作者学 CS:APP 的时候觉得冒号打起来太麻烦了<span class="mojikumi-line-end">，</span>就想着一定要为自己的读者省去这个麻烦</s><span class="mojikumi-line-end">。</span></p>
<p>UPD: 终于读完第一章了<span class="mojikumi-line-end">。</span>drill problem 第一题是<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>Give three different definitions for the word <span class="mojikumi-narrow-right">‘</span>bit<span class="mojikumi-narrow-left">’</span> as used in this chapter<span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/ddpp">ddpp</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[CS:APP 第六章学习笔记]]></title>
            <link>https://ouuan.moe/post/2022/12/csapp-6</link>
            <guid>https://ouuan.moe/post/2022/12/csapp-6</guid>
            <pubDate>Mon, 05 Dec 2022 07:47:43 GMT</pubDate>
            <description><![CDATA[





<p><a href="https://csapp.cs.cmu.edu/">CS:APP</a> 第六章 <span class="mojikumi">“</span>The Memory Hierarchy<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>这章的主要内容有<span class="mojikumi-line-end">：</span>各种存储设备<span class="mojikumi-line-start">（</span>RAM<span class="mojikumi-line-end">、</span>ROM<span class="mojikumi-line-end">、</span>HDD<span class="mojikumi-line-end">、</span>SSD<span class="mojikumi-line-end">）</span>的特点<span class="mojikumi-line-end">、</span>程序的局部性<span class="mojikumi-line-end">、</span>缓存的结构以及原理<span class="mojikumi-line-end">、</span>缓存对程序性能的影响<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[





<p><a href="https://csapp.cs.cmu.edu/">CS:APP</a> 第六章 <span class="mojikumi">“</span>The Memory Hierarchy<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
<p>这章的主要内容有<span class="mojikumi-line-end">：</span>各种存储设备<span class="mojikumi-line-start">（</span>RAM<span class="mojikumi-line-end">、</span>ROM<span class="mojikumi-line-end">、</span>HDD<span class="mojikumi-line-end">、</span>SSD<span class="mojikumi-line-end">）</span>的特点<span class="mojikumi-line-end">、</span>程序的局部性<span class="mojikumi-line-end">、</span>缓存的结构以及原理<span class="mojikumi-line-end">、</span>缓存对程序性能的影响<span class="mojikumi-line-end">。</span></p>

<p>因为时间不太够<span class="mojikumi-line-end">，</span>本来我想先跳过这章以后再补的<span class="mojikumi-line-end">，</span>但学第九章的时候感觉还是跳不得<span class="mojikumi-line-end">，</span>否则第九章有些东西感觉学了个半懂<span class="mojikumi-line-end">。</span><s>虽然只用学一小部分就足以满足第九章的需求<span class="mojikumi-line-end">，</span>但我打算摆烂了<span class="mojikumi-line-end">，</span>该学的东西学不完就学不完<span class="mojikumi-line-end">，</span>我想学啥就学啥<span class="mojikumi-line-end">。</span></s></p>
<h2 id="storage-technologies" class="heading"><a href="#storage-technologies" class="heading-anchor" aria-label="章节： Storage Technologies" tabindex="-1"></a><span>Storage Technologies</span></h2>
<h3 id="ram" class="heading"><a href="#ram" class="heading-anchor" aria-label="章节： RAM" tabindex="-1"></a><span>RAM</span></h3>
<p><i>Random access memory</i> 分为 SRAM 和 DRAM 两种<span class="mojikumi-line-end">，</span>SRAM 有更快的访问速度但更加昂贵<span class="mojikumi-line-end">。</span></p>
<h4 id="sram" class="heading"><a href="#sram" class="heading-anchor" aria-label="章节： SRAM" tabindex="-1"></a><span>SRAM</span></h4>
<p>SRAM (Static RAM) 将每个 bit 存储在一个 <i>bistable</i> 的 memory cell 中<span class="mojikumi-line-end">，</span>每个 cell 由 6 个晶体管组成<span class="mojikumi-line-end">，</span>有两种可能的稳定态<span class="mojikumi-line-end">，</span>遇到微小的扰动也会迅速恢复到这两种状态之一<span class="mojikumi-line-end">。</span></p>
<h4 id="dram" class="heading"><a href="#dram" class="heading-anchor" aria-label="章节： DRAM" tabindex="-1"></a><span>DRAM</span></h4>
<p>DRAM (Dynamic RAM) 将每个 bit 存储在一个很小的电容中<span class="mojikumi-line-end">，</span>容易受到外界干扰<span class="mojikumi-line-end">，</span>所以需要周期性地将数据复制出去再复制回来以进行刷新<span class="mojikumi-line-end">，</span>可能还会配合纠错码来保证数据正确<span class="mojikumi-line-end">。</span></p>
<p>DRAM 的设计使其存储密度更高<span class="mojikumi-line-end">，</span>但访问速度更慢<span class="mojikumi-line-end">；</span>SRAM 则更快<span class="mojikumi-line-end">，</span>但密度更低<span class="mojikumi-line-end">，</span>更贵<span class="mojikumi-line-end">，</span>更费电<span class="mojikumi-line-end">。</span>访问 DRAM 的用时大约是 SRAM 的 10 倍<span class="mojikumi-line-end">，</span>而 SRAM 的造价大约是 DRAM 的 1000 倍<span class="mojikumi-line-end">。</span></p>
<h4 id="conventional-dram" class="heading"><a href="#conventional-dram" class="heading-anchor" aria-label="章节： Conventional DRAM" tabindex="-1"></a><span>Conventional DRAM</span></h4>
<p>DRAM 芯片被分为若干 <i>supercell</i><span class="mojikumi-line-end">，</span>每个 supercell 存储一个 word<span class="mojikumi-line-end">，</span>一般是 1 byte<span class="mojikumi-line-end">。</span>supercell 排列为二维阵列<span class="mojikumi-line-end">，</span>可以用二维坐标 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span> 定位<span class="mojikumi-line-end">。</span></p>
<p>DRAM 通过 <i>pin</i> 连接到 <i>memory controller</i> 来和外界通信<span class="mojikumi-line-end">。</span>读取位于 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></span> 的 supercell 时<span class="mojikumi-line-end">，</span>memory controller 会依次发送 <i>row access strobe</i> (RAS) <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 和 <i>column access strobe</i> (CAS) <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="mojikumi-line-end">，</span>在收到 RAS 后 DRAM 会将第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span> 行复制到一个内部的 row buffer<span class="mojikumi-line-end">，</span>收到 CAS 后再从 row buffer 里将第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span> 列发送给 memory controller<span class="mojikumi-line-end">。</span></p>
<h4 id="memory-module" class="heading"><a href="#memory-module" class="heading-anchor" aria-label="章节： Memory Module" tabindex="-1"></a><span>Memory Module</span></h4>
<p>DRAM 芯片会被组装为 <i>memory module</i> 来插到主板上<span class="mojikumi-line-end">。</span></p>
<p>DIMM 是一种 memory module<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>一个 DIMM 可以包含 8 个 DRAM 芯片<span class="mojikumi-line-end">，</span>每个 64-bit 的 word 在每个 DRAM 芯片的同一个地址上分别存一个 byte<span class="mojikumi-line-end">，</span>从而整个 DIMM 可以以 64-bit 为单位与外界通信<span class="mojikumi-line-end">。</span></p>
<h4 id="enhanced-dram" class="heading"><a href="#enhanced-dram" class="heading-anchor" aria-label="章节： Enhanced DRAM" tabindex="-1"></a><span>Enhanced DRAM</span></h4>
<p>朴素的 DRAM 是比较慢的<span class="mojikumi-line-end">，</span>历史上曾经有过若干对 conventional DRAM 的优化<span class="mojikumi-line-end">：</span></p>
<ol>
<li>FPM (fast page mode) DRAM: 如果连续两次 RAS 是一样的<span class="mojikumi-line-end">，</span>可以省略掉后续相同的 RAS<span class="mojikumi-line-end">，</span>直接发送 CAS</li>
<li>EDO (extended data out) DRAM: 延长了数据输出的时间<span class="mojikumi-line-end">，</span>对 pipelining 有帮助</li>
<li>SDRAM (synchronous): 通过时钟信号的 rising edge 同步地通信<span class="mojikumi-line-end">，</span>而非通过发送 RAS/CAS 异步通信</li>
<li>DDR (double data-rate) SDRAM: 通过同时使用时钟信号的 rising edge 和 falling edge 达到 double data-rate<span class="mojikumi-line-end">，</span>分为 DDR<span class="mojikumi-line-end">、</span>DDR2<span class="mojikumi-line-end">、</span>DDR3<span class="mojikumi-line-end">、</span>DDR4<span class="mojikumi-line-end">、</span>DDR5 等</li>
<li>VRAM (video): 一般用于显卡<span class="mojikumi-line-end">、</span>frame buffer 等<span class="mojikumi-line-end">，</span>它的输出是直接输出整个 buffer<span class="mojikumi-line-end">，</span>并且可以并行地同时读和写</li>
</ol>
<h3 id="rom" class="heading"><a href="#rom" class="heading-anchor" aria-label="章节： ROM" tabindex="-1"></a><span>ROM</span></h3>
<p>RAM 会在断电后丢失数据<span class="mojikumi-line-end">，</span>所以是 <i>volatile</i> 的<span class="mojikumi-line-end">。</span>与之相对<span class="mojikumi-line-end">，</span>还有 nonvolatile 的存储器<span class="mojikumi-line-end">，</span>统称为 <i>read-only memory</i> (ROM)<span class="mojikumi-line-end">，</span>尽管有的 ROM 是可以写入的<span class="mojikumi-line-end">。</span>ROM 的写入称作 <i>reprogram</i><span class="mojikumi-line-end">。</span></p>
<ul>
<li>PROM (programmable ROM) 只能被写入一次<span class="mojikumi-line-end">。</span></li>
<li>EPROM (erasable PROM) 需要用特殊设备写入<span class="mojikumi-line-end">，</span>可以写入大约 1000 次<span class="mojikumi-line-end">。</span></li>
<li>EEPROM (electrically EPROM) 不需要用特殊设备就可以写入<span class="mojikumi-line-end">，</span>可以写入大约 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span> 次<span class="mojikumi-line-end">。</span></li>
<li>flash memory 是一种基于 EEPROM 的 nonvolatile 存储器<span class="mojikumi-line-end">，</span>被广泛使用<span class="mojikumi-line-end">，</span>包括用于 <a href="#ssd">SSD</a><span class="mojikumi-line-end">。</span></li>
<li>固件 (firmware) 往往存储于 ROM 中<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="访问-main-memory" class="heading"><a href="#访问-main-memory" class="heading-anchor" aria-label="章节： 访问 main memory" tabindex="-1"></a><span>访问 main memory</span></h3>
<p>一个 <i>bus</i> 是一组用来通信的导线<span class="mojikumi-line-end">，</span>可以传输地址<span class="mojikumi-line-end">、</span>数据<span class="mojikumi-line-end">、</span>控制信号等<span class="mojikumi-line-end">。</span>CPU 和 main memory 之间的通信通过 <i>bus transaction</i> 进行<span class="mojikumi-line-end">。</span></p>
<p>CPU 通过 system bus 连接 I/O bridge<span class="mojikumi-line-end">，</span>I/O bridge 通过 memory bus 连接 main memory<span class="mojikumi-line-end">。</span>I/O bridge 负责 system bus signal 和 memory bus signal 之间的转换<span class="mojikumi-line-end">。</span></p>
<h3 id="hdd" class="heading"><a href="#hdd" class="heading-anchor" aria-label="章节： HDD" tabindex="-1"></a><span>HDD</span></h3>
<h4 id="磁盘的结构" class="heading"><a href="#磁盘的结构" class="heading-anchor" aria-label="章节： 磁盘的结构" tabindex="-1"></a><span>磁盘的结构</span></h4>
<p>磁盘由若干 <i>platter</i><span class="mojikumi-line-start">（</span>盘片<span class="mojikumi-line-end">）</span>组成<span class="mojikumi-line-end">。</span>每个 platter 有两个 <i>surface</i><span class="mojikumi-line-start">（</span>表面<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>每个 surface 上覆盖着磁性记录材料<span class="mojikumi-line-end">。</span>platter 由位于中心的 <i>spindle</i><span class="mojikumi-line-start">（</span>主轴<span class="mojikumi-line-end">）</span>带动<span class="mojikumi-line-end">，</span>以某个一般是 5400~15000 RPM 的速度转动<span class="mojikumi-line-end">。</span></p>
<p>每个 surface 被分成若干个称作 <i>track</i><span class="mojikumi-line-start">（</span>磁道<span class="mojikumi-line-end">）</span>的同心圆环<span class="mojikumi-line-end">，</span>每个 track 被分为若干 <i>sector</i><span class="mojikumi-line-start">（</span>扇区<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>每个 sector 存有相同大小的数据<span class="mojikumi-line-start">（</span>一般是 512 bytes<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>相邻的 sector 之间由 <i>gap</i><span class="mojikumi-line-start">（</span>间隙<span class="mojikumi-line-end">）</span>隔开<span class="mojikumi-line-end">，</span>gap 不存储数据<span class="mojikumi-line-end">，</span>而是用来识别 sector<span class="mojikumi-line-end">。</span></p>
<p>一个磁盘通常由多个堆叠在一起的 platter 构成<span class="mojikumi-line-end">，</span>这些 platter 共享一个 spindle<span class="mojikumi-line-end">。</span>对于某个距离 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="mojikumi-line-end">，</span>一个磁盘内所有 surface 上离转轴距离为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span> 的 track 的集合称作一个 <i>cylinder</i><span class="mojikumi-line-start">（</span>柱面<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>整体结构如 CS:APP Figure 6.9 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.9.930d8843.webp"><img srcset="/assets/csapp-fig6.9.5ba83537.png" loading="lazy" src="/assets/csapp-fig6.9.5ba83537.png" width="1517" height="537" alt="磁盘结构示意图"></picture></p>
<h4 id="磁盘的容量" class="heading"><a href="#磁盘的容量" class="heading-anchor" aria-label="章节： 磁盘的容量" tabindex="-1"></a><span>磁盘的容量</span></h4>
<p>磁盘的容量有三个衡量指标<span class="mojikumi-line-end">：</span></p>
<ul>
<li>recording density: 单位长度的 track 存储的 bit 数量</li>
<li>track density: 单位长度的半径上的 track 个数</li>
<li>areal density: 单位面积上存储的 bit 数量</li>
</ul>
<p>早期的磁盘的所有 track 都有相同数量的 sector<span class="mojikumi-line-end">，</span>这样的话位于外部的 track 的 sector 就会更加稀疏<span class="mojikumi-line-end">。</span>后来为了提高容量<span class="mojikumi-line-end">，</span>将 cylinder 划分成了若干个 <i>recording zone</i><span class="mojikumi-line-end">，</span>每个 recording zone 由若干相邻的 cylinder 组成<span class="mojikumi-line-end">，</span>同一个 recording zone 内的所有 track 有相同数量的 sector<span class="mojikumi-line-end">。</span></p>
<h4 id="磁盘的读写" class="heading"><a href="#磁盘的读写" class="heading-anchor" aria-label="章节： 磁盘的读写" tabindex="-1"></a><span>磁盘的读写</span></h4>
<p>磁盘通过连在传动臂上的读写头进行读写<span class="mojikumi-line-end">，</span>每次读写前需要先将读写头移动到相应的位置<span class="mojikumi-line-start">（</span>寻道<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>并等待目标 sector 转动到读写头下<span class="mojikumi-line-end">，</span>再开始读写<span class="mojikumi-line-end">。</span></p>
<p>寻道用时与读写头原本的位置到目标位置的距离有关<span class="mojikumi-line-end">，</span>等待转动的用时则看运气<span class="mojikumi-line-end">。</span>在 CS:APP 举的例子中<span class="mojikumi-line-end">，</span>寻道平均用时为 9 ms<span class="mojikumi-line-end">，</span>等待旋转平均用时为 4 ms<span class="mojikumi-line-end">，</span>读写一个 sector 用时 20 μs<span class="mojikumi-line-end">。</span></p>
<p>也就是说<span class="mojikumi-line-end">，</span>磁盘读写的主要用时是寻道以及等待旋转用时<span class="mojikumi-line-end">，</span>也就是初次访问一段连续的 sector 的用时<span class="mojikumi-line-end">，</span>而与访问多少个连续的 sector 关系不大<span class="mojikumi-line-end">。</span>对于单个 sector<span class="mojikumi-line-end">，</span>磁盘访问的用时可以达到 SRAM 的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span> 倍<span class="mojikumi-line-end">，</span>DRAM 的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">10^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span> 倍<span class="mojikumi-line-end">，</span>但连续 sector 的读写用时仅为 DRAM 的不到十倍<span class="mojikumi-line-end">。</span></p>
<h4 id="logical-disk-blocks" class="heading"><a href="#logical-disk-blocks" class="heading-anchor" aria-label="章节： Logical Disk Blocks" tabindex="-1"></a><span>Logical Disk Blocks</span></h4>
<p>磁盘对外提供了 <i>logical block</i> 作为 sector 的抽象<span class="mojikumi-line-end">，</span>每个 logical block 的大小和一个 sector 相同<span class="mojikumi-line-end">，</span>由连续的非负整数索引<span class="mojikumi-line-end">，</span>通过 <i>disk controller</i> 翻译成形如 <i>(surface, track, sector)</i> 的坐标<span class="mojikumi-line-end">。</span></p>
<a id="磁盘格式化" name="磁盘格式化" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h5 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>磁盘格式化</span></h5><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>磁盘在使用前需要进行格式化<span class="mojikumi-line-end">：</span>在 gap 中写入 sector 的标识信息<span class="mojikumi-line-end">，</span>识别出有故障的 cylinder<span class="mojikumi-line-end">，</span>将一些 cylinder 设为备用以防其他 cylinder 损坏<span class="mojikumi-line-end">。</span>由于备用 cylinder 的存在<span class="mojikumi-line-end">，</span>formatted capacity 会小于 maximum capacity<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h3 id="io-bus" class="heading"><a href="#io-bus" class="heading-anchor" aria-label="章节： I/O bus" tabindex="-1"></a><span>I/O bus</span></h3>
<p>不同的 I/O 设备通过 I/O bus 与 I/O bridge 连接<span class="mojikumi-line-end">。</span>例如显卡<span class="mojikumi-line-end">、</span>连接各种设备的 USB controller<span class="mojikumi-line-end">、</span>通过 SCSI/SATA 等接口连接磁盘的 host bus adapter 等都会连接到 I/O bus<span class="mojikumi-line-end">。</span></p>
<h3 id="访问磁盘" class="heading"><a href="#访问磁盘" class="heading-anchor" aria-label="章节： 访问磁盘" tabindex="-1"></a><span>访问磁盘</span></h3>
<p>访问磁盘需要向磁盘发送三条指令<span class="mojikumi-line-end">：</span></p>
<ol>
<li>向磁盘发送一个信号<span class="mojikumi-line-end">，</span>告诉磁盘要读取数据</li>
<li>将要读取的 logical block number 发送给磁盘</li>
<li>告诉磁盘读取到的数据要放在 main memory 的哪个地址</li>
</ol>
<p>发送完这些指令后<span class="mojikumi-line-end">，</span>CPU 会继续干其他事情<span class="mojikumi-line-end">。</span>磁盘读取到数据后<span class="mojikumi-line-end">，</span>会通过 I/O bus 直接将数据存放到 main memory 中而不经过 CPU<span class="mojikumi-line-end">，</span>这被称作 <i>direct memory access</i> (DMA)<span class="mojikumi-line-end">。</span>存放好数据后<span class="mojikumi-line-end">，</span>磁盘向 CPU 发送 interrupt signal 来跳转到处理磁盘读取完成的 signal handler<span class="mojikumi-line-end">。</span></p>
<h3 id="ssd" class="heading"><a href="#ssd" class="heading-anchor" aria-label="章节： SSD" tabindex="-1"></a><span>SSD</span></h3>
<p>SSD 将一个或多个 flash memory 包装起来<span class="mojikumi-line-end">，</span>并且有一个 <i>flash translation layer</i> 来将输入的 logical block number 转换为对 flash memory 的访问<span class="mojikumi-line-end">，</span>对外表现出与 HDD 类似的接口<span class="mojikumi-line-end">。</span></p>
<p>flash memory 由若干 block 组成<span class="mojikumi-line-end">，</span>每个 block 又由若干<span class="mojikumi-line-start">（</span>32-128 个<span class="mojikumi-line-end">）</span>page 组成<span class="mojikumi-line-end">，</span>每个 page 一般是 512B-4KB 大<span class="mojikumi-line-end">，</span>数据传输的最小单位是 page<span class="mojikumi-line-end">。</span></p>
<p>SSD 的写入比较特殊<span class="mojikumi-line-end">：</span>一个 page 需要在所属的整个 block 都被擦除<span class="mojikumi-line-start">（</span>改为全 1<span class="mojikumi-line-end">）</span>后才能写入一次<span class="mojikumi-line-end">，</span>如果要写入第二次就得再把整个 block 擦除一遍<span class="mojikumi-line-end">。</span>在写入时<span class="mojikumi-line-end">，</span>为了擦除某个 block<span class="mojikumi-line-end">，</span>可能会需要把这个 block 存储的数据复制到其他 block<span class="mojikumi-line-end">。</span>擦除是一个耗时相对较长的操作<span class="mojikumi-line-end">，</span>需要约 1 ms<span class="mojikumi-line-end">，</span>并且每个 block 在擦除约 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span> 次后就会损坏<span class="mojikumi-line-end">。</span></p>
<p>这使得 SSD 的写入比读取略慢<span class="mojikumi-line-end">，</span>并且写入很多次后可能损坏<span class="mojikumi-line-end">。</span>flash translation layer 会通过 <i>wear-leveling logic</i> 来尽可能使得每个 block 的擦除次数相同<span class="mojikumi-line-end">，</span>以延长 SSD 的使用寿命<span class="mojikumi-line-end">。</span></p>
<p>disk<span class="mojikumi-line-end">、</span>RAM<span class="mojikumi-line-end">、</span>CPU 速度差异的历史变化如 CS:APP Figure 6.16 所示<span class="mojikumi-line-end">，</span>其中 CPU cycle time 是单核的<span class="mojikumi-line-end">，</span>effective CPU cycle time 是多核的<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.16.737e4bc7.webp"><img srcset="/assets/csapp-fig6.16.14164224.png" loading="lazy" src="/assets/csapp-fig6.16.14164224.png" width="1017" height="464" alt="disk、RAM、CPU 速度差异的历史变化"></picture></p>
<h2 id="locality" class="heading"><a href="#locality" class="heading-anchor" aria-label="章节： Locality" tabindex="-1"></a><span>Locality</span></h2>
<p>好的程序具有良好的 <i>locality</i><span class="mojikumi-line-end">。</span>locality 有两种表现形式<span class="mojikumi-line-end">，</span><i>temporal locality</i> 指的是最近访问过的数据更有可能在不久的将来再次被访问<span class="mojikumi-line-end">，</span><i>spatial locality</i> 指的是访问过一处的数据后更有可能在不久的将来访问邻近的其他数据<span class="mojikumi-line-end">。</span></p>
<p>具有良好 locality 的程序跑得更快<span class="mojikumi-line-end">，</span>因为计算机系统设计的各个层面都利用 locality 做了优化<span class="mojikumi-line-end">。</span></p>
<p>一些 locality 的例子<span class="mojikumi-line-end">：</span></p>
<ul>
<li>重复引用同一个变量的程序有良好的 locality<span class="mojikumi-line-end">。</span></li>
<li>在一段连续内存<span class="mojikumi-line-start">（</span>数组<span class="mojikumi-line-end">）</span>中依次访问每个元素称作 <i>stride-1 reference pattern</i><span class="mojikumi-line-end">，</span>每次间隔 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 个元素进行访问称作 <i>stride-k reference pattern</i><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span> 越小 locality 越好<span class="mojikumi-line-end">。</span>遍历高维数组时尤其要注意访问的顺序<span class="mojikumi-line-end">。</span></li>
<li>由于循环会重复访问同一段指令<span class="mojikumi-line-end">，</span>循环的指令读取局部性良好</li>
</ul>
<h2 id="the-memory-hierarchy" class="heading"><a href="#the-memory-hierarchy" class="heading-anchor" aria-label="章节： The Memory Hierarchy" tabindex="-1"></a><span>The Memory Hierarchy</span></h2>
<p>在硬件上<span class="mojikumi-line-end">，</span>不同存储技术之间存在性能<span class="mojikumi-line-end">、</span>价格<span class="mojikumi-line-end">、</span>容量的 trade-off<span class="mojikumi-line-end">；</span>在软件上<span class="mojikumi-line-end">，</span>程序具有 locality<span class="mojikumi-line-end">。</span>硬件和软件的这两条性质正好可以搭配在一起<span class="mojikumi-line-end">，</span>促使 memory system 采用了如 CS:APP Figure 6.21 所示的称作 <i>memory hierarchy</i> 的组织方式<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.21.26bcdff1.webp"><img srcset="/assets/csapp-fig6.21.0c63259f.png" loading="lazy" src="/assets/csapp-fig6.21.0c63259f.png" width="1047" height="624" alt="The memory hierarchy"></picture></p>
<p>memory hierarchy 的构成并不一定和上图完全一致<span class="mojikumi-line-end">，</span>例如 SRAM 的级数可能不是三级<span class="mojikumi-line-end">、</span>DRAM 和 HDD 间可能还有 SSD<span class="mojikumi-line-end">、</span>磁带也可以作为 memory hierarchy 中比 HDD 更低的一级<span class="mojikumi-line-end">。</span></p>
<h3 id="cache" class="heading"><a href="#cache" class="heading-anchor" aria-label="章节： Cache" tabindex="-1"></a><span>Cache</span></h3>
<p>caching 指的是用一个相对小而快的存储设备来存储一个相对大而慢的存储设备中最为活跃的部分<span class="mojikumi-line-end">，</span>这个小的存储设备称作大的存储设备的 cache<span class="mojikumi-line-end">。</span></p>
<p>在 memory hierarchy 中<span class="mojikumi-line-end">，</span>每一级都是下一级的 cache<span class="mojikumi-line-end">。</span>数据会在各个相邻层级间不断地传输<span class="mojikumi-line-end">，</span>不同层级之间会以不同的 block size 作为数据传输的基本单位<span class="mojikumi-line-end">。</span></p>
<h3 id="从-cache-获取数据" class="heading"><a href="#从-cache-获取数据" class="heading-anchor" aria-label="章节： 从 cache 获取数据" tabindex="-1"></a><span>从 cache 获取数据</span></h3>
<p>想要从 memory hierarchy 的某一级获取数据时<span class="mojikumi-line-end">，</span>首先会尝试从它的 cache 获取数据<span class="mojikumi-line-end">，</span>如果成功获取则称作 <i>cache hit</i><span class="mojikumi-line-end">，</span>否则称作 <i>cache miss</i><span class="mojikumi-line-end">。</span></p>
<p>发生 cache miss 时<span class="mojikumi-line-end">，</span>一般会先将数据从下一级复制到上一级<span class="mojikumi-line-end">，</span>从而最终还是表现为从 cache 中获取数据<span class="mojikumi-line-end">。</span>如果 cache 满了<span class="mojikumi-line-end">，</span>在从下一级获取数据时<span class="mojikumi-line-end">，</span>就需要删除 cache 中的一些数据来腾出空间<span class="mojikumi-line-end">，</span>这时需要在 cache 中选择被删除的数据<span class="mojikumi-line-end">，</span>被删除的 block 称作 <i>victim block</i><span class="mojikumi-line-end">，</span>这个行为称作将 victim block <i>evict</i><span class="mojikumi-line-end">，</span>而选择 victim block 是根据 <i>replacement policy</i> 进行的<span class="mojikumi-line-end">，</span>例如 random replacement policy<span class="mojikumi-line-end">、</span>least recently used (LRU) replacement policy 等<span class="mojikumi-line-end">。</span></p>
<h3 id="cache-的管理" class="heading"><a href="#cache-的管理" class="heading-anchor" aria-label="章节： Cache 的管理" tabindex="-1"></a><span>Cache 的管理</span></h3>
<p>cache 可能由硬件<span class="mojikumi-line-end">、</span>OS<span class="mojikumi-line-end">、</span>软件以及它们之间的相互配合来进行管理<span class="mojikumi-line-end">，</span>而这在大部分时候都是自动完成的<span class="mojikumi-line-end">，</span>无需应用程序的程序员操心<span class="mojikumi-line-end">。</span></p>
<p>各级 cache 如 CS:APP Figure 6.23 所示<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.23.2f4f3b1d.webp"><img srcset="/assets/csapp-fig6.23.5c7d2566.png" loading="lazy" src="/assets/csapp-fig6.23.5c7d2566.png" width="1593" height="609" alt="无处不在的各式各样的 cache"></picture></p>
<h3 id="cache-对-locality-的利用" class="heading"><a href="#cache-对-locality-的利用" class="heading-anchor" aria-label="章节： Cache 对 locality 的利用" tabindex="-1"></a><span>Cache 对 locality 的利用</span></h3>
<p>temporal locality 使得重复使用的数据留存在 cache 中从而更容易 cache hit<span class="mojikumi-line-end">；</span>cache 中的数据按 block 存储则利用了 spatial locality<span class="mojikumi-line-end">，</span>使得一个数据被 cache 时与其邻近的处于同一个 block 的数据也被 cache<span class="mojikumi-line-end">。</span></p>
<h2 id="cache-memories" class="heading"><a href="#cache-memories" class="heading-anchor" aria-label="章节： Cache Memories" tabindex="-1"></a><span>Cache Memories</span></h2>
<p>随着 CPU 和 DRAM 的速度差异越来越大<span class="mojikumi-line-end">，</span>SRAM 被用来填充它们之间的 gap<span class="mojikumi-line-end">。</span></p>
<p>在下面的讨论中<span class="mojikumi-line-end">，</span>为了简便<span class="mojikumi-line-end">，</span>假设只有 L1 cache<span class="mojikumi-line-end">，</span>没有 L2<span class="mojikumi-line-end">、</span>L3 cache<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>或者也可以看成是在介绍 L3 cache 是如何工作的<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h3 id="cache-的结构与读取" class="heading"><a href="#cache-的结构与读取" class="heading-anchor" aria-label="章节： Cache 的结构与读取" tabindex="-1"></a><span>Cache 的结构与读取</span></h3>
<p>设 main memory 有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">2^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></span> 个地址<span class="mojikumi-line-end">，</span>每个地址存放一个 byte<span class="mojikumi-line-end">。</span>它的 cache 会分成 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">2^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span> 个 <i>cache set</i><span class="mojikumi-line-end">，</span>每个 cache set 包含 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> 个 <i>cache line</i><span class="mojikumi-line-end">，</span>每个 cache line 存放一个大小为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>b</mi></msup></mrow><annotation encoding="application/x-tex">2^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span></span></span></span></span> byte 的 data block<span class="mojikumi-line-end">、</span>一个 <i>valid bit</i><span class="mojikumi-line-end">、</span>以及长度为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>=</mo><mi>m</mi><mo>−</mo><mi>b</mi><mo>−</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">t = m-b-s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span></span> 的 <i>tag bits</i><span class="mojikumi-line-end">。</span></p>
<p>每个地址会被分成三部分<span class="mojikumi-line-end">，</span>高位的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span></span> 位是 tag<span class="mojikumi-line-end">，</span>中间 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span></span> 位是 set index<span class="mojikumi-line-end">，</span>低位 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span> 位是 block offset<span class="mojikumi-line-end">。</span>获取存放在某个地址的数据时<span class="mojikumi-line-end">，</span>先根据其 set index 找到对应的 cache set<span class="mojikumi-line-end">，</span>再在 cache set 中找到 valid bit 为 1 且 tag 相符的 cache line<span class="mojikumi-line-end">，</span>最后通过 block offset 来从 block 中提取出单个 byte<span class="mojikumi-line-end">。</span></p>
<p>在 cache miss 时<span class="mojikumi-line-end">，</span>需要从下一级获取数据<span class="mojikumi-line-end">，</span>存放到 cache 中<span class="mojikumi-line-end">。</span>如果对应的 cache set 所有 cache line 都满了<span class="mojikumi-line-end">，</span>就需要 evict 某个已有的 cache line<span class="mojikumi-line-end">。</span></p>
<h3 id="conflict-miss" class="heading"><a href="#conflict-miss" class="heading-anchor" aria-label="章节： Conflict Miss" tabindex="-1"></a><span>Conflict Miss</span></h3>
<p>cache set 的设计基于一个假设<span class="mojikumi-line-end">，</span>即在局部内访问的数据地址的低位往往是不同的<span class="mojikumi-line-end">，</span>但实际上可能并非如此<span class="mojikumi-line-end">。</span>如果以 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>s</mi><mo>+</mo><mi>b</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{s+b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span></span></span></span></span></span> 的倍数为地址间隔访问数据<span class="mojikumi-line-end">，</span>就可能连续访问同一个 cache set 内的数据<span class="mojikumi-line-end">，</span>导致 cache miss<span class="mojikumi-line-start">（</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> 较小<span class="mojikumi-line-end">，</span>尤其是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 时<span class="mojikumi-line-end">，</span>这种情况更可能触发<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>数组的大小是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span> 的次幂而交替访问相邻数组的同一个下标时就可能这样<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>这大概在 APIO2019 讲过<span class="mojikumi-line-end">，</span>当时我自然是啥都没听懂<span class="mojikumi-line-end">，</span>就只记得数组不要开 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></span> 的次幂<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h3 id="cache-的分类" class="heading"><a href="#cache-的分类" class="heading-anchor" aria-label="章节： Cache 的分类" tabindex="-1"></a><span>Cache 的分类</span></h3>
<p><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 的 cache 称作 <i>direct-mapped cache</i><span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span><s>书上在这仔细解释了半天<span class="mojikumi-line-end">，</span>感觉废话好多啊<span class="mojikumi-line-end">。</span></s><span class="mojikumi-line-end">）</span></p>
<p><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>></mo><mn>1</mn></mrow><annotation encoding="application/x-tex">E > 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span> 的 cache 称作 <i>set associative cache</i><span class="mojikumi-line-end">。</span>其中<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>></mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s > 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span> 的称作 E-way set associative cache<span class="mojikumi-line-end">，</span>而 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span> 的称作 fully associative cache<span class="mojikumi-line-end">。</span></p>
<h3 id="cache-的写入" class="heading"><a href="#cache-的写入" class="heading-anchor" aria-label="章节： Cache 的写入" tabindex="-1"></a><span>Cache 的写入</span></h3>
<p>在 cache hit 时<span class="mojikumi-line-end">，</span>有两种处理方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li><i>write-through</i>: 既修改 cache<span class="mojikumi-line-end">，</span>又修改下一级</li>
<li><i>write-back</i>: 只修改 cache<span class="mojikumi-line-end">，</span>并且在每个 cache line 中添加一个 <i>dirty bit</i><span class="mojikumi-line-end">，</span>用来记录是否被修改过<span class="mojikumi-line-end">，</span>在被 evict 时若 dirty 则写入下一级</li>
</ul>
<p>在 cache miss 时<span class="mojikumi-line-end">，</span>也有两种处理方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li><i>write-allocate</i>: 先从下一级获取数据<span class="mojikumi-line-end">，</span>然后用与 cache hit 相同的处理方式</li>
<li><i>no-write-allocate</i>: 直接写入下一级<span class="mojikumi-line-end">，</span>不获取到 cache 中</li>
</ul>
<p>一般 write-through 和 no-write-allocate 搭配<span class="mojikumi-line-end">，</span>write-back 和 write-allocate 搭配<span class="mojikumi-line-end">。</span></p>
<p>实际上<span class="mojikumi-line-end">，</span>cache 写入的优化是非常复杂的问题<span class="mojikumi-line-end">，</span>这里只是简单介绍了一下<span class="mojikumi-line-end">。</span>作为程序员<span class="mojikumi-line-end">，</span>可以把 cache 写入当成是 write-back<span class="mojikumi-line-end">、</span>write-allocate 的<span class="mojikumi-line-end">。</span></p>
<h3 id="i-cache-和-d-cache" class="heading"><a href="#i-cache-和-d-cache" class="heading-anchor" aria-label="章节： i-cache 和 d-cache" tabindex="-1"></a><span>i-cache 和 d-cache</span></h3>
<p>只存放指令的 cache 称作 <i>i-cache</i><span class="mojikumi-line-end">，</span>只存放数据的 cache 称作 <i>d-cache</i><span class="mojikumi-line-end">，</span>都存放的 cache 称作 <i>unified cache</i><span class="mojikumi-line-end">。</span></p>
<p>将 i-cache 和 d-cache 分开<span class="mojikumi-line-end">，</span>就可以对它们分别进行优化<span class="mojikumi-line-end">，</span>例如 i-cache 是只读的<span class="mojikumi-line-end">，</span>二者可以有不一样的大小<span class="mojikumi-line-end">、</span>不一样的 cache set 设置<span class="mojikumi-line-end">。</span>将两者分开还可以一定程度上避免 conflict miss<span class="mojikumi-line-end">。</span></p>
<p>在 Core i7 处理器中<span class="mojikumi-line-end">，</span>每个核有自己的 L1 i-cache<span class="mojikumi-line-end">、</span>L1 d-cache<span class="mojikumi-line-end">、</span>L2 unified cache<span class="mojikumi-line-end">，</span>所有核共享一个 L3 unified cache<span class="mojikumi-line-end">。</span></p>
<h3 id="cache-的性能" class="heading"><a href="#cache-的性能" class="heading-anchor" aria-label="章节： Cache 的性能" tabindex="-1"></a><span>Cache 的性能</span></h3>
<p>cache 性能的衡量指标有<span class="mojikumi-line-end">：</span></p>
<ul>
<li>miss rate</li>
<li>hit rate</li>
<li>hit time: cache hit 时的访问用时</li>
<li>miss penalty: cache miss 时的访问用时<span class="mojikumi-line-end">，</span>与最终从哪一级获取到数据有关</li>
</ul>
<p>一般来说<span class="mojikumi-line-end">，</span>cache 的参数对性能的影响是<span class="mojikumi-line-end">：</span></p>
<ul>
<li>cache size 越大<span class="mojikumi-line-end">，</span>hit rate 就越高<span class="mojikumi-line-end">，</span>但速度会慢<span class="mojikumi-line-end">。</span></li>
<li>增大 block size 可以更好地利用 spatial locality<span class="mojikumi-line-end">，</span>但也有可能因 cache line 数量减少而降低 hit rate<span class="mojikumi-line-end">，</span>并且会因为每次需要传递的数据变多而增大 miss penalty<span class="mojikumi-line-end">。</span></li>
<li>更大的 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> 可以降低 conflict miss 的可能性<span class="mojikumi-line-end">，</span>但也会使得 tag 匹配以及 victim line 的选择更加复杂<span class="mojikumi-line-end">，</span>从而增大 hit time 和 miss penalty<span class="mojikumi-line-end">。</span>在 Core i7 处理器中<span class="mojikumi-line-end">，</span>L1<span class="mojikumi-line-end">、</span>L2 cache 是 8-way 的<span class="mojikumi-line-end">，</span>L3 cache 是 16-way 的<span class="mojikumi-line-end">。</span></li>
<li>write-through 实现起来更加容易<span class="mojikumi-line-end">，</span>并且在 read miss 时不会触发写入<span class="mojikumi-line-end">。</span>而 write-back 可以减少数据传递的总量<span class="mojikumi-line-end">，</span>降低 I/O bus 带宽的占用<span class="mojikumi-line-end">，</span>也可能降低数据传递的用时<span class="mojikumi-line-end">。</span>一般来说<span class="mojikumi-line-end">，</span>memory hierarchy 中较低的层级更倾向于使用 write-back<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="the-impact-of-caches-on-program-performance" class="heading"><a href="#the-impact-of-caches-on-program-performance" class="heading-anchor" aria-label="章节： The Impact of Caches on Program Performance" tabindex="-1"></a><span>The Impact of Caches on Program Performance</span></h2>
<h3 id="the-memory-mountain" class="heading"><a href="#the-memory-mountain" class="heading-anchor" aria-label="章节： The Memory Mountain" tabindex="-1"></a><span>The Memory Mountain</span></h3>
<p>对一定 size 的数据按照一定的 stride 进行访问<span class="mojikumi-line-end">，</span>将 size<span class="mojikumi-line-end">、</span>stride 与数据吞吐量的关系画成三维图像<span class="mojikumi-line-end">，</span>就得到了 <i>memory mountain</i><span class="mojikumi-line-end">。</span></p>
<p>CS:APP Figure 6.41 展示了一座 Core i7 的 memory mountain:<span class="mojikumi-line-start">（</span>这也是 CS:APP 的封面<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.41.869a6222.webp"><img srcset="/assets/csapp-fig6.41.8d7d506e.png" loading="lazy" src="/assets/csapp-fig6.41.8d7d506e.png" width="1285" height="847" alt="Core i7 的 memory mountain"></picture></p>
<p>Memory mountain 较为完整地呈现了一个 memory system 的性能<span class="mojikumi-line-end">，</span>以及 temporal locality 和 spatial locality 对性能的影响<span class="mojikumi-line-end">。</span></p>
<p>在每级 cache 的容量处<span class="mojikumi-line-end">，</span>吞吐量会发生明显的突变<span class="mojikumi-line-end">。</span></p>
<p>在 size 相同时<span class="mojikumi-line-end">，</span>stride 越小吞吐量越高<span class="mojikumi-line-end">。</span>在 stride 接近 1 时变化尤其明显<span class="mojikumi-line-end">，</span>这和 Core i7 系统的 prefetching 技术息息相关<span class="mojikumi-line-end">，</span>处理器能够识别出 stride-1 reference pattern 并在实际访问到数据之前就进行 prefetch<span class="mojikumi-line-end">。</span></p>
<h3 id="矩阵乘法的循环顺序" class="heading"><a href="#矩阵乘法的循环顺序" class="heading-anchor" aria-label="章节： 矩阵乘法的循环顺序" tabindex="-1"></a><span>矩阵乘法的循环顺序</span></h3>
<p><span class="mojikumi-line-start">（</span>书上在这讲了半天<span class="mojikumi-line-end">，</span><s>感觉废话好多</s><span class="mojikumi-line-end">，</span>我就放个测试结果上来吧<span class="mojikumi">。</span><span class="mojikumi">）</span><wbr><span class="mojikumi-line-start">（</span>CS:APP Figure 6.46<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/csapp-fig6.46.827ccc19.webp"><img srcset="/assets/csapp-fig6.46.c7b7637e.png" loading="lazy" src="/assets/csapp-fig6.46.c7b7637e.png" width="1233" height="767" alt="Core i7 矩阵乘法性能"></picture></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/csapp">csapp</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
    </channel>
</rss>