{
    "version": "https://jsonfeed.org/version/1",
    "title": "ouuan's blog",
    "home_page_url": "https://ouuan.moe",
    "feed_url": "https://ouuan.moe/feed.json",
    "description": "ouuan 写东西的地方，涵盖了 Web 开发、计算机系统、Linux 使用、大学学习生活等多个主题。",
    "author": {
        "name": "ouuan",
        "url": "https://github.com/ouuan"
    },
    "items": [
        {
            "id": "https://ouuan.moe/post/2023/06/cnatda-2",
            "content_html": "\n\n\n<p><span class=\"mojikumi-line-start\">《</span>Computer Networking A Top-Down Approach (8th Edition)<span class=\"mojikumi-line-end\">》</span>第二章 <span class=\"mojikumi\">“</span>Application Layer<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n\n<h2 id=\"principles-of-network-applications\" class=\"heading\"><a href=\"#principles-of-network-applications\" class=\"heading-anchor\" aria-label=\"章节： Principles of Network Applications\" tabindex=\"-1\"></a><span>Principles of Network Applications</span></h2>\n<p>application architecture 主要分为 client-server 和 P2P 两种<span class=\"mojikumi-line-end\">。</span></p>\n<p><i>process</i> 即在某个 end system 上运行的程序<span class=\"mojikumi-line-start\">（</span>进程<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>不同 end system 上的 process 在网络上互相发送 message 以进行通信<span class=\"mojikumi-line-start\">（</span>注<span class=\"mojikumi-line-end\">：</span>message 即 application-layer packet<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>在一次通信中<span class=\"mojikumi-line-end\">，</span>发起通信的一方被称作 <i>client</i><span class=\"mojikumi-line-end\">，</span>等待接收消息的一方被称作 <i>server</i><span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>注<span class=\"mojikumi-line-end\">：</span>在 P2P 中<span class=\"mojikumi-line-end\">，</span>client 和 server 的身份不是固定的<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>process 和网络<span class=\"mojikumi-line-end\">，</span>或者说和 transport layer 之间以 <i>socket</i> 作为 API<span class=\"mojikumi-line-end\">。</span></p>\n<p>host 由 IP 地址识别<span class=\"mojikumi-line-end\">，</span>而 process 由 IP 地址 + 端口识别<span class=\"mojikumi-line-end\">。</span></p>\n<p>一个 application 可以选择 TCP 或者 UDP 来提供 transport service<span class=\"mojikumi-line-end\">。</span>TCP 提供 connection-oriented service<span class=\"mojikumi-line-start\">（</span>需要通过 handshaking 建立 TCP connection<span class=\"mojikumi-line-end\">）</span>和 reliable data transfer service<span class=\"mojikumi-line-start\">（</span>保证接收到 &#x26; 保序<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>以及 congestion control<span class=\"mojikumi-line-end\">。</span>UDP 则这些都不提供<span class=\"mojikumi-line-end\">。</span>一般会根据是否 loss-tolerant<span class=\"mojikumi-line-start\">（</span>是否允许丢失部分数据<span class=\"mojikumi-line-end\">）</span>以及对延时的敏感度来进行选择<span class=\"mojikumi-line-end\">。</span></p>\n<p>TLS (Transport Layer Security) 可以在 TCP 的基础上提供 encryption<span class=\"mojikumi-line-end\">、</span>data integrity<span class=\"mojikumi-line-end\">、</span>end-point authentication<span class=\"mojikumi-line-end\">。</span>它自身位于 application layer<span class=\"mojikumi-line-start\">（</span>或者可以说是 application 与 transport layer 之间 🤔<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>不与 TCP<span class=\"mojikumi-line-end\">、</span>UDP 并列<span class=\"mojikumi-line-end\">。</span></p>\n<p>application-layer protocol 决定了 message 的结构以及相应的行为<span class=\"mojikumi-line-end\">。</span>常见的 application-layer protocol 包括 HTTP<span class=\"mojikumi-line-end\">、</span>SMTP<span class=\"mojikumi-line-end\">、</span>Telnet<span class=\"mojikumi-line-end\">、</span>FTP<span class=\"mojikumi-line-end\">、</span>SIP<span class=\"mojikumi-line-end\">、</span>RTP<span class=\"mojikumi-line-end\">、</span>DASH 等<span class=\"mojikumi-line-end\">。</span>有的 application 会使用专有而非 public domain 的 application-layer protocol<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"the-web-and-http\" class=\"heading\"><a href=\"#the-web-and-http\" class=\"heading-anchor\" aria-label=\"章节： The Web and HTTP\" tabindex=\"-1\"></a><span>The Web and HTTP</span></h2>\n<p>HTTP (HyperText Transfer Protocol) 是 Web 的 application-layer protocol<span class=\"mojikumi-line-end\">，</span>定义了 client (browser) 如何向 server 请求文件<span class=\"mojikumi-line-start\">（</span>web page<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span>server 如何将文件传输给 client<span class=\"mojikumi-line-end\">。</span></p>\n<p>HTTP 的默认端口是 80<span class=\"mojikumi-line-end\">。</span></p>\n<p>HTTP 不存储 client 的信息<span class=\"mojikumi-line-end\">，</span>是一个 <i>stateless protocol</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>HTTP<span class=\"mojikumi-line-start\">（</span>1.0<span class=\"mojikumi-line-end\">、</span>1.1<span class=\"mojikumi-line-end\">、</span>2<span class=\"mojikumi-line-end\">）</span>基于 TCP<span class=\"mojikumi-line-end\">，</span>有 persistent connection 和 non-persistent connection 两种工作方式<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>non-persistent connection<span class=\"mojikumi-line-end\">：</span>每次 request-response 都会建立一个新的 TCP connection<span class=\"mojikumi-line-end\">，</span>收到 response 后立刻关闭 TCP connection<span class=\"mojikumi-line-end\">。</span></li>\n<li>persistent connection<span class=\"mojikumi-line-end\">：</span>同一对 client-server 的多次 request-response<span class=\"mojikumi-line-start\">（</span>例如一个页面引用的多个资源<span class=\"mojikumi-line-end\">）</span>可以共用同一个 TCP connection<span class=\"mojikumi-line-start\">（</span>在闲置一段时间后自动关闭<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>并且无需等待 response 就可以连续发送多个 request<span class=\"mojikumi-line-start\">（</span>被称作 <i>pipelining</i><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>从而省下每次建立 TCP connection 耗费的 RTT (round-trip time)<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>HTTP message 是纯文本<span class=\"mojikumi-line-end\">，</span>格式如下<span class=\"mojikumi-line-end\">。</span></p>\n<p>HTTP request:<sup><a href=\"#user-content-fn-fig2.8\" id=\"user-content-fnref-fig2.8\" data-footnote-ref aria-describedby=\"footnote-label\">1</a></sup></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/cnatda-fig-2.8.6bb26d3f.webp\"><img srcset=\"/assets/cnatda-fig-2.8.de34594f.png\" loading=\"lazy\" src=\"/assets/cnatda-fig-2.8.de34594f.png\" width=\"793\" height=\"439\" alt=\"General format of an HTTP request message\"></picture></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"http 代码块\" data-v-ad49d235>http</h3><ile-root id=\"ile-1\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-1--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">GET</span><span style=\"color: #D6DEEB\"> /wireshark-labs/INTRO-wireshark-file1.html </span><span style=\"color: #C792EA\">HTTP</span><span style=\"color: #D6DEEB\">/</span><span style=\"color: #F78C6C\">1.1</span></span>\n<span><span style=\"color: #CAECE6\">Host</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">gaia.cs.umass.edu</span></span>\n<span><span style=\"color: #CAECE6\">User-Agent</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">curl/8.1.2</span></span>\n<span><span style=\"color: #CAECE6\">Accept</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">*/*</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">GET</span><span style=\"color: #403F53\"> /wireshark-labs/INTRO-wireshark-file1.html </span><span style=\"color: #994CC3\">HTTP</span><span style=\"color: #403F53\">/</span><span style=\"color: #AA0982\">1.1</span></span>\n<span><span style=\"color: #994CC3\">Host:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">gaia.cs.umass.edu</span></span>\n<span><span style=\"color: #994CC3\">User-Agent:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">curl/8.1.2</span></span>\n<span><span style=\"color: #994CC3\">Accept:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">*/*</span></span></code></pre></div></section>\n<p>HTTP response:<sup><a href=\"#user-content-fn-fig2.9\" id=\"user-content-fnref-fig2.9\" data-footnote-ref aria-describedby=\"footnote-label\">2</a></sup></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/cnatda-fig-2.9.d6740f57.webp\"><img srcset=\"/assets/cnatda-fig-2.9.c01ee471.png\" loading=\"lazy\" src=\"/assets/cnatda-fig-2.9.c01ee471.png\" width=\"792\" height=\"443\" alt=\"General format of an HTTP response message\"></picture></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"http 代码块\" data-v-ad49d235>http</h3><ile-root id=\"ile-2\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-2--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #D6DEEB\">HTTP/1.1 200 OK</span></span>\n<span><span style=\"color: #CAECE6\">Date</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">Tue, 13 Jun 2023 11:14:57 GMT</span></span>\n<span><span style=\"color: #CAECE6\">Server</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/7.4.33 mod_perl/2.0.11 Perl/v5.16.3</span></span>\n<span><span style=\"color: #CAECE6\">Last-Modified</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">Tue, 13 Jun 2023 05:59:01 GMT</span></span>\n<span><span style=\"color: #CAECE6\">ETag</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">&quot;51-5fdfc882a3e6f&quot;</span></span>\n<span><span style=\"color: #CAECE6\">Accept-Ranges</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">bytes</span></span>\n<span><span style=\"color: #CAECE6\">Content-Length</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">81</span></span>\n<span><span style=\"color: #CAECE6\">Content-Type</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">text/html; charset=UTF-8</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">&lt;html&gt;</span></span>\n<span><span style=\"color: #D6DEEB\">Congratulations!  You&#39;ve downloaded the first Wireshark lab file!</span></span>\n<span><span style=\"color: #D6DEEB\">&lt;/html&gt;</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #403F53\">HTTP/1.1 200 OK</span></span>\n<span><span style=\"color: #994CC3\">Date:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">Tue, 13 Jun 2023 11:14:57 GMT</span></span>\n<span><span style=\"color: #994CC3\">Server:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips PHP/7.4.33 mod_perl/2.0.11 Perl/v5.16.3</span></span>\n<span><span style=\"color: #994CC3\">Last-Modified:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">Tue, 13 Jun 2023 05:59:01 GMT</span></span>\n<span><span style=\"color: #994CC3\">ETag:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">&quot;51-5fdfc882a3e6f&quot;</span></span>\n<span><span style=\"color: #994CC3\">Accept-Ranges:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">bytes</span></span>\n<span><span style=\"color: #994CC3\">Content-Length:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">81</span></span>\n<span><span style=\"color: #994CC3\">Content-Type:</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">text/html; charset=UTF-8</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">&lt;html&gt;</span></span>\n<span><span style=\"color: #403F53\">Congratulations!  You&#39;ve downloaded the first Wireshark lab file!</span></span>\n<span><span style=\"color: #403F53\">&lt;/html&gt;</span></span></code></pre></div></section>\n<p>server 可以通过 Cookie 识别用户<span class=\"mojikumi-line-end\">，</span>cookie 通过 response 中的 <code>Set-Cookie</code> header 设置<span class=\"mojikumi-line-end\">，</span>在之后的每次 request 中通过 <code>Cookie</code> header 发给 server<span class=\"mojikumi-line-end\">。</span></p>\n<p>机构可以设置 Web cache<span class=\"mojikumi-line-end\">，</span>使用户先向 Web cache 发送请求<span class=\"mojikumi-line-end\">，</span>若 cache hit 则直接由 Web cache 发给用户<span class=\"mojikumi-line-end\">，</span>若 cache miss 则 Web cache 向 origin server 发送请求再返回给用户<span class=\"mojikumi-line-end\">。</span>Web cache 可以减小延迟<span class=\"mojikumi-line-end\">，</span>降低带宽压力<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>与之类似的 CDN 则在<a href=\"#content-distribution-networks\">后文</a>有详细讲解<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>可以通过 <code>If<wbr>-<wbr>Modified<wbr>-<wbr>Since</code> header 进行 <i>conditional GET</i><span class=\"mojikumi-line-end\">，</span>若没有修改则会返回 body 为空的 304 Not Modified<span class=\"mojikumi-line-end\">。</span></p>\n<p>HTTP/2 提供了 request and response multiplexing<span class=\"mojikumi-line-end\">、</span>prioritization<span class=\"mojikumi-line-end\">、</span>server push 来优化性能<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>multiplexing<span class=\"mojikumi-line-end\">：</span>persistent connection 减少了建立 TCP connection 带来的 RTT<span class=\"mojikumi-line-end\">，</span>但又引入了 Head of Line (HOL) blocking<span class=\"mojikumi-line-end\">，</span>即共用一个 TCP connection 时较小的资源需要等待较大的资源加载完毕<span class=\"mojikumi-line-end\">，</span>所以在 HTTP/1.1 中浏览器经常还是会建立多个 TCP 连接<span class=\"mojikumi-line-end\">，</span>除了解决 HOL blocking<span class=\"mojikumi-line-end\">，</span>也可以在 TCP 的 congestion control 中取得更多带宽<span class=\"mojikumi-line-end\">。</span>HTTP/2 则将每个 message 划分成了多个小的 frame<span class=\"mojikumi-line-end\">，</span>并交替发送不同 message 的 frame<span class=\"mojikumi-line-start\">（</span>frame interleaving<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>从而小的资源无需等待大的资源发送完毕<span class=\"mojikumi-line-end\">。</span></li>\n<li>prioritization<span class=\"mojikumi-line-end\">：</span>同时发送多个请求时<span class=\"mojikumi-line-end\">，</span>可以为每个 response 设置优先级<span class=\"mojikumi-line-end\">，</span>让 server 优先发送高优先级的 response<span class=\"mojikumi-line-end\">。</span>除此之外<span class=\"mojikumi-line-end\">，</span>还可以设置 response 之间的依赖关系<span class=\"mojikumi-line-end\">。</span></li>\n<li>server push<span class=\"mojikumi-line-end\">：</span>一个 request 可以有多个 response<span class=\"mojikumi-line-end\">，</span>即除了对应于 request 的 response<span class=\"mojikumi-line-end\">，</span>server 还可以额外 <i>push</i><span class=\"mojikumi-line-end\">，</span>例如在返回一个 HTML 页面时可以 push 这个页面引用的其他资源<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>HTTP/3 使用基于 UDP 的 QUIC 代替了 TCP<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"electronic-mail-in-the-internet\" class=\"heading\"><a href=\"#electronic-mail-in-the-internet\" class=\"heading-anchor\" aria-label=\"章节： Electronic Mail in the Internet\" tabindex=\"-1\"></a><span>Electronic Mail in the Internet</span></h2>\n<p>e-mail 系统有三个主要组件<span class=\"mojikumi-line-end\">：</span>user agent<span class=\"mojikumi-line-end\">、</span>mail server 和 SMTP (Simple Mail Transfer Protocol)<span class=\"mojikumi-line-end\">。</span></p>\n<p>发送邮件时<span class=\"mojikumi-line-end\">，</span>Alice 写完邮件后由她的 user agent 发送到她的 mail server<span class=\"mojikumi-line-end\">，</span>她的 mail server 再发到 Bob 的 mail server 中属于 Bob 的 mailbox<span class=\"mojikumi-line-end\">，</span>之后 Bob 再通过他的 user agent 从他的 mail server 获取他的 mailbox 中的邮件并阅读<span class=\"mojikumi-line-end\">。</span></p>\n<p>发送方的 mail server 会维护一个待发送邮件列表<span class=\"mojikumi-line-end\">，</span>如果接收方的 mail server 在当时不可用<span class=\"mojikumi-line-end\">，</span>则会等待一段时间后再次尝试<span class=\"mojikumi-line-end\">，</span>多次失败则会退回<span class=\"mojikumi-line-end\">。</span></p>\n<p>mail server 使用 SMTP 向其他 mail server 发送邮件<span class=\"mojikumi-line-end\">，</span>发送方作为 SMTP client<span class=\"mojikumi-line-end\">，</span>接收方作为 SMTP server<span class=\"mojikumi-line-end\">。</span></p>\n<p>SMTP 的默认端口是 25<span class=\"mojikumi-line-end\">。</span></p>\n<p>SMTP 是一个比 HTTP 还古老的协议<span class=\"mojikumi-line-end\">，</span>带来的后果之一是它整个 message 都只能包含 ASCII<span class=\"mojikumi-line-end\">。</span></p>\n<p>一次 SMTP 通信如下所示<span class=\"mojikumi-line-end\">：</span><sup><a href=\"#user-content-fn-smtp-example\" id=\"user-content-fnref-smtp-example\" data-footnote-ref aria-describedby=\"footnote-label\">3</a></sup></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"plain 代码块\" data-v-ad49d235>plain</h3><ile-root id=\"ile-3\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-3--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">S: 220 smtp.example.com ESMTP Postfix</span></span>\n<span><span style=\"color: #d6deeb\">C: HELO relay.example.org</span></span>\n<span><span style=\"color: #d6deeb\">S: 250 Hello relay.example.org, I am glad to meet you</span></span>\n<span><span style=\"color: #d6deeb\">C: MAIL FROM:&lt;bob@example.org&gt;</span></span>\n<span><span style=\"color: #d6deeb\">S: 250 Ok</span></span>\n<span><span style=\"color: #d6deeb\">C: RCPT TO:&lt;alice@example.com&gt;</span></span>\n<span><span style=\"color: #d6deeb\">S: 250 Ok</span></span>\n<span><span style=\"color: #d6deeb\">C: RCPT TO:&lt;theboss@example.com&gt;</span></span>\n<span><span style=\"color: #d6deeb\">S: 250 Ok</span></span>\n<span><span style=\"color: #d6deeb\">C: DATA</span></span>\n<span><span style=\"color: #d6deeb\">S: 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span></span>\n<span><span style=\"color: #d6deeb\">C: From: &quot;Bob Example&quot; &lt;bob@example.org&gt;</span></span>\n<span><span style=\"color: #d6deeb\">C: To: &quot;Alice Example&quot; &lt;alice@example.com&gt;</span></span>\n<span><span style=\"color: #d6deeb\">C: Cc: theboss@example.com</span></span>\n<span><span style=\"color: #d6deeb\">C: Date: Tue, 15 Jan 2008 16:02:43 -0500</span></span>\n<span><span style=\"color: #d6deeb\">C: Subject: Test message</span></span>\n<span><span style=\"color: #d6deeb\">C:</span></span>\n<span><span style=\"color: #d6deeb\">C: Hello Alice.</span></span>\n<span><span style=\"color: #d6deeb\">C: This is a test message with 5 header fields and 4 lines in the message body.</span></span>\n<span><span style=\"color: #d6deeb\">C: Your friend,</span></span>\n<span><span style=\"color: #d6deeb\">C: Bob</span></span>\n<span><span style=\"color: #d6deeb\">C: .</span></span>\n<span><span style=\"color: #d6deeb\">S: 250 Ok: queued as 12345</span></span>\n<span><span style=\"color: #d6deeb\">C: QUIT</span></span>\n<span><span style=\"color: #d6deeb\">S: 221 Bye</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">S: 220 smtp.example.com ESMTP Postfix</span></span>\n<span><span style=\"color: #403f53\">C: HELO relay.example.org</span></span>\n<span><span style=\"color: #403f53\">S: 250 Hello relay.example.org, I am glad to meet you</span></span>\n<span><span style=\"color: #403f53\">C: MAIL FROM:&lt;bob@example.org&gt;</span></span>\n<span><span style=\"color: #403f53\">S: 250 Ok</span></span>\n<span><span style=\"color: #403f53\">C: RCPT TO:&lt;alice@example.com&gt;</span></span>\n<span><span style=\"color: #403f53\">S: 250 Ok</span></span>\n<span><span style=\"color: #403f53\">C: RCPT TO:&lt;theboss@example.com&gt;</span></span>\n<span><span style=\"color: #403f53\">S: 250 Ok</span></span>\n<span><span style=\"color: #403f53\">C: DATA</span></span>\n<span><span style=\"color: #403f53\">S: 354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;</span></span>\n<span><span style=\"color: #403f53\">C: From: &quot;Bob Example&quot; &lt;bob@example.org&gt;</span></span>\n<span><span style=\"color: #403f53\">C: To: &quot;Alice Example&quot; &lt;alice@example.com&gt;</span></span>\n<span><span style=\"color: #403f53\">C: Cc: theboss@example.com</span></span>\n<span><span style=\"color: #403f53\">C: Date: Tue, 15 Jan 2008 16:02:43 -0500</span></span>\n<span><span style=\"color: #403f53\">C: Subject: Test message</span></span>\n<span><span style=\"color: #403f53\">C:</span></span>\n<span><span style=\"color: #403f53\">C: Hello Alice.</span></span>\n<span><span style=\"color: #403f53\">C: This is a test message with 5 header fields and 4 lines in the message body.</span></span>\n<span><span style=\"color: #403f53\">C: Your friend,</span></span>\n<span><span style=\"color: #403f53\">C: Bob</span></span>\n<span><span style=\"color: #403f53\">C: .</span></span>\n<span><span style=\"color: #403f53\">S: 250 Ok: queued as 12345</span></span>\n<span><span style=\"color: #403f53\">C: QUIT</span></span>\n<span><span style=\"color: #403f53\">S: 221 Bye</span></span></samp></pre></div></section>\n<p>其中 <code>HELO</code><span class=\"mojikumi-line-end\">、</span><code>MAIL FROM</code><span class=\"mojikumi-line-end\">、</span><code>RCPT TO</code><span class=\"mojikumi-line-end\">、</span><code>DATA</code><span class=\"mojikumi-line-end\">、</span><code>QUIT</code> 等是 <i>command</i><span class=\"mojikumi-line-end\">，</span>用来进行 handshake 等操作<span class=\"mojikumi-line-end\">。</span>如果要向同一个 mail server 连续发送多封邮件<span class=\"mojikumi-line-end\">，</span>可以只 <code>HELO</code><span class=\"mojikumi-line-end\">、</span><code>QUIT</code> 一次<span class=\"mojikumi-line-start\">（</span>但要 <code>MAIL FROM</code><span class=\"mojikumi-line-end\">、</span><code>RCPT TO</code> 多次<span class=\"mojikumi-line-end\">）</span>从而共用一个 TCP 连接<span class=\"mojikumi-line-end\">。</span><code>DATA</code> 后是邮件的内容<span class=\"mojikumi-line-end\">，</span>这一内容的开头是邮件的 header<span class=\"mojikumi-line-end\">，</span>结尾是仅包含 <code>.</code> 的一行<span class=\"mojikumi-line-end\">。</span></p>\n<p>email 是 user agent → mail server → mail server → user agent 而非 user agent → user agent<span class=\"mojikumi-line-end\">，</span>一大原因是如果 user agent 经常不在线则直接发很可能收不到邮件<span class=\"mojikumi-line-end\">，</span>需要用 mail server 来提高在线率以及提供对方不在线时重试的机制<span class=\"mojikumi-line-end\">。</span></p>\n<p>从 user agent 发到 mail server 时可以使用 SMTP 或 HTTP<span class=\"mojikumi-line-end\">，</span>从 mail server 拉取到 user agent 时可以使用 HTTP 或 IMAP (Internet Mail Access Protocol)<span class=\"mojikumi-line-start\">（</span>不能用 SMTP<span class=\"mojikumi-line-end\">，</span>因为 SMTP 是 push protocol<span class=\"mojikumi-line-end\">，</span>不能用来 pull<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"dns--the-internet’s-directory-service\" class=\"heading\"><a href=\"#dns--the-internet’s-directory-service\" class=\"heading-anchor\" aria-label=\"章节： DNS—The Internet’s Directory Service\" tabindex=\"-1\"></a><span>DNS—The Internet<span class=\"mojikumi-narrow-left\">’</span>s Directory Service</span></h2>\n<h3 id=\"services-provided-by-dns\" class=\"heading\"><a href=\"#services-provided-by-dns\" class=\"heading-anchor\" aria-label=\"章节： Services Provided by DNS\" tabindex=\"-1\"></a><span>Services Provided by DNS</span></h3>\n<p>host 由 hostname 或 IP 地址识别<span class=\"mojikumi-line-end\">，</span>hostname 对人类更友好<span class=\"mojikumi-line-end\">，</span>而 IP 地址对路由器更友好<span class=\"mojikumi-line-end\">。</span></p>\n<p>将 hostname 翻译为 IP 地址是 DNS 的主要任务<span class=\"mojikumi-line-end\">。</span>DNS 是由多个层级的 DNS server 共同构成的 distributed database<span class=\"mojikumi-line-end\">，</span>也是使得 application 能够查询这个 distributed database 的 application-layer protocol<span class=\"mojikumi-line-end\">。</span></p>\n<p>DNS 被很多其他 application-layer protocol 所使用<span class=\"mojikumi-line-end\">，</span>例如在 HTTP/SMTP 中<span class=\"mojikumi-line-end\">，</span>可以使用 hostname 来访问网站 / mail server<span class=\"mojikumi-line-end\">，</span>这时就会调用 DNS<span class=\"mojikumi-line-end\">。</span></p>\n<p>DNS 在提供 hostname 到 IP 地址的翻译的同时<span class=\"mojikumi-line-end\">，</span>还提供了下列功能<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>host aliasing: 可以让一个 host 在有 canonical hostname 的同时还有其他 alias<span class=\"mojikumi-line-end\">。</span></li>\n<li>mail server aliasing: 可以让同一个 hostname 在作为 Web server 和作为 mail server 时指向不同的 host<span class=\"mojikumi-line-end\">。</span></li>\n<li>load distribution: 可以让同一个 hostname 指向多个 host<span class=\"mojikumi-line-end\">，</span>在返回查询结果时进行 rotate<span class=\"mojikumi-line-start\">（</span>即改变位于首位的 IP 地址<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h3 id=\"overview-of-how-dns-works\" class=\"heading\"><a href=\"#overview-of-how-dns-works\" class=\"heading-anchor\" aria-label=\"章节： Overview of How DNS Works\" tabindex=\"-1\"></a><span>Overview of How DNS Works</span></h3>\n<p>由于下列原因<span class=\"mojikumi-line-end\">，</span>DNS 必须是分布式的<span class=\"mojikumi-line-end\">，</span>单点式的 DNS 无法 scale<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>single point of failure</li>\n<li>traffic volume 过大</li>\n<li>离部分用户距离过远<span class=\"mojikumi-line-end\">，</span>带来较大的延时</li>\n<li>难以维护<span class=\"mojikumi-line-start\">（</span>数据总量大<span class=\"mojikumi-line-end\">，</span>更新频繁<span class=\"mojikumi-line-end\">）</span></li>\n</ul>\n<p>一般来说<span class=\"mojikumi-line-end\">，</span>DNS 分为以下几层<span class=\"mojikumi-line-end\">：</span></p>\n<ol>\n<li>root DNS server: 分散在世界各地的 13 个不同 root server 各自的共上千个 copy<span class=\"mojikumi-line-end\">，</span>用来查询 TLD server</li>\n<li>top-level domain (TLD) server: 每个 TLD 有自己的 TLD server (or server cluster)<span class=\"mojikumi-line-end\">，</span>用来查询 authoritative DNS server</li>\n<li>authoritative DNS server: 每个 subdomain 有自己的 authoritative DNS server<span class=\"mojikumi-line-end\">，</span>可以是组织自己维护的或者由服务商提供的<span class=\"mojikumi-line-end\">，</span>用来查询 hostname 到 IP 地址的映射</li>\n</ol>\n<p>除此之外<span class=\"mojikumi-line-end\">，</span>TLD server 和 authoritative DNS server 之间还可能有 intermediate DNS server<span class=\"mojikumi-line-end\">。</span></p>\n<p>在上述 DNS server 的 hierarchy 之外<span class=\"mojikumi-line-end\">，</span>还有 local DNS server<span class=\"mojikumi-line-start\">（</span>就是电脑的网络设置里设的 DNS 服务器<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>作为 proxy 来代替 requesting host 向 DNS server 进行查询<span class=\"mojikumi-line-end\">。</span></p>\n<p>从逻辑上来说<span class=\"mojikumi-line-end\">，</span>向一个 DNS server 进行查询时<span class=\"mojikumi-line-end\">，</span>如果它自己不知道最终的 answer (IP 地址)<span class=\"mojikumi-line-end\">，</span>它可以让你换一个 DNS server 继续查 (iterative query)<span class=\"mojikumi-line-end\">，</span>或者帮你向其他 DNS server 发送查询 (recursive query) 然后返回最终的结果<span class=\"mojikumi-line-end\">。</span>而在实际中<span class=\"mojikumi-line-end\">，</span>如上文所述<span class=\"mojikumi-line-end\">，</span>一般是向 local DNS server 查询时会进行 recursive query<span class=\"mojikumi-line-end\">，</span>而 local DNS server 再从 root DNS server 向下直到 authoritative DNS server 进行 iterative query<span class=\"mojikumi-line-end\">。</span></p>\n<p>为了减少查询的数量<span class=\"mojikumi-line-end\">，</span>DNS 设有 caching<span class=\"mojikumi-line-end\">。</span>每个查询的发起者<span class=\"mojikumi-line-start\">（</span>requesting host 或者 local DNS server<span class=\"mojikumi-line-end\">）</span>会将收到的查询结果保存一段时间<span class=\"mojikumi-line-end\">，</span>cache miss 才会向其他 DNS server 发起查询<span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span>常用的 TLD server 的 IP 地址往往都在 cache 中<span class=\"mojikumi-line-end\">，</span>大大减少了 root DNS server 收到的请求数量<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"dns-records\" class=\"heading\"><a href=\"#dns-records\" class=\"heading-anchor\" aria-label=\"章节： DNS Records\" tabindex=\"-1\"></a><span>DNS Records</span></h3>\n<p>DNS distributed database 存储的信息单元是 <i>resource record</i> (RR)<span class=\"mojikumi-line-end\">。</span></p>\n<p>每个 RR 包含 type<span class=\"mojikumi-line-end\">、</span>name<span class=\"mojikumi-line-end\">、</span>value<span class=\"mojikumi-line-end\">、</span>TTL 四项信息<span class=\"mojikumi-line-end\">，</span>其中 TTL 表示 cache 多久过期<span class=\"mojikumi-line-end\">。</span>常见的 type 包括以下几个<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>A: name 是 hostname<span class=\"mojikumi-line-end\">，</span>value 是 IP 地址<span class=\"mojikumi-line-end\">，</span>表示一个 hostname 到 IP 地址的映射<span class=\"mojikumi-line-end\">。</span></li>\n<li>NS: name 是 domain<span class=\"mojikumi-line-end\">，</span>value 是其 name server 的 hostname<span class=\"mojikumi-line-end\">，</span>表示可以在这个 name server 进行这个 domain 的进一步查询<span class=\"mojikumi-line-end\">。</span></li>\n<li>CNAME: name 是 alias hostname<span class=\"mojikumi-line-end\">，</span>value 是 canonical hostname<span class=\"mojikumi-line-end\">，</span>用来提供 host aliasing<span class=\"mojikumi-line-end\">。</span></li>\n<li>MX: name 是 alias hostname<span class=\"mojikumi-line-end\">，</span>value 是 canonical hostname<span class=\"mojikumi-line-end\">，</span>用来提供 mail server aliasing<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>对一个 hostname 来说 authoritative 的 DNS server 会包含被查询的 host 的 A record<span class=\"mojikumi-line-end\">。</span>不 authoritative 的 DNS server 则会包含相应的 NS record<span class=\"mojikumi-line-end\">，</span>以及这个 name server 的 A record<span class=\"mojikumi-line-end\">。</span></p>\n<p>下面是一个例子<span class=\"mojikumi-line-end\">：</span></p>\n<div class=\"overflow-auto my-6\"><table>\n<thead>\n<tr>\n<th align=\"center\">type</th>\n<th align=\"center\">name</th>\n<th align=\"center\">value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">NS</td>\n<td align=\"center\"><code>.</code></td>\n<td align=\"center\"><code>a<wbr>.<wbr>root<wbr>-<wbr>servers<wbr>.<wbr>net<wbr>.</code></td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td align=\"center\"><code>a<wbr>.<wbr>root<wbr>-<wbr>servers<wbr>.<wbr>net<wbr>.</code></td>\n<td align=\"center\"><code>198.41.0.4</code></td>\n</tr>\n<tr>\n<td align=\"center\">NS</td>\n<td align=\"center\"><code>moe.</code></td>\n<td align=\"center\"><code>ns1<wbr>.<wbr>dns<wbr>.<wbr>nic<wbr>.<wbr>moe<wbr>.</code></td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td align=\"center\"><code>ns1<wbr>.<wbr>dns<wbr>.<wbr>nic<wbr>.<wbr>moe<wbr>.</code></td>\n<td align=\"center\"><code>156<wbr>.<wbr>154<wbr>.<wbr>144<wbr>.<wbr>114</code></td>\n</tr>\n<tr>\n<td align=\"center\">NS</td>\n<td align=\"center\"><code>ouuan.moe.</code></td>\n<td align=\"center\"><code>amos<wbr>.<wbr>ns<wbr>.<wbr>cloudflare<wbr>.<wbr>com<wbr>.</code></td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td align=\"center\"><code>amos<wbr>.<wbr>ns<wbr>.<wbr>cloudflare<wbr>.<wbr>com<wbr>.</code></td>\n<td align=\"center\"><code>172<wbr>.<wbr>64<wbr>.<wbr>35<wbr>.<wbr>120</code></td>\n</tr>\n<tr>\n<td align=\"center\">A</td>\n<td align=\"center\"><code>ouuan.moe.</code></td>\n<td align=\"center\"><code>172<wbr>.<wbr>67<wbr>.<wbr>181<wbr>.<wbr>123</code></td>\n</tr>\n</tbody>\n</table></div>\n<p>在 registar 购买域名时可以填写 name server 的信息<span class=\"mojikumi-line-end\">，</span>由 registar 负责将相应的 NS 以及 A record 添加到 TLD server<span class=\"mojikumi-line-end\">。</span>可以使用域名商的 DNS server<span class=\"mojikumi-line-end\">、</span>其他服务商<span class=\"mojikumi-line-start\">（</span>例如 Cloudflare<span class=\"mojikumi-line-end\">）</span>的 DNS server 或者自己搭建的 DNS server 作为 authoritative DNS server<span class=\"mojikumi-line-end\">。</span></p>\n<p>DNS 最初只能静态更新<span class=\"mojikumi-line-start\">（</span>通过配置文件等方式<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>后来有了 DDNS 来通过 DNS message 动态更新<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"dns-messages\" class=\"heading\"><a href=\"#dns-messages\" class=\"heading-anchor\" aria-label=\"章节： DNS Messages\" tabindex=\"-1\"></a><span>DNS Messages</span></h3>\n<p>DNS message 通过 UDP 发送到 port 53<span class=\"mojikumi-line-end\">。</span></p>\n<p>DNS message 的结构如下图所示<span class=\"mojikumi-line-end\">：</span><sup><a href=\"#user-content-fn-fig-2.21\" id=\"user-content-fnref-fig-2.21\" data-footnote-ref aria-describedby=\"footnote-label\">4</a></sup></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/cnatda-fig-2.21.b9121041.webp\"><img srcset=\"/assets/cnatda-fig-2.21.8f9be477.png\" loading=\"lazy\" src=\"/assets/cnatda-fig-2.21.8f9be477.png\" width=\"1349\" height=\"804\" alt=\"DNS message format\"></picture></p>\n<p>identification 由 client 设置<span class=\"mojikumi-line-end\">，</span>即用来识别 query 和 reply 对应关系的 ID<span class=\"mojikumi-line-end\">。</span></p>\n<p>flags 包括以下几个<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>query or reply: 这条 message 是 query 还是 reply</li>\n<li>authoritative or not: 返回的结果是否是最终的答案</li>\n<li>recursion desired: client 是否希望 server 进行 recursive query</li>\n<li>recursion available: server 是否可以进行 recursive query</li>\n</ul>\n<p>4 个 section 中都包含若干 RR<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 query 中<span class=\"mojikumi-line-end\">，</span>question section 里会包含 name 和 type<span class=\"mojikumi-line-end\">。</span></p>\n<p>对于 type A 的查询<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>如果 reply 是 authoritative 的<span class=\"mojikumi-line-start\">（</span>向 authoritative DNS server 查询<span class=\"mojikumi-line-end\">，</span>或者进行了 recursive query<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>则会在 answer section 中列出所查询的 A record<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果不是 authoritative 的<span class=\"mojikumi-line-end\">，</span>则会在 authority section 中列出 NS record<span class=\"mojikumi-line-end\">，</span>在 additional section 中列出这些 name server 的 A record<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>在 additional section 中<span class=\"mojikumi-line-end\">，</span>还可能列出 canonical hostname 的 A record 之类的<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"peer-to-peer-file-distribution\" class=\"heading\"><a href=\"#peer-to-peer-file-distribution\" class=\"heading-anchor\" aria-label=\"章节： Peer-to-Peer File Distribution\" tabindex=\"-1\"></a><span>Peer-to-Peer File Distribution</span></h2>\n<p>在传输大文件时<span class=\"mojikumi-line-end\">，</span>client-server 的架构在用户数量增多时需要更大的 server bandwidth 才能保证用户的下载速度<span class=\"mojikumi-line-end\">，</span>而 P2P 的架构则是 self-scalable 的<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>书中有简化模型的定量计算<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>BitTorrent 是较为流行的 P2P file distribution protocol<span class=\"mojikumi-line-end\">。</span>在 BitTorrent 中<span class=\"mojikumi-line-end\">，</span>以 chunk 为下载文件的基本单位<span class=\"mojikumi-line-end\">。</span>一个 peer 刚加入 torrent 时没有 trunk 所以只能下载<span class=\"mojikumi-line-end\">，</span>在获取到一些 trunk 后就会开始上传给其他 peer<span class=\"mojikumi-line-end\">，</span>下载完成后可以自私地离开或者无私地保种<span class=\"mojikumi-line-end\">。</span></p>\n<p>每个 torrent 会有<span class=\"mojikumi-line-start\">（</span>至少<span class=\"mojikumi-line-end\">）</span>一个 tracker<span class=\"mojikumi-line-end\">，</span>peer 在加入/离开时会通知 tracker<span class=\"mojikumi-line-end\">，</span>并在过程中定期告知 tracker 自己仍在活动<span class=\"mojikumi-line-end\">。</span>tracker 会给每个 peer 提供一些其他 peer 的 IP 地址和端口<span class=\"mojikumi-line-end\">。</span></p>\n<p>在下载过程中<span class=\"mojikumi-line-end\">，</span>每个 peer 拥有一部分 chunk<span class=\"mojikumi-line-end\">，</span>并向其他 peer 请求 chunk<span class=\"mojikumi-line-end\">。</span>每个 peer 需要决定优先下载哪个 trunk 以及上传给谁<span class=\"mojikumi-line-end\">。</span></p>\n<p>优先下载的 trunk 可以采用 <i>rarest first</i> 的策略<span class=\"mojikumi-line-end\">，</span>即优先下载已知的 peer 中拥有人数最少的 chunk<span class=\"mojikumi-line-end\">，</span>这样的话就能使得各个 trunk 较为均匀地在 peer 间分布<span class=\"mojikumi-line-end\">。</span></p>\n<p>在下载过程中<span class=\"mojikumi-line-end\">，</span>会采用被称作<span class=\"mojikumi-line-start\">“</span>tit-for-tat<span class=\"mojikumi-line-end\">”</span>的策略决定上传给谁<span class=\"mojikumi-line-end\">：</span>上传给自己<span class=\"mojikumi-line-start\">（</span>即从他那下载<span class=\"mojikumi-line-end\">）</span>的速度最快的几个 peer 被称作<span class=\"mojikumi-line-start\">“</span>unchoked<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>除此之外还会每隔一段时间随机选择一个 peer 被称作<span class=\"mojikumi-line-start\">“</span>optimistically unchoked<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>最后做出的选择就是上传给<span class=\"mojikumi-line-start\">“</span>unchoked<span class=\"mojikumi-line-end\">”</span>和<span class=\"mojikumi-line-start\">“</span>optimistically unchoked<span class=\"mojikumi-line-end\">”</span>的这些 peer<span class=\"mojikumi-line-end\">。</span>这个策略实际上可以被绕过<span class=\"mojikumi-line-end\">，</span>但不被绕过时它提供了一个激励大家上传的机制<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>注<span class=\"mojikumi-line-end\">：</span>在下载完毕后保种时<span class=\"mojikumi-line-end\">，</span>会使用另外的策略<span class=\"mojikumi-line-end\">。</span><sup><a href=\"#user-content-fn-seed-choking\" id=\"user-content-fnref-seed-choking\" data-footnote-ref aria-describedby=\"footnote-label\">5</a></sup><span class=\"mojikumi-line-end\">）</span></p>\n<p>除了通过 tracker<span class=\"mojikumi-line-end\">，</span>还可以通过 Distributed Hash Table (DHT<span class=\"mojikumi-line-end\">，</span>一种 P2P 架构的 distributed database) 来获取 peer<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"video-streaming-and-content-distribution-networks\" class=\"heading\"><a href=\"#video-streaming-and-content-distribution-networks\" class=\"heading-anchor\" aria-label=\"章节： Video Streaming and Content Distribution Networks\" tabindex=\"-1\"></a><span>Video Streaming and Content Distribution Networks</span></h2>\n<h3 id=\"http-streaming-and-dash\" class=\"heading\"><a href=\"#http-streaming-and-dash\" class=\"heading-anchor\" aria-label=\"章节： HTTP Streaming and DASH\" tabindex=\"-1\"></a><span>HTTP Streaming and DASH</span></h3>\n<p>视频需要耗费大量的流量<span class=\"mojikumi-line-start\">（</span>以及存储空间<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>而 streaming 时需要保证至少有视频 bitrate 这么多的带宽才能避免卡顿<span class=\"mojikumi-line-end\">，</span>所以一般会根据可用的带宽选择不同质量的视频版本<span class=\"mojikumi-line-end\">。</span></p>\n<p>最基础的 streaming 方式是 HTTP streaming<span class=\"mojikumi-line-end\">，</span>即通过 HTTP GET 获取视频文件至缓冲区并播放<span class=\"mojikumi-line-end\">，</span>但这样无法适应不同用户的不同带宽<span class=\"mojikumi-line-end\">，</span>更无法适应同一个用户随时间变化的带宽<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 Dynamic Adaptive Streaming over HTTP (DASH) 中<span class=\"mojikumi-line-end\">，</span>视频被编码为多个不同质量的版本<span class=\"mojikumi-line-end\">，</span>client 每次获取一个几秒的视频片段<span class=\"mojikumi-line-end\">，</span>并根据可用带宽动态调整选择的版本<span class=\"mojikumi-line-end\">。</span></p>\n<p>在开始播放之前<span class=\"mojikumi-line-end\">，</span>client 首先会获取 manifest file 来得到各个视频版本的 URL 以及 bitrate<span class=\"mojikumi-line-end\">。</span>在播放过程中<span class=\"mojikumi-line-end\">，</span>通过 HTTP GET 请求以及 byte range header 获取视频片段<span class=\"mojikumi-line-end\">，</span>同时计算可用带宽<span class=\"mojikumi-line-end\">，</span>决定接下来选择的视频版本<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"content-distribution-networks\" class=\"heading\"><a href=\"#content-distribution-networks\" class=\"heading-anchor\" aria-label=\"章节： Content Distribution Networks\" tabindex=\"-1\"></a><span>Content Distribution Networks</span></h3>\n<p>和 DNS 类似<span class=\"mojikumi-line-end\">，</span>video streaming 往往也不能仅通过单个 data center 实现<span class=\"mojikumi-line-end\">，</span>因为<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>离部分用户过远<span class=\"mojikumi-line-end\">，</span>虽然 streaming 对延时要求不高<span class=\"mojikumi-line-end\">，</span>但更多的 communication link 很可能意味着更低的 bottleneck bandwidth<span class=\"mojikumi-line-end\">。</span></li>\n<li>同一个视频会在同一个 communication link 上被传输多次<span class=\"mojikumi-line-end\">，</span>造成网络资源以及资费的浪费<span class=\"mojikumi-line-end\">。</span></li>\n<li>single point of failure</li>\n</ul>\n<p>为了解决这些问题<span class=\"mojikumi-line-end\">，</span>video-streaming company 往往会使用 Content Distribution Networks (CDN) 来分发视频<span class=\"mojikumi-line-end\">。</span></p>\n<p>CDN 会在全球各地放置 server (cluster)<span class=\"mojikumi-line-end\">，</span>在每个节点存放一份 content 的 copy<span class=\"mojikumi-line-end\">，</span>在处理 user request 时尽量由最好<span class=\"mojikumi-line-start\">（</span>最近<span class=\"mojikumi-line-end\">）</span>的节点负责响应<span class=\"mojikumi-line-end\">。</span></p>\n<p>CDN 可以是 private CDN<span class=\"mojikumi-line-start\">（</span>例如 Google 的 CDN<span class=\"mojikumi-line-end\">）</span>或者 third-party CDN<span class=\"mojikumi-line-start\">（</span>例如 Akamai<span class=\"mojikumi-line-end\">、</span>Limelight<span class=\"mojikumi-line-end\">、</span>Level-3<span class=\"mojikumi-line-end\">，</span><s>书中竟然没提到 Cloudflare</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>CDN 通常有两种放置策略<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>Enter Deep: 放在 access ISP<span class=\"mojikumi-line-end\">，</span>cluster 数量多<span class=\"mojikumi-line-end\">，</span>性能更好<span class=\"mojikumi-line-end\">，</span>维护成本更高<span class=\"mojikumi-line-end\">。</span></li>\n<li>Bring Home: 放在 IXP<span class=\"mojikumi-line-end\">，</span>cluster 数量少<span class=\"mojikumi-line-end\">，</span>维护成本更低<span class=\"mojikumi-line-end\">，</span>性能相对差<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>CDN 的更新有 push 和 pull 两种方式<span class=\"mojikumi-line-end\">，</span>push 就是内容更新时 push 到各个 cluster<span class=\"mojikumi-line-end\">，</span>pull 则与 cache 类似<span class=\"mojikumi-line-end\">，</span>在 cache miss 时再从上游获取并<span class=\"mojikumi-line-start\">（</span>在 stream 给用户的同时<span class=\"mojikumi-line-end\">）</span>保存下来<span class=\"mojikumi-line-end\">。</span></p>\n<p>将用户重定向到 CDN 节点的一种方式是通过 DNS<span class=\"mojikumi-line-end\">：</span>authoritative DNS server 返回 CDN 的 DNS server 的 NS record<span class=\"mojikumi-line-end\">，</span>然后再由 CDN 的 DNS server 进行节点选择并返回节点的 IP 地址<span class=\"mojikumi-line-end\">。</span></p>\n<p><span class=\"mojikumi-line-start\">（</span>基于 DNS 进行 CDN 重定向时<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>选择节点的两种方式是<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>\n<p>geographically closest: 由 local DNS server 的 IP 确定地理位置<span class=\"mojikumi-line-end\">，</span>然后选择最近的节点<span class=\"mojikumi-line-end\">。</span>这样做的主要问题在于<span class=\"mojikumi-line-end\">，</span>地理位置近不一定意味着网络距离近/带宽高<span class=\"mojikumi-line-end\">，</span>并且 local DNS server 有可能离用户很远<span class=\"mojikumi-line-end\">。</span></p>\n</li>\n<li>\n<p>real-time measurements: 可以每隔一段时间向各个 local DNS server 发送探测信号来检测网络性能<span class=\"mojikumi-line-end\">，</span>这样做的主要问题在于 DNS server 可能会拒绝响应这样的探测<span class=\"mojikumi-line-end\">。</span></p>\n</li>\n</ul>\n<h3 id=\"case-studies-netflix-and-youtube\" class=\"heading\"><a href=\"#case-studies-netflix-and-youtube\" class=\"heading-anchor\" aria-label=\"章节： Case Studies: Netflix and YouTube\" tabindex=\"-1\"></a><span>Case Studies: Netflix and YouTube</span></h3>\n<p>Netflix 和 YouTube 都是大型 video streaming 服务商<span class=\"mojikumi-line-end\">，</span>但它们的架构有很大不同<span class=\"mojikumi-line-end\">，</span>这很大程度上是由于它们视频类型的不同<span class=\"mojikumi-line-start\">（</span>剧 vs UGC<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"netflix\" class=\"heading\"><a href=\"#netflix\" class=\"heading-anchor\" aria-label=\"章节： Netflix\" tabindex=\"-1\"></a><span>Netflix</span></h4>\n<p>Netflix 使用 Amazon cloud 运行 Web server 以及视频处理<span class=\"mojikumi-line-end\">，</span>而使用私有的 CDN 分发视频<span class=\"mojikumi-line-end\">。</span></p>\n<p>Netflix 的私有 CDN cluster 安装在 ISP 和 IXP 中<span class=\"mojikumi-line-end\">，</span>其中 IXP 的 cluster 往往容量较大<span class=\"mojikumi-line-end\">，</span>可以装下整个 Netflix 的所有视频的各个版本<span class=\"mojikumi-line-end\">，</span>而 ISP 的 cluster 往往容量较小<span class=\"mojikumi-line-end\">，</span>只存放最热门的视频<span class=\"mojikumi-line-end\">。</span></p>\n<p>Netflix 不使用 pull-caching<span class=\"mojikumi-line-end\">，</span>而是在每天的低峰期采用 push 进行更新<span class=\"mojikumi-line-end\">。</span></p>\n<p>因为 Netflix 的私有 CDN 只负责分发视频<span class=\"mojikumi-line-end\">，</span>它不需要使用 DNS redirect<span class=\"mojikumi-line-end\">，</span>直接由 Web server 告诉 client IP 地址即可<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"youtube\" class=\"heading\"><a href=\"#youtube\" class=\"heading-anchor\" aria-label=\"章节： YouTube\" tabindex=\"-1\"></a><span>YouTube</span></h4>\n<a id=\"google-的-network-infrastructure\" name=\"google-的-network-infrastructure\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h5 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>Google 的 network infrastructure</span></h5><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>Google 部署了一个庞大的 private network and CDN infrastructure<span class=\"mojikumi-line-end\">，</span>包含以下三级 server clusters<span class=\"mojikumi-line-end\">：</span></p><ol>\n<li>约 20 个<span class=\"mojikumi-line-start\">“</span>mega data center<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>分布在北美<span class=\"mojikumi-line-end\">、</span>欧洲和亚洲<span class=\"mojikumi-line-end\">，</span>每个 cluster 有数十万服务器<span class=\"mojikumi-line-end\">，</span>用来 serve dynamic content<span class=\"mojikumi-line-end\">。</span></li>\n<li>约 90 个部署在 IXP 的 cluster<span class=\"mojikumi-line-end\">，</span>每个 cluster 有数百个服务器<span class=\"mojikumi-line-end\">，</span>用来 serve 包括 YouTube 视频在内的 static content<span class=\"mojikumi-line-end\">。</span></li>\n<li>数百个部署在 access ISP 的 cluster<span class=\"mojikumi-line-end\">，</span>每个 cluster 有数十个服务器<span class=\"mojikumi-line-end\">，</span>用来进行 TCP splitting 以及 server static content<span class=\"mojikumi-line-end\">，</span>例如网页上的静态资源<span class=\"mojikumi-line-end\">。</span></li>\n</ol><p>在访问 Google 的服务时<span class=\"mojikumi-line-end\">，</span>不同内容往往会来自不同层级的 cluster<span class=\"mojikumi-line-end\">。</span></p><p>这些 cluster 通过 Google 的 private network 连接<span class=\"mojikumi-line-end\">，</span>使得它们之间的很多通信都不依赖于 public Internet<span class=\"mojikumi-line-end\">，</span>与用户的通信也往往只涉及到 access ISP 这一层<span class=\"mojikumi-line-end\">。</span></p></div></div></aside>\n<p>YouTube 使用 Google 的私有 CDN 分发视频<span class=\"mojikumi-line-end\">，</span>并且使用 pull-caching 和 DNS redirect<span class=\"mojikumi-line-end\">。</span>在选择节点时<span class=\"mojikumi-line-end\">，</span>会综合考虑 client 到 cluster 的 RTT 以及负载均衡<span class=\"mojikumi-line-end\">。</span></p>\n<p>在用户上传视频时<span class=\"mojikumi-line-end\">，</span>会在 Google 的 data center 进行处理<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"socket-programming-creating-network-applications\" class=\"heading\"><a href=\"#socket-programming-creating-network-applications\" class=\"heading-anchor\" aria-label=\"章节： Socket Programming: Creating Network Applications\" tabindex=\"-1\"></a><span>Socket Programming: Creating Network Applications</span></h2>\n<p>一般来说<span class=\"mojikumi-line-end\">，</span>编写 network application 需要编写 client program 和 server program<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"socket-programming-with-udp\" class=\"heading\"><a href=\"#socket-programming-with-udp\" class=\"heading-anchor\" aria-label=\"章节： Socket Programming with UDP\" tabindex=\"-1\"></a><span>Socket Programming with UDP</span></h3>\n<p>使用 UDP 时<span class=\"mojikumi-line-end\">，</span>每次发送 datagram<sup><a href=\"#user-content-fn-datagram\" id=\"user-content-fnref-datagram\" data-footnote-ref aria-describedby=\"footnote-label\">6</a></sup> 都需要指定 address<span class=\"mojikumi-line-start\">（</span>IP 地址 &#x26; 端口<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>接收 datagram 时也会收到对方的 address<span class=\"mojikumi-line-end\">。</span></p>\n<p><s>一看就懂但书上解释了半天的</s> 例子<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"python 代码块\" data-v-ad49d235>python</h4><ile-root id=\"ile-4\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-4--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">from</span><span style=\"color: #D6DEEB\"> socket </span><span style=\"color: #C792EA\">import</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">*</span></span>\n<span><span style=\"color: #D6DEEB\">serverName </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">hostname</span><span style=\"color: #D9F5DD\">&#39;</span></span>\n<span><span style=\"color: #D6DEEB\">serverPort </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">12000</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #B2CCD6\">socket</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">AF_INET</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> SOCK_DGRAM</span><span style=\"color: #D6DEEB\">) </span><span style=\"color: #637777\"># AF_INET 表示 IPv4 地址，SOCK_DGRAM 表示 UDP</span></span>\n<span><span style=\"color: #D6DEEB\">message </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">Input lowercase sentence:</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket.</span><span style=\"color: #B2CCD6\">sendto</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">message.</span><span style=\"color: #B2CCD6\">encode</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> (serverName, serverPort)</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">modifiedMessage, serverAddress </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> clientSocket.</span><span style=\"color: #B2CCD6\">recvfrom</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">2048</span><span style=\"color: #D6DEEB\">) </span><span style=\"color: #637777\"># 2048 是 buffer size</span></span>\n<span><span style=\"color: #C5E478\">print</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">modifiedMessage.</span><span style=\"color: #B2CCD6\">decode</span><span style=\"color: #D6DEEB\">())</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket.</span><span style=\"color: #B2CCD6\">close</span><span style=\"color: #D6DEEB\">()</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">from</span><span style=\"color: #403F53\"> socket </span><span style=\"color: #994CC3\">import</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">*</span></span>\n<span><span style=\"color: #403F53\">serverName </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">hostname</span><span style=\"color: #111111\">&#39;</span></span>\n<span><span style=\"color: #403F53\">serverPort </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">12000</span></span>\n<span><span style=\"color: #403F53\">clientSocket </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">socket</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">AF_INET</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> SOCK_DGRAM</span><span style=\"color: #403F53\">) </span><span style=\"color: #989FB1\"># AF_INET 表示 IPv4 地址，SOCK_DGRAM 表示 UDP</span></span>\n<span><span style=\"color: #403F53\">message </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">Input lowercase sentence:</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">clientSocket.</span><span style=\"color: #0C969B\">sendto</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">message.</span><span style=\"color: #0C969B\">encode</span><span style=\"color: #403F53\">()</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> (serverName, serverPort)</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">modifiedMessage, serverAddress </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> clientSocket.</span><span style=\"color: #0C969B\">recvfrom</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">2048</span><span style=\"color: #403F53\">) </span><span style=\"color: #989FB1\"># 2048 是 buffer size</span></span>\n<span><span style=\"color: #4876D6\">print</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">modifiedMessage.</span><span style=\"color: #0C969B\">decode</span><span style=\"color: #403F53\">())</span></span>\n<span><span style=\"color: #403F53\">clientSocket.</span><span style=\"color: #0C969B\">close</span><span style=\"color: #403F53\">()</span></span></code></pre></div></section>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"python 代码块\" data-v-ad49d235>python</h4><ile-root id=\"ile-5\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-5--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">from</span><span style=\"color: #D6DEEB\"> socket </span><span style=\"color: #C792EA\">import</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">*</span></span>\n<span><span style=\"color: #D6DEEB\">serverPort </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">12000</span></span>\n<span><span style=\"color: #D6DEEB\">serverSocket </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #B2CCD6\">socket</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">AF_INET</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> SOCK_DGRAM</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">serverSocket.</span><span style=\"color: #B2CCD6\">bind</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">(</span><span style=\"color: #D9F5DD\">&#39;&#39;</span><span style=\"color: #82AAFF\">, serverPort)</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #C5E478\">print</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">The server is ready to receive</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #C792EA\">while</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #FF5874\">True</span><span style=\"color: #D6DEEB\">:</span></span>\n<span><span style=\"color: #D6DEEB\">    message, clientAddress </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> serverSocket.</span><span style=\"color: #B2CCD6\">recvfrom</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">2048</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">    modifiedMessage </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> message.</span><span style=\"color: #B2CCD6\">decode</span><span style=\"color: #D6DEEB\">().</span><span style=\"color: #B2CCD6\">upper</span><span style=\"color: #D6DEEB\">()</span></span>\n<span><span style=\"color: #D6DEEB\">    serverSocket.</span><span style=\"color: #B2CCD6\">sendto</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">modifiedMessage.</span><span style=\"color: #B2CCD6\">encode</span><span style=\"color: #D6DEEB\">()</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> clientAddress</span><span style=\"color: #D6DEEB\">)</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">from</span><span style=\"color: #403F53\"> socket </span><span style=\"color: #994CC3\">import</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">*</span></span>\n<span><span style=\"color: #403F53\">serverPort </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">12000</span></span>\n<span><span style=\"color: #403F53\">serverSocket </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">socket</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">AF_INET</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> SOCK_DGRAM</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">serverSocket.</span><span style=\"color: #0C969B\">bind</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">(</span><span style=\"color: #111111\">&#39;&#39;</span><span style=\"color: #4876D6\">, serverPort)</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #4876D6\">print</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">The server is ready to receive</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #994CC3\">while</span><span style=\"color: #403F53\"> </span><span style=\"color: #BC5454\">True</span><span style=\"color: #403F53\">:</span></span>\n<span><span style=\"color: #403F53\">    message, clientAddress </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> serverSocket.</span><span style=\"color: #0C969B\">recvfrom</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">2048</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">    modifiedMessage </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> message.</span><span style=\"color: #0C969B\">decode</span><span style=\"color: #403F53\">().</span><span style=\"color: #0C969B\">upper</span><span style=\"color: #403F53\">()</span></span>\n<span><span style=\"color: #403F53\">    serverSocket.</span><span style=\"color: #0C969B\">sendto</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">modifiedMessage.</span><span style=\"color: #0C969B\">encode</span><span style=\"color: #403F53\">()</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> clientAddress</span><span style=\"color: #403F53\">)</span></span></code></pre></div></section>\n<h3 id=\"socket-programming-with-tcp\" class=\"heading\"><a href=\"#socket-programming-with-tcp\" class=\"heading-anchor\" aria-label=\"章节： Socket Programming with TCP\" tabindex=\"-1\"></a><span>Socket Programming with TCP</span></h3>\n<p>TCP 是一个 connection-oriented protocol<span class=\"mojikumi-line-end\">，</span>在 server 上分为 welcoming socket 和 connection socket<span class=\"mojikumi-line-end\">，</span>一开始需要通过 welcoming socket 建立 connection 并得到 connection socket<span class=\"mojikumi-line-end\">，</span>而在建立了 connection 之后就无需再指定对方的 address<span class=\"mojikumi-line-end\">。</span></p>\n<p><span class=\"mojikumi-line-start\">（</span>下面的代码除了换成 TCP 还对上面的 UDP 代码有若干没有本质区别的修改<span class=\"mojikumi-line-end\">，</span>要是我写肯定会避免<span class=\"mojikumi-line-end\">，</span>但是从书上复制就懒得改了<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"python 代码块\" data-v-ad49d235>python</h4><ile-root id=\"ile-6\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-6--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">from</span><span style=\"color: #D6DEEB\"> socket </span><span style=\"color: #C792EA\">import</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">*</span></span>\n<span><span style=\"color: #D6DEEB\">serverName </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">servername</span><span style=\"color: #D9F5DD\">&#39;</span></span>\n<span><span style=\"color: #D6DEEB\">serverPort </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">12000</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #B2CCD6\">socket</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">AF_INET</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> SOCK_STREAM</span><span style=\"color: #D6DEEB\">) </span><span style=\"color: #637777\"># SOCK_STREAM 是 TCP</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket.</span><span style=\"color: #B2CCD6\">connect</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">(serverName, serverPort)</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">sentence </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">Input lowercase sentence:</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket.</span><span style=\"color: #B2CCD6\">send</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">sentence.</span><span style=\"color: #B2CCD6\">encode</span><span style=\"color: #D6DEEB\">())</span></span>\n<span><span style=\"color: #D6DEEB\">modifiedSentence </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> clientSocket.</span><span style=\"color: #B2CCD6\">recv</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">1024</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #C5E478\">print</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">From Server: </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> modifiedSentence.</span><span style=\"color: #B2CCD6\">decode</span><span style=\"color: #D6DEEB\">())</span></span>\n<span><span style=\"color: #D6DEEB\">clientSocket.</span><span style=\"color: #B2CCD6\">close</span><span style=\"color: #D6DEEB\">()</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">from</span><span style=\"color: #403F53\"> socket </span><span style=\"color: #994CC3\">import</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">*</span></span>\n<span><span style=\"color: #403F53\">serverName </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">servername</span><span style=\"color: #111111\">&#39;</span></span>\n<span><span style=\"color: #403F53\">serverPort </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">12000</span></span>\n<span><span style=\"color: #403F53\">clientSocket </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">socket</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">AF_INET</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> SOCK_STREAM</span><span style=\"color: #403F53\">) </span><span style=\"color: #989FB1\"># SOCK_STREAM 是 TCP</span></span>\n<span><span style=\"color: #403F53\">clientSocket.</span><span style=\"color: #0C969B\">connect</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">(serverName, serverPort)</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">sentence </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">Input lowercase sentence:</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">clientSocket.</span><span style=\"color: #0C969B\">send</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">sentence.</span><span style=\"color: #0C969B\">encode</span><span style=\"color: #403F53\">())</span></span>\n<span><span style=\"color: #403F53\">modifiedSentence </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> clientSocket.</span><span style=\"color: #0C969B\">recv</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">1024</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #4876D6\">print</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">From Server: </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> modifiedSentence.</span><span style=\"color: #0C969B\">decode</span><span style=\"color: #403F53\">())</span></span>\n<span><span style=\"color: #403F53\">clientSocket.</span><span style=\"color: #0C969B\">close</span><span style=\"color: #403F53\">()</span></span></code></pre></div></section>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"python 代码块\" data-v-ad49d235>python</h4><ile-root id=\"ile-7\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-7--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">from</span><span style=\"color: #D6DEEB\"> socket </span><span style=\"color: #C792EA\">import</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">*</span></span>\n<span><span style=\"color: #D6DEEB\">serverPort </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">12000</span></span>\n<span><span style=\"color: #D6DEEB\">serverSocket </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #B2CCD6\">socket</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">AF_INET</span><span style=\"color: #D9F5DD\">,</span><span style=\"color: #82AAFF\"> SOCK_STREAM</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">serverSocket.</span><span style=\"color: #B2CCD6\">bind</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">(</span><span style=\"color: #D9F5DD\">&#39;&#39;</span><span style=\"color: #82AAFF\">, serverPort)</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">serverSocket.</span><span style=\"color: #B2CCD6\">listen</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">) </span><span style=\"color: #637777\"># 1 是 connection queue 的最大长度</span></span>\n<span><span style=\"color: #C5E478\">print</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">The server is ready to receive</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #C792EA\">while</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #FF5874\">True</span><span style=\"color: #D6DEEB\">:</span></span>\n<span><span style=\"color: #D6DEEB\">    connectionSocket, addr </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> serverSocket.</span><span style=\"color: #B2CCD6\">accept</span><span style=\"color: #D6DEEB\">()</span></span>\n<span><span style=\"color: #D6DEEB\">    sentence </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> connectionSocket.</span><span style=\"color: #B2CCD6\">recv</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">1024</span><span style=\"color: #D6DEEB\">).</span><span style=\"color: #B2CCD6\">decode</span><span style=\"color: #D6DEEB\">()</span></span>\n<span><span style=\"color: #D6DEEB\">    capitalizedSentence </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> sentence.</span><span style=\"color: #B2CCD6\">upper</span><span style=\"color: #D6DEEB\">()</span></span>\n<span><span style=\"color: #D6DEEB\">    connectionSocket.</span><span style=\"color: #B2CCD6\">send</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #82AAFF\">capitalizedSentence.</span><span style=\"color: #B2CCD6\">encode</span><span style=\"color: #D6DEEB\">())</span></span>\n<span><span style=\"color: #D6DEEB\">    connectionSocket.</span><span style=\"color: #B2CCD6\">close</span><span style=\"color: #D6DEEB\">()</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">from</span><span style=\"color: #403F53\"> socket </span><span style=\"color: #994CC3\">import</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">*</span></span>\n<span><span style=\"color: #403F53\">serverPort </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">12000</span></span>\n<span><span style=\"color: #403F53\">serverSocket </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">socket</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">AF_INET</span><span style=\"color: #111111\">,</span><span style=\"color: #4876D6\"> SOCK_STREAM</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">serverSocket.</span><span style=\"color: #0C969B\">bind</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">(</span><span style=\"color: #111111\">&#39;&#39;</span><span style=\"color: #4876D6\">, serverPort)</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">serverSocket.</span><span style=\"color: #0C969B\">listen</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">) </span><span style=\"color: #989FB1\"># 1 是 connection queue 的最大长度</span></span>\n<span><span style=\"color: #4876D6\">print</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">The server is ready to receive</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #994CC3\">while</span><span style=\"color: #403F53\"> </span><span style=\"color: #BC5454\">True</span><span style=\"color: #403F53\">:</span></span>\n<span><span style=\"color: #403F53\">    connectionSocket, addr </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> serverSocket.</span><span style=\"color: #0C969B\">accept</span><span style=\"color: #403F53\">()</span></span>\n<span><span style=\"color: #403F53\">    sentence </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> connectionSocket.</span><span style=\"color: #0C969B\">recv</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">1024</span><span style=\"color: #403F53\">).</span><span style=\"color: #0C969B\">decode</span><span style=\"color: #403F53\">()</span></span>\n<span><span style=\"color: #403F53\">    capitalizedSentence </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> sentence.</span><span style=\"color: #0C969B\">upper</span><span style=\"color: #403F53\">()</span></span>\n<span><span style=\"color: #403F53\">    connectionSocket.</span><span style=\"color: #0C969B\">send</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">capitalizedSentence.</span><span style=\"color: #0C969B\">encode</span><span style=\"color: #403F53\">())</span></span>\n<span><span style=\"color: #403F53\">    connectionSocket.</span><span style=\"color: #0C969B\">close</span><span style=\"color: #403F53\">()</span></span></code></pre></div></section>\n<section data-footnotes class=\"footnotes\"><h2 class=\"sr-only\" id=\"footnote-label\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-fig2.8\">\n<p>p103, Figure 2.8: General format of an HTTP request message <a href=\"#user-content-fnref-fig2.8\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-fig2.9\">\n<p>p104, Figure 2.9: General format of an HTTP response message <a href=\"#user-content-fnref-fig2.9\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-smtp-example\">\n<p><a href=\"https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol#SMTP_transport_example\">SMTP transport example - Simple Mail Transfer Protocol - Wikipedia</a> <a href=\"#user-content-fnref-smtp-example\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-fig-2.21\">\n<p>p133, Figure 2.21: DNS message format <a href=\"#user-content-fnref-fig-2.21\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-seed-choking\">\n<p><a href=\"https://www.libtorrent.org/reference-Settings.html#seed_choking_algorithm_t\">seed_choking_algorithm - libtorrent</a> <a href=\"#user-content-fnref-seed-choking\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n<li id=\"user-content-fn-datagram\">\n<p>在书中 1.5 节<span class=\"mojikumi-line-end\">，</span>transport-layer packet 被称作 <span class=\"mojikumi\">“</span>segment<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>network-layer packet 被称作 <span class=\"mojikumi\">“</span>datagram<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>但实际上 UDP 的 <span class=\"mojikumi\">“</span>D<span class=\"mojikumi\">”</span> 就是 <span class=\"mojikumi\">“</span>datagram<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>而 TCP 的 packet 才叫 <span class=\"mojikumi\">“</span>segment<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>ref: <a href=\"https://stackoverflow.com/questions/11636405/definition-of-network-units-fragment-segment-packet-frame-datagram\">networking - Definition of Network Units: Fragment, Segment, Packet, Frame, Datagram - Stack Overflow</a> <a href=\"#user-content-fnref-datagram\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section>",
            "url": "https://ouuan.moe/post/2023/06/cnatda-2",
            "title": "CNATDA 第二章学习笔记",
            "summary": "\n\n\n<p><span class=\"mojikumi-line-start\">《</span>Computer Networking A Top-Down Approach (8th Edition)<span class=\"mojikumi-line-end\">》</span>第二章 <span class=\"mojikumi\">“</span>Application Layer<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-06-16T15:24:34.000Z",
            "tags": [
                "cnatda",
                "学习笔记"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/04/ddpp-5",
            "content_html": "<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第五章 <span class=\"mojikumi\">“</span>Verilog Hardware Description Language<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>也就是初学 (System)Verilog 的笔记<span class=\"mojikumi-line-end\">。</span></p>\n\n<p>本来想寒假学<span class=\"mojikumi-line-end\">，</span>结果还是拖到了数字逻辑实验开始用 FPGA<span class=\"mojikumi-line-end\">，</span>只不过手上有模块了再来学也挺好的<span class=\"mojikumi-line-end\">。</span></p>\n<p>虽然从创建到发布拖了很久<span class=\"mojikumi-line-end\">，</span>但其实大部分内容都是新建文件后一周内写的<span class=\"mojikumi-line-end\">，</span>只是后来感觉学的东西已经差不多能应付上课了<span class=\"mojikumi-line-end\">，</span>就一直咕着没把最后一点学完 &#x26; 写完<span class=\"mojikumi-line-start\">（</span></p>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h2 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-info-circle-outline text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Info: </span><span data-v-a2ab257f>SystemVerilog</span></h2><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>DDPP5 中讲的是 Verilog 而不是 SystemVerilog<span class=\"mojikumi-line-end\">，</span>我根据在其他地方找到的一些资料补充了少量 SystemVerilog 的内容<span class=\"mojikumi-line-end\">。</span></p></div></div></aside>\n<h2 id=\"neovim-配置\" class=\"heading\"><a href=\"#neovim-配置\" class=\"heading-anchor\" aria-label=\"章节： neovim 配置\" tabindex=\"-1\"></a><span>neovim 配置</span></h2>\n<p>用的是老师推荐的 Vivado 2019.2 WebPack<span class=\"mojikumi-line-end\">，</span>而它自带的文本编辑器多少有点拉胯<span class=\"mojikumi-line-end\">，</span>所以研究了一下配 neovim<span class=\"mojikumi-line-end\">。</span></p>\n<p>最后选择的是 <a href=\"https://github.com/vivekmalneedi/veridian\">veridian</a> + 通过 <a href=\"https://github.com/jose-elias-alvarez/null-ls.nvim\">null-ls</a> 使用 Vivado 的 <code>xvlog</code><span class=\"mojikumi-line-end\">。</span>一开始我还看 veridian 没在维护而且 star 少<span class=\"mojikumi-line-start\">（</span><s>但它好歹最后更新是在 2021<span class=\"mojikumi-line-end\">，</span>Vivado 还在用 2019</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>先试了另外几个<span class=\"mojikumi-line-end\">，</span>后来发现<span class=\"mojikumi-line-end\">，</span>不说别的<span class=\"mojikumi-line-end\">，</span>只有 veridian 支持 hover<span class=\"mojikumi-line-end\">。</span>同时使用 <code>xvlog</code> 是觉得还是 Vivado 自带的 lint 比较靠谱<span class=\"mojikumi-line-end\">。</span></p>\n<p>veridian 就是用 <a href=\"https://github.com/neovim/nvim-lspconfig/blob/master/doc/server_configurations.md#veridian\">lspconfig</a><span class=\"mojikumi-line-end\">，</span>记得同时装 <a href=\"https://github.com/chipsalliance/verible\">verible</a> 才能使用某些 feature<span class=\"mojikumi-line-start\">（</span>在 lspconfig 里只需启用 veridian<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>可以把 <code>root_dir</code> 设为 <code>util<wbr>.<wbr>root_pattern<wbr>('*.<wbr>xpr<wbr>', '.<wbr>git<wbr>')</code> 来检测 Vivado 项目的根目录<span class=\"mojikumi-line-end\">。</span></p>\n<p>null-ls 的配置如下<span class=\"mojikumi-line-end\">，</span>因为 <code>xvlog</code> 实际上是一个不能禁用文件输出的 simulator<span class=\"mojikumi-line-end\">，</span>采取了一些措施来防止它到处倒垃圾<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"lua 代码块\" data-v-ad49d235>lua</h3><ile-root id=\"ile-8\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-8--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">local</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">null_ls</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">require</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">null-ls</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span><span style=\"color: #C792EA\">local</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">utils</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">require</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">null-ls.utils</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span><span style=\"color: #C792EA\">local</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">helpers</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">require</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">null-ls.helpers</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span></span>\n<span><span style=\"color: #C792EA\">local</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">xvlog_sv</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">name</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">xvlog</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">method</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">null_ls</span><span style=\"color: #D6DEEB\">.methods.DIAGNOSTICS,</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">filetypes</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> { </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">systemverilog</span><span style=\"color: #D9F5DD\">&quot; </span><span style=\"color: #D6DEEB\">},</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">generator</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">null_ls</span><span style=\"color: #D6DEEB\">.</span><span style=\"color: #C5E478\">generator</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">command</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">bwrap</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #637777\">-- only permit writing in /tmp</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">args</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">--ro-bind</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">--bind</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/tmp/xvlog</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/tmp/xvlog</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">--dev</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/dev</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">/home/ouuan/Xilinx/Vivado/2019.2/bin/xvlog</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">--sv</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">$FILENAME</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">    },</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">cwd</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">function</span><span style=\"color: #D9F5DD\">(</span><span style=\"color: #7FDBCA\">params</span><span style=\"color: #D9F5DD\">)</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #637777\">-- output in /tmp</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #C792EA\">local</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">dir</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">/tmp/xvlog/</span><span style=\"color: #D9F5DD\">&#39; </span><span style=\"color: #7FDBCA\">..</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">params</span><span style=\"color: #D6DEEB\">.bufnr</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #C5E478\">vim</span><span style=\"color: #D6DEEB\">.fn.</span><span style=\"color: #C5E478\">mkdir</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">dir</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">p</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #C792EA\">return</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">dir</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">end</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">to_temp_file</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">true</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">format</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">line</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">check_exit_code</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> { </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\"> },</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">on_output</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">helpers</span><span style=\"color: #D6DEEB\">.diagnostics.</span><span style=\"color: #C5E478\">from_patterns</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">      {</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #C5E478\">pattern</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">(.+): %[.+%] (.+) %[.+:(%d+)%]</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #C5E478\">groups</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> { </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">severity</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">message</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">row</span><span style=\"color: #D9F5DD\">&quot; </span><span style=\"color: #D6DEEB\">},</span></span>\n<span><span style=\"color: #D6DEEB\">        </span><span style=\"color: #C5E478\">overrides</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">          </span><span style=\"color: #C5E478\">severities</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">            [</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">ERROR</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">            [</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">WARNING</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">            [</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">INFO</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">          },</span></span>\n<span><span style=\"color: #D6DEEB\">        },</span></span>\n<span><span style=\"color: #D6DEEB\">      },</span></span>\n<span><span style=\"color: #D6DEEB\">    },</span></span>\n<span><span style=\"color: #D6DEEB\">  },</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span>\n<span></span>\n<span><span style=\"color: #C5E478\">null_ls</span><span style=\"color: #D6DEEB\">.</span><span style=\"color: #C5E478\">setup</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">sources</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">xvlog_sv</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">  },</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">root_dir</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">utils</span><span style=\"color: #D6DEEB\">.</span><span style=\"color: #C5E478\">root_pattern</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">*.xpr</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">.git</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">local</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">null_ls</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">require</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">null-ls</span><span style=\"color: #111111\">&quot;</span></span>\n<span><span style=\"color: #994CC3\">local</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">utils</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">require</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">null-ls.utils</span><span style=\"color: #111111\">&quot;</span></span>\n<span><span style=\"color: #994CC3\">local</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">helpers</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">require</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">null-ls.helpers</span><span style=\"color: #111111\">&quot;</span></span>\n<span></span>\n<span><span style=\"color: #994CC3\">local</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">xvlog_sv</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">name</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">xvlog</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">method</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">null_ls</span><span style=\"color: #403F53\">.methods.DIAGNOSTICS,</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">filetypes</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> { </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">systemverilog</span><span style=\"color: #111111\">&quot; </span><span style=\"color: #403F53\">},</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">generator</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">null_ls</span><span style=\"color: #403F53\">.</span><span style=\"color: #4876D6\">generator</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">command</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">bwrap</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #989FB1\">-- only permit writing in /tmp</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">args</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">--ro-bind</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">--bind</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/tmp/xvlog</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/tmp/xvlog</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">--dev</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/dev</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">/home/ouuan/Xilinx/Vivado/2019.2/bin/xvlog</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">--sv</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">$FILENAME</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">    },</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">cwd</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">function</span><span style=\"color: #111111\">(</span><span style=\"color: #0C969B\">params</span><span style=\"color: #111111\">)</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #989FB1\">-- output in /tmp</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #994CC3\">local</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">dir</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">/tmp/xvlog/</span><span style=\"color: #111111\">&#39; </span><span style=\"color: #0C969B\">..</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">params</span><span style=\"color: #403F53\">.bufnr</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #4876D6\">vim</span><span style=\"color: #403F53\">.fn.</span><span style=\"color: #4876D6\">mkdir</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">dir</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">p</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #994CC3\">return</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">dir</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">end</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">to_temp_file</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">true</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">format</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">line</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">check_exit_code</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> { </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\"> },</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">on_output</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">helpers</span><span style=\"color: #403F53\">.diagnostics.</span><span style=\"color: #4876D6\">from_patterns</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">      {</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #4876D6\">pattern</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">(.+): %[.+%] (.+) %[.+:(%d+)%]</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #4876D6\">groups</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> { </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">severity</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">message</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">row</span><span style=\"color: #111111\">&quot; </span><span style=\"color: #403F53\">},</span></span>\n<span><span style=\"color: #403F53\">        </span><span style=\"color: #4876D6\">overrides</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">          </span><span style=\"color: #4876D6\">severities</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">            [</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">ERROR</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">] </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">            [</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">WARNING</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">] </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">2</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">            [</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">INFO</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">] </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">3</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">          },</span></span>\n<span><span style=\"color: #403F53\">        },</span></span>\n<span><span style=\"color: #403F53\">      },</span></span>\n<span><span style=\"color: #403F53\">    },</span></span>\n<span><span style=\"color: #403F53\">  },</span></span>\n<span><span style=\"color: #403F53\">}</span></span>\n<span></span>\n<span><span style=\"color: #4876D6\">null_ls</span><span style=\"color: #403F53\">.</span><span style=\"color: #4876D6\">setup</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">sources</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">xvlog_sv</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">  },</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">root_dir</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">utils</span><span style=\"color: #403F53\">.</span><span style=\"color: #4876D6\">root_pattern</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">*.xpr</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">.git</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">}</span></span></code></pre></div></section>\n<p>另外可以用 <a href=\"https://github.com/amal-khailtash/vim-xdc-syntax\">vim-xdc-syntax</a> 添加管脚约束文件的高亮<span class=\"mojikumi-line-end\">。</span></p>\n<p>Vivado 的 custom text editor 使用下面的脚本<span class=\"mojikumi-line-end\">。</span>是针对 <a href=\"https://i3wm.org/\">i3</a> 配的<span class=\"mojikumi-line-end\">，</span>给 konsole 设了 name 参数<span class=\"mojikumi-line-end\">，</span>i3 设成 <code>assign<wbr> [<wbr>instance<wbr>=\"<wbr>konsole<wbr>\"]</code><span class=\"mojikumi-line-start\">（</span><code>instance</code> 而非 <code>class</code><span class=\"mojikumi-line-end\">）</span>就可以不把这个 konsole 挪到其他 konsole 所在的 workspace<span class=\"mojikumi-line-end\">，</span>并且可以在打开新文件时 focus 过去<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"bash 代码块\" data-v-ad49d235>bash</h3><ile-root id=\"ile-9\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-9--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #637777\">#!/bin/bash</span></span>\n<span></span>\n<span><span style=\"color: #637777\"># vivado-nvim.sh &quot;[file name]&quot; [line number]</span></span>\n<span></span>\n<span><span style=\"color: #C5E478\">set</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">-euo</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">pipefail</span></span>\n<span></span>\n<span><span style=\"color: #C5E478\">unset</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">LD_LIBRARY_PATH</span></span>\n<span></span>\n<span><span style=\"color: #C5E478\">NVIM_LISTEN_ADDRESS</span><span style=\"color: #C792EA\">=</span><span style=\"color: #ECC48D\">/tmp/vivado-nvim.pipe</span></span>\n<span></span>\n<span><span style=\"color: #C792EA\">if</span><span style=\"color: #D6DEEB\"> [[ </span><span style=\"color: #C792EA\">!</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">-e</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #D6DEEB\"> ]]; </span><span style=\"color: #C792EA\">then</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">exec</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">konsole</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--name</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">vivado-nvim</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">-e</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #ECC48D\">nvim</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--listen</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D7DBE0\">$1</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">+</span><span style=\"color: #D7DBE0\">$2</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span><span style=\"color: #C792EA\">else</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">nvim</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--server</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--remote</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D7DBE0\">$1</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">nvim</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--server</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">--remote-send</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">:</span><span style=\"color: #D7DBE0\">$2</span><span style=\"color: #ECC48D\">&lt;CR&gt;</span><span style=\"color: #D9F5DD\">&quot;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">i3-msg</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">[instance=&quot;vivado-nvim&quot;] focus</span><span style=\"color: #D9F5DD\">&#39;</span></span>\n<span><span style=\"color: #C792EA\">fi</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #989FB1\">#!/bin/bash</span></span>\n<span></span>\n<span><span style=\"color: #989FB1\"># vivado-nvim.sh &quot;[file name]&quot; [line number]</span></span>\n<span></span>\n<span><span style=\"color: #4876D6\">set</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">-euo</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">pipefail</span></span>\n<span></span>\n<span><span style=\"color: #4876D6\">unset</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">LD_LIBRARY_PATH</span></span>\n<span></span>\n<span><span style=\"color: #4876D6\">NVIM_LISTEN_ADDRESS</span><span style=\"color: #994CC3\">=</span><span style=\"color: #4876D6\">/tmp/vivado-nvim.pipe</span></span>\n<span></span>\n<span><span style=\"color: #994CC3\">if</span><span style=\"color: #403F53\"> [[ </span><span style=\"color: #994CC3\">!</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">-e</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #403F53\"> ]]; </span><span style=\"color: #994CC3\">then</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">exec</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">konsole</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--name</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">vivado-nvim</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">-e</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">nvim</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--listen</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">$1</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">+</span><span style=\"color: #403F53\">$2</span><span style=\"color: #111111\">&quot;</span></span>\n<span><span style=\"color: #994CC3\">else</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">nvim</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--server</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--remote</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">$1</span><span style=\"color: #111111\">&quot;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">nvim</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--server</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">$NVIM_LISTEN_ADDRESS</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">--remote-send</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">:</span><span style=\"color: #403F53\">$2</span><span style=\"color: #C96765\">&lt;CR&gt;</span><span style=\"color: #111111\">&quot;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">i3-msg</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">[instance=&quot;vivado-nvim&quot;] focus</span><span style=\"color: #111111\">&#39;</span></span>\n<span><span style=\"color: #994CC3\">fi</span></span></code></pre></div></section>\n<h2 id=\"基础语法\" class=\"heading\"><a href=\"#基础语法\" class=\"heading-anchor\" aria-label=\"章节： 基础语法\" tabindex=\"-1\"></a><span>基础语法</span></h2>\n<h3 id=\"module\" class=\"heading\"><a href=\"#module\" class=\"heading-anchor\" aria-label=\"章节： module\" tabindex=\"-1\"></a><span>module</span></h3>\n<p>Verilog 以 module 为基本单位<span class=\"mojikumi-line-start\">（</span>和前端的 component 有点类似<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>例子<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-10\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-10--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> inhibit (</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  in,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  invin,</span></span>\n<span><span style=\"color: #C5E478\">    output</span><span style=\"color: #D6DEEB\"> out</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">assign</span><span style=\"color: #D6DEEB\"> out </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> in </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">~</span><span style=\"color: #D6DEEB\">invin;</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> inhibit (</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  in,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  invin,</span></span>\n<span><span style=\"color: #4876D6\">    output</span><span style=\"color: #403F53\"> out</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">assign</span><span style=\"color: #403F53\"> out </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> in </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">~</span><span style=\"color: #403F53\">invin;</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>convention 是每个文件只写一个 module<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"signal-net-variable\" class=\"heading\"><a href=\"#signal-net-variable\" class=\"heading-anchor\" aria-label=\"章节： signal (net &#x26; variable)\" tabindex=\"-1\"></a><span>signal (net &#x26; variable)</span></h3>\n<p>一个 1-bit 的 signal 有四种取值<span class=\"mojikumi-line-end\">：</span>0<span class=\"mojikumi-line-end\">、</span>1<span class=\"mojikumi-line-end\">、</span>x<span class=\"mojikumi-line-start\">（</span>未知<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span>z<span class=\"mojikumi-line-start\">（</span>高阻抗<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>位运算<span class=\"mojikumi-line-end\">：</span><code>&#x26;</code><span class=\"mojikumi-line-end\">、</span><code>|</code><span class=\"mojikumi-line-end\">、</span><code>~</code><span class=\"mojikumi-line-end\">、</span><code>^</code><span class=\"mojikumi-line-end\">、</span><code>~^</code>/<code>^~</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>signal 有两大类<span class=\"mojikumi-line-end\">：</span><i>net</i> 和 <i>variable</i><span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>net 表示线路<span class=\"mojikumi-line-end\">，</span>一般是 <code>wire</code><span class=\"mojikumi-line-end\">，</span>还可以是 <code>supply0</code><span class=\"mojikumi-line-end\">、</span><code>supply1</code> 等<span class=\"mojikumi-line-start\">（</span>我用 <code>supply1</code> 的时候出现了神秘的问题<span class=\"mojikumi-line-end\">，</span>没细究<span class=\"mojikumi-line-end\">，</span>反正用恒为 1 的 <code>logic</code> 也差不多<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n<li>variable 用于 procedural statement 中<span class=\"mojikumi-line-end\">，</span>不一定对应到物理上的线路<span class=\"mojikumi-line-end\">，</span>可以是 <code>reg</code> 或者 <code>integer</code><span class=\"mojikumi-line-end\">。</span>其中 <code>reg</code> 就是变量的意思<span class=\"mojikumi-line-start\">（</span>名字取得不太好<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>表示单个 bit 或者 vector<span class=\"mojikumi-line-end\">，</span>与基于 flip-flop 的寄存器无关<span class=\"mojikumi-line-end\">。</span><code>integer</code> 是有符号整型<span class=\"mojikumi-line-end\">，</span>一般不用来存储数据或信号<span class=\"mojikumi-line-end\">，</span>而是用于 for 循环之类的地方<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>input 只能是 net<span class=\"mojikumi-line-end\">，</span>而 output 可以是 net 或 <code>reg</code><span class=\"mojikumi-line-end\">。</span>不写 <code>wire</code> / <code>reg</code> 时默认是 <code>wire</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>在 SystemVerilog 中推荐用 <code>logic</code> 来代替 <code>reg</code><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"数字字面量-parameter\" class=\"heading\"><a href=\"#数字字面量-parameter\" class=\"heading-anchor\" aria-label=\"章节： 数字字面量 &#x26; parameter\" tabindex=\"-1\"></a><span>数字字面量 &#x26; parameter</span></h3>\n<p>直接写十进制数会得到一个 signed number<span class=\"mojikumi-line-end\">。</span></p>\n<p>可以指定位数和进制<span class=\"mojikumi-line-end\">：</span><code>1'b0</code> 是 1 bit 的 0<span class=\"mojikumi-line-end\">，</span><code>4'ha</code> 是 4 bit 的 10<span class=\"mojikumi-line-start\">（</span>十六进制的 A<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span><code>8<wbr>'<wbr>b01x0z1x1</code> 的一些 bit 是未知 / 高阻抗<span class=\"mojikumi-line-end\">。</span>如果后面写的值的位数超过前面指定的位数<span class=\"mojikumi-line-end\">，</span>高位会被扔掉<span class=\"mojikumi-line-end\">，</span>如果少了则会高位补零<span class=\"mojikumi-line-start\">（</span>或者补 <code>x</code> 或 <code>z</code><span class=\"mojikumi-line-end\">，</span>如果最高位是 <code>x</code> 或 <code>z</code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>这样得到的会是一个 unsigned vector<span class=\"mojikumi-line-end\">，</span>可以加上 <code>s</code> 得到 signed vector<span class=\"mojikumi-line-end\">：</span><code>4'sb1101</code><span class=\"mojikumi-line-end\">。</span></p>\n<p><code>parameter</code> 用来设置带默认值的参数<span class=\"mojikumi-line-end\">：</span><code>parameter SIZE = 32, MSB = SIZE - 1, LSB = 0</code><span class=\"mojikumi-line-end\">，</span><code>parameter ESC = 7'h1b</code><span class=\"mojikumi\">。</span> <code>parameter</code> 一般用作常量<span class=\"mojikumi-line-end\">，</span>而在 <a href=\"#structural-model\">instance statement</a> 中可以被修改<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"vector-算术运算\" class=\"heading\"><a href=\"#vector-算术运算\" class=\"heading-anchor\" aria-label=\"章节： vector &#x26; 算术运算\" tabindex=\"-1\"></a><span>vector &#x26; 算术运算</span></h3>\n<p>多个 bit 可以组成一个 vector<span class=\"mojikumi-line-end\">，</span>net<span class=\"mojikumi-line-end\">、</span><code>reg</code><span class=\"mojikumi-line-end\">、</span><code>parameter</code> 都可以是 vector<span class=\"mojikumi-line-end\">。</span></p>\n<p>vector 的下标可以是左边<span class=\"mojikumi-line-start\">（</span>MSB<span class=\"mojikumi-line-end\">）</span>大<span class=\"mojikumi-line-start\">（</span><code>reg [7:0] byte1, byte2</code><span class=\"mojikumi-line-end\">）</span>也可以是右边<span class=\"mojikumi-line-start\">（</span>LSB<span class=\"mojikumi-line-end\">）</span>大<span class=\"mojikumi-line-start\">（</span><code>reg [1:16] bus</code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>起止的下标都可以指定<span class=\"mojikumi-line-end\">。</span>左边的下标对应字面量中左边的 bit<span class=\"mojikumi-line-end\">。</span><code>byte1[7]</code> 是 <code>byte1</code> 最左边的 bit<span class=\"mojikumi-line-end\">，</span><code>bus[16]</code> 是 <code>bus</code> 最右边的 bit<span class=\"mojikumi-line-end\">。</span><code>bus[1:8]</code> 和 <code>bus[9:16]</code> 是 <code>bus</code> 的左右两边<span class=\"mojikumi-line-end\">。</span>读取越界会读到 <code>x</code><span class=\"mojikumi-line-end\">，</span>写入会忽略越界的部分<span class=\"mojikumi-line-end\">。</span></p>\n<p><code>{}</code> 用来连接 vector<span class=\"mojikumi-line-end\">，</span>例如 <code>{2'b10, 2'b01}</code> 等于 <code>4'b1001</code><span class=\"mojikumi-line-end\">，</span><code>{2{byte1}, 2{byte2}}</code> 等于 <code>{byte1, byte1, byte2, byte2}</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>vector 可以按位进行位运算<span class=\"mojikumi-line-end\">，</span>在二元运算中短的会高位补零后进行运算<span class=\"mojikumi-line-end\">。</span></p>\n<p>二元位运算符也有一元的版本<span class=\"mojikumi-line-end\">，</span>表示将 vector 内所有 bit 运算在一起得到 1-bit 的结果<span class=\"mojikumi-line-end\">，</span>例如 <code>&#x26;byte1</code> 是 <code>1'b1</code> 表示 <code>byte1</code> 的所有 bit 都是 1<span class=\"mojikumi-line-end\">。</span></p>\n<p>vector 之间进行赋值时会截低位或高位补零<span class=\"mojikumi-line-end\">。</span></p>\n<p>vector 之间可以进行算术<span class=\"mojikumi-line-end\">：</span><code>+</code><span class=\"mojikumi-line-end\">、</span><code>-</code><span class=\"mojikumi-line-end\">、</span><code>*</code><span class=\"mojikumi-line-end\">、</span><code>/</code><span class=\"mojikumi-line-end\">、</span><code>%</code><span class=\"mojikumi-line-end\">、</span><code>**</code><span class=\"mojikumi-line-end\">、</span><code>&#x3C;&#x3C;</code><span class=\"mojikumi-line-end\">、</span><code>>></code><span class=\"mojikumi-line-end\">、</span><code>&#x3C;&#x3C;&#x3C;</code><span class=\"mojikumi-line-start\">（</span>算术左移<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span><code>>>></code><span class=\"mojikumi-line-start\">（</span>算术右移<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>算术的高位和低位基于左右而与下标大小无关<span class=\"mojikumi-line-end\">。</span></p>\n<p>除法和取模在某些情况下可能不 synthesizable<span class=\"mojikumi-line-end\">，</span>除非除数是 2 的次幂<span class=\"mojikumi-line-end\">。</span>synthesizable 时也可能会生成除法器的电路而非常昂贵<span class=\"mojikumi-line-end\">。</span></p>\n<p>逻辑移位得到 unsigned<span class=\"mojikumi-line-end\">，</span>算术移位保持原来的 signed/unsigned<span class=\"mojikumi-line-end\">，</span>算术右移高位补符号位<span class=\"mojikumi-line-end\">。</span>二元算术中只要有一个是 unsigned 就会将另一个转成 unsigned 再计算<span class=\"mojikumi-line-end\">。</span>signal 可以声明为 signed<span class=\"mojikumi-line-end\">：</span><code>reg signed [15:0] a</code><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"array\" class=\"heading\"><a href=\"#array\" class=\"heading-anchor\" aria-label=\"章节： array\" tabindex=\"-1\"></a><span>array</span></h3>\n<p>array 是相同类型的一列东西<span class=\"mojikumi-line-start\">（</span>一列 <code>reg</code><span class=\"mojikumi-line-end\">、</span><code>integer</code><span class=\"mojikumi-line-end\">、</span><code>wire</code> 等<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>array 也可以指定下标范围<span class=\"mojikumi-line-end\">，</span>而与 vector 相反<span class=\"mojikumi-line-end\">，</span>声明 array 时框放在右边<span class=\"mojikumi-line-end\">，</span>例如 <code>reg<wbr> [<wbr>7<wbr>:<wbr>0<wbr>] <wbr>byte1<wbr>, <wbr>mem1<wbr>[<wbr>0<wbr>:<wbr>255<wbr>]</code> 表示一个 8-bit <code>reg</code> 和一个由 256 个 8-bit <code>reg</code> 组成的 array<span class=\"mojikumi-line-end\">。</span></p>\n<p>array 可以嵌套为高维数组<span class=\"mojikumi-line-end\">，</span>而访问只能访问单个下标<span class=\"mojikumi-line-end\">，</span>不能像 vector 一样一下访问一个区间<span class=\"mojikumi-line-end\">。</span>总之除了能指定下标范围都和 C 的数组差不多<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"逻辑运算\" class=\"heading\"><a href=\"#逻辑运算\" class=\"heading-anchor\" aria-label=\"章节： 逻辑运算\" tabindex=\"-1\"></a><span>逻辑运算</span></h3>\n<p>含 <code>x</code> / <code>z</code> 或者全 0 的 vector<span class=\"mojikumi-line-start\">（</span>或者 <code>1'b0</code><span class=\"mojikumi-line-end\">）</span>是 false<span class=\"mojikumi-line-end\">，</span>不含 <code>x</code> / <code>z</code> 且含 1 的 vector<span class=\"mojikumi-line-start\">（</span>或者 <code>1'b1</code><span class=\"mojikumi-line-end\">）</span>是 true<span class=\"mojikumi-line-end\">。</span>false 的值是 <code>1'b0</code><span class=\"mojikumi-line-end\">，</span>true 的值是 <code>1'b1</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>逻辑运算符和比较运算符和 C 是一样的<span class=\"mojikumi-line-end\">。</span>比较时如果一侧是 unsigned 则会按 unsigned 比较<span class=\"mojikumi-line-end\">。</span>比较运算在电路中可能需要比较器<span class=\"mojikumi-line-start\">（</span>尤其是两侧都不是常量时<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>所以可能是昂贵的<span class=\"mojikumi-line-end\">。</span></p>\n<p>三目运算符 <code>?:</code> 和 C 是一样的<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 test bench 中<span class=\"mojikumi-line-end\">，</span>带 <code>x</code> / <code>z</code> 的值在比较时结果为 <code>x</code><span class=\"mojikumi-line-start\">（</span>用在条件判断时即为 false<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>可以使用 <code>===</code> / <code>!==</code> 来逐位比较<span class=\"mojikumi-line-start\">（</span><code>x === x</code>, <code>z === z</code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>但它们不能用在 synthesizable module 中<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"compiler-directives\" class=\"heading\"><a href=\"#compiler-directives\" class=\"heading-anchor\" aria-label=\"章节： compiler directives\" tabindex=\"-1\"></a><span>compiler directives</span></h3>\n<p><code>`include</code> 和 <code>`define</code><span class=\"mojikumi-line-end\">，</span>和 C 是一样的<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"model\" class=\"heading\"><a href=\"#model\" class=\"heading-anchor\" aria-label=\"章节： model\" tabindex=\"-1\"></a><span>model</span></h2>\n<h3 id=\"structural-model\" class=\"heading\"><a href=\"#structural-model\" class=\"heading-anchor\" aria-label=\"章节： structural model\" tabindex=\"-1\"></a><span>structural model</span></h3>\n<p>可以使用 <i>instance statement</i> 来写 structural model<span class=\"mojikumi-line-end\">，</span>说白了就是将其他 module 实例化并连线<span class=\"mojikumi-line-end\">。</span></p>\n<p>built-in gate 有<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li><code>and</code><span class=\"mojikumi-line-end\">、</span><code>nand</code><span class=\"mojikumi-line-end\">、</span><code>or</code><span class=\"mojikumi-line-end\">、</span><code>nor</code><span class=\"mojikumi-line-end\">、</span><code>xor</code><span class=\"mojikumi-line-end\">、</span><code>xnor</code><span class=\"mojikumi-line-end\">，</span>接受任意个输入</li>\n<li><code>buf</code><span class=\"mojikumi-line-end\">、</span><code>not</code><span class=\"mojikumi-line-end\">，</span>接受单个输入</li>\n<li><code>bufif0</code><span class=\"mojikumi-line-end\">、</span><code>bufif1</code><span class=\"mojikumi-line-end\">、</span><code>notif0</code><span class=\"mojikumi-line-end\">、</span><code>notif1</code><span class=\"mojikumi-line-end\">，</span>三态门<span class=\"mojikumi-line-end\">，</span>接受一个 data input 和一个 enable input<span class=\"mojikumi-line-start\">（</span>data input 在前<span class=\"mojikumi-line-end\">，</span>enable input 在后<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>if 表示 enable 的 active level</li>\n</ul>\n<p>使用 built-in gate 的例子<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>built-in gate 的 port 没有名字<span class=\"mojikumi-line-end\">，</span>只能通过顺序指定<span class=\"mojikumi-line-end\">，</span>output 在前<span class=\"mojikumi-line-end\">）</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-11\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-11--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> inhibit (</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  in,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  invin,</span></span>\n<span><span style=\"color: #C5E478\">    output</span><span style=\"color: #D6DEEB\"> out</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #C792EA\">  wire</span><span style=\"color: #D6DEEB\"> notinvin;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">not</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">U1</span><span style=\"color: #D6DEEB\"> (notinvin, invin);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">and</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">U2</span><span style=\"color: #D6DEEB\"> (out, in, notinvin);</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> inhibit (</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  in,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  invin,</span></span>\n<span><span style=\"color: #4876D6\">    output</span><span style=\"color: #403F53\"> out</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #994CC3\">  wire</span><span style=\"color: #403F53\"> notinvin;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">not</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">U1</span><span style=\"color: #403F53\"> (notinvin, invin);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">and</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">U2</span><span style=\"color: #403F53\"> (out, in, notinvin);</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>使用其他 module 的例子<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>可以指定每个 port 的名字从而不依赖于顺序<span class=\"mojikumi-line-end\">）</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-12\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-12--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> silly_xor (</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  in1,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> in2,</span></span>\n<span><span style=\"color: #C5E478\">    output</span><span style=\"color: #D6DEEB\"> out</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #C792EA\">  wire</span><span style=\"color: #D6DEEB\"> inh1, inh2, notinh2, notout;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">inhibit</span><span style=\"color: #D6DEEB\"> U1 (</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">out</span><span style=\"color: #D6DEEB\">(inh1),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">in</span><span style=\"color: #D6DEEB\">(in1),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">invin</span><span style=\"color: #D6DEEB\">(in2)</span></span>\n<span><span style=\"color: #D6DEEB\">  );</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">inhibit</span><span style=\"color: #D6DEEB\"> U2 (</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">out</span><span style=\"color: #D6DEEB\">(inh2),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">in</span><span style=\"color: #D6DEEB\">(in2),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">invin</span><span style=\"color: #D6DEEB\">(in1)</span></span>\n<span><span style=\"color: #D6DEEB\">  );</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">not</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">U3</span><span style=\"color: #D6DEEB\"> (notinh2, inh2);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">inhibit</span><span style=\"color: #D6DEEB\"> U4 (</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">out</span><span style=\"color: #D6DEEB\">(notout),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">in</span><span style=\"color: #D6DEEB\">(notinh2),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">invin</span><span style=\"color: #D6DEEB\">(inh1)</span></span>\n<span><span style=\"color: #D6DEEB\">  );</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">not</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">U5</span><span style=\"color: #D6DEEB\"> (out, notout);</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> silly_xor (</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  in1,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> in2,</span></span>\n<span><span style=\"color: #4876D6\">    output</span><span style=\"color: #403F53\"> out</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #994CC3\">  wire</span><span style=\"color: #403F53\"> inh1, inh2, notinh2, notout;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">inhibit</span><span style=\"color: #403F53\"> U1 (</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">out</span><span style=\"color: #403F53\">(inh1),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">in</span><span style=\"color: #403F53\">(in1),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">invin</span><span style=\"color: #403F53\">(in2)</span></span>\n<span><span style=\"color: #403F53\">  );</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">inhibit</span><span style=\"color: #403F53\"> U2 (</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">out</span><span style=\"color: #403F53\">(inh2),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">in</span><span style=\"color: #403F53\">(in2),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">invin</span><span style=\"color: #403F53\">(in1)</span></span>\n<span><span style=\"color: #403F53\">  );</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">not</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">U3</span><span style=\"color: #403F53\"> (notinh2, inh2);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">inhibit</span><span style=\"color: #403F53\"> U4 (</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">out</span><span style=\"color: #403F53\">(notout),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">in</span><span style=\"color: #403F53\">(notinh2),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">invin</span><span style=\"color: #403F53\">(inh1)</span></span>\n<span><span style=\"color: #403F53\">  );</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">not</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">U5</span><span style=\"color: #403F53\"> (out, notout);</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>修改 <code>parameter</code> 的例子<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-13\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-13--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> maj </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #D6DEEB\">(</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">WID</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span></span>\n<span><span style=\"color: #D6DEEB\">) (</span></span>\n<span><span style=\"color: #C5E478\">    output</span><span style=\"color: #D6DEEB\"> [</span><span style=\"color: #82AAFF\">WID</span><span style=\"color: #C792EA\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] out,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  [</span><span style=\"color: #82AAFF\">WID</span><span style=\"color: #C792EA\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] i0,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  [</span><span style=\"color: #82AAFF\">WID</span><span style=\"color: #C792EA\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] i1,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\">  [</span><span style=\"color: #82AAFF\">WID</span><span style=\"color: #C792EA\">-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] i2</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">assign</span><span style=\"color: #D6DEEB\"> out </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> i0 </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> i1 </span><span style=\"color: #C792EA\">|</span><span style=\"color: #D6DEEB\"> i0 </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> i2 </span><span style=\"color: #C792EA\">|</span><span style=\"color: #D6DEEB\"> i1 </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> i2;</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> maj </span><span style=\"color: #0C969B\">#</span><span style=\"color: #403F53\">(</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">WID</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span></span>\n<span><span style=\"color: #403F53\">) (</span></span>\n<span><span style=\"color: #4876D6\">    output</span><span style=\"color: #403F53\"> [</span><span style=\"color: #4876D6\">WID</span><span style=\"color: #994CC3\">-</span><span style=\"color: #AA0982\">1</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] out,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  [</span><span style=\"color: #4876D6\">WID</span><span style=\"color: #994CC3\">-</span><span style=\"color: #AA0982\">1</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] i0,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  [</span><span style=\"color: #4876D6\">WID</span><span style=\"color: #994CC3\">-</span><span style=\"color: #AA0982\">1</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] i1,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\">  [</span><span style=\"color: #4876D6\">WID</span><span style=\"color: #994CC3\">-</span><span style=\"color: #AA0982\">1</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] i2</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">assign</span><span style=\"color: #403F53\"> out </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> i0 </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> i1 </span><span style=\"color: #994CC3\">|</span><span style=\"color: #403F53\"> i0 </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> i2 </span><span style=\"color: #994CC3\">|</span><span style=\"color: #403F53\"> i1 </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> i2;</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>然后就可以 <code>maj #(8) U1 (.out(W), .i0(X), .i1(Y), .i2(Z))</code> 或者 <code>maj #(.WID(8)) U1 (.out(W), .i0(X), .i1(Y), .i2(Z))</code> 了<span class=\"mojikumi-line-end\">。</span></p>\n<p>不指定 <code>parameter</code> 时会使用其默认值<span class=\"mojikumi-line-end\">，</span><code>parameter</code> 只能在 instance statement 也就是 structural model 中被修改<span class=\"mojikumi-line-end\">，</span>在其他类型的 model 中只能使用默认值<span class=\"mojikumi-line-end\">。</span></p>\n<p>可以使用 <code>generate</code> block<span class=\"mojikumi-line-end\">，</span>作用类似于 <code>v-for</code><span class=\"mojikumi-line-end\">、</span><code>v-if</code><span class=\"mojikumi-line-end\">，</span>里面可以用 <code>for</code><span class=\"mojikumi-line-start\">（</span>循环变量需要是 <code>genvar</code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span><code>if</code><span class=\"mojikumi-line-end\">、</span><code>case</code><span class=\"mojikumi-line-start\">（</span>被判断的要是 parameter<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>例如<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-14\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-14--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">genvar</span><span style=\"color: #D6DEEB\"> i;</span></span>\n<span><span style=\"color: #C792EA\">generate</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">for</span><span style=\"color: #D6DEEB\"> (i </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">; i </span><span style=\"color: #C792EA\">&lt;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">; i </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> i </span><span style=\"color: #C792EA\">+</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">) </span><span style=\"color: #C792EA\">begin</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">half_adder</span><span style=\"color: #D6DEEB\"> u0 (a[i], b[i], sum[i], cout[i]);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">end</span></span>\n<span><span style=\"color: #C792EA\">endgenerate</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">genvar</span><span style=\"color: #403F53\"> i;</span></span>\n<span><span style=\"color: #994CC3\">generate</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">for</span><span style=\"color: #403F53\"> (i </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">; i </span><span style=\"color: #994CC3\">&lt;</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">; i </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> i </span><span style=\"color: #994CC3\">+</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">) </span><span style=\"color: #994CC3\">begin</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">half_adder</span><span style=\"color: #403F53\"> u0 (a[i], b[i], sum[i], cout[i]);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">end</span></span>\n<span><span style=\"color: #994CC3\">endgenerate</span></span></code></pre></div></section>\n<h3 id=\"dataflow-model\" class=\"heading\"><a href=\"#dataflow-model\" class=\"heading-anchor\" aria-label=\"章节： dataflow model\" tabindex=\"-1\"></a><span>dataflow model</span></h3>\n<p>可以使用 <i>continuous-assignment statement</i> 来写 dataflow model<span class=\"mojikumi-line-end\">，</span>也就是 <code>assign</code><span class=\"mojikumi-line-end\">，</span>例如<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-15\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-15--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> is_prime (</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> [</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #C5E478\">    output</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">F</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">assign</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #C792EA\">?</span><span style=\"color: #D6DEEB\"> (</span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> (</span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #C792EA\">^</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #D6DEEB\">])) </span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> (</span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #C792EA\">|</span><span style=\"color: #D6DEEB\"> (</span><span style=\"color: #C792EA\">~</span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #D6DEEB\">] </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">N</span><span style=\"color: #D6DEEB\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">]));</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> is_prime (</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> [</span><span style=\"color: #AA0982\">3</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] </span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #4876D6\">    output</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">F</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">assign</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">F</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">3</span><span style=\"color: #403F53\">] </span><span style=\"color: #994CC3\">?</span><span style=\"color: #403F53\"> (</span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> (</span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">] </span><span style=\"color: #994CC3\">^</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">2</span><span style=\"color: #403F53\">])) </span><span style=\"color: #994CC3\">:</span><span style=\"color: #403F53\"> (</span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] </span><span style=\"color: #994CC3\">|</span><span style=\"color: #403F53\"> (</span><span style=\"color: #994CC3\">~</span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">2</span><span style=\"color: #403F53\">] </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">N</span><span style=\"color: #403F53\">[</span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">]));</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<h3 id=\"behavioral-model\" class=\"heading\"><a href=\"#behavioral-model\" class=\"heading-anchor\" aria-label=\"章节： behavioral model\" tabindex=\"-1\"></a><span>behavioral model</span></h3>\n<h4 id=\"always-begin-end-block\" class=\"heading\"><a href=\"#always-begin-end-block\" class=\"heading-anchor\" aria-label=\"章节： always &#x26; begin-end block\" tabindex=\"-1\"></a><span><code>always</code> &#x26; <code>begin</code>-<code>end</code> block</span></h4>\n<p><code>always</code> statement 用来执行一句 procedural statement<span class=\"mojikumi-line-end\">，</span>begin-end block 用来将若干 procedural statement 合成一句<span class=\"mojikumi-line-end\">。</span>begin-end block 里的语句是顺序执行的<span class=\"mojikumi-line-end\">，</span>而 <code>always</code> 是和 module 中的其他语句一起并行执行的<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 SystemVerilog 中<span class=\"mojikumi-line-end\">，</span>推荐使用 <code>always_comb</code><span class=\"mojikumi-line-end\">、</span><code>always_ff</code><span class=\"mojikumi-line-end\">、</span><code>always_latch</code> 来代替 <code>always</code><span class=\"mojikumi-line-end\">，</span>分别用于组合逻辑<span class=\"mojikumi-line-end\">、</span>ff 和 latch<span class=\"mojikumi-line-start\">（</span>但一般不会特意去写 latch<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span><code>always_comb</code> 会检查条件判断语句没有漏情况<span class=\"mojikumi-line-end\">，</span>避免意外生成 latch<span class=\"mojikumi-line-end\">。</span><code>always_ff</code> 需要加形如 <code>always_ff @(posedge clk)</code> 的 sensitivity list<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果 begin-end 里有 local <code>logic</code> 则需要给 block 起名字<span class=\"mojikumi-line-start\">（</span>在 <code>begin</code> 的后面写上 <code>: name</code><span class=\"mojikumi-line-end\">）</span>才能在 simulation 之类的地方看到可读的变量名<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h5 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h5><ile-root id=\"ile-16\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-16--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> alarm_circuit (</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> panic,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> enable,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> exiting,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> window,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> door,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> garage,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">output</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">logic</span><span style=\"color: #D6DEEB\"> alarm</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">always_comb</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">begin</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">:</span><span style=\"color: #D6DEEB\"> blk</span></span>\n<span><span style=\"color: #C792EA\">    logic</span><span style=\"color: #D6DEEB\"> secure;</span></span>\n<span><span style=\"color: #D6DEEB\">    secure </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> window </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> door </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> garage;</span></span>\n<span><span style=\"color: #D6DEEB\">    alarm  </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> panic </span><span style=\"color: #C792EA\">|</span><span style=\"color: #D6DEEB\"> (enable </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">~</span><span style=\"color: #D6DEEB\">exiting </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">~</span><span style=\"color: #D6DEEB\">secure);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">end</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> alarm_circuit (</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> panic,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> enable,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> exiting,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> window,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> door,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> garage,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">output</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">logic</span><span style=\"color: #403F53\"> alarm</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">always_comb</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">begin</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">:</span><span style=\"color: #403F53\"> blk</span></span>\n<span><span style=\"color: #994CC3\">    logic</span><span style=\"color: #403F53\"> secure;</span></span>\n<span><span style=\"color: #403F53\">    secure </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> window </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> door </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> garage;</span></span>\n<span><span style=\"color: #403F53\">    alarm  </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> panic </span><span style=\"color: #994CC3\">|</span><span style=\"color: #403F53\"> (enable </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">~</span><span style=\"color: #403F53\">exiting </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">~</span><span style=\"color: #403F53\">secure);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">end</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<h4 id=\"赋值\" class=\"heading\"><a href=\"#赋值\" class=\"heading-anchor\" aria-label=\"章节： 赋值\" tabindex=\"-1\"></a><span>赋值</span></h4>\n<p>procedural statement 中有两种赋值<span class=\"mojikumi-line-end\">，</span>blocking 的 <code>=</code> 和 non-blocking 的 <code>&#x3C;=</code><span class=\"mojikumi-line-end\">。</span><code>=</code> 表示立即赋值<span class=\"mojikumi-line-end\">，</span>而 <code>&#x3C;=</code> 会将赋值推迟至整个 <code>always</code> 的结尾<span class=\"mojikumi-line-start\">（</span>右侧表达式的计算是立刻进行的<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>从而在 <code>always</code> 剩下的部分中左侧变量的值依然是赋值前的<span class=\"mojikumi-line-end\">。</span></p>\n<p>赋值最好遵循下面的规则<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>在组合逻辑中<span class=\"mojikumi-line-end\">，</span>只使用 <code>=</code></li>\n<li>在时序逻辑中<span class=\"mojikumi-line-end\">，</span>只使用 <code>&#x3C;=</code></li>\n<li>不要在同一个 block 中混合使用两种赋值</li>\n<li>不要在不同的 <code>always</code> 中对同一个变量赋值</li>\n</ul>\n<h4 id=\"if-else-语句\" class=\"heading\"><a href=\"#if-else-语句\" class=\"heading-anchor\" aria-label=\"章节： if-else 语句\" tabindex=\"-1\"></a><span><code>if</code>-<code>else</code> 语句</span></h4>\n<p>和 C 的语法是一样的<span class=\"mojikumi-line-end\">，</span>唯一的不同就是大括号变成 <code>begin</code> - <code>end</code><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"case-语句\" class=\"heading\"><a href=\"#case-语句\" class=\"heading-anchor\" aria-label=\"章节： case 语句\" tabindex=\"-1\"></a><span><code>case</code> 语句</span></h4>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h5 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h5><ile-root id=\"ile-17\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-17--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> prime (</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> [</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] n,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">output</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">logic</span><span style=\"color: #D6DEEB\"> f</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">always_comb</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">case</span><span style=\"color: #D6DEEB\"> (n)</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #F78C6C\">4&#39;d2</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4&#39;d3</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4&#39;d5</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4&#39;d7</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4&#39;d11</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #F78C6C\">4&#39;d13</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\"> f </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #C792EA\">default:</span><span style=\"color: #D6DEEB\"> f </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C792EA\">endcase</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> prime (</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> [</span><span style=\"color: #AA0982\">3</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] n,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">output</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">logic</span><span style=\"color: #403F53\"> f</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">always_comb</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">case</span><span style=\"color: #403F53\"> (n)</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #AA0982\">4&#39;d2</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4&#39;d3</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4&#39;d5</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4&#39;d7</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4&#39;d11</span><span style=\"color: #403F53\">, </span><span style=\"color: #AA0982\">4&#39;d13</span><span style=\"color: #994CC3\">:</span><span style=\"color: #403F53\"> f </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #994CC3\">default:</span><span style=\"color: #403F53\"> f </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #994CC3\">endcase</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>虽然并非必须<span class=\"mojikumi-line-end\">，</span>但一般来说<span class=\"mojikumi-line-end\">，</span>选项应当是不重复且指定了宽度的字面量<span class=\"mojikumi-line-end\">。</span></p>\n<p>即使选项覆盖了所有可能<span class=\"mojikumi-line-end\">，</span>加上一个 <code>default</code> 可以在 simulation 中正确处理带 <code>x</code> 的值<span class=\"mojikumi-line-end\">。</span></p>\n<p><code>casez</code> 是允许使用通配符 <code>?</code> 的匹配<span class=\"mojikumi-line-end\">，</span>例如选项可以是 <code>4'b10??</code><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"循环语句\" class=\"heading\"><a href=\"#循环语句\" class=\"heading-anchor\" aria-label=\"章节： 循环语句\" tabindex=\"-1\"></a><span>循环语句</span></h4>\n<p>有很多种循环语句<span class=\"mojikumi-line-end\">，</span>但推荐使用的只有一种<span class=\"mojikumi-line-end\">，</span>就是 <code>for (integer i = 0; i &#x3C;= 7; i = i + 1)</code><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"function-和-task\" class=\"heading\"><a href=\"#function-和-task\" class=\"heading-anchor\" aria-label=\"章节： function 和 task\" tabindex=\"-1\"></a><span>function 和 task</span></h4>\n<p>function 和 task 是一段可复用的 procedural statement<span class=\"mojikumi-line-end\">，</span>写起来和 module 差不多<span class=\"mojikumi-line-end\">，</span>需要定义在 module 内部<span class=\"mojikumi-line-start\">（</span>可以通过 <code>`include</code> 来在不同 module 中复用<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>function 有单个返回值<span class=\"mojikumi-line-start\">（</span>可以在函数名的前面给返回值设置类型<span class=\"mojikumi-line-end\">，</span>也可以省略<span class=\"mojikumi-line-end\">，</span>默认类型是 1-bit<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>但不能有 <code>output</code> / <code>inout</code> port<span class=\"mojikumi-line-end\">，</span>而是以 function 自身的名字作为返回值的名字<span class=\"mojikumi-line-end\">，</span>代码中需要对这个函数名进行赋值<span class=\"mojikumi-line-end\">。</span>function 中不能设置延时<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h5 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h5><ile-root id=\"ile-18\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-18--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> sillier_xor (</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> in1,</span></span>\n<span><span style=\"color: #C5E478\">    input</span><span style=\"color: #D6DEEB\"> in2,</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">output</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">logic</span><span style=\"color: #D6DEEB\"> out</span></span>\n<span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">function</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">inhibit</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\"> in,</span><span style=\"color: #C5E478\"> input</span><span style=\"color: #D6DEEB\"> inv_in);</span></span>\n<span><span style=\"color: #D6DEEB\">    inhibit </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> in </span><span style=\"color: #C792EA\">&amp;</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">~</span><span style=\"color: #D6DEEB\">inv_in;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">endfunction</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">always_comb</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">begin</span></span>\n<span><span style=\"color: #C792EA\">    logic</span><span style=\"color: #D6DEEB\"> inh1, inh2;</span></span>\n<span><span style=\"color: #D6DEEB\">    inh1 </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">inhibit</span><span style=\"color: #D6DEEB\">(in1, in2);</span></span>\n<span><span style=\"color: #D6DEEB\">    inh2 </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C5E478\">inhibit</span><span style=\"color: #D6DEEB\">(in2, in1);</span></span>\n<span><span style=\"color: #D6DEEB\">    out  </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">~</span><span style=\"color: #C5E478\">inhibit</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C792EA\">~</span><span style=\"color: #D6DEEB\">inh2, inh1);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">end</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> sillier_xor (</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> in1,</span></span>\n<span><span style=\"color: #4876D6\">    input</span><span style=\"color: #403F53\"> in2,</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">output</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">logic</span><span style=\"color: #403F53\"> out</span></span>\n<span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">function</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">inhibit</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\"> in,</span><span style=\"color: #4876D6\"> input</span><span style=\"color: #403F53\"> inv_in);</span></span>\n<span><span style=\"color: #403F53\">    inhibit </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> in </span><span style=\"color: #994CC3\">&amp;</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">~</span><span style=\"color: #403F53\">inv_in;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">endfunction</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">always_comb</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">begin</span></span>\n<span><span style=\"color: #994CC3\">    logic</span><span style=\"color: #403F53\"> inh1, inh2;</span></span>\n<span><span style=\"color: #403F53\">    inh1 </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">inhibit</span><span style=\"color: #403F53\">(in1, in2);</span></span>\n<span><span style=\"color: #403F53\">    inh2 </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">inhibit</span><span style=\"color: #403F53\">(in2, in1);</span></span>\n<span><span style=\"color: #403F53\">    out  </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">~</span><span style=\"color: #4876D6\">inhibit</span><span style=\"color: #403F53\">(</span><span style=\"color: #994CC3\">~</span><span style=\"color: #403F53\">inh2, inh1);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">end</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>task 没有返回值<span class=\"mojikumi-line-end\">，</span>但可以有 <code>output</code> / <code>inout</code> port<span class=\"mojikumi\">，</span><wbr><span class=\"mojikumi-line-start\">（</span>用于 simulation 时<span class=\"mojikumi-line-end\">）</span>可以设置延时<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h5 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h5><ile-root id=\"ile-19\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-19--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> lock_sim;</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  ...</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">task</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    clk </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    clk </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  ...</span></span>\n<span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> lock_sim;</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  ...</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">task</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    clk </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    clk </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  ...</span></span>\n<span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>有一些内置的 task 和 function<span class=\"mojikumi-line-end\">，</span>用于 simulation<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li><code>$write</code><span class=\"mojikumi-line-end\">：</span>和 <code>printf</code> 差不多<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$display</code><span class=\"mojikumi-line-end\">：</span>在 <code>$write</code> 的基础上多个换行<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$monitor</code><span class=\"mojikumi-line-end\">：</span>每次信号发生改变时都输出<span class=\"mojikumi-line-end\">，</span>后指定的 monitor 会覆盖之前的<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$<wbr>monitoroff</code> / <code>$monitoron</code></li>\n<li><code>$fflush</code><span class=\"mojikumi-line-end\">：</span>flush 输出<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$time</code><span class=\"mojikumi-line-end\">：</span>输出当前的 simulated time<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$random</code><span class=\"mojikumi-line-end\">：</span>返回一个随机数<span class=\"mojikumi-line-end\">，</span>接受种子作为参数<span class=\"mojikumi-line-end\">，</span>不指定种子的话初次运行的种子是固定的<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>$stop</code><span class=\"mojikumi-line-end\">：</span>停止模拟<span class=\"mojikumi-line-end\">，</span>如果传参 <code>(1)</code> 则会显示当前的 simulated time 和代码位置<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h2 id=\"timescale-指定延迟\" class=\"heading\"><a href=\"#timescale-指定延迟\" class=\"heading-anchor\" aria-label=\"章节： timescale &#x26; 指定延迟\" tabindex=\"-1\"></a><span>timescale &#x26; 指定延迟</span></h2>\n<p><code>`timescale 1ns / 10ps</code> 指定以 1ns 作为延时的单位<span class=\"mojikumi-line-end\">，</span>以 10ps 作为模拟的精度<span class=\"mojikumi-line-end\">。</span></p>\n<p><code>assign</code> 时可以指定延迟<span class=\"mojikumi-line-end\">：</span><code>assign #5 a = b &#x26; c;</code></p>\n<p>procedural model 中可以用 delay statement (<code>#500;</code>) 来暂停<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"simulation-test-bench\" class=\"heading\"><a href=\"#simulation-test-bench\" class=\"heading-anchor\" aria-label=\"章节： simulation (test bench)\" tabindex=\"-1\"></a><span>simulation (test bench)</span></h2>\n<p>语法上和 synthesizable module 没有区别<span class=\"mojikumi-line-start\">（</span>只不过有个 <code>initial</code><span class=\"mojikumi-line-end\">，</span>就是只执行一遍的 <code>always</code><span class=\"mojikumi-line-end\">，</span>一般不用于 synthesizable module<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>写起来一般是一个没有输入输出<span class=\"mojikumi-line-end\">、</span>有一个被测试 module 的实例<span class=\"mojikumi-line-end\">、</span>有一个 <code>initial</code> block 的 module<span class=\"mojikumi-line-end\">，</span>看看例子就行<span class=\"mojikumi-line-end\">。</span></p>\n<p>懒得改 DDPP 上的代码了<span class=\"mojikumi-line-end\">，</span>直接复制一份数字逻辑实验的代码<span class=\"mojikumi-line-start\">（</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h3><ile-root id=\"ile-20\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-20--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #82AAFF\">`timescale</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1ns</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">/</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1ps</span></span>\n<span></span>\n<span><span style=\"color: #C792EA\">module</span><span style=\"color: #D6DEEB\"> lock_sim;</span></span>\n<span><span style=\"color: #C792EA\">  logic</span><span style=\"color: #D6DEEB\"> clk </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #C792EA\">  logic</span><span style=\"color: #D6DEEB\"> rst </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #C792EA\">  logic</span><span style=\"color: #D6DEEB\"> mode </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #C792EA\">  logic</span><span style=\"color: #D6DEEB\"> [</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] digit_input </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #C792EA\">  wire</span><span style=\"color: #D6DEEB\"> unlocked, incorrect, alert;</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">lock</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #D6DEEB\">(</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">ADMIN_PASSWORD</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;ha73f</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">  ) lock_inst (</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">clk</span><span style=\"color: #D6DEEB\">(clk),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">rst</span><span style=\"color: #D6DEEB\">(rst),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">mode</span><span style=\"color: #D6DEEB\">(mode),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">digit_input</span><span style=\"color: #D6DEEB\">(digit_input),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">unlocked</span><span style=\"color: #D6DEEB\">(unlocked),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">incorrect</span><span style=\"color: #D6DEEB\">(incorrect),</span></span>\n<span><span style=\"color: #D6DEEB\">      .</span><span style=\"color: #C5E478\">alert</span><span style=\"color: #D6DEEB\">(alert)</span></span>\n<span><span style=\"color: #D6DEEB\">  );</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">task</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    clk </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    clk </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">task</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">reset</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    rst </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    rst </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #7FDBCA\">#</span><span style=\"color: #F78C6C\">500</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">task</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #82AAFF\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">input</span><span style=\"color: #D6DEEB\"> [</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">] password);</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">reset</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    digit_input </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> password[</span><span style=\"color: #F78C6C\">15</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">12</span><span style=\"color: #D6DEEB\">];</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    digit_input </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> password[</span><span style=\"color: #F78C6C\">11</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">8</span><span style=\"color: #D6DEEB\">];</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    digit_input </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> password[</span><span style=\"color: #F78C6C\">7</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">4</span><span style=\"color: #D6DEEB\">];</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">    digit_input </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> password[</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #C792EA\">:</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">];</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">clock</span><span style=\"color: #D6DEEB\">();</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">initial</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">begin</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;ha73f</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// admin password</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// incorrect</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    mode </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// set password</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    mode </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// incorrect</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// correct</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;ha73f</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// admin password</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #637777\">// incorrect three times</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// locked</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    mode </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// cannot set password</span></span>\n<span></span>\n<span><span style=\"color: #D6DEEB\">    mode </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// locked</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// incorrect</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;ha73f</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// admin password</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h1234</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// correct</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #C5E478\">input_password</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #F78C6C\">16&#39;h4321</span><span style=\"color: #D6DEEB\">);  </span><span style=\"color: #637777\">// incorrect</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">end</span></span>\n<span><span style=\"color: #C792EA\">endmodule</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #4876D6\">`timescale</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1ns</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">/</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1ps</span></span>\n<span></span>\n<span><span style=\"color: #994CC3\">module</span><span style=\"color: #403F53\"> lock_sim;</span></span>\n<span><span style=\"color: #994CC3\">  logic</span><span style=\"color: #403F53\"> clk </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #994CC3\">  logic</span><span style=\"color: #403F53\"> rst </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #994CC3\">  logic</span><span style=\"color: #403F53\"> mode </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #994CC3\">  logic</span><span style=\"color: #403F53\"> [</span><span style=\"color: #AA0982\">3</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] digit_input </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #994CC3\">  wire</span><span style=\"color: #403F53\"> unlocked, incorrect, alert;</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">lock</span><span style=\"color: #403F53\"> </span><span style=\"color: #0C969B\">#</span><span style=\"color: #403F53\">(</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">ADMIN_PASSWORD</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;ha73f</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">  ) lock_inst (</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">clk</span><span style=\"color: #403F53\">(clk),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">rst</span><span style=\"color: #403F53\">(rst),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">mode</span><span style=\"color: #403F53\">(mode),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">digit_input</span><span style=\"color: #403F53\">(digit_input),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">unlocked</span><span style=\"color: #403F53\">(unlocked),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">incorrect</span><span style=\"color: #403F53\">(incorrect),</span></span>\n<span><span style=\"color: #403F53\">      .</span><span style=\"color: #4876D6\">alert</span><span style=\"color: #403F53\">(alert)</span></span>\n<span><span style=\"color: #403F53\">  );</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">task</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    clk </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    clk </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">task</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">reset</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    rst </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    rst </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">#</span><span style=\"color: #AA0982\">500</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">task</span><span style=\"color: #403F53\"> </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">input</span><span style=\"color: #403F53\"> [</span><span style=\"color: #AA0982\">15</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">] password);</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">reset</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    digit_input </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> password[</span><span style=\"color: #AA0982\">15</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">12</span><span style=\"color: #403F53\">];</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    digit_input </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> password[</span><span style=\"color: #AA0982\">11</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">8</span><span style=\"color: #403F53\">];</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    digit_input </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> password[</span><span style=\"color: #AA0982\">7</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">4</span><span style=\"color: #403F53\">];</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">    digit_input </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> password[</span><span style=\"color: #AA0982\">3</span><span style=\"color: #994CC3\">:</span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">];</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">clock</span><span style=\"color: #403F53\">();</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">endtask</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">initial</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">begin</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;ha73f</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// admin password</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// incorrect</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    mode </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// set password</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    mode </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// incorrect</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// correct</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;ha73f</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// admin password</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #939DBB\">// incorrect three times</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// locked</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    mode </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// cannot set password</span></span>\n<span></span>\n<span><span style=\"color: #403F53\">    mode </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// locked</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// incorrect</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;ha73f</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// admin password</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h1234</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// correct</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">input_password</span><span style=\"color: #403F53\">(</span><span style=\"color: #AA0982\">16&#39;h4321</span><span style=\"color: #403F53\">);  </span><span style=\"color: #939DBB\">// incorrect</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">end</span></span>\n<span><span style=\"color: #994CC3\">endmodule</span></span></code></pre></div></section>\n<p>通过使用 <code>$display</code><span class=\"mojikumi-line-end\">，</span>可以更直观地输出结果<span class=\"mojikumi-line-end\">，</span>从而不需要对着波形图看<span class=\"mojikumi-line-end\">；</span>或者自动检查结果是否正确<span class=\"mojikumi-line-end\">，</span>在出错时输出<span class=\"mojikumi-line-end\">。</span></p>\n<p>有时可以通过文件读写来更方便地编写测试数据<span class=\"mojikumi-line-end\">、</span>检查输出结果<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"有关-synthesize-的一些注意事项\" class=\"heading\"><a href=\"#有关-synthesize-的一些注意事项\" class=\"heading-anchor\" aria-label=\"章节： 有关 synthesize 的一些注意事项\" tabindex=\"-1\"></a><span>有关 synthesize 的一些注意事项</span></h2>\n<ul>\n<li>长串的 <code>if</code><span class=\"mojikumi-line-end\">、</span><code>else if</code><span class=\"mojikumi-line-end\">、</span><code>else if</code>……可能导致电路也有一长串<span class=\"mojikumi-line-end\">，</span>使用 <code>case</code> 可能会更优<span class=\"mojikumi-line-end\">。</span></li>\n<li>组合逻辑中的循环可能会创建同一套电路的多个副本<span class=\"mojikumi-line-end\">，</span>如果要用同一个电路<span class=\"mojikumi-line-end\">，</span>可能需要改写成时序逻辑<span class=\"mojikumi-line-end\">。</span></li>\n<li>根据具体使用的 tool<span class=\"mojikumi-line-end\">，</span>有些 language feature 是不能被 synthesize 的<span class=\"mojikumi-line-end\">。</span></li>\n<li>为了更好的 synthesize 结果而需要把代码写成什么样<span class=\"mojikumi-line-end\">，</span>需要依具体使用的 tool 而定<span class=\"mojikumi-line-end\">。</span></li>\n</ul>",
            "url": "https://ouuan.moe/post/2023/04/ddpp-5",
            "title": "DDPP 第五章学习笔记",
            "summary": "<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第五章 <span class=\"mojikumi\">“</span>Verilog Hardware Description Language<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>也就是初学 (System)Verilog 的笔记<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-04-29T16:24:36.000Z",
            "tags": [
                "ddpp",
                "学习笔记"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/03/thuse",
            "content_html": "\n\n\n<p>很好<span class=\"mojikumi-line-end\">，</span>你已经学会了 Vue<span class=\"mojikumi-line-end\">、</span>Rust<span class=\"mojikumi-line-end\">、</span>Actix<span class=\"mojikumi-line-end\">、</span>GitHub Actions<span class=\"mojikumi-line-end\">、</span>pnpm<span class=\"mojikumi-line-end\">、</span>Vitest<span class=\"mojikumi-line-end\">、</span>Caddy</p>\n<p>现在你可以使用 React<span class=\"mojikumi-line-end\">、</span>Python<span class=\"mojikumi-line-end\">、</span>Django<span class=\"mojikumi-line-end\">、</span>GitLab CI<span class=\"mojikumi-line-end\">、</span>yarn<span class=\"mojikumi-line-end\">、</span>Jest<span class=\"mojikumi-line-end\">、</span>Nginx 来完成软工作业了<span class=\"mojikumi-line-start\">（</span></p>\n\n<p><picture><source type=\"image/webp\" srcset=\"/assets/tech-stack.2c5179c8.webp\"><img srcset=\"/assets/tech-stack.4ab32981.jpeg\" loading=\"lazy\" src=\"/assets/tech-stack.4ab32981.jpeg\" width=\"500\" height=\"626\" alt=\"技术栈交集为空的 meme\"></picture></p>\n<p><span class=\"mojikumi-line-start\">（</span>其实这里面比较有问题的就只有 React<span class=\"mojikumi-line-end\">，</span>其他都还好<span class=\"mojikumi-line-end\">，</span><s>只是数量多凑一点 meme 效果更好</s><span class=\"mojikumi-line-end\">）</span></p>\n<h2 id=\"小作业\" class=\"heading\"><a href=\"#小作业\" class=\"heading-anchor\" aria-label=\"章节： 小作业\" tabindex=\"-1\"></a><span>小作业</span></h2>\n<h3 id=\"django-后端小作业\" class=\"heading\"><a href=\"#django-后端小作业\" class=\"heading-anchor\" aria-label=\"章节： Django 后端小作业\" tabindex=\"-1\"></a><span>Django 后端小作业</span></h3>\n<p>每一处需要修改的代码都列出来了<span class=\"mojikumi-line-end\">，</span>还有详细的注释告诉你要干什么<span class=\"mojikumi-line-end\">。</span>Django 完全没学<span class=\"mojikumi-line-end\">，</span>就根据提示查了一处文档<span class=\"mojikumi-line-end\">，</span>代码的整体逻辑也没搞清楚<span class=\"mojikumi-line-end\">。</span></p>\n<p>感觉写完之后理解了 ChatGPT<span class=\"mojikumi-line-end\">，</span>看着注释和示例补全代码根本就不需要学会如何写代码嘛<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"学-react\" class=\"heading\"><a href=\"#学-react\" class=\"heading-anchor\" aria-label=\"章节： 学 React\" tabindex=\"-1\"></a><span>学 React</span></h3>\n<p>小作业应该不需要怎么学 React<span class=\"mojikumi-line-end\">，</span>但还是把 <a href=\"https://beta.reactjs.org/learn\">Learn React (Beta)</a> 完整过了一遍<span class=\"mojikumi-line-end\">。</span></p>\n<p>之前都在 Twitter 上云 React<span class=\"mojikumi-line-end\">，</span>学了之后终于有喜欢 Vue 的自信了<span class=\"mojikumi-line-start\">（</span><s>所以说 X 自信就是要允许 Y 才能有<span class=\"mojikumi-line-end\">，</span>以 X 自信为名打压 Y 到底是什么操作</s></p>\n<a id=\"vue-用户初学-react-感到不适的一些点\" name=\"vue-用户初学-react-感到不适的一些点\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>Vue 用户初学 React 感到不适的一些点</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><ul>\n<li>我希望 HTML 放在统一<span class=\"mojikumi-line-end\">、</span>独立的位置<span class=\"mojikumi-line-end\">，</span>不分散在多处<span class=\"mojikumi-line-end\">，</span>不和 JS 代码在结构上混在一起<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>v-if</code> 要用 if-else / <code>?:</code> / <code>&#x26;&#x26;</code> 实现<span class=\"mojikumi-line-end\">：</span>我不希望在 JSX 外部写 if-else<span class=\"mojikumi-line-end\">；</span>表达式的括号可能引入额外的缩进<span class=\"mojikumi-line-end\">；</span><code>?:</code> 实现多级 else if 可能看不清<span class=\"mojikumi-line-end\">；</span>修改代码时不像 <code>v-if</code> 只需要添加一行不影响其他行<span class=\"mojikumi-line-end\">。</span>总之就是感觉很丑<span class=\"mojikumi-line-start\">（</span></li>\n<li><code>v-for</code> 要自己使用 JS 计算得到<span class=\"mojikumi-line-end\">。</span></li>\n<li>不支持 named slot<span class=\"mojikumi-line-start\">（</span>可以用 prop 替代但感觉不是很优雅<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n<li>event handler 不能 <code>count += 1</code> 必须 <code>() => count += 1</code><span class=\"mojikumi-line-end\">。</span></li>\n<li>虽然只是个语法糖<span class=\"mojikumi-line-end\">，</span>但似乎没有 <code>v-model</code> 等价物<span class=\"mojikumi-line-end\">。</span></li>\n<li>没有 event modifier (<code>@<wbr>click<wbr>.<wbr>stop</code>)<span class=\"mojikumi-line-end\">，</span>需要手动 <code>e<wbr>.<wbr>stopPropagation<wbr>()</code><span class=\"mojikumi-line-end\">。</span></li>\n<li>需要用 setter function 来修改 state<span class=\"mojikumi-line-end\">，</span><code>useState</code> 返回两个变量<span class=\"mojikumi-line-end\">。</span></li>\n<li>state 是 snapshot<span class=\"mojikumi-line-end\">，</span>反直觉<span class=\"mojikumi-line-end\">。</span>教程里说这样可以避免一些 timing mistake<span class=\"mojikumi-line-end\">，</span>但我感觉在 Vue 里一般只要传值而不是 ref 就行？确实有一定意义但我还是更希望符合直觉<span class=\"mojikumi-line-end\">。</span></li>\n<li>修改 object / array state 很麻烦<span class=\"mojikumi-line-end\">，</span>使用 Immer 的话似乎就和 Vue 差不多了<span class=\"mojikumi-line-end\">。</span></li>\n<li>state 绑定在树的每个位置上<span class=\"mojikumi-line-end\">，</span>而非存在 component 里<span class=\"mojikumi-line-end\">。</span></li>\n<li><code>useMemo</code> 需要手动指定依赖<span class=\"mojikumi-line-end\">，</span><code>computed</code> 不需要<span class=\"mojikumi-line-end\">。</span></li>\n</ul><p>本来想把 <code>useEffect</code> 也列出来<span class=\"mojikumi-line-end\">，</span>但 React 的 <a href=\"https://beta.reactjs.org/learn/lifecycle-of-reactive-effects#thinking-from-the-effects-perspective\">这种设计思路</a> 似乎也有一定道理<span class=\"mojikumi-line-end\">。</span></p><p>但当我写出 <code>useEffect<wbr>(() => () => <wbr>clearInterval<wbr>(<wbr>timerRef<wbr>.<wbr>current<wbr>), [])</code> 的时候我还是不明白了<span class=\"mojikumi-line-end\">，</span>这也能<span class=\"mojikumi-line-start\">“</span>从 Effect 的角度思考<span class=\"mojikumi-line-end\">”</span>吗<span class=\"mojikumi-line-end\">，</span>给个 <code>onUnmounted</code> 不好吗<span class=\"mojikumi-line-end\">。</span></p></div></details></aside>\n<a id=\"高情商与低情商\" name=\"高情商与低情商\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>高情商与低情商</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>我在群里问了个问题<span class=\"mojikumi-line-end\">，</span>结果助教全都跑来加我好友<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p><p>那我也不客气了<span class=\"mojikumi-line-end\">，</span>上来就问为什么换成 React<span class=\"mojikumi-line-end\">，</span>bksw<span class=\"mojikumi-line-start\">（</span></p><p><picture><source type=\"image/webp\" srcset=\"/assets/eq.9ae66d49.webp\"><img srcset=\"/assets/eq.a2547205.png\" loading=\"lazy\" src=\"/assets/eq.a2547205.png\" width=\"383\" height=\"850\" alt=\"和助教的消息记录\"></picture></p><p><s>不难看出<span class=\"mojikumi-line-end\">，</span>这里面情商最低的是我</s></p></div></details></aside>\n<h3 id=\"react-next-js-前端小作业\" class=\"heading\"><a href=\"#react-next-js-前端小作业\" class=\"heading-anchor\" aria-label=\"章节： React (Next.js) 前端小作业\" tabindex=\"-1\"></a><span>React (Next.js) 前端小作业</span></h3>\n<p>上来就看到 ESLint 是 4 空格缩进<span class=\"mojikumi-line-end\">、</span>优先双引号<span class=\"mojikumi-line-end\">，</span>这能忍吗<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">。</span>特意去确认了一下<span class=\"mojikumi-line-end\">，</span>除了前端助教参与的几个项目<span class=\"mojikumi-line-end\">，</span>随便找一个项目都是 2 空格缩进<span class=\"mojikumi-line-end\">、</span>优先单引号<span class=\"mojikumi-line-start\">（</span></p>\n<p>再一写代码<span class=\"mojikumi-line-end\">，</span>发现不对劲<span class=\"mojikumi-line-end\">，</span>这个 ESLint 有啥 rule 啊<span class=\"mojikumi-line-end\">，</span>怎么怎么写都没 lint error<span class=\"mojikumi-line-end\">，</span>给我整不会了<span class=\"mojikumi-line-start\">（</span></p>\n<p>于是直接上了 <a href=\"https://github.com/ouuan/eslint-config\"><code>@<wbr>ouuan<wbr>/<wbr>eslint<wbr>-<wbr>config<wbr>-<wbr>ts</code></a><span class=\"mojikumi-line-end\">，</span>理论上来说我应该整一个给 tsx 用的 config<span class=\"mojikumi-line-end\">，</span>但 ts 的 config 配合上小作业模板原有的应该也凑合着能用吧<span class=\"mojikumi-line-start\">（</span></p>\n<p>写完后的感觉和 Django 小作业差不多<span class=\"mojikumi-line-end\">，</span>React 都白学了<span class=\"mojikumi-line-end\">，</span>啥都不会就能写完<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>这是你前端小作业的最后一个 Step 了<span class=\"mojikumi-line-end\">，</span>如果你已经完成了<span class=\"mojikumi-line-end\">，</span>我相信你已经充分掌握了 Next.js 的入门知识<span class=\"mojikumi-line-end\">。</span></p>\n<p>事实上这份前端小作业几乎可以作为大作业的起始框架<span class=\"mojikumi-line-end\">。</span>除了 Next.js 框架本身<span class=\"mojikumi-line-end\">，</span>其包含了<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>代码风格检查与修正插件 ESLint<span class=\"mojikumi-line-end\">，</span>配置文件为 <code>.<wbr>eslintrc<wbr>.<wbr>json</code></li>\n<li>单元测试框架 Jest</li>\n</ul>\n</blockquote>\n<p>不是<span class=\"mojikumi-line-end\">，</span>你是认真的吗<span class=\"mojikumi-line-end\">，</span>先不谈学会多少能算是<span class=\"mojikumi-line-start\">《</span>充分掌握了入门知识<span class=\"mojikumi\">》</span><span class=\"mojikumi-line-end\">，</span>这个 eslintrc 真的能用吗<span class=\"mojikumi-line-start\">（</span></p>\n<p>第二天早上起来再看了下代码<span class=\"mojikumi-line-end\">，</span>发现组件 unmount 时没有 <code>clearInterval</code><span class=\"mojikumi-line-end\">，</span>而这需要在允许<span class=\"mojikumi-line-start\">（</span>推荐<span class=\"mojikumi-line-end\">）</span>的代码范围之外进行修改<span class=\"mojikumi-line-end\">，</span>怎么回事<span class=\"mojikumi-line-start\">（</span></p>\n<p>网络请求也是<span class=\"mojikumi-line-end\">，</span>unmount 时没有 abort / ignore<span class=\"mojikumi-line-end\">，</span>但要改的话交互逻辑也会有些变化<span class=\"mojikumi-line-end\">，</span>就懒得修了<span class=\"mojikumi-line-end\">，</span>一个简陋的小作业而已<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"cicd-小作业\" class=\"heading\"><a href=\"#cicd-小作业\" class=\"heading-anchor\" aria-label=\"章节： CI/CD 小作业\" tabindex=\"-1\"></a><span>CI/CD 小作业</span></h3>\n<p><a href=\"https://tuna.moe/event/2023/welcome-and-ipsec/\">前一天的 Power TUNA</a> 上还有人问为什么 TUNA 有很多海外流量<span class=\"mojikumi-line-end\">，</span>第二天就看到了在 Dockerfile 里硬编码 TUNA<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"为子目录设置-commit-邮箱\" class=\"heading\"><a href=\"#为子目录设置-commit-邮箱\" class=\"heading-anchor\" aria-label=\"章节： 为子目录设置 commit 邮箱\" tabindex=\"-1\"></a><span>为子目录设置 commit 邮箱</span></h3>\n<p>作业经常会需要<span class=\"mojikumi-line-start\">（</span>或者说最好需要<span class=\"mojikumi-line-end\">）</span>使用一些与平时不同的 commit 邮箱<span class=\"mojikumi-line-end\">，</span>而 SECoder 的邮箱验证似乎还坏了<span class=\"mojikumi-line-end\">，</span>就更需要了<span class=\"mojikumi-line-end\">。</span></p>\n<p>以前碰到这种需求我都在每个 repo 设 local git config<span class=\"mojikumi-line-end\">，</span>但在软工可能有好几个 repo<span class=\"mojikumi-line-end\">，</span>不仅麻烦而且可能忘记<span class=\"mojikumi-line-end\">，</span>就需要更好的解决方案<span class=\"mojikumi-line-end\">。</span></p>\n<p>其实简单搜一下就很容易搜到<span class=\"mojikumi-line-end\">，</span>毕竟这是个很常见的需求<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>\n<p>在 <code>~/.<wbr>gitconfig</code> 中添加</p>\n<section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h4><ile-root id=\"ile-21\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-21--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>\n<span><span style=\"color: #d6deeb\">    path = ~/some/path/.gitconfig</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">[includeIf &quot;gitdir:~/some/path/**&quot;]</span></span>\n<span><span style=\"color: #403f53\">    path = ~/some/path/.gitconfig</span></span></samp></pre></div></section>\n</li>\n<li>\n<p>在 <code>~/<wbr>some<wbr>/<wbr>path<wbr>/.<wbr>gitconfig</code> 中添加</p>\n<section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h4><ile-root id=\"ile-22\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-22--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\">[user]</span></span>\n<span><span style=\"color: #d6deeb\">    email = 2021000000@secoder.net</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\">[user]</span></span>\n<span><span style=\"color: #403f53\">    email = 2021000000@secoder.net</span></span></samp></pre></div></section>\n</li>\n</ul>\n<h3 id=\"小作业的一些锅\" class=\"heading\"><a href=\"#小作业的一些锅\" class=\"heading-anchor\" aria-label=\"章节： 小作业的一些锅\" tabindex=\"-1\"></a><span>小作业的一些锅</span></h3>\n<p>deploy 之后发现一堆锅<span class=\"mojikumi-line-end\">，</span>它们不影响我的小作业得分<span class=\"mojikumi-line-end\">，</span>只会影响我能不能交上数学课作业<span class=\"mojikumi-line-end\">，</span>但我还是修了<span class=\"mojikumi-line-end\">，</span>数学课作业则是没写完就交了<span class=\"mojikumi-line-start\">（</span></p>\n<p>说到这就得怀念程设训练了<span class=\"mojikumi-line-end\">，</span>还有 5 分的<span class=\"mojikumi-line-start\">“</span>课堂参与<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>额外加在 100 分之外<span class=\"mojikumi-line-end\">，</span>回答几个同学的提问<span class=\"mojikumi-line-end\">、</span>开一些 issue 帮忙修锅就拿满了<span class=\"mojikumi-line-end\">，</span><s>虽然最后这 5 分对 A+ 毫无帮助<span class=\"mojikumi-line-end\">，</span>要是能移到软工就好了</s><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"next-js-static-html-export-有-dynamic-route-时报错\" class=\"heading\"><a href=\"#next-js-static-html-export-有-dynamic-route-时报错\" class=\"heading-anchor\" aria-label=\"章节： Next.js static HTML export 有 dynamic route 时报错\" tabindex=\"-1\"></a><span>Next.js static HTML export 有 dynamic route 时报错</span></h4>\n<p>在 Next.js 13.0.7 之前<span class=\"mojikumi-line-end\">，</span>具体来说是 <a href=\"https://github.com/vercel/next.js/releases/tag/v13.0.7-canary.5\">13.0.7-canary.5</a> 之前<span class=\"mojikumi-line-end\">，</span>通过 <code>next export</code> 得到 static HTML export 后<span class=\"mojikumi-line-end\">，</span>如果访问一个能匹配上 dynamic route 的 static route<span class=\"mojikumi-line-end\">，</span>会报<span class=\"mojikumi-line-start\">“</span>Application error: a client-side exception has occurred<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span>有 <code>pages<wbr>/[<wbr>id<wbr>].<wbr>tsx</code> 和 <code>pages<wbr>/<wbr>list<wbr>.<wbr>tsx</code> 时<span class=\"mojikumi-line-end\">，</span>访问 <code>/list.html</code> 就会报错<span class=\"mojikumi-line-end\">。</span></p>\n<p>简单看了一下这个版本的 changelog<span class=\"mojikumi-line-end\">，</span>有几个疑似和这个 bug 相关的<span class=\"mojikumi-line-end\">，</span>但我没能确认具体是哪个<span class=\"mojikumi-line-end\">。</span>本来想在本地 build Next.js 来进一步确认<span class=\"mojikumi-line-end\">，</span>但我一 build 就报一万个类型错误<span class=\"mojikumi-line-end\">，</span>搞了半天也没搞好<span class=\"mojikumi-line-end\">，</span>就放弃了<span class=\"mojikumi-line-end\">。</span>反正 bump 一下就修好了<span class=\"mojikumi-line-end\">，</span><s>开课前为啥不 bump 一下啊</s><span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"next-js-static-html-export-的-nginx-路由配置\" class=\"heading\"><a href=\"#next-js-static-html-export-的-nginx-路由配置\" class=\"heading-anchor\" aria-label=\"章节： Next.js static HTML export 的 Nginx 路由配置\" tabindex=\"-1\"></a><span>Next.js static HTML export 的 Nginx 路由配置</span></h4>\n<p>感觉网上搜到的一些 Nginx 路由配置都很迷惑<span class=\"mojikumi-line-end\">：</span><code>$uri</code> 是匹配不到 HTML 文件的<span class=\"mojikumi-line-end\">，</span>需要 <code>$uri.html</code><span class=\"mojikumi-line-end\">；</span><code>$uri/</code> 则可能匹配到目录<span class=\"mojikumi-line-end\">，</span>导致 403<span class=\"mojikumi-line-end\">；</span>动态路由如果不专门写路由配置的话<span class=\"mojikumi-line-end\">，</span>就不能直接访问到正确的 HTML<span class=\"mojikumi-line-end\">，</span>static HTML export 的作用就没有了<span class=\"mojikumi-line-end\">，</span>而且<span class=\"mojikumi-line-end\">，</span>fallback 到 <code>/<wbr>index<wbr>.<wbr>html</code> 可能导致加载一些不需要的页面内容和 JS<span class=\"mojikumi-line-end\">，</span>实际上比直接 SPA 更劣<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"用户名格式检查\" class=\"heading\"><a href=\"#用户名格式检查\" class=\"heading-anchor\" aria-label=\"章节： 用户名格式检查\" tabindex=\"-1\"></a><span>用户名格式检查</span></h4>\n<p>说来惭愧<span class=\"mojikumi-line-end\">，</span>我一开始也没意识到用户名没校验格式的问题<span class=\"mojikumi-line-end\">，</span>还是配路由的时候才想到用户名里会不会有 slash<span class=\"mojikumi-line-end\">。</span></p>\n<p>现在要修的话确实麻烦<span class=\"mojikumi-line-end\">，</span>所以只要归结为<span class=\"mojikumi-line-start\">《</span>由于小作业的简化<span class=\"mojikumi-line-end\">》</span>就好了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"忘记关测试用-docker-container\" class=\"heading\"><a href=\"#忘记关测试用-docker-container\" class=\"heading-anchor\" aria-label=\"章节： 忘记关测试用 Docker container\" tabindex=\"-1\"></a><span><s>忘记关测试用 Docker container</s></span></h4>\n<p>第二天早上起来一看<span class=\"mojikumi-line-end\">，</span>Plausible 特别卡<span class=\"mojikumi-line-end\">，</span>再一看<span class=\"mojikumi-line-end\">，</span>load avg 都快两位数了<span class=\"mojikumi-line-end\">，</span>原来是在 VPS 上测试后端部署忘关了 🌚 不要随便在生产环境顺便测小作业<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"玩小作业\" class=\"heading\"><a href=\"#玩小作业\" class=\"heading-anchor\" aria-label=\"章节： 玩小作业\" tabindex=\"-1\"></a><span>玩小作业</span></h3>\n<p>把 game of life 当成冬日绘板画画<span class=\"mojikumi-line-end\">，</span>动态更新时钟<span class=\"mojikumi-line-end\">，</span>从 LifeWiki 获取随机 pattern<span class=\"mojikumi-line-end\">，</span>这是一个作业写不完的人能干的出来的吗<span class=\"mojikumi-line-end\">，</span>共享后端是这样用的吗<span class=\"mojikumi-line-start\">（</span></p>\n<p>第二天早上起来一看<span class=\"mojikumi-line-start\">（</span><s>怎么每段都有个第二天早上起来</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>大家都在画些啥<span class=\"mojikumi-line-end\">，</span>我还是太保守了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"回答同学提问\" class=\"heading\"><a href=\"#回答同学提问\" class=\"heading-anchor\" aria-label=\"章节： 回答同学提问\" tabindex=\"-1\"></a><span>回答同学提问</span></h3>\n<p>软工的公开提问貌似只能在微信群<span class=\"mojikumi-line-end\">，</span>而且助教有十几个<span class=\"mojikumi-line-end\">，</span>回复速度实在是太快了<span class=\"mojikumi-line-end\">。</span>程设训练的时候我还能偶尔抢在助教之前回答问题<span class=\"mojikumi-line-end\">，</span>现在根本做不到<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"偷窥同学代码\" class=\"heading\"><a href=\"#偷窥同学代码\" class=\"heading-anchor\" aria-label=\"章节： 偷窥同学代码\" tabindex=\"-1\"></a><span>偷窥同学代码</span></h3>\n<p>偶然间发现 SonarQube 上可以看到同学的代码<span class=\"mojikumi-line-end\">，</span>因为我的小作业已经交了而且分都给了<span class=\"mojikumi-line-end\">，</span>所以我就放心大胆地偷窥了<span class=\"mojikumi-line-start\">（</span></p>\n<p>本来想给助教报告一下问题等权限修复<span class=\"mojikumi-line-end\">，</span>结果说是懒得修了<span class=\"mojikumi\">，</span><wbr><span class=\"mojikumi-line-start\">《</span>希望没多少人发现<span class=\"mojikumi\">》</span><span class=\"mojikumi-line-end\">，</span><s>导致我甚至不能在迟交 ddl 之前在博客吐槽</s><span class=\"mojikumi-line-start\">（</span>要是下学期还不修<span class=\"mojikumi-line-end\">，</span>大家都学会了这个操作<span class=\"mojikumi-line-end\">，</span>那只能说不是我的锅了<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>那我只好趁机来认真看一看同学们都写了一些什么奇妙代码<span class=\"mojikumi-line-start\">（</span></p>\n<ul>\n<li>\n<p>冗余的类型标注<span class=\"mojikumi-line-start\">（</span>看到文档里讲 TS 的时候举例全是冗余类型标注时<span class=\"mojikumi-line-end\">，</span>我就知道同学们肯定会写一万个 <code>let count: number = 0</code><span class=\"mojikumi-line-end\">）</span></p>\n</li>\n<li>\n<p>只需条件修改 prop 时<span class=\"mojikumi-line-end\">，</span>条件渲染 prop 不同的两个组件</p>\n</li>\n<li>\n<p>手写八遍而不是使用 <code>for</code> 来遍历网格的邻居</p>\n</li>\n<li>\n<p>更新 React state 时即使结果是常量依然使用回调函数</p>\n</li>\n<li>\n<p>回调函数写成 <code>() => { foo(); }</code> 而不是 <code>foo</code></p>\n</li>\n<li>\n<p>冗余的 <code>flex<wbr>-<wbr>direction<wbr>: <wbr>row</code></p>\n</li>\n<li>\n<p>复制二维数组<span class=\"mojikumi-line-end\">，</span>有看到用 <code>for</code> 一个个 <code>push</code> 的<span class=\"mojikumi-line-end\">，</span>也有看到直接 <code>JSON<wbr>.<wbr>parse<wbr>(<wbr>JSON<wbr>.<wbr>stringify<wbr>)</code> 的<span class=\"mojikumi-line-end\">；</span>正确写法应该是 <code>old<wbr>.<wbr>map<wbr>((<wbr>row<wbr>) => <wbr>row<wbr>.<wbr>slice<wbr>())</code><span class=\"mojikumi-line-end\">。</span>数组大小为 1000x1000 时<span class=\"mojikumi-line-end\">，</span>在 Firefox 中<span class=\"mojikumi-line-end\">，</span>这两种写法的用时都大约是 <code>map</code> &#x26; <code>slice</code> 的 10 倍<span class=\"mojikumi-line-end\">，</span>在 Chrome 中<span class=\"mojikumi-line-end\">，</span>一个个 <code>push</code> 的用时是 <code>map</code> &#x26; <code>slice</code> 的 3 倍<span class=\"mojikumi-line-end\">，</span><code>JSON<wbr>.<wbr>parse<wbr>(<wbr>JSON<wbr>.<wbr>stringify<wbr>)</code> 的用时是 40 倍<span class=\"mojikumi-line-end\">。</span>而且<span class=\"mojikumi-line-end\">，</span>由于小作业中需要的是复制其他所有<span class=\"mojikumi-line-end\">，</span>但修改一个<span class=\"mojikumi-line-end\">，</span>很多同学在 <code>for</code> 里面写 <code>if</code><span class=\"mojikumi-line-end\">，</span>这样效率更低<span class=\"mojikumi-line-end\">，</span>应该把 <code>if</code> 写在 <code>for</code> 外面<span class=\"mojikumi-line-end\">。</span></p>\n<p>但是还看到一种写法<span class=\"mojikumi-line-end\">，</span>只深复制修改了的那一行<span class=\"mojikumi-line-end\">，</span>其他行浅复制<span class=\"mojikumi-line-end\">。</span>草<span class=\"mojikumi-line-end\">，</span>这样确实性能更好<span class=\"mojikumi-line-end\">。</span></p>\n</li>\n<li>\n<p>依赖于效果为 toggle 的按钮不会在 toggle 完成前被点击两次<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>问题背景<span class=\"mojikumi-line-end\">：</span>一个 start 按钮和一个 stop 按钮<span class=\"mojikumi-line-end\">，</span>修改一个 <code>playing</code> 的 state<span class=\"mojikumi-line-end\">，</span>处于 playing 状态时需要一个 <code>setInterval</code></li>\n<li>问题 1<span class=\"mojikumi-line-end\">：</span>在 start / stop 时将 <code>playing</code> 修改为 <code>!playing</code> 而非 <code>true</code>/<code>false</code></li>\n<li>问题 2<span class=\"mojikumi-line-end\">：</span>只在 stop 时 <code>clearInterval</code><span class=\"mojikumi-line-end\">，</span>没有在 start 时 <code>clearInterval</code></li>\n</ul>\n<p>正常的交互很难做到 toggle 完成前被点击两次<span class=\"mojikumi-line-end\">，</span>基本上只能通过在 console 连续调用两次 <code>click</code> 实现<span class=\"mojikumi-line-end\">，</span>但最好还是不要依赖于这一点<span class=\"mojikumi-line-end\">。</span></p>\n</li>\n</ul>\n<h3 id=\"node-js-和浏览器的不同-timer\" class=\"heading\"><a href=\"#node-js-和浏览器的不同-timer\" class=\"heading-anchor\" aria-label=\"章节： Node.js 和浏览器的不同 timer\" tabindex=\"-1\"></a><span>Node.js 和浏览器的不同 timer</span></h3>\n<p>队友问了一个神奇的 bug<span class=\"mojikumi-line-end\">，</span>说是 <code>clearInterval</code> clear 不掉<span class=\"mojikumi-line-end\">，</span>我看了半天都没发现问题<span class=\"mojikumi-line-end\">，</span>最后发现开头有个 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>之前还真没注意过<span class=\"mojikumi-line-end\">，</span>timer 有 Node.js 和浏览器两个版本<span class=\"mojikumi-line-end\">，</span>Node.js 的 <code>setInterval</code> 返回的是一个 object<span class=\"mojikumi-line-end\">，</span>浏览器返回的是一个 <code>number</code><span class=\"mojikumi-line-end\">。</span></p>\n<ul>\n<li>直接写 <code>setInterval</code> 时<span class=\"mojikumi-line-end\">，</span>在 TypeScript 中会被认为返回 <code>NodeJS<wbr>.<wbr>Timer</code><span class=\"mojikumi-line-end\">，</span>而实际运行时在哪运行就用哪个版本的函数<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果写的是 <code>window<wbr>.<wbr>setInterval</code><span class=\"mojikumi-line-end\">，</span>在 TypeScript 中会被认为返回 <code>number</code><span class=\"mojikumi-line-end\">，</span>在 Node.js 中运行会报错<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果是 <code>import<wbr> { <wbr>setInterval<wbr> } <wbr>from<wbr> '<wbr>timers<wbr>'</code><span class=\"mojikumi-line-end\">，</span>即使是在浏览器中运行也会使用 Node.js 版本的函数<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>这里比较重要的是 <code>setInterval</code> 和 <code>clearInterval</code> 要配套<span class=\"mojikumi-line-end\">，</span>不能一个用 Node.js 的一个用浏览器的<span class=\"mojikumi-line-end\">，</span>否则会 clear 不掉甚至报错<span class=\"mojikumi-line-end\">。</span></p>\n<p>一般来说直接写<span class=\"mojikumi-line-start\">（</span>不 <code>window.</code> 也不 <code>import from 'timers'</code><span class=\"mojikumi-line-end\">）</span>就是最好的<span class=\"mojikumi-line-end\">，</span>虽然看起来 TypeScript 会将 <code>number</code> 误认为是 <code>NodeJS<wbr>.<wbr>Timer</code><span class=\"mojikumi-line-end\">，</span>但这个 <code>number</code> 本来就不该被当作一个 <code>number</code> 来使用<span class=\"mojikumi-line-end\">，</span>这样的 typing 反而是好的<span class=\"mojikumi-line-end\">。</span></p>\n<p>这里如果再仔细研究一下可以单独写一篇博客了<span class=\"mojikumi-line-end\">，</span>但还是算了吧<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"小作业即将截止\" class=\"heading\"><a href=\"#小作业即将截止\" class=\"heading-anchor\" aria-label=\"章节： 小作业即将截止\" tabindex=\"-1\"></a><span>小作业即将截止</span></h3>\n<blockquote>\n<p>小作业 将于 3 月 16 日<span class=\"mojikumi-line-start\">（</span>周四<span class=\"mojikumi-line-end\">）</span>23:59 截止<span class=\"mojikumi-line-end\">。</span></p>\n<p>请注意截止时间不是 21:55<span class=\"mojikumi-line-end\">。</span></p>\n<p>……</p>\n</blockquote>\n<p>后面省略的几句也是模仿的 DSA<span class=\"mojikumi-line-end\">，</span><s>DNS</s> <span class=\"heimu\">前几天某位助教答疑的时候把 dns typo 成了 dna</span> DNA 动了<span class=\"mojikumi-line-end\">，</span>好评<span class=\"mojikumi-line-end\">，</span>但开头这个对偶的 ddl 绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"大作业\" class=\"heading\"><a href=\"#大作业\" class=\"heading-anchor\" aria-label=\"章节： 大作业\" tabindex=\"-1\"></a><span>大作业</span></h2>\n<h3 id=\"组队\" class=\"heading\"><a href=\"#组队\" class=\"heading-anchor\" aria-label=\"章节： 组队\" tabindex=\"-1\"></a><span>组队</span></h3>\n<p>在另外一个通识课上体验了一下差点没组上队<span class=\"mojikumi-line-start\">（</span>虽然后来得知还有不少人比我更晚组上队<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>最后完全 rand 组队<span class=\"mojikumi-line-end\">。</span>所以真的很感谢上学期就找我来组队的队友<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"起队名\" class=\"heading\"><a href=\"#起队名\" class=\"heading-anchor\" aria-label=\"章节： 起队名\" tabindex=\"-1\"></a><span>起队名</span></h3>\n<blockquote>\n<p>HardToName / 起个名好难队</p>\n</blockquote>\n<p><s>这是什么引用啊</s></p>\n<p>队友提出了三个队名<span class=\"mojikumi-line-end\">：</span>啊对对队<span class=\"mojikumi-line-end\">、</span>BUG 全调队<span class=\"mojikumi-line-end\">、</span>[redacted] 队<span class=\"mojikumi-line-end\">。</span>前两个都被占了<span class=\"mojikumi-line-end\">，</span>后一个太魔幻了<span class=\"mojikumi-line-end\">，</span>于是最后还是用的我提出的队名<span class=\"mojikumi-line-end\">：</span>lazy / 这个队特别懒<span class=\"mojikumi-line-end\">，</span>什么都没留下~</p>\n<p><span class=\"mojikumi-line-start\">（</span>这 SECoder 怎么还在用这个很有年代感的个人描述 placeholder 啊<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/lazy-placeholder.65e936a3.webp\"><img srcset=\"/assets/lazy-placeholder.aba50ccc.png\" loading=\"lazy\" src=\"/assets/lazy-placeholder.aba50ccc.png\" width=\"1873\" height=\"597\" alt=\"学生列表，满屏都是“这个人特别懒，什么都没留下~”\"></picture></p>\n<p>俗话说得好<span class=\"mojikumi-line-end\">，</span>贱名好养活<span class=\"mojikumi-line-end\">，</span><s>取名叫 lazy 一定摆不起来<span class=\"mojikumi-line-start\">（</span></s></p>\n<p>其实本来还想过利用五个人的名字缩写之类的组一个队名<span class=\"mojikumi-line-end\">，</span>但人脑去想一个符合要求且有意思的队名太难了<span class=\"mojikumi-line-end\">，</span>输入法给出的候选词也没啥意思<span class=\"mojikumi-line-end\">，</span>所以我还尝试了用 ChatGPT 来生成<span class=\"mojikumi-line-end\">，</span>本来只是以为它会生成一些没意思的队名<span class=\"mojikumi-line-end\">，</span>没想到它生成出来的队名不仅没意思<span class=\"mojikumi-line-end\">，</span>而且拼音首字母甚至字数都完全不符合要求<span class=\"mojikumi-line-end\">，</span>无论怎么拷打都认错不改 🌚</p>\n<h3 id=\"分工-技术栈\" class=\"heading\"><a href=\"#分工-技术栈\" class=\"heading-anchor\" aria-label=\"章节： 分工 &#x26; 技术栈\" tabindex=\"-1\"></a><span>分工 &#x26; 技术栈</span></h3>\n<p>听说代码可能要求有队友审核<span class=\"mojikumi-line-end\">，</span>所以放弃了一个人写前端<span class=\"mojikumi-line-start\">（</span>可能来个人写测试<span class=\"mojikumi-line-end\">）</span>的想法<span class=\"mojikumi-line-start\">（</span></p>\n<p>几乎是理所当然地就决定了用 Vue<span class=\"mojikumi-line-end\">，</span>没有一点反对<span class=\"mojikumi-line-end\">，</span>感觉这个不需要学 React 的 React 小作业<s>没有九分也有十分的功劳</s><span class=\"mojikumi-line-end\">。</span></p>\n<p>给队友布置学习任务的时候感觉<span class=\"mojikumi-line-end\">，</span>我好像也不会多少东西<span class=\"mojikumi-line-end\">，</span>像是前端的测试以及 Nuxt 都还得学<span class=\"mojikumi-line-end\">，</span>JS/TS/Vue 说到底也就那么点东西<span class=\"mojikumi-line-end\">，</span>我的优势可能主要还是在经验方面<span class=\"mojikumi-line-end\">，</span>但其实也没写过什么复杂的前后端交互<span class=\"mojikumi-line-end\">，</span>大作业和博客 / Codle 这种东西还是差别挺大<span class=\"mojikumi-line-end\">，</span>写这个博客的时候很多时间也是花在一些 blog-specific 的不重要的细节上<span class=\"mojikumi-line-end\">。</span><s>说的我都有点慌了<span class=\"mojikumi-line-start\">（</span></s></p>\n<p><a href=\"https://archive.ph/6o0gs\">咕了一周</a>的 Nuxt 3.3 终于在大作业开始前发出来了<span class=\"mojikumi-line-end\">，</span>避免了刚开始写不久就要 bump minor version<span class=\"mojikumi-line-end\">。</span>yysy 我选的这些技术栈还是挺最新最热的<span class=\"mojikumi-line-end\">，</span><s>要是真的出锅了都不知道怎么向队友交代<span class=\"mojikumi-line-start\">（</span></s></p>\n<p>紧接着就看到 TypeScript 5.0 也发了<span class=\"mojikumi-line-end\">，</span>更新更热了<span class=\"mojikumi-line-end\">，</span>害怕<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"摇号\" class=\"heading\"><a href=\"#摇号\" class=\"heading-anchor\" aria-label=\"章节： 摇号\" tabindex=\"-1\"></a><span>摇号</span></h3>\n<blockquote>\n<p>3月14日24:00后进行项目志愿的摇号</p>\n</blockquote>\n<p>结果还真是<span class=\"mojikumi-line-start\">“</span>24:00<strong>后</strong><span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>手动 ddl 🌚</p>\n<p>本来晚上 11 点还看到我们队的一志愿的一志愿数量从 7 变成了 6<span class=\"mojikumi-line-end\">，</span>就是 2/3 的概率抽上<span class=\"mojikumi-line-end\">，</span>结果早上起来一看还是掉了<span class=\"mojikumi-line-end\">，</span>寄<span class=\"mojikumi-line-end\">。</span>这下和不是队友的室友一个选题了<span class=\"mojikumi-line-end\">。</span>好在例会还是 4-3<span class=\"mojikumi-line-end\">，</span>要是 4-4 的话整个下午就消失了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大例会-1\" class=\"heading\"><a href=\"#大例会-1\" class=\"heading-anchor\" aria-label=\"章节： 大例会 1\" tabindex=\"-1\"></a><span>大例会 1</span></h3>\n<p>第一次例会竟然就要写分工以及完整的进度安排<span class=\"mojikumi-line-end\">，</span>虽然说是随便画饼也没事<span class=\"mojikumi-line-end\">，</span>但还是感觉不太敏捷<span class=\"mojikumi-line-start\">（</span></p>\n<p>顺便练习了一下 <a href=\"https://sli.dev/\">Slidev</a><span class=\"mojikumi-line-end\">，</span>在本机莫名 export 失败了<span class=\"mojikumi-line-end\">，</span>结果扔到 VPS 上就成功了<span class=\"mojikumi-line-end\">，</span>神秘<span class=\"mojikumi-line-end\">。</span>但在 VPS 上还得装上中文字体<span class=\"mojikumi-line-end\">，</span>并且配字体设置<span class=\"mojikumi-line-end\">。</span></p>\n<p>无奖竞猜<span class=\"mojikumi-line-end\">，</span>下面这些队名都是啥<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>下午的展示顺序是</p>\n<ol start=\"0\">\n<li>我</li>\n<li>蛋白质</li>\n<li>迷</li>\n<li>对对对</li>\n<li>懒</li>\n</ol>\n</blockquote>\n<a id=\"答案\" name=\"答案\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-info-circle-outline text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Info: </span><span data-v-a2ab257f>答案</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h5 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-info-circle-outline text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Info: </span><span data-v-a2ab257f><s>给你一次再想一想的机会</s></span></h5><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><ol>\n<li>青蛙补充蛋白质</li>\n<li>迷失分析LAS</li>\n<li>阿对对队</li>\n<li>这个队特别懒<span class=\"mojikumi-line-end\">，</span>什么都没留下~</li>\n</ol></div></details></aside></div></details></aside>\n<p>感觉这个第一次例会总体上传达的意思就是<span class=\"mojikumi-line-end\">，</span>看起来难的功能要想简单点<span class=\"mojikumi-line-end\">，</span>差不多得了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大作业第一周\" class=\"heading\"><a href=\"#大作业第一周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第一周\" tabindex=\"-1\"></a><span>大作业第一周</span></h3>\n<h4 id=\"需求细化\" class=\"heading\"><a href=\"#需求细化\" class=\"heading-anchor\" aria-label=\"章节： 需求细化\" tabindex=\"-1\"></a><span>需求细化</span></h4>\n<p>第一次例会上是我提的问题最多<span class=\"mojikumi-line-end\">，</span>之后也基本上只有我在群里问需求细节问题<span class=\"mojikumi-line-end\">。</span>回答大部分都是两种之一<span class=\"mojikumi-line-end\">，</span>要么是<span class=\"mojikumi-line-start\">“</span>这样也可以<span class=\"mojikumi-line-end\">，</span>但那样也可以<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>要么是<span class=\"mojikumi-line-start\">“</span>这样更好<span class=\"mojikumi-line-end\">，</span>但没分<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>程设训练的时候也是这样<span class=\"mojikumi-line-end\">，</span>似乎是我的问题<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>正常的想法是不是应该是只要不说清楚就可以混过去<span class=\"mojikumi-line-end\">，</span>而不是害怕没搞清楚而写错<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"四个阶段\" class=\"heading\"><a href=\"#四个阶段\" class=\"heading-anchor\" aria-label=\"章节： 四个阶段\" tabindex=\"-1\"></a><span>四个阶段</span></h4>\n<p>第一周总体上分成四个阶段<span class=\"mojikumi-line-end\">：</span></p>\n<ol>\n<li>设计任务计划<span class=\"mojikumi-line-end\">，</span>编写让队友知道要干什么的文档和 issue</li>\n<li>ping &#x26; push 队友</li>\n<li>回答队友提问 &#x26; 指出队友代码里的问题</li>\n<li>马上就要例会了<span class=\"mojikumi-line-end\">，</span>放弃指导队友<span class=\"mojikumi-line-end\">，</span>上手自己写<span class=\"mojikumi-line-start\">（</span></li>\n</ol>\n<p>感觉最后总的工作量还是超过了自己一个人把所有活干完<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>希望以后能好一点<span class=\"mojikumi-line-end\">，</span>要一直是这样其他课真寄了<span class=\"mojikumi-line-end\">。</span>而且我本来就没打算管后端<span class=\"mojikumi-line-end\">，</span>就没学 Django<span class=\"mojikumi-line-end\">，</span>结果不仅要搞一点后端的规划设计<span class=\"mojikumi-line-end\">，</span>回答队友提问<span class=\"mojikumi-line-end\">，</span>还得赶着 ddl 硬上写代码<span class=\"mojikumi-line-end\">，</span>开发环境都没配好<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"数据库配置\" class=\"heading\"><a href=\"#数据库配置\" class=\"heading-anchor\" aria-label=\"章节： 数据库配置\" tabindex=\"-1\"></a><span>数据库配置</span></h4>\n<p>你见过只能挂载目录<span class=\"mojikumi-line-end\">，</span>不能设置环境变量<span class=\"mojikumi-line-end\">，</span>也不能挂载单个文件的 Docker 容器管理吗<span class=\"mojikumi-line-start\">（</span></p>\n<p>这个 SECoder 实在是有些过于离谱<span class=\"mojikumi-line-end\">，</span>最后只能把环境变量写在 Dockerfile 里<span class=\"mojikumi-line-end\">，</span>用 build 出来的数据库镜像<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"小例会-1\" class=\"heading\"><a href=\"#小例会-1\" class=\"heading-anchor\" aria-label=\"章节： 小例会 1\" tabindex=\"-1\"></a><span>小例会 1</span></h4>\n<p>主要就是聊了一下数据库和 API 的设计<span class=\"mojikumi-line-end\">，</span>也没检查 CI/CD<span class=\"mojikumi-line-end\">，</span>结束之后才想起来架构设计也没说<span class=\"mojikumi-line-end\">。</span>毕竟是小例会<span class=\"mojikumi-line-end\">，</span>确实比较轻松<span class=\"mojikumi-line-end\">，</span>感觉上午白着急把数据库跑起来了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大作业第二周\" class=\"heading\"><a href=\"#大作业第二周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第二周\" tabindex=\"-1\"></a><span>大作业第二周</span></h3>\n<h4 id=\"secoder-ssh-卡住\" class=\"heading\"><a href=\"#secoder-ssh-卡住\" class=\"heading-anchor\" aria-label=\"章节： SECoder SSH 卡住\" tabindex=\"-1\"></a><span>SECoder SSH 卡住</span></h4>\n<p>之前就偶尔碰到 SECoder SSH 卡住的情况<span class=\"mojikumi-line-end\">，</span>今天发现是回了寝室连有线网就卡住<span class=\"mojikumi-line-end\">，</span>换成 Tsinghua Secure 就不卡了<span class=\"mojikumi-line-end\">，</span>怀疑和 IP 切换有关<span class=\"mojikumi-line-end\">，</span>不是很懂<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"nuxt-与-typescript-5-0\" class=\"heading\"><a href=\"#nuxt-与-typescript-5-0\" class=\"heading-anchor\" aria-label=\"章节： Nuxt 与 TypeScript 5.0\" tabindex=\"-1\"></a><span>Nuxt 与 TypeScript 5.0</span></h4>\n<p>之前还说有点太新太热了<span class=\"mojikumi-line-end\">，</span>果然一堆锅<span class=\"mojikumi-line-end\">。</span></p>\n<p>之前一直随机报错 <code>The \"path\" argument must be of type string. Received an instance of Array</code><span class=\"mojikumi-line-end\">，</span>后来发现是我直接用了最新最热的 <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/#supporting-multiple-configuration-files-in-extends\">tsconfig 里 <code>extends</code> 写数组</a><span class=\"mojikumi-line-end\">，</span>然后 Nuxt 读取 tsconfig 的时候寄了<span class=\"mojikumi-line-end\">。</span>改成单个 <code>extends</code> 或者把 Nuxt 更新到 edge channel 就 ok 了<span class=\"mojikumi-line-end\">。</span></p>\n<p>另外还碰到 <a href=\"https://github.com/nuxt/nuxt/issues/15113\">一个 bug</a><span class=\"mojikumi-line-end\">，</span>只能把路径改成英文<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"npmmirror-更新不及时\" class=\"heading\"><a href=\"#npmmirror-更新不及时\" class=\"heading-anchor\" aria-label=\"章节： npmmirror 更新不及时\" tabindex=\"-1\"></a><span>npmmirror 更新不及时</span></h4>\n<p>CI 挂在了奇怪的地方<span class=\"mojikumi-line-end\">，</span>是 npmmirror 更新不及时<span class=\"mojikumi-line-end\">，</span>一个刚更新几分钟的包下不下来<span class=\"mojikumi-line-end\">。</span>npmmirror 的首页写的是每 10min 更新一次<span class=\"mojikumi-line-end\">，</span>但我等了它半小时还没更新<span class=\"mojikumi-line-end\">。</span>然后看到 npmmirror 上每个包的页面上有一个<span class=\"mojikumi-line-start\">“</span>SYNC<span class=\"mojikumi-line-end\">”</span>按钮<span class=\"mojikumi-line-end\">，</span>点一下就可以更新<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"pnpm-v8\" class=\"heading\"><a href=\"#pnpm-v8\" class=\"heading-anchor\" aria-label=\"章节： pnpm v8\" tabindex=\"-1\"></a><span>pnpm v8</span></h4>\n<p>感觉这个软工就和最新最热扯不开关系了<span class=\"mojikumi-line-start\">（</span></p>\n<p>碰到一个非常神秘的<span class=\"mojikumi-line-end\">，</span>一个 up-to-date with master 的 MR 在合并之后挂 CI<span class=\"mojikumi-line-end\">，</span>说是 lock file 有问题<span class=\"mojikumi-line-end\">。</span>本来我都没想管了<span class=\"mojikumi-line-end\">，</span>结果晚上发现博客也挂 CI 了<span class=\"mojikumi-line-end\">，</span>再一看<span class=\"mojikumi-line-end\">，</span>原来是 pnpm 发布 v8 了<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"nuxt-dev-报错-“body-is-unusable”\" class=\"heading\"><a href=\"#nuxt-dev-报错-“body-is-unusable”\" class=\"heading-anchor\" aria-label=\"章节： nuxt dev 报错 “Body is unusable”\" tabindex=\"-1\"></a><span>nuxt dev 报错 <span class=\"mojikumi\">“</span>Body is unusable<span class=\"mojikumi-line-end\">”</span></span></h4>\n<p><a href=\"https://github.com/nuxt/nuxt/issues/19245\">Body is unusable (undici) · Issue #19245 · nuxt/nuxt</a> 是一个非常玄学的 issue<span class=\"mojikumi-line-end\">，</span>我在部署到 SECoder 的时候遇到了<span class=\"mojikumi-line-end\">，</span>队友在 WSL2 上遇到了<span class=\"mojikumi-line-end\">，</span>但我在本地<span class=\"mojikumi-line-start\">（</span>Arch Linux<span class=\"mojikumi-line-end\">）</span>没遇到过<span class=\"mojikumi-line-end\">。</span>我让队友试着在 Docker 里跑 dev<span class=\"mojikumi-line-end\">，</span>似乎和 issue 里描述的一样<span class=\"mojikumi-line-end\">，</span>偶尔会遇到<span class=\"mojikumi-line-end\">，</span>但重试一下就好了<span class=\"mojikumi-line-end\">；</span>而且 WSL2 里加载非常慢<span class=\"mojikumi-line-end\">，</span>直接在 Windows 上运行 Docker 会快很多<span class=\"mojikumi-line-end\">。</span></p>\n<p>HMR 需要 WebSocket<span class=\"mojikumi-line-end\">，</span>于是在 Docker 里跑 dev 的时候发现 Vite 默认的 ws 端口是 24678<span class=\"mojikumi-line-end\">，</span>唤醒了一些远古的回忆<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">；</span>结果去搜索引擎确认 <s>自己的 DNA 没有刻错</s> 的时候搜到的全是<span class=\"mojikumi-line-start\">“</span>原神<span class=\"mojikumi-line-start\">‘</span>港口驶过几艘船<span class=\"mojikumi-line-end\">，</span>二四六七八<span class=\"mojikumi-line-end\">’</span>任务攻略<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"大例会-2\" class=\"heading\"><a href=\"#大例会-2\" class=\"heading-anchor\" aria-label=\"章节： 大例会 2\" tabindex=\"-1\"></a><span>大例会 2</span></h4>\n<p>例会前 CI 一直在排长队<span class=\"mojikumi-line-end\">，</span>一开始还只用多等一会儿<span class=\"mojikumi-line-end\">，</span>后来甚至会等待超时而直接挂掉<span class=\"mojikumi-line-end\">，</span>差点没部署上<span class=\"mojikumi-line-start\">（</span></p>\n<p>最后发现我们部署的 dev 环境可用 prod 环境不可用<span class=\"mojikumi-line-end\">，</span>直接用的 dev 环境做演示<span class=\"mojikumi-line-end\">，</span>没人问为什么地址里有个 dev<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">；</span>后来发现确实是暴力改掉 migration 后数据库没重启的问题<span class=\"mojikumi-line-end\">，</span>但我是一开始试图重启了但还是挂<span class=\"mojikumi-line-end\">，</span>以为是其他问题<span class=\"mojikumi-line-end\">，</span>但实际上是 SECoder 的容器重启需要等待<span class=\"mojikumi-line-end\">，</span>而且不知道为什么有时候等好久也没重启成功<span class=\"mojikumi-line-end\">，</span>非常玄学<span class=\"mojikumi-line-end\">。</span></p>\n<p>其他队都看上去做了很多功能<span class=\"mojikumi-line-end\">，</span>我们能演示的只有注册登录<span class=\"mojikumi-line-end\">。</span>虽然我们的注册登录确实相对来说更加完善<span class=\"mojikumi-line-end\">，</span>而其他队的其他功能也一堆问题<span class=\"mojikumi-line-end\">，</span>但感觉在差不多得了的氛围下<span class=\"mojikumi-line-end\">，</span>似乎还是赶上进度更重要<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"大作业第三周\" class=\"heading\"><a href=\"#大作业第三周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第三周\" tabindex=\"-1\"></a><span>大作业第三周</span></h3>\n<h4 id=\"nitro-proxy-与-set-cookie\" class=\"heading\"><a href=\"#nitro-proxy-与-set-cookie\" class=\"heading-anchor\" aria-label=\"章节： Nitro proxy 与 set-cookie\" tabindex=\"-1\"></a><span>Nitro proxy 与 set-cookie</span></h4>\n<p>说来实在是绷不住<span class=\"mojikumi-line-end\">。</span></p>\n<p>我在一个未登录时返回 403 的 API 设置 CSRF cookie<span class=\"mojikumi-line-end\">，</span>在前后端对接测试时发现这个 <code>set-cookie</code> 在经过前端 proxy 之后就没了<span class=\"mojikumi-line-end\">，</span>于是我以为是 Nitro 的 proxy 不转发 <code>set-cookie</code><span class=\"mojikumi-line-end\">，</span>又马上要例会了<span class=\"mojikumi-line-end\">，</span>就赶紧换成了 Nginx 反代<span class=\"mojikumi-line-end\">。</span></p>\n<p>例会结束后<span class=\"mojikumi-line-end\">，</span>我从 Nitro 源码翻到 h3 源码<span class=\"mojikumi-line-end\">，</span>再翻到 undici 的 issue<span class=\"mojikumi-line-end\">，</span>发现 <a href=\"https://github.com/nodejs/undici/issues/1262\">Undici strips out set-cookie headers, even when \"credentials: 'include'\" is set</a><span class=\"mojikumi-line-end\">，</span>又用 <a href=\"https://httpbin.org/cookies/set/cookie/test\">https<wbr>://<wbr>httpbin<wbr>.<wbr>org<wbr>/<wbr>cookies<wbr>/<wbr>set<wbr>/<wbr>cookie<wbr>/<wbr>test</a> 进行测试发现真的没有 <code>set-cookie</code><span class=\"mojikumi-line-end\">，</span>还以为找到原因了<span class=\"mojikumi-line-end\">。</span>但又发现 <a href=\"https://github.com/nodejs/undici/pull/1469\">feat: remove headers filtering</a><span class=\"mojikumi-line-end\">，</span>感觉很奇怪<span class=\"mojikumi-line-end\">。</span></p>\n<p>于是我再仔细看了一下<span class=\"mojikumi-line-end\">，</span>发现 <a href=\"https://httpbin.org/cookies/set/cookie/test\">https<wbr>://<wbr>httpbin<wbr>.<wbr>org<wbr>/<wbr>cookies<wbr>/<wbr>set<wbr>/<wbr>cookie<wbr>/<wbr>test</a> 返回的是 302<span class=\"mojikumi-line-end\">，</span>而重定向之后就没有 <code>set-cookie</code> 了<span class=\"mojikumi-line-end\">。</span>而一开始那个 API 没有返回 <code>set-cookie</code> 则是因为它返回的不是 200<span class=\"mojikumi-line-end\">，</span>改成 200 就正常了<span class=\"mojikumi-line-end\">。</span>但凡我测试了一个返回 200 的也不至于..</p>\n<p>上午因为这个问题差点没在例会前部署好<span class=\"mojikumi-line-end\">，</span>例会后一直研究到晚上<span class=\"mojikumi-line-end\">，</span>几乎是搞了一整天<span class=\"mojikumi-line-end\">，</span>破防了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"姓游就要用尤大的-vue，yóu-だけにっ！\" class=\"heading\"><a href=\"#姓游就要用尤大的-vue，yóu-だけにっ！\" class=\"heading-anchor\" aria-label=\"章节： 姓游就要用尤大的 Vue，yóu だけにっ！\" tabindex=\"-1\"></a><span><s>姓游就要用尤大的 Vue<span class=\"mojikumi-line-end\">，</span>yóu だけにっ！</s></span></h4>\n<p>突然发现另一个队长姓游的队也用的 Vue<span class=\"mojikumi-line-end\">，</span>而其他队暂时没发现有用 Vue 的<span class=\"mojikumi-line-start\">（</span>我暂时只找到了 1/4 队伍的域名<span class=\"mojikumi-line-end\">，</span>剩下有找不到的也有懒得找的<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span><s>难道是因为和尤大一样姓 yóu 吗<span class=\"mojikumi-line-end\">，</span>这下<a href=\"https://zh.moegirl.org.cn/%E5%AE%AB%E4%B8%8B%E7%88%B1\"><span class=\"text-aisan\">爱姐</span></a>狂喜了<span class=\"mojikumi-line-start\">（</span></s></p>\n<h4 id=\"undici-发送带-content-length-0-的-delete-请求\" class=\"heading\"><a href=\"#undici-发送带-content-length-0-的-delete-请求\" class=\"heading-anchor\" aria-label=\"章节： undici 发送带 Content-Length: 0 的 DELETE 请求\" tabindex=\"-1\"></a><span>undici 发送带 <code>Content<wbr>-<wbr>Length<wbr>: <wbr>0</code> 的 DELETE 请求</span></h4>\n<p>这是第 114514 次被 undici 背刺了<span class=\"mojikumi-line-end\">，</span>具体请看 <a href=\"https://github.com/nodejs/undici/issues/2046\">Sending a DELETE request with \"Content-Length: 0\" fails with a RequestContentLengthMismatchError · Issue #2046 · nodejs/undici</a><span class=\"mojikumi-line-end\">。</span></p>\n<p>而这个 <code>Content<wbr>-<wbr>Length<wbr>: <wbr>0</code> 是由已经没在维护的 <a href=\"https://github.com/http-party/node-http-proxy\"><code>http-proxy</code></a> 加上的<span class=\"mojikumi-line-end\">。</span>不知为何<span class=\"mojikumi-line-end\">，</span>甚至不是给其他 method 加 Content-Length 的时候忘记排除 DELETE 了<span class=\"mojikumi-line-end\">，</span>而是专门给 DELETE 加的<span class=\"mojikumi-line-end\">。</span>更神秘的是<span class=\"mojikumi-line-end\">，</span>这段代码是在十年前只有一百多行的 <a href=\"https://github.com/http-party/node-http-proxy/commit/4d131567211bcefc6ef0b0592d374fef7bd5abd8#diff-0855adca187963032d89850159dc18eacfb9f206c036887e19b1877e69cc0ac1R20\">initial commit</a> 就加上了<span class=\"mojikumi-line-end\">。</span>反正给这段打个 patch 就好了<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"secoder-commit-统计\" class=\"heading\"><a href=\"#secoder-commit-统计\" class=\"heading-anchor\" aria-label=\"章节： SECoder commit 统计\" tabindex=\"-1\"></a><span>SECoder commit 统计</span></h4>\n<p>之前还在想 SECoder 的数据统计什么时候开<span class=\"mojikumi-line-end\">，</span>没想到一开吓一跳<span class=\"mojikumi-line-start\">（</span></p>\n<p>它似乎是统计了所有 commit<span class=\"mojikumi-line-end\">，</span>包括没 merge 到 master 的以及被 force-push 覆盖掉的<span class=\"mojikumi-line-end\">，</span>结果我差不多到了 rk2 的两倍<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>但要是只算 master 的话其实进 top10 都还差一点<span class=\"mojikumi-line-end\">。</span>应该主要是搭前端代码框架的时候<span class=\"mojikumi-line-end\">，</span>有 20 多个 commit rebase 了好几次<span class=\"mojikumi-line-end\">，</span>后来也经常 force-push 修小的 typo<span class=\"mojikumi-line-end\">。</span>这么说来 GitHub 只统计 master 还是挺好的<span class=\"mojikumi-line-end\">，</span>虽然我个人项目也经常会在 master 上疯狂 force-push<span class=\"mojikumi-line-start\">（</span></p>\n<p>但是 SECoder 没有 MR 评论数量的统计<span class=\"mojikumi-line-end\">，</span>其实我觉得这个才是我应该霸榜的地方<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大作业第四周\" class=\"heading\"><a href=\"#大作业第四周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第四周\" tabindex=\"-1\"></a><span>大作业第四周</span></h3>\n<p>期中周事比较多<span class=\"mojikumi-line-end\">，</span>稍微有点拖<span class=\"mojikumi-line-end\">，</span>于是寄了<span class=\"mojikumi-line-end\">。</span></p>\n<blockquote>\n<p>整体开发过程中存在大量开发进度不协调的问题<span class=\"mojikumi-line-end\">：</span>前后端对接不协调<span class=\"mojikumi-line-end\">，</span>开发新功能与审核<span class=\"mojikumi-line-end\">、</span>测试之间不协调<span class=\"mojikumi-line-end\">，</span>没有按测试需要的拓扑顺序进行开发导致先开发的功能要等着后面的功能才能测试<span class=\"mojikumi-line-end\">，</span>对开发计划认识不统一<span class=\"mojikumi-line-end\">，</span>还没修完当周计划的锅就开始写之后的功能……</p>\n</blockquote>\n<p>我本来以为后端搭起基本框架之后我就不用管了<span class=\"mojikumi-line-end\">，</span>可以让队友自己搞<span class=\"mojikumi-line-end\">，</span>结果到了最后才发现全是锅<span class=\"mojikumi-line-end\">。</span>虽然队友有各种奇妙操作<span class=\"mojikumi-line-end\">，</span>但不得不说很多都是我可以提早发现来避免的<span class=\"mojikumi-line-end\">，</span>还有很多是沟通上出了问题<span class=\"mojikumi-line-end\">，</span>并且我自己的活也干得有点晚<span class=\"mojikumi-line-end\">。</span>这毕竟是软工而不是大号程设训练<span class=\"mojikumi-line-end\">，</span>只能承认<span class=\"mojikumi-line-end\">，</span>我软工是真的菜<span class=\"mojikumi-line-end\">，</span>做好规划安排以及与人沟通协作的基本能力非常欠缺<span class=\"mojikumi-line-end\">。</span></p>\n<p><s>要是有万能的<a href=\"https://zh.moegirl.org.cn/%E5%AE%AB%E6%A3%AE%E8%91%B5\">喵森</a>来协调大家的开发进度就好了</s><span class=\"mojikumi-line-end\">；</span><span class=\"heimu\">软工中的总集篇<span class=\"mojikumi-line-end\">：</span>要是部署挂了赶紧换一个旧版镜像<span class=\"mojikumi-line-end\">，</span>可以说是没写完而不是部署挂了<span class=\"mojikumi-line-end\">，</span>就可以只扣 1 分而不是 2 分了<span class=\"mojikumi-line-end\">。</span></span> 突然想到的<span class=\"mojikumi-line-end\">，</span>但这么一想<span class=\"mojikumi-line-end\">，</span>好想在软工结束后的暑假二周目一下白箱<span class=\"mojikumi-line-end\">，</span><s>现在先拜一拜喵森吧<span class=\"mojikumi-line-start\">（</span></s></p>\n<p>只不过还有一个问题<span class=\"mojikumi-line-end\">，</span>Python 实在是<span class=\"mojikumi-line-end\">，</span>真的能比 Rust 写的快吗<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>虽然看队友写了很多奇妙错误<span class=\"mojikumi-line-end\">，</span>但要是没有类型检查之类的<span class=\"mojikumi-line-start\">（</span>Python 可以一定程度上检查<span class=\"mojikumi-line-end\">，</span>但看起来队友并没有做<span class=\"mojikumi-line-end\">）</span>我大概也能写出不少 🌚</p>\n<h3 id=\"大作业第五周\" class=\"heading\"><a href=\"#大作业第五周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第五周\" tabindex=\"-1\"></a><span>大作业第五周</span></h3>\n<h4 id=\"nuxt-v3-3-3-起-nuxt-vitest-报错\" class=\"heading\"><a href=\"#nuxt-v3-3-3-起-nuxt-vitest-报错\" class=\"heading-anchor\" aria-label=\"章节： Nuxt v3.3.3 起 nuxt-vitest 报错\" tabindex=\"-1\"></a><span>Nuxt v3.3.3 起 nuxt-vitest 报错</span></h4>\n<p><a href=\"https://github.com/danielroe/nuxt-vitest/issues/122\">Nuxt v3.3.3 causes tests to fail (Unhandled Errors) · Issue #122 · danielroe/nuxt-vitest</a></p>\n<p>想着大例会结束后是升级依赖的好时机<span class=\"mojikumi-line-end\">，</span>结果一 bump 测试挂了<span class=\"mojikumi-line-end\">。</span>去 git bisect 了一下 Nuxt<span class=\"mojikumi-line-end\">，</span>Nuxt 的构建比 Next 轻松多了<span class=\"mojikumi-line-end\">，</span>又快又不报错<span class=\"mojikumi-line-end\">。</span>bisect 出来之后本来还在想没时间也没头绪继续研究下去了<span class=\"mojikumi-line-end\">，</span>这个 issue 也已经一周了<span class=\"mojikumi-line-end\">，</span>不知道作者会不会继续咕着<span class=\"mojikumi-line-end\">。</span>结果晚上一看<span class=\"mojikumi-line-end\">，</span>被点了个心<span class=\"mojikumi-line-end\">，</span>开了个 PR<span class=\"mojikumi-line-end\">，</span>再一看<span class=\"mojikumi-line-end\">，</span>原来 bisect 出来的那个 PR 就是 nuxt-vitest 的作者写的<span class=\"mojikumi-line-end\">，</span>我都没发现<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"nspace-内-key-会失效\" class=\"heading\"><a href=\"#nspace-内-key-会失效\" class=\"heading-anchor\" aria-label=\"章节： NSpace 内 key 会失效\" tabindex=\"-1\"></a><span>NSpace 内 key 会失效</span></h4>\n<p><a href=\"https://www.naiveui.com/zh-CN/os-theme/components/space\"><code>&#x3C;n-space></code></a> 会给每个 child 套一个 <code>&#x3C;div></code><span class=\"mojikumi-line-end\">，</span>于是 <code>key</code> 都失效了<span class=\"mojikumi-line-end\">，</span>如果在 <code>&#x3C;n-space></code> 里面用 <code>v-for</code> 就可能不停地 remount<span class=\"mojikumi-line-end\">，</span>调了一晚上<span class=\"mojikumi-line-start\">（</span></p>\n<p>这东西是真不如手写 flex<span class=\"mojikumi-line-end\">。</span></p>\n<h4 id=\"小例会-3\" class=\"heading\"><a href=\"#小例会-3\" class=\"heading-anchor\" aria-label=\"章节： 小例会 3\" tabindex=\"-1\"></a><span>小例会 3</span></h4>\n<p>比较水<span class=\"mojikumi-line-end\">，</span>只不过助教说他当年搞了个云服务器<span class=\"mojikumi-line-end\">，</span>出问题了就把反代换成云服务器<span class=\"mojikumi-line-end\">，</span>感觉很有道理<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大作业第六周\" class=\"heading\"><a href=\"#大作业第六周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第六周\" tabindex=\"-1\"></a><span>大作业第六周</span></h3>\n<p>大家这周都比较摆<span class=\"mojikumi-line-end\">，</span>我还去修了不少后端的锅<span class=\"mojikumi-line-end\">。</span>太久没管后端<span class=\"mojikumi-line-end\">，</span>对代码复用<span class=\"mojikumi-line-end\">、</span>测试的完善程度<span class=\"mojikumi-line-end\">、</span>QuerySet 的编写<span class=\"mojikumi-line-end\">、</span>请求参数的校验等问题感到了一些震惊<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>但确实是没力气去修<span class=\"mojikumi-line-start\">（</span></p>\n<p>响应式设计还作为自选需求被提了出来<span class=\"mojikumi-line-end\">，</span>要是打算加这个需求一开始不就应该有吗<span class=\"mojikumi-line-end\">，</span>这也不是什么需要由同学想到的功能<span class=\"mojikumi-line-end\">，</span>我看需求列表没有就默认也不会作为自选需求了<span class=\"mojikumi-line-end\">，</span>刚开课的时候还找助教吐槽没有响应式分数<span class=\"mojikumi-line-end\">。</span>响应式设计要 mobile first<span class=\"mojikumi-line-end\">，</span>能这么晚加吗<span class=\"mojikumi-line-end\">。</span></p>\n<p>劝大家还是别太信需求列表<span class=\"mojikumi-line-end\">，</span>该卷还得卷<span class=\"mojikumi-line-end\">，</span>自己提自选需求总比快结束了被别人提强太多<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"大作业第-79-周\" class=\"heading\"><a href=\"#大作业第-79-周\" class=\"heading-anchor\" aria-label=\"章节： 大作业第 7~9 周\" tabindex=\"-1\"></a><span>大作业第 7~9 周</span></h3>\n<p>草<span class=\"mojikumi-line-end\">，</span>我有软工<span class=\"mojikumi-line-end\">，</span>没有能加分的课<span class=\"mojikumi-line-end\">，</span>为什么要打智能体<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"《gif-图片搜索网站》\" class=\"heading\"><a href=\"#《gif-图片搜索网站》\" class=\"heading-anchor\" aria-label=\"章节： 《GIF 图片搜索网站》\" tabindex=\"-1\"></a><span><span class=\"mojikumi-line-start\">《</span>GIF 图片搜索网站<span class=\"mojikumi-line-end\">》</span></span></h4>\n<p>来点 PRJ2 笑话<span class=\"mojikumi-line-end\">：</span>GIF 图片搜索网站<span class=\"mojikumi-line-end\">，</span>每个队都是最后两三周才开始写搜索功能<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"大作业后面几周\" class=\"heading\"><a href=\"#大作业后面几周\" class=\"heading-anchor\" aria-label=\"章节： 大作业后面几周\" tabindex=\"-1\"></a><span>大作业后面几周</span></h3>\n<p>没力气写游记了<span class=\"mojikumi-line-end\">，</span>这个课快从世界上消失吧<span class=\"mojikumi-line-start\">（</span></p>",
            "url": "https://ouuan.moe/post/2023/03/thuse",
            "title": "当你的技术栈与软工交集为空（x",
            "summary": "\n\n\n<p>很好<span class=\"mojikumi-line-end\">，</span>你已经学会了 Vue<span class=\"mojikumi-line-end\">、</span>Rust<span class=\"mojikumi-line-end\">、</span>Actix<span class=\"mojikumi-line-end\">、</span>GitHub Actions<span class=\"mojikumi-line-end\">、</span>pnpm<span class=\"mojikumi-line-end\">、</span>Vitest<span class=\"mojikumi-line-end\">、</span>Caddy</p>\n<p>现在你可以使用 React<span class=\"mojikumi-line-end\">、</span>Python<span class=\"mojikumi-line-end\">、</span>Django<span class=\"mojikumi-line-end\">、</span>GitLab CI<span class=\"mojikumi-line-end\">、</span>yarn<span class=\"mojikumi-line-end\">、</span>Jest<span class=\"mojikumi-line-end\">、</span>Nginx 来完成软工作业了<span class=\"mojikumi-line-start\">（</span></p>\n",
            "date_modified": "2023-03-04T03:42:29.000Z",
            "tags": [
                "Web",
                "学习记录"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/03/digital-logic",
            "content_html": "\n\n\n\n\n<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class=\"mojikumi-line-end\">，</span>但是数字逻辑电路是数电<span class=\"mojikumi-line-end\">，</span>数字逻辑设计是数设<span class=\"mojikumi-line-end\">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class=\"mojikumi-line-end\">，</span>但叫它数电实验或者数设实验好像都不太对<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课的时候也是<span class=\"mojikumi-line-end\">，</span>老师一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你是数设的同学<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你没报上数设但想把数电学成数设<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>这课也太乱了<span class=\"mojikumi-line-start\">（</span></p>\n<p>我写游记都得把两个课放一起写<span class=\"mojikumi-line-end\">，</span>课就不能合成一个吗<span class=\"mojikumi-line-start\">（</span></p>\n\n<p>写了一会儿后发现<span class=\"mojikumi-line-end\">，</span>还是得两个课分开写<span class=\"mojikumi-line-end\">，</span>dbqwcl<span class=\"mojikumi-line-start\">（</span></p>\n<p>这篇就是个游记<span class=\"mojikumi-line-end\">，</span>具体学的内容如果我有时间的话会放在 <a href=\"/tag/ddpp\">DDPP 学习笔记</a><span class=\"mojikumi-line-end\">，</span>没时间<span class=\"mojikumi-line-start\">（</span>没时间写笔记 or 没时间学 DDPP 只能跟着上课<span class=\"mojikumi-line-end\">）</span>的话大概就不会放上来了<span class=\"mojikumi-line-start\">（</span></p>\n<p><s>某些人学都学不完了<span class=\"mojikumi-line-end\">，</span>还有空写游记？<span class=\"mojikumi-line-start\">（</span></s></p>\n<h2 id=\"数字逻辑实验\" class=\"heading\"><a href=\"#数字逻辑实验\" class=\"heading-anchor\" aria-label=\"章节： 数字逻辑实验\" tabindex=\"-1\"></a><span>数字逻辑实验</span></h2>\n<h3 id=\"sv-班的开设\" class=\"heading\"><a href=\"#sv-班的开设\" class=\"heading-anchor\" aria-label=\"章节： sv 班的开设\" tabindex=\"-1\"></a><span>sv 班的开设</span></h3>\n<p>DDPP5 讲的是 Verilog<span class=\"mojikumi-line-end\">，</span>以后造机应该也是用 Verilog<span class=\"mojikumi-line-end\">，</span>但数字逻辑实验似乎是 VHDL<span class=\"mojikumi-line-end\">。</span>就像软工强迫我把技术栈全换一遍一样<span class=\"mojikumi-line-end\">，</span>多学一门语言也可以称作<span class=\"mojikumi-line-start\">“</span>技多不压身<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>而且说到底我也还没学 Verilog<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>但终究是有些难受的<span class=\"mojikumi-line-end\">。</span>所以看到第一节课的课件上说可以选择报 SystemVerilog 小班我还是很开心的<span class=\"mojikumi-line-end\">，</span>顿时感觉这个课科学了许多<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<p>优势<span class=\"mojikumi-line-end\">：</span>对后续课程有帮助</p>\n<p>劣势<span class=\"mojikumi-line-end\">：</span>花时间<span class=\"mojikumi-line-end\">，</span>费精力<span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span></p>\n</blockquote>\n<p>课件上是这么写的<span class=\"mojikumi-line-end\">，</span>但 Verilog 本身应该不会比 VHDL 费精力<span class=\"mojikumi-line-end\">，</span>课程内容的区别是多了个内存实验<span class=\"mojikumi-line-end\">，</span>我猜这个 warning 的主要意义在于<span class=\"mojikumi-line-end\">，</span>这是个新开的课<span class=\"mojikumi-line-end\">，</span>可能各种出锅<span class=\"mojikumi-line-end\">，</span>要让大家做好心理准备<span class=\"mojikumi-line-start\">（</span>同样是新开的 <a href=\"/post/2022/08/learn-rust\">Rust</a> 就非常科学<span class=\"mojikumi-line-start\">（</span><s>起码完全自学人感觉很科学</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>我似乎反而更希望课是新开的<span class=\"mojikumi-line-end\">，</span>而且这个 sv 班似乎也是 tuna 群友当助教<span class=\"mojikumi-line-start\">（</span></p>\n<p>但这个 sv 班的开设实在是有些坎坷<span class=\"mojikumi-line-end\">，</span>说起来也有些冗长<span class=\"mojikumi-line-end\">，</span>就折起来了<span class=\"mojikumi-line-end\">。</span></p>\n<a id=\"sv-班坎坷的开设过程\" name=\"sv-班坎坷的开设过程\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>sv 班坎坷的开设过程</span></h4><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>简单来说<span class=\"mojikumi-line-end\">，</span>数字逻辑实验有 5-1<span class=\"mojikumi-line-end\">、</span>5-3<span class=\"mojikumi-line-end\">、</span>5-4 三个班<span class=\"mojikumi-line-end\">，</span>其中 5-1<span class=\"mojikumi-line-end\">、</span>5-3 有开设 sv 班的机会<span class=\"mojikumi-line-end\">，</span>但要求是 5-1 报名人数在 25~28 之间<span class=\"mojikumi-line-end\">，</span>5-3 报名人数在 27~28 之间<span class=\"mojikumi-line-end\">，</span>才分别能开班<span class=\"mojikumi-line-end\">。</span></p><p>是不是感觉非常神秘<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>这确实很神秘<span class=\"mojikumi-line-end\">，</span>但它背后竟然真的能有确切的原因<span class=\"mojikumi-line-start\">（</span></p><ul>\n<li>数字逻辑实验的课容量是 85<span class=\"mojikumi-line-end\">，</span>5-1<span class=\"mojikumi-line-end\">、</span>5-3<span class=\"mojikumi-line-end\">、</span>5-4 分别有 85<span class=\"mojikumi-line-end\">、</span>87<span class=\"mojikumi-line-start\">（</span>草<span class=\"mojikumi-line-end\">，</span>听说可能是因为重修？<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">、</span>69 人<span class=\"mojikumi-line-start\">（</span>印象中当时的数据<span class=\"mojikumi-line-end\">，</span>现在有点小变化<span class=\"mojikumi-line-end\">）</span></li>\n<li>因为设备<span class=\"mojikumi-line-end\">、</span>实验室等资源限制<span class=\"mojikumi-line-end\">，</span>一个普通班只能容纳 30 人<span class=\"mojikumi-line-end\">，</span>一个 sv 班只能容纳 28 人<span class=\"mojikumi-line-end\">，</span>一个时间段只能有三个班</li>\n</ul><p>虽然说在这些限制下似乎也能在 5-4 开一个班<span class=\"mojikumi-line-start\">（</span>9~28 人即可<span class=\"mojikumi-line-end\">，</span>满足人数限制且不影响该时间段分班数量<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>但不知道是不是懒得再开一个班还是什么原因<span class=\"mojikumi-line-end\">，</span>5-4 想报 sv 班的同学只能遗憾离场<span class=\"mojikumi-line-start\">（</span></p><p>同学们当然觉得这样搞很毒瘤<span class=\"mojikumi-line-end\">，</span>但老师似乎也知道这样很毒瘤<span class=\"mojikumi-line-end\">，</span>说是之前申请过搞成二级选课<span class=\"mojikumi-line-end\">，</span>但没通过<span class=\"mojikumi-line-end\">。</span></p><p>一开始我担心的是很快报满报不上<span class=\"mojikumi-line-end\">，</span>后来发现完全担心错了<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>真正的问题在于人数不够<span class=\"mojikumi-line-end\">，</span>而且这个是先报先得<span class=\"mojikumi-line-end\">，</span>我是通知发出来 7min 就报了<span class=\"mojikumi-line-end\">，</span><s>虽然在选课系统里 7s 可能就慢了<span class=\"mojikumi-line-end\">，</span>但是</s> 最后看名单我是第一个报的<span class=\"mojikumi-line-start\">（</span></p><p>前两天大家都不吭声<span class=\"mojikumi-line-end\">，</span>到了报名的 ddl 当天下午我才在群里问了下人数<span class=\"mojikumi-line-end\">，</span>当时是 5-1 22 人 5-3 21 人<span class=\"mojikumi-line-end\">。</span>于是我开始在班群推销<span class=\"mojikumi-line-end\">，</span>也看到有人在课程群推销<span class=\"mojikumi-line-end\">，</span>反正主要就是以后总得学 Verilog<span class=\"mojikumi-line-end\">，</span>报 sv 班可以少学一门语言<span class=\"mojikumi-line-start\">（</span></p><p>晚上 6 点 5-1 就开班了<span class=\"mojikumi-line-end\">，</span>但 5-3 只有 24 个人报<span class=\"mojikumi-line-end\">。</span>到了 23:44 还是 24<span class=\"mojikumi-line-start\">（</span>实际上是 25<span class=\"mojikumi-line-end\">，</span>我室友报了结果因未知原因被漏掉了<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>就很崩溃<span class=\"mojikumi-line-end\">。</span></p><p>当时我想了两个备选方案<span class=\"mojikumi-line-end\">：</span></p><ul>\n<li>改成 5-4 开 sv 班<span class=\"mojikumi-line-end\">，</span>但我提出后被否了<span class=\"mojikumi-line-end\">，</span>说是不方便再调整<span class=\"mojikumi-line-end\">。</span></li>\n<li>去 5-1 的 sv 班<span class=\"mojikumi-line-end\">，</span>结果得知 5-1 已经报了 31 人<span class=\"mojikumi-line-end\">。</span><s>早知道不推销了</s></li>\n</ul><p>好在第二天又说报名 ddl 延长半天<span class=\"mojikumi-line-end\">，</span>然后中午的时候竟然就报满了<span class=\"mojikumi-line-end\">。</span>5-3 的 28 人有 10 个是信计的<span class=\"mojikumi-line-end\">，</span><s>简单估计一下<span class=\"mojikumi-line-end\">，</span>信计有 28/30 想报 sv</s><span class=\"mojikumi-line-end\">，</span>实际上 5-1 的 sv 班只有两个信计<span class=\"mojikumi-line-end\">，</span>只不过群里 5-4 求换课的还有好几个信计<span class=\"mojikumi-line-end\">，</span>可惜都没换上<span class=\"mojikumi-line-end\">，</span><s>再简单估计一下<span class=\"mojikumi-line-end\">，</span>sv 班 12/56 是信计<span class=\"mojikumi-line-end\">，</span>信计应该一共有 52 人</s><span class=\"mojikumi-line-start\">（</span></p></div></details></aside>\n<h3 id=\"sv-班课程文档\" class=\"heading\"><a href=\"#sv-班课程文档\" class=\"heading-anchor\" aria-label=\"章节： sv 班课程文档\" tabindex=\"-1\"></a><span>sv 班课程文档</span></h3>\n<h4 id=\"本课程只有一学分！！\" class=\"heading\"><a href=\"#本课程只有一学分！！\" class=\"heading-anchor\" aria-label=\"章节： 本课程只有一学分！！\" tabindex=\"-1\"></a><span>本课程只有一学分！！</span></h4>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/1-credit.4c4db750.webp\"><img srcset=\"/assets/1-credit.3072c8e4.png\" loading=\"lazy\" src=\"/assets/1-credit.3072c8e4.png\" width=\"219\" height=\"88\" alt=\"本课程只有一学分！！\"></picture></p>\n<p>开头第一句<span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h4 id=\"按钮详细功能\" class=\"heading\"><a href=\"#按钮详细功能\" class=\"heading-anchor\" aria-label=\"章节： 按钮详细功能\" tabindex=\"-1\"></a><span>按钮详细功能</span></h4>\n<p>一般来说 admonition 经常是比较长的会折叠起来防止刷屏<span class=\"mojikumi-line-end\">，</span>但在示波器的<span class=\"mojikumi-line-start\">“</span>按钮详细功能<span class=\"mojikumi-line-end\">”</span>一节<span class=\"mojikumi-line-end\">，</span>被折叠的都是最短的那些<span class=\"mojikumi-line-end\">，</span>比如<span class=\"mojikumi-line-end\">：</span></p>\n<blockquote>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h5 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>电源开关</span></h5><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>按一次打开电源<span class=\"mojikumi-line-end\">，</span>再按一次关闭电源<span class=\"mojikumi-line-end\">。</span></p></div></details></aside>\n</blockquote>\n<p>非常地理所当然<span class=\"mojikumi-line-end\">，</span>但感觉这个事实莫名地很有意思<span class=\"mojikumi-line-start\">（</span><s>而且把电源开关写出来再折起来就莫名喜感<span class=\"mojikumi-line-start\">（</span>按一次打开 <code>&#x3C;details></code><span class=\"mojikumi-line-end\">，</span>再按一次关闭 <code>&#x3C;details></code></s></p>\n<h4 id=\"git-conflict\" class=\"heading\"><a href=\"#git-conflict\" class=\"heading-anchor\" aria-label=\"章节： git conflict\" tabindex=\"-1\"></a><span>git conflict</span></h4>\n<p>虽说是敏捷开发课程文档<span class=\"mojikumi-line-end\">，</span>但这个 git conflict 也太<span class=\"mojikumi-line-start\">（</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/git-conflict-in-doc.5d6c1b24.webp\"><img srcset=\"/assets/git-conflict-in-doc.a7369472.png\" loading=\"lazy\" src=\"/assets/git-conflict-in-doc.a7369472.png\" width=\"680\" height=\"265\" alt=\"课程文档中出现了 git conflict 标记\"></picture></p>\n<h3 id=\"把人忽悠进来之后\" class=\"heading\"><a href=\"#把人忽悠进来之后\" class=\"heading-anchor\" aria-label=\"章节： 把人忽悠进来之后\" tabindex=\"-1\"></a><span><s>把人忽悠进来之后</s></span></h3>\n<p>下面是两个课件的 diff<span class=\"mojikumi-line-end\">，</span>虽然这个优势的意思实际上没变<span class=\"mojikumi-line-end\">，</span>从 sv 班苛刻的开设条件基本上就能猜到没法随时退出<span class=\"mojikumi-line-end\">，</span>但是<span class=\"mojikumi-line-start\">（</span></p>\n<blockquote>\n<ul>\n<li>SystemVerilog</li>\n<li>为后续课程实验提供支撑\n<ul>\n<li>增加内存实验<del><span class=\"mojikumi-line-end\">，</span>其他实验不变</del></li>\n<li>课程成绩不与普通课堂区分<span class=\"mojikumi-line-end\">，</span>评分标准<span class=\"mojikumi-line-end\">，</span>比例与普通课堂一致</li>\n</ul>\n</li>\n<li>优势<span class=\"mojikumi-line-end\">：</span><del>对后续课程有帮助</del><ins>当前学期无</ins></li>\n<li>劣势<span class=\"mojikumi-line-end\">：</span>花时间<span class=\"mojikumi-line-end\">，</span>费精力<span class=\"mojikumi-line-end\">。</span><del><span class=\"mojikumi-line-end\">。</span><span class=\"mojikumi-line-end\">。</span></del></li>\n<li>可随时退出<ins>？</ins></li>\n</ul>\n</blockquote>\n<h3 id=\"示波器实验\" class=\"heading\"><a href=\"#示波器实验\" class=\"heading-anchor\" aria-label=\"章节： 示波器实验\" tabindex=\"-1\"></a><span>示波器实验</span></h3>\n<p>上学期物理实验用过示波器<span class=\"mojikumi-line-end\">，</span>感到了这个课除了 <a href=\"/post/2022/10/basic-tex-and-r-for-physics-lab\">学习 TeX 和 R</a> 之外竟然还稍微有点用<span class=\"mojikumi-line-end\">，</span>虽然也只有那么一点点用<span class=\"mojikumi-line-end\">，</span>不知道和电子学基础相比哪个的一点点大一些<span class=\"mojikumi-line-start\">（</span></p>\n<p>整个实验中卡壳最久的一步是<span class=\"mojikumi-line-end\">，</span>从一坨绑得十分整齐的导线中抽出一根<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"与非门电路测试实验\" class=\"heading\"><a href=\"#与非门电路测试实验\" class=\"heading-anchor\" aria-label=\"章节： 与非门电路测试实验\" tabindex=\"-1\"></a><span>与非门电路测试实验</span></h3>\n<p>预习的时候对着文档里的电路图和芯片引脚图把怎么接线<span class=\"mojikumi-line-end\">、</span>怎么接地写清楚<span class=\"mojikumi-line-end\">，</span>就很容易了<span class=\"mojikumi-line-end\">。</span></p>\n<p>本来想半小时速通<span class=\"mojikumi-line-end\">，</span>失败了<span class=\"mojikumi-line-end\">，</span>感觉最大的问题还是抽不出导线<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"简单组合逻辑电路实验\" class=\"heading\"><a href=\"#简单组合逻辑电路实验\" class=\"heading-anchor\" aria-label=\"章节： 简单组合逻辑电路实验\" tabindex=\"-1\"></a><span>简单组合逻辑电路实验</span></h3>\n<p>上午十点半才开始预习<span class=\"mojikumi-line-end\">，</span>两小时把 2 位全加器和补码减法器接好了<span class=\"mojikumi-line-end\">，</span>在课上半个小时把原码减法器接好<span class=\"mojikumi-line-end\">，</span>但是加上排队等待验收和收拾东西还是快 3 点才走<span class=\"mojikumi-line-end\">。</span></p>\n<ul>\n<li>三个运算器放在同一个电路里是非常容易的<span class=\"mojikumi-line-end\">。</span>补码减法器就是全加器的基础上有几个东西要取反<span class=\"mojikumi-line-end\">，</span>只要把一个开关和这些东西异或在一起就可以控制是否取反了<span class=\"mojikumi-line-end\">。</span>原码是在补码的基础上进行转换<span class=\"mojikumi-line-end\">，</span>用开关控制会稍微麻烦一些<span class=\"mojikumi-line-end\">，</span>但如果是用两个数码管分别显示补码和原码就非常容易<span class=\"mojikumi-line-end\">。</span></li>\n<li>文档上给的补码转原码不知道为什么用了五个门<span class=\"mojikumi-line-end\">，</span>实际上只要 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>F</mi><mn>2</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo>=</mo><mover accent=\"true\"><mover accent=\"true\"><mrow><msub><mi>C</mi><mn>2</mn></msub><msub><mi>F</mi><mn>1</mn></msub></mrow><mo stretchy=\"true\">‾</mo></mover><mo stretchy=\"true\">‾</mo></mover><mo>⊕</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">F_2' = \\overline{\\overline{C_2 F_1}} \\oplus F_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.2481em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4519em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2333em;vertical-align:-0.15em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-4.0033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 就好了<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>一开始我还对着卡诺图发呆<span class=\"mojikumi-line-end\">，</span>后来看了一眼真值表<span class=\"mojikumi-line-end\">，</span>发现这个东西用人类智慧一下就化简出来了<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span>最后三合一的电路我只用了 8 个与非门和 9 个异或门<span class=\"mojikumi-line-end\">，</span>就不需要用 16 pin 的模块了<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果是分步骤<span class=\"mojikumi-line-start\">（</span>模块<span class=\"mojikumi-line-end\">）</span>接线<span class=\"mojikumi-line-start\">（</span>比如先接全加器<span class=\"mojikumi-line-end\">，</span>再改成减法器<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>过程中需要改线<span class=\"mojikumi-line-end\">，</span>在两根线叠在一起时<span class=\"mojikumi-line-end\">，</span>最好是把<span class=\"mojikumi-line-start\">“</span>模块内部<span class=\"mojikumi-line-end\">”</span>的线放在下面<span class=\"mojikumi-line-end\">，</span>和<span class=\"mojikumi-line-start\">“</span>外部<span class=\"mojikumi-line-end\">”</span>连接的线放在上面<span class=\"mojikumi-line-end\">，</span>这样的话修改和外部的连接时不用把两根线一起拔掉<span class=\"mojikumi-line-end\">。</span></li>\n<li>把接好的线带到实验室是有一定难度的<span class=\"mojikumi-line-end\">，</span>可以先只接 6 个模块<span class=\"mojikumi-line-end\">，</span>就能放进实验箱了<span class=\"mojikumi-line-end\">，</span>课上接剩下的两个模块<span class=\"mojikumi-line-end\">。</span>接上线之后体积会变大<span class=\"mojikumi-line-end\">，</span>可以把用不到的模块留在寝室<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>这节课上还发了 FPGA 模块<span class=\"mojikumi-line-end\">，</span>为了能装下<span class=\"mojikumi-line-end\">，</span>大家都上交了一些多余的模块<span class=\"mojikumi-line-end\">，</span>我装得下而且本来就是把多余的放在寝室了<span class=\"mojikumi-line-end\">，</span>就没上交<span class=\"mojikumi-line-end\">；</span>但是这样一来我就长期有几个模块放不进实验箱了 🌚<span class=\"mojikumi-line-end\">）</span></li>\n</ul>\n<p><s>如果你不知道怎么接线的话可以尝试对着下面这张图复刻</s></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/adder-circuit.daa72e66.webp\"><img srcset=\"/assets/adder-circuit.0aa32cb4.jpeg\" loading=\"lazy\" src=\"/assets/adder-circuit.0aa32cb4.jpeg\" width=\"2312\" height=\"1736\" alt=\"电路连接实物图\"></picture></p>\n<p>后来看到有同学上面的线统一朝上<span class=\"mojikumi-line-end\">，</span>下面的线统一朝下<span class=\"mojikumi-line-end\">，</span>就整齐一些<span class=\"mojikumi-line-end\">。</span></p>\n<p>最后收拾东西的时候分三次发现地上掉了 5 根线<span class=\"mojikumi-line-end\">，</span>除此之外前后两排也能看到好多根线<span class=\"mojikumi-line-end\">，</span>不知道哪些是我的<span class=\"mojikumi-line-end\">，</span>哪些是隔壁的<span class=\"mojikumi-line-end\">，</span>哪些是上午的<span class=\"mojikumi-line-start\">（</span></p>\n<p>还听到助教吐槽同学<span class=\"mojikumi-line-end\">，</span>然后老师说<span class=\"mojikumi-line-end\">，</span>这都是正常的<span class=\"mojikumi-line-end\">，</span>现在我们去搞大模型就可以了<span class=\"mojikumi-line-end\">，</span>不用在意数电<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"点亮数码管实验\" class=\"heading\"><a href=\"#点亮数码管实验\" class=\"heading-anchor\" aria-label=\"章节： 点亮数码管实验\" tabindex=\"-1\"></a><span>点亮数码管实验</span></h3>\n<p>本来想在寝室搞完直接去验收<span class=\"mojikumi-line-end\">，</span>结果去搞智能体了<span class=\"mojikumi-line-start\">（</span></p>\n<p>现场才开始做<span class=\"mojikumi-line-end\">，</span>一直连不上芯片<span class=\"mojikumi-line-end\">，</span>还以为是因为我用的 Arch 所以驱动有什么神秘问题<span class=\"mojikumi-line-end\">，</span>到处查了半天<span class=\"mojikumi-line-end\">，</span>最后问老师才知道是我 USB Type C 的线没插紧<span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-end\">。</span>它这个接口比一般的手机充电线要紧一些<span class=\"mojikumi-line-start\">（</span>插上一次之后复现不出来了<span class=\"mojikumi-line-end\">，</span>但在我印象中插上第一次之前不是紧一点而是紧 <s>super 多</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>插进去一半灯就亮了<span class=\"mojikumi-line-end\">，</span>所以我还以为接好了<span class=\"mojikumi-line-end\">。</span>后来想起来数设课上还提到过<span class=\"mojikumi-line-end\">，</span>USB 为了支持热插拔<span class=\"mojikumi-line-end\">，</span>电源接口比数据接口略长一些<span class=\"mojikumi-line-end\">，</span>我看到的灯大概是电源线连上了的灯<span class=\"mojikumi-line-end\">，</span>而数据线还没连上<span class=\"mojikumi-line-end\">。</span></p>\n<p>最后速通彻底失败了<span class=\"mojikumi-line-end\">，</span>还是第一次做到只剩几个人了才走<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"四位全加器实验\" class=\"heading\"><a href=\"#四位全加器实验\" class=\"heading-anchor\" aria-label=\"章节： 四位全加器实验\" tabindex=\"-1\"></a><span>四位全加器实验</span></h3>\n<p>这次真的在寝室 1.5h 搞完直接去验收<span class=\"mojikumi-line-end\">，</span>成功在上课之前验收完了<span class=\"mojikumi-line-end\">，</span>但还是得听完课才能走<span class=\"mojikumi-line-start\">（</span></p>\n<p>于是干脆写完了实验报告才走<span class=\"mojikumi-line-end\">，</span>实际上只是把代码复制出来<span class=\"mojikumi-line-end\">，</span>再截几张图<span class=\"mojikumi-line-end\">，</span>不知道为什么没能在讲完课之前写完<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"计数器实验\" class=\"heading\"><a href=\"#计数器实验\" class=\"heading-anchor\" aria-label=\"章节： 计数器实验\" tabindex=\"-1\"></a><span>计数器实验</span></h3>\n<p>这次有好几个人课前查<span class=\"mojikumi-line-end\">，</span>助教表示我们太急了<span class=\"mojikumi-line-start\">（</span></p>\n<p>之前感觉 DDPP 第五章学了几年都没学完<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>但有点像当时 CS:APP 第三章<span class=\"mojikumi-line-end\">，</span>学一周能顶上课讲好几周<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"串行密码锁实验\" class=\"heading\"><a href=\"#串行密码锁实验\" class=\"heading-anchor\" aria-label=\"章节： 串行密码锁实验\" tabindex=\"-1\"></a><span>串行密码锁实验</span></h3>\n<p>感觉 undefined behavior 非常多<span class=\"mojikumi-line-end\">，</span>而且作为一个密码锁竟然能在没开锁时改密码<span class=\"mojikumi-line-end\">，</span>非常神秘<span class=\"mojikumi-line-end\">，</span>但它毕竟只是个小实验而不是数设<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课前同学聊到了游泳课<span class=\"mojikumi-line-end\">，</span>老师一进来听到了<span class=\"mojikumi-line-end\">，</span>说当年他有个同学因为游泳没过没能保研<span class=\"mojikumi-line-end\">，</span>但是现在开公司<span class=\"mojikumi-line-end\">，</span>过得比他爽<span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<p>听说助教因为昨晚答疑到太晚<span class=\"mojikumi-line-end\">，</span>今天没吃早饭<span class=\"mojikumi-line-end\">，</span>早八还一直搞到 11:30<span class=\"mojikumi-line-end\">，</span>还蛮惨的<span class=\"mojikumi-line-end\">。</span>下午助教是准点到的教室<span class=\"mojikumi-line-end\">，</span>于是没能在课前查完<span class=\"mojikumi-line-end\">，</span>但其实一讲完课就查也没差太多<span class=\"mojikumi-line-end\">。</span></p>\n<p>老师<span class=\"mojikumi-line-end\">：</span>你们是不是觉得提高要求就是必做的？明年干脆把提高要求取消了<span class=\"mojikumi-line-end\">，</span>解决不了问题可以让问题消失<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"耳机线收纳测验\" class=\"heading\"><a href=\"#耳机线收纳测验\" class=\"heading-anchor\" aria-label=\"章节： 耳机线收纳测验\" tabindex=\"-1\"></a><span><s>耳机线收纳测验</s></span></h3>\n<p>40min 速通了考试<span class=\"mojikumi-line-end\">，</span>但考完上交实验箱<span class=\"mojikumi-line-end\">，</span>收拾了半小时导线<span class=\"mojikumi-line-end\">，</span>成了最后几个走的<span class=\"mojikumi-line-start\">（</span></p>\n<p><s>真不懂线为啥要捆起来<span class=\"mojikumi-line-end\">，</span>白费力气<span class=\"mojikumi-line-end\">，</span>到时候抽出来也麻烦<span class=\"mojikumi-line-start\">（</span></s></p>\n<h2 id=\"数设\" class=\"heading\"><a href=\"#数设\" class=\"heading-anchor\" aria-label=\"章节： 数设\" tabindex=\"-1\"></a><span>数设</span></h2>\n<h3 id=\"数设第二次课\" class=\"heading\"><a href=\"#数设第二次课\" class=\"heading-anchor\" aria-label=\"章节： 数设第二次课\" tabindex=\"-1\"></a><span>数设第二次课</span></h3>\n<p>这节课讲了一堆数电背后的模电原理<span class=\"mojikumi-line-end\">，</span>而且还是 TTL 电路<span class=\"mojikumi-line-end\">，</span>不是 DDPP5 放在第 14 章的 CMOS<span class=\"mojikumi-line-end\">。</span>感觉完全没听懂<span class=\"mojikumi-line-end\">，</span>只不过说到底这一节是物理课不是计算机课<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>后面又说讲的大部分东西不考<span class=\"mojikumi-line-end\">，</span>讲这些是为了补充一些数字电路发展的历史<span class=\"mojikumi-line-end\">，</span>弥补思维上的跳跃<span class=\"mojikumi-line-end\">。</span></p>\n<p>我是完全没听懂<span class=\"mojikumi-line-end\">，</span>其他同学大概也是没完全听懂<span class=\"mojikumi-line-end\">。</span>老师吐槽说<span class=\"mojikumi-line-end\">，</span>现在我们培养方案里电路知识几乎为零<span class=\"mojikumi-line-end\">，</span>数设要从头开始讲<span class=\"mojikumi-line-end\">，</span>不像他们那时候<span class=\"mojikumi-line-end\">，</span>本科上五年<span class=\"mojikumi-line-end\">，</span>什么物理都学了<span class=\"mojikumi-line-end\">。</span>本来我还在想<span class=\"mojikumi-line-end\">，</span>为什么我们只能上四年甚至三年<span class=\"mojikumi-line-end\">，</span>要学这么多东西<span class=\"mojikumi-line-end\">，</span>结果老师说他五年修了双学位 600+ 学分<span class=\"mojikumi-line-end\">，</span>而且学分是和现在一样的学时<span class=\"mojikumi-line-end\">，</span>震撼全班<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"数设与数电\" class=\"heading\"><a href=\"#数设与数电\" class=\"heading-anchor\" aria-label=\"章节： 数设与数电\" tabindex=\"-1\"></a><span>数设与数电</span></h3>\n<p>在软工课上被数电同学问了作业<span class=\"mojikumi-line-end\">，</span>先是被问了没学清楚的<span class=\"mojikumi-line-end\">，</span>后面又被问了数设没讲的内容<span class=\"mojikumi-line-end\">。</span>没想到这么早就体验到了被数电同学问懵<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"关于-ddpp\" class=\"heading\"><a href=\"#关于-ddpp\" class=\"heading-anchor\" aria-label=\"章节： 关于 DDPP\" tabindex=\"-1\"></a><span>关于 DDPP</span></h3>\n<p>其实我开学后有看一点 DDPP<span class=\"mojikumi-line-end\">，</span>感觉还是比上课讲的科学许多<span class=\"mojikumi-line-start\">（</span><s>比如说上课的时候去写软工了<span class=\"mojikumi-line-end\">，</span>课后看一下 DDPP 会感觉比上课讲的易懂很多<span class=\"mojikumi-line-end\">，</span>比中文教材易懂 <a href=\"https://mp.weixin.qq.com/s/8qZ2bEIVyUGQYmNt6kCicg\">super 多</a></s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>但没有从头到尾看全<span class=\"mojikumi-line-end\">，</span>也没写笔记<span class=\"mojikumi-line-end\">。</span>一方面是时间都被软工占了<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>还有就是 DDPP 和上课讲的内容多少有一些差异<span class=\"mojikumi-line-end\">，</span>要是学多了感觉会搞混<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"考前\" class=\"heading\"><a href=\"#考前\" class=\"heading-anchor\" aria-label=\"章节： 考前\" tabindex=\"-1\"></a><span>考前</span></h3>\n<p><span class=\"mojikumi-line-start\">《</span>我怕你们都考 100 分学校找我麻烦<span class=\"mojikumi-line-end\">》</span></p>\n<p><span class=\"mojikumi-line-start\">《</span>实验做的最好的两个组直接 A+<span class=\"mojikumi-line-end\">，</span>就算考试交白卷都还有拿 A+ 的机会<span class=\"mojikumi-line-end\">》</span></p>\n<p><span class=\"mojikumi-line-start\">《</span>不要 15min 就做完了<span class=\"mojikumi-line-end\">》</span></p>\n<h3 id=\"考试\" class=\"heading\"><a href=\"#考试\" class=\"heading-anchor\" aria-label=\"章节： 考试\" tabindex=\"-1\"></a><span>考试</span></h3>\n<p>难度还好<span class=\"mojikumi-line-end\">，</span>有一题的题意理解有点神秘<span class=\"mojikumi-line-end\">，</span>但老师说只要能说得通都算对 🤔 考完大家都在吐槽一个考课件细节的填空题<span class=\"mojikumi-line-start\">（</span>分不多<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>幸好我是上午刚看的课件<span class=\"mojikumi-line-end\">，</span>要是前一天看的估计就不会做了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"第一次实验课\" class=\"heading\"><a href=\"#第一次实验课\" class=\"heading-anchor\" aria-label=\"章节： 第一次实验课\" tabindex=\"-1\"></a><span>第一次实验课</span></h3>\n<p>这次又在连上板子这一步出了问题<span class=\"mojikumi-line-end\">，</span>又是线的问题<span class=\"mojikumi-line-end\">，</span>但幸好不是没插好<span class=\"mojikumi-line-end\">，</span>而是线真的坏了<span class=\"mojikumi-line-start\">（</span></p>\n<p>成功把 VGA 显示的样例跑起来之后就开始啥都不懂但是魔改参数<span class=\"mojikumi-line-end\">，</span>很难不想起小学第一次去上机器人课的时候也是这样<span class=\"mojikumi-line-start\">（</span></p>\n<p>不能把板子带回寝室<span class=\"mojikumi-line-end\">，</span>要在板子上调都得跑来东主楼<span class=\"mojikumi-line-end\">，</span>稍微有点难顶<span class=\"mojikumi-line-start\">（</span></p>\n<p><span class=\"mojikumi-line-start\">《</span>不要在实验室过夜<span class=\"mojikumi\">》</span><span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"折腾外设\" class=\"heading\"><a href=\"#折腾外设\" class=\"heading-anchor\" aria-label=\"章节： 折腾外设\" tabindex=\"-1\"></a><span>折腾外设</span></h3>\n<p>background<span class=\"mojikumi-line-end\">：</span>我们组想做的是腿部动作控制<span class=\"mojikumi-line-start\">（</span>类似健身环<span class=\"mojikumi-line-end\">）</span>的 Chrome 小恐龙<span class=\"mojikumi-line-end\">。</span></p>\n<p>外设太难了<span class=\"mojikumi-line-end\">，</span>下次让我选一定只用键盘<span class=\"mojikumi-line-start\">（</span></p>\n<p>一开始先是排针没焊接<span class=\"mojikumi-line-end\">，</span>接触非常不良<span class=\"mojikumi-line-start\">（</span>几乎没有<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>等到五一结束老师回学校了才焊<span class=\"mojikumi-line-end\">。</span>老师帮忙焊了一个<span class=\"mojikumi-line-end\">，</span>让我自己焊了剩下两个<span class=\"mojikumi-line-end\">，</span>结果焊了三回 <s>啊三回</s> 才焊好<span class=\"mojikumi-line-end\">。</span>yysy 要是能有一些电子垃圾用来练手的话<span class=\"mojikumi-line-end\">，</span>还挺简单的<span class=\"mojikumi-line-end\">，</span>但直接在生产环境上练习实在是有点可怕<span class=\"mojikumi-line-start\">（</span></p>\n<p>然后是 USB 转 TTL 模块忘接地了<span class=\"mojikumi-line-end\">，</span>毕竟它不用连电源<span class=\"mojikumi-line-end\">，</span>于是就忘了<span class=\"mojikumi-line-start\">（</span></p>\n<p>最后是纽扣电池电流太小<span class=\"mojikumi-line-end\">，</span>带不动传感器和无线模块<span class=\"mojikumi-line-end\">，</span>还是只能换成充电宝供电<span class=\"mojikumi-line-end\">，</span>纽扣电池<span class=\"mojikumi-line-end\">、</span>电池盒<span class=\"mojikumi-line-end\">、</span>稳压模块通通白买了<span class=\"mojikumi-line-start\">（</span></p>\n<p>说起来还挺简单的<span class=\"mojikumi-line-end\">，</span>但要发现问题在哪真的好难<span class=\"mojikumi-line-end\">，</span>一会儿怀疑模块烧了<span class=\"mojikumi-line-end\">，</span>一会儿怀疑是面包板不行<span class=\"mojikumi-line-end\">，</span>一会儿怀疑是线不行<span class=\"mojikumi-line-end\">，</span>发现是带不动了还以为是电压没到 3.2V<span class=\"mojikumi-line-end\">，</span>还得查各个模块的规格<span class=\"mojikumi-line-end\">，</span>以及想到去查纽扣电池的规格<span class=\"mojikumi-line-end\">。</span></p>\n<p>最后终于调通了<span class=\"mojikumi-line-end\">，</span>试着绑在腿上跑跑跳跳<span class=\"mojikumi-line-end\">，</span>看着凌乱的数据图<span class=\"mojikumi-line-end\">，</span>还是决定放弃跑动的检测以及跳跃高度的计算<span class=\"mojikumi-line-end\">，</span>只保留固定高度的跳以及下蹲<span class=\"mojikumi-line-end\">，</span>有时间再说<span class=\"mojikumi-line-start\">（</span></p>\n<p>连到板子上时还遇到一个神秘的坑<span class=\"mojikumi-line-end\">，</span>Pmod 接口有编号为 1~12 的接口<span class=\"mojikumi-line-end\">，</span>其中 5<span class=\"mojikumi-line-end\">、</span>6<span class=\"mojikumi-line-end\">、</span>11<span class=\"mojikumi-line-end\">、</span>12 是电源和地<span class=\"mojikumi-line-end\">，</span>1<span class=\"mojikumi-line-end\">、</span>2<span class=\"mojikumi-line-end\">、</span>3<span class=\"mojikumi-line-end\">、</span>4<span class=\"mojikumi-line-end\">、</span>7<span class=\"mojikumi-line-end\">、</span>8<span class=\"mojikumi-line-end\">、</span>9<span class=\"mojikumi-line-end\">、</span>10 分别是 IO0~IO7<span class=\"mojikumi-line-end\">，</span>结果我以为 1 是 IO1<span class=\"mojikumi-line-end\">，</span>调了半天<span class=\"mojikumi-line-end\">，</span>绷不住了<span class=\"mojikumi-line-start\">（</span></p>\n<p>来张图<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span><s>电源的四根线的颜色请不要在意</s><span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/dino-peripheral.b92c3966.webp\"><img srcset=\"/assets/dino-peripheral.83707324.jpeg\" loading=\"lazy\" src=\"/assets/dino-peripheral.83707324.jpeg\" width=\"1736\" height=\"2312\" alt=\"外设效果图\"></picture></p>\n<p>这个连接就非常不稳定<span class=\"mojikumi-line-end\">，</span>跳几下就会松<span class=\"mojikumi-line-end\">，</span><s>抚摸</s> 一下这些线就又好了<span class=\"mojikumi-line-end\">，</span>过段时间还得按一下充电宝开关<span class=\"mojikumi-line-end\">，</span>之后再看怎么解决<span class=\"mojikumi-line-end\">。</span></p>\n<p>UPD<span class=\"mojikumi-line-end\">：</span><s>每次都要抚摸实在是太不乖了<span class=\"mojikumi-line-end\">，</span>给它捆绑了一下就老实多了（<span class=\"mojikumi\">（</span></s> <span class=\"heimu\">虽然这么开玩笑<span class=\"mojikumi-line-end\">，</span>我其实挺讨厌捆绑的<span class=\"mojikumi-line-end\">，</span>哪怕是二次元捆绑图也生理上就感到厌恶<span class=\"mojikumi-line-end\">，</span><s>这是可以说的吗</s></span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/dino-peripheral-with-tape.3af2111e.webp\"><img srcset=\"/assets/dino-peripheral-with-tape.94746cc0.jpeg\" loading=\"lazy\" src=\"/assets/dino-peripheral-with-tape.94746cc0.jpeg\" width=\"1736\" height=\"2312\" alt=\"外设绑胶带\"></picture></p>\n<p>UPD2<span class=\"mojikumi-line-end\">：</span>刚绑上的时候还挺好的<span class=\"mojikumi-line-end\">，</span>过了几天又寄了<span class=\"mojikumi-line-end\">。</span></p>\n<p>UPD3<span class=\"mojikumi-line-end\">：</span>最后还是焊上了<span class=\"mojikumi-line-end\">，</span>永远不要相信没有焊上的连线<span class=\"mojikumi-line-start\">（</span></p>\n<h3 id=\"调教-vga\" class=\"heading\"><a href=\"#调教-vga\" class=\"heading-anchor\" aria-label=\"章节： 调教 VGA\" tabindex=\"-1\"></a><span>调教 VGA</span></h3>\n<p>时序好难调<span class=\"mojikumi-line-start\">（</span></p>\n<p>Quartus 报的时序错误不要无视<span class=\"mojikumi-line-end\">。</span></p>\n<p>时钟频率太高容易寄<span class=\"mojikumi-line-end\">，</span>可以调低点<span class=\"mojikumi-line-end\">。</span></p>\n<p>信号跨域要处理好<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果信号偏了两三个周期<span class=\"mojikumi-line-end\">，</span>不用管它为什么会偏<span class=\"mojikumi-line-end\">，</span>把它偏回来就行<span class=\"mojikumi-line-start\">（</span></p>\n<p>尽量不要用组合逻辑输出<span class=\"mojikumi-line-end\">，</span>可以加个 buffer<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"展示\" class=\"heading\"><a href=\"#展示\" class=\"heading-anchor\" aria-label=\"章节： 展示\" tabindex=\"-1\"></a><span>展示</span></h3>\n<p>最后一天改 slide 的时候一大半的时间花在了 p 这个图标<span class=\"mojikumi-line-end\">，</span>好想用 StyleDrop<span class=\"mojikumi-line-start\">（</span></p>\n<p><span class=\"mojikumi-line-start\">（</span>这是个 <code>&#x3C;iframe></code><span class=\"mojikumi-line-end\">，</span>可以翻页<span class=\"mojikumi-line-end\">）</span></p>\n<iframe class=\"w-full aspect-video\" style=\"color-scheme: light;\" src=\"/static/digital-design/index.html\"></iframe>",
            "url": "https://ouuan.moe/post/2023/03/digital-logic",
            "title": "数字逻辑实验到底是数电实验还是数设实验（x",
            "summary": "\n\n\n\n\n<p>谁会愿意天天用一个课六个字的全名来叫它呢<span class=\"mojikumi-line-end\">，</span>但是数字逻辑电路是数电<span class=\"mojikumi-line-end\">，</span>数字逻辑设计是数设<span class=\"mojikumi-line-end\">，</span>数字逻辑实验总不能是 <code>/数[字逻]?实验?/</code><span class=\"mojikumi-line-end\">，</span>但叫它数电实验或者数设实验好像都不太对<span class=\"mojikumi-line-end\">，</span>草<span class=\"mojikumi-line-start\">（</span></p>\n<p>上课的时候也是<span class=\"mojikumi-line-end\">，</span>老师一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你是数设的同学<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>一会儿一个<span class=\"mojikumi-line-start\">“</span>如果你没报上数设但想把数电学成数设<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>这课也太乱了<span class=\"mojikumi-line-start\">（</span></p>\n<p>我写游记都得把两个课放一起写<span class=\"mojikumi-line-end\">，</span>课就不能合成一个吗<span class=\"mojikumi-line-start\">（</span></p>\n",
            "date_modified": "2023-03-02T03:46:54.000Z",
            "tags": [
                "digital-design",
                "学习记录"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/02/typography-tricks",
            "content_html": "\n\n<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class=\"mojikumi\">（</span><s>hopefully</s><span class=\"mojikumi\">）</span> 排版<span class=\"mojikumi-line-end\">，</span>在这整理一下<span class=\"mojikumi-line-end\">，</span>分享出来<span class=\"mojikumi-line-end\">，</span>也是怕几年<span class=\"mojikumi-line-start\">（</span><s>几天</s><span class=\"mojikumi-line-end\">）</span>后想不起来这些奇怪的东西是在干什么<span class=\"mojikumi-line-end\">。</span></p>\n<p>主要是 text justify 相关和标点挤压相关<span class=\"mojikumi-line-end\">。</span></p>\n\n<p>我博客的 Markdown 渲染基于 <a href=\"https://github.com/unifiedjs/unified\">unified</a><span class=\"mojikumi-line-end\">，</span>所以下面的一些优化是以 unified 插件<span class=\"mojikumi-line-start\">（</span>remark / remark-rehype / rehype 插件<span class=\"mojikumi-line-end\">）</span>的形式实现的<span class=\"mojikumi-line-end\">。</span></p>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-orange-1 dark:bg-orange-9 b-orange\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h2 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-alert-circle-outline text-orange\" data-v-a2ab257f></span><!--v-if--><span data-v-a2ab257f>Warning</span></h2><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>为了直观地进行演示<span class=\"mojikumi-line-end\">，</span>本文可能会在提到一个问题的段落通过设置文本和 CSS 特意制造出相应的问题<span class=\"mojikumi-line-end\">，</span>并禁用对这个问题的处理措施以将问题展示出来<span class=\"mojikumi-line-end\">。</span></p></div></div></aside>\n<h2 id=\"text-justify-相关\" class=\"heading\"><a href=\"#text-justify-相关\" class=\"heading-anchor\" aria-label=\"章节： text justify 相关\" tabindex=\"-1\"></a><span>text justify 相关</span></h2>\n<p>在每行的宽度略有差异时<span class=\"mojikumi-line-end\">，</span><a href=\"https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#line_adjustment\">使用两端对齐会让中文排版更加美观</a><span class=\"mojikumi-line-end\">，</span>这一般通过 <a href=\"https://developer.mozilla.org/docs/Web/CSS/text-align\"><code>text-align</code> CSS 属性</a> 的 <code>justify</code> 选项实现<span class=\"mojikumi-line-end\">。</span>但由于网页排版的不确定性<span class=\"mojikumi-line-end\">，</span>每行的宽度可能不是略有差异而是有很大差异<span class=\"mojikumi-line-end\">，</span>这时使用 text justify 就会造成过大的空隙<span class=\"mojikumi-line-end\">，</span>所以需要避免出现过短的行<span class=\"mojikumi-line-end\">，</span>或者在有必要时禁用 text justify<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"langzh-cn-对-text-justify-的影响\" class=\"heading\"><a href=\"#langzh-cn-对-text-justify-的影响\" class=\"heading-anchor\" aria-label=\"章节： lang=&#x22;zh-CN&#x22; 对 text justify 的影响\" tabindex=\"-1\"></a><span>lang=\"zh-CN\" 对 text justify 的影响</span></h3>\n<p>这个并不是 trick<span class=\"mojikumi-line-end\">，</span>是基操<span class=\"mojikumi-line-end\">，</span>但挺重要的<span class=\"mojikumi-line-end\">，</span>还是写在这<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果没有将 HTML 的 <a href=\"https://developer.mozilla.org/docs/Web/HTML/Global_attributes/lang\"><code>lang</code> 属性</a> 设为中文<span class=\"mojikumi-line-end\">，</span>在 Firefox 109<span class=\"mojikumi-line-start\">（</span>以及其他版本 / 其他浏览器<span class=\"mojikumi-line-end\">，</span>但不包括 Chrome 109<span class=\"mojikumi-line-end\">）</span>中就会按照英文的规则<span class=\"mojikumi-line-end\">，</span>将连续的汉字视作一个单词<span class=\"mojikumi-line-end\">，</span>而只在词与词之间增大间距<span class=\"mojikumi-line-end\">，</span>不改变汉字之间的间距<span class=\"mojikumi-line-end\">，</span>如下所示<span class=\"mojikumi-line-end\">：</span></p>\n<p lang=\"en\" style=\"margin: auto; width: 12em; border: gray solid 1px;\">这是一个设置了 <code>lang=\"en\"</code> 和固定宽度的段落<span class=\"mojikumi-line-end\">，</span>这是一个 loooooooooooooooong word<span class=\"mojikumi-line-end\">。</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/firefox-text-justify-en.e05e8739.webp\"><img srcset=\"/assets/firefox-text-justify-en.2157e1dd.png\" loading=\"lazy\" src=\"/assets/firefox-text-justify-en.2157e1dd.png\" width=\"243\" height=\"162\" alt=\"上面的 lang 设为 en 的段落在 Firefox 109 中的渲染效果\"></picture></p>\n<p>其中<span class=\"mojikumi-line-end\">，</span>第一行没有两端对齐<span class=\"mojikumi-line-end\">，</span>而第三行只在逗号后面增加了间距<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果设置了 <code>lang<wbr>=\"<wbr>zh<wbr>-<wbr>CN<wbr>\"</code> 则会在汉字间添加间距<span class=\"mojikumi-line-end\">：</span></p>\n<p lang=\"zh-CN\" style=\"margin: auto; width: 12em; border: gray solid 1px;\">这是一个设置了 <code>lang=\"zh-CN\"</code> 和固定宽度的段落<span class=\"mojikumi-line-end\">，</span>这是一个 loooooooooooooooong word<span class=\"mojikumi-line-end\">。</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/firefox-text-justify-zh-CN.5f0808bf.webp\"><img srcset=\"/assets/firefox-text-justify-zh-CN.b7336c2c.png\" loading=\"lazy\" src=\"/assets/firefox-text-justify-zh-CN.b7336c2c.png\" width=\"245\" height=\"161\" alt=\"上面的 lang 设为 zh-CN 的段落在 Firefox 109 中的渲染效果\"></picture></p>\n<p>当然<span class=\"mojikumi-line-end\">，</span>设置 HTML 的 <code>lang</code> 属性还有其他作用<span class=\"mojikumi-line-end\">，</span>不管怎么样总是得设一个的<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"断开过长的行内代码\" class=\"heading\"><a href=\"#断开过长的行内代码\" class=\"heading-anchor\" aria-label=\"章节： 断开过长的行内代码\" tabindex=\"-1\"></a><span>断开过长的行内代码</span></h3>\n<p>有时候会遇到一些 <code style=\"word-break: normal;\">veryLoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongInlineCode</code><span class=\"mojikumi-line-end\">，</span>为了让它不断开<span class=\"mojikumi-line-end\">，</span>前面的一行就会非常短<span class=\"mojikumi-line-end\">，</span>justify 后间隙就非常大<span class=\"mojikumi-line-end\">。</span>当然<span class=\"mojikumi-line-end\">，</span>这样的问题不局限于行内代码<span class=\"mojikumi-line-end\">，</span>但正常的英文很少会遇到特别长的单词<span class=\"mojikumi-line-end\">，</span>代码则经常遇到<span class=\"mojikumi-line-end\">，</span>所以我选择对代码进行处理<span class=\"mojikumi-line-start\">（</span>主要是因为不需要分词套 <code>&#x3C;span></code><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>思路很简单<span class=\"mojikumi-line-end\">，</span>就是把过长的 <code>:not(pre) > code</code> 通过 <a href=\"https://developer.mozilla.org/docs/Web/HTML/Element/wbr\"><code>&#x3C;wbr></code></a> 或者 <a href=\"https://developer.mozilla.org/docs/Web/CSS/word-break\"><code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code></a> 断开<span class=\"mojikumi-line-end\">，</span>让它不可断开的部分没那么长<span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">：</span><code>&#x3C;<wbr>code<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>: &#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>-&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;/<wbr>code<wbr>></code><span class=\"mojikumi-line-end\">、</span><code>&#x3C;<wbr>code<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>word<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;: &#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>break<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;-&#x26;<wbr>lt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>wbr<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;<wbr>wbr<wbr>><wbr>all<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>lt<wbr>;/&#x3C;<wbr>wbr<wbr>><wbr>code<wbr>&#x3C;<wbr>wbr<wbr>>&#x26;<wbr>gt<wbr>;&#x3C;/<wbr>code<wbr>></code>……<span class=\"mojikumi-line-start\">（</span><s>禁止禁止套娃</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>具体实现<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/iles-blog/blob/master/src/rehype/breakLongCode.ts\"><code>breakLongCode<wbr>.<wbr>ts</code></a></p>\n<ol>\n<li>如果按空格分开没有超过 10 个字符的部分<span class=\"mojikumi-line-end\">，</span>不进行处理<span class=\"mojikumi-line-end\">；</span></li>\n<li>如果按正则表达式的 <code>\\b</code> 分开没有超过 12 个字符的部分<span class=\"mojikumi-line-end\">，</span>则在 <code>\\b</code> 处插入 <code>&#x3C;wbr></code><span class=\"mojikumi-line-end\">；</span></li>\n<li>如果按 <code>\\b</code> 以及下划线分开没有超过 15 个字符的部分<span class=\"mojikumi-line-end\">，</span>则在相应位置插入 <code>&#x3C;wbr></code><span class=\"mojikumi-line-end\">；</span></li>\n<li>否则<span class=\"mojikumi-line-end\">，</span>没救了<span class=\"mojikumi-line-end\">，</span>直接 <code>word<wbr>-<wbr>break<wbr>: <wbr>break<wbr>-<wbr>all</code><span class=\"mojikumi-line-end\">。</span></li>\n</ol>\n<p>当然这个粗糙的处理方式还是有一些问题<span class=\"mojikumi-line-end\">，</span>比如从上面的示例就可以看出来<span class=\"mojikumi-line-end\">，</span>期望结果可能是 <code>&#x3C;wbr></code> / <code>&#x3C;code></code> 不被断开<span class=\"mojikumi-line-end\">，</span>但实际上会在 <code>&#x3C;</code> 后 / <code>></code> 前断开<span class=\"mojikumi-line-end\">。</span></p>\n<p>UPD<span class=\"mojikumi-line-end\">：</span>链接也可以用同样的方法进行处理<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"在小屏幕上对窄的元素禁用-text-justify\" class=\"heading\"><a href=\"#在小屏幕上对窄的元素禁用-text-justify\" class=\"heading-anchor\" aria-label=\"章节： 在小屏幕上对窄的元素禁用 text justify\" tabindex=\"-1\"></a><span>在小屏幕上对窄的元素禁用 text justify</span></h3>\n<p style=\"margin: auto; width: 7em; border: gray solid 1px;\">有的时候容器宽度太小<span class=\"mojikumi-line-end\">，</span>即使是正常的普通文本也不适合进行 text justify<span class=\"mojikumi-line-end\">。</span></p>\n<p>我选择了一个非常简单粗暴的处理方法<span class=\"mojikumi-line-end\">：</span>认为窄的元素 = 小屏幕上嵌套了多级的元素<span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"css 代码块\" data-v-ad49d235>css</h4><ile-root id=\"ile-23\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-23--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C5E478\">.article-style</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #80CBC4\">text-align</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #FF6363\">justify</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span>\n<span><span style=\"color: #C5E478\">.article-style</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">&gt;</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">*</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">&gt;</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">*</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #80CBC4\">text-align</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #FF6363\">initial</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span>\n<span><span style=\"color: #C792EA\">@media</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #D9F5DD\">(</span><span style=\"color: #80CBC4\">min-width</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #F78C6C\">40</span><span style=\"color: #FFEB95\">em</span><span style=\"color: #D9F5DD\">)</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">.article-style</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">&gt;</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">*</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">&gt;</span><span style=\"color: #C792EA\"> </span><span style=\"color: #7FDBCA\">*</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #80CBC4\">text-align</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #FF6363\">inherit</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  }</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #4876D6\">.article-style</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #0C969B\">text-align</span><span style=\"color: #403F53\">: </span><span style=\"color: #C96765\">justify</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">}</span></span>\n<span><span style=\"color: #4876D6\">.article-style</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">&gt;</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">*</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">&gt;</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">*</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #0C969B\">text-align</span><span style=\"color: #403F53\">: </span><span style=\"color: #C96765\">initial</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">}</span></span>\n<span><span style=\"color: #994CC3\">@media</span><span style=\"color: #403F53\"> </span><span style=\"color: #111111\">(</span><span style=\"color: #0C969B\">min-width</span><span style=\"color: #403F53\">: </span><span style=\"color: #AA0982\">40em</span><span style=\"color: #111111\">)</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">.article-style</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">&gt;</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">*</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">&gt;</span><span style=\"color: #994CC3\"> </span><span style=\"color: #0C969B\">*</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #0C969B\">text-align</span><span style=\"color: #403F53\">: </span><span style=\"color: #C96765\">inherit</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  }</span></span>\n<span><span style=\"color: #403F53\">}</span></span></code></pre></div></section>\n<p><span class=\"mojikumi-line-start\">（</span>上面放的是编译出来的 CSS<span class=\"mojikumi-line-end\">，</span><a href=\"https://github.com/ouuan/iles-blog/blob/master/src/styles/article.scss\">源码</a>是使用 UnoCSS 的 SCSS<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>一些细节<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>使用 <code>*</code> 选择器<span class=\"mojikumi-line-end\">，</span><a href=\"https://developer.mozilla.org/docs/Web/CSS/Specificity\">specificity</a> 很低<span class=\"mojikumi-line-end\">，</span>便于 override<span class=\"mojikumi-line-end\">。</span></li>\n<li>只选择 <code>> * > *</code> 而非 <code> * *</code><span class=\"mojikumi-line-end\">，</span>这样的话嵌套更深的元素依然从 parent 继承 <code>text-align</code><span class=\"mojikumi-line-end\">，</span>就可以设置 CSS override 掉一整个子树<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>之前我一度以为 katex 不自带行间公式居中<span class=\"mojikumi-line-end\">，</span>后来发现是被我的 CSS 改掉了 <code>text-align</code><span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></li>\n<li>使用 <code>inherit</code> 而非 <code>justify</code> 进行撤销<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h3 id=\"对包含过长行内公式的元素禁用-text-justify\" class=\"heading\"><a href=\"#对包含过长行内公式的元素禁用-text-justify\" class=\"heading-anchor\" aria-label=\"章节： 对包含过长行内公式的元素禁用 text justify\" tabindex=\"-1\"></a><span>对包含过长行内公式的元素禁用 text justify</span></h3>\n<p>除了 <code>行内代码</code><span class=\"mojikumi-line-end\">，</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>行内公式</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{行内公式}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">行内公式</span></span></span></span></span></span> 也是常见的过长的不可断元素<span class=\"mojikumi-line-end\">。</span>这里我采用了一个本文最 dirty 的处理方式<span class=\"mojikumi-line-end\">：</span>在客户端通过 JavaScript 检测宽度过大的行内公式<span class=\"mojikumi-line-end\">。</span></p>\n<p>具体实现<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/iles-blog/blob/master/src/components/TextJustifyFix.vue\"><code>TextJustifyFix<wbr>.<wbr>vue</code></a></p>\n<ul>\n<li>只修改 <code>text<wbr>-<wbr>align<wbr>: <wbr>justify</code> 的元素<span class=\"mojikumi-line-end\">，</span>如果已经设置为其他对齐方式<span class=\"mojikumi-line-start\">（</span>例如表格中的居中对齐<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>就不应修改<span class=\"mojikumi-line-end\">。</span></li>\n<li>使用了 <a href=\"https://developer.mozilla.org/docs/Web/API/FontFaceSet/ready\"><code>document<wbr>.<wbr>fonts<wbr>.<wbr>ready</code></a> 来等待字体全部加载好再检查宽度<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h2 id=\"标点挤压\" class=\"heading\"><a href=\"#标点挤压\" class=\"heading-anchor\" aria-label=\"章节： 标点挤压\" tabindex=\"-1\"></a><span>标点挤压</span></h2>\n<p>代码实现<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/iles-blog/blob/master/src/remark/mojikumi.ts\"><code>mojikumi<wbr>.<wbr>ts</code></a><span class=\"mojikumi-line-end\">、</span><a href=\"https://github.com/ouuan/iles-blog/blob/master/src/styles/mojikumi.scss\"><code>mojikumi<wbr>.<wbr>scss</code></a><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"相邻标点的挤压\" class=\"heading\"><a href=\"#相邻标点的挤压\" class=\"heading-anchor\" aria-label=\"章节： 相邻标点的挤压\" tabindex=\"-1\"></a><span>相邻标点的挤压</span></h3>\n<p>例如<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">「</span><span class=\"no-mojikumi\"><span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">“</span><span class=\"mojikumi\">。</span><span class=\"mojikumi\">”</span><wbr><span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></span><span class=\"mojikumi-line-end\">」</span>→<span class=\"mojikumi-line-start\">「</span><span><span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">“</span><span class=\"mojikumi\">。</span><span class=\"mojikumi\">”</span><wbr><span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></span><span class=\"mojikumi\">」</span><span class=\"mojikumi-line-end\">。</span>当然本页其他地方也有一些例子<span class=\"mojikumi-line-end\">。</span></p>\n<p>具体规则 <a href=\"https://www.w3.org/TR/2022/DNOTE-clreq-20221009/#compression_rules_for_consecutive_punctuation_marks\">clreq</a> 中说的比较模糊<span class=\"mojikumi-line-end\">，</span>可以参考 <a href=\"https://www.w3.org/TR/2020/NOTE-jlreq-20200811/#positioning_of_consecutive_opening_brackets_closing_brackets_comma_full_stops_and_middle_dots\">jlreq</a><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"使用-css-去除标点的一半空白\" class=\"heading\"><a href=\"#使用-css-去除标点的一半空白\" class=\"heading-anchor\" aria-label=\"章节： 使用 CSS 去除标点的一半空白\" tabindex=\"-1\"></a><span>使用 CSS 去除标点的一半空白</span></h3>\n<p>CSS 实现标点挤压有两种方式<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>使用 <a href=\"https://developer.mozilla.org/docs/Web/CSS/letter-spacing\"><code>letter<wbr>-<wbr>spacing<wbr>: -<wbr>0<wbr>.<wbr>5em</code></a> 去掉右侧空白<span class=\"mojikumi-line-end\">，</span><code>margin<wbr>-<wbr>left<wbr>: -<wbr>0<wbr>.<wbr>5em</code> 去掉左侧空白<span class=\"mojikumi-line-end\">。</span></li>\n<li>使用 <a href=\"https://developer.mozilla.org/docs/Web/CSS/font-feature-settings\"><code>font<wbr>-<wbr>feature<wbr>-<wbr>settings<wbr>:</code></a> <a href=\"https://learn.microsoft.com/typography/opentype/spec/features_fj#halt\"><code>\"halt\"</code></a> 将支持 halt 特性的字体变为半宽<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>使用 <code>letter<wbr>-<wbr>spacing</code> 是有讲究的<span class=\"mojikumi-line-end\">，</span>比 <code>margin<wbr>-<wbr>right</code> 靠谱<span class=\"mojikumi-line-end\">，</span>因为字符真的会只占半宽<span class=\"mojikumi-line-end\">，</span>而不是占全宽但一半和下一个字符重叠<span class=\"mojikumi-line-end\">，</span>甚至造成 overflow<span class=\"mojikumi-line-end\">，</span>可能导致滚动条出现<span class=\"mojikumi-line-end\">。</span>但 <code>letter<wbr>-<wbr>spacing</code> 不能去掉左侧空白<span class=\"mojikumi-line-end\">，</span>就只能使用 <code>margin<wbr>-<wbr>left</code> 了<span class=\"mojikumi-line-end\">。</span></p>\n<p>通过 halt 特性变为半宽是更加靠谱的做法<span class=\"mojikumi-line-end\">，</span>但不是所有字体都支持这一特性<span class=\"mojikumi-line-end\">，</span>思源宋体是支持的<span class=\"mojikumi-line-end\">，</span><span class=\"font-kai\">霞鹜文楷</span> 不支持<span class=\"mojikumi-line-end\">。</span>并且<span class=\"mojikumi-line-end\">，</span>halt 只能变为半宽<span class=\"mojikumi-line-end\">，</span>不能变成其他宽度<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"行首行尾标点的挤压\" class=\"heading\"><a href=\"#行首行尾标点的挤压\" class=\"heading-anchor\" aria-label=\"章节： 行首行尾标点的挤压\" tabindex=\"-1\"></a><span>行首行尾标点的挤压</span></h3>\n<p>这里参考了 <a href=\"https://github.com/ethantw/Han\">Han.css</a> 的实现<span class=\"mojikumi-line-end\">，</span>就是把全宽的标点改成半宽标点和一个通过 <code>::before</code> 或 <code>::end</code> 添加的半宽的空格<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>因为是 pseudo element<span class=\"mojikumi-line-end\">，</span>所以不影响文本内容<span class=\"mojikumi-line-start\">（</span>例如复制出来的文本<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n<li>因为是空格<span class=\"mojikumi-line-end\">，</span>所以位于行首或行尾时就会发生<a href=\"https://www.w3.org/TR/2023/CRD-css-text-3-20230127/#white-space-phase-2\">空格塌陷</a><span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h3 id=\"英文标点的处理\" class=\"heading\"><a href=\"#英文标点的处理\" class=\"heading-anchor\" aria-label=\"章节： 英文标点的处理\" tabindex=\"-1\"></a><span>英文标点的处理</span></h3>\n<p>我采用了一个比较简单的判断英文标点的方法<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>空白一侧<span class=\"mojikumi-line-start\">（</span>左括号<span class=\"mojikumi-line-end\">、</span>左引号等是左侧<span class=\"mojikumi-line-end\">，</span>其他一般是右侧<span class=\"mojikumi-line-end\">）</span>是空格时是英文标点<span class=\"mojikumi-line-end\">；</span></li>\n<li>右单引号右侧是字母时是撇号<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>英文标点一般调为半宽即可<span class=\"mojikumi-line-end\">，</span>但撇号半宽还是有些太宽了<span class=\"mojikumi-line-end\">，</span>应该<span class=\"mojikumi-line-start\">（</span>根据字体而定<span class=\"mojikumi-line-end\">）</span>调成大约三分之一宽<span class=\"mojikumi-line-end\">，</span>单引号也可以调窄一点<span class=\"mojikumi-line-end\">，</span>所以可以特判一下单引号<span class=\"mojikumi-line-end\">，</span>使用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"给霞鹜文楷添加-halt-特性\" class=\"heading\"><a href=\"#给霞鹜文楷添加-halt-特性\" class=\"heading-anchor\" aria-label=\"章节： 给霞鹜文楷添加 halt 特性\" tabindex=\"-1\"></a><span>给霞鹜文楷添加 halt 特性</span></h3>\n<p>因为 <a href=\"https://github.com/lxgw/LxgwWenKai/issues/104\">添加 halt 特性的 issue</a> 被拒了<span class=\"mojikumi-line-end\">，</span>我就自己改了一个 <a href=\"https://github.com/ouuan/XiaWu-Punctuations\">标点字体</a><span class=\"mojikumi-line-end\">，</span>顺便把引号改成了和思源宋体一致的全宽以方便一起处理<span class=\"mojikumi-line-start\">（</span>也可以理解为改引号宽度顺便添加 halt 特性<span class=\"mojikumi-line-end\">，</span>毕竟没有 halt 也可以用 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code> 凑合一下<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>具体可以看仓库里的 patch 文件<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"关于-chws-特性\" class=\"heading\"><a href=\"#关于-chws-特性\" class=\"heading-anchor\" aria-label=\"章节： 关于 chws 特性\" tabindex=\"-1\"></a><span>关于 chws 特性</span></h3>\n<p><a href=\"https://learn.microsoft.com/typography/opentype/spec/features_ae#chws\">chws 特性</a> 可以根据上下文自动挤压连续标点<span class=\"mojikumi-line-end\">，</span>一眼看上去似乎比 halt 更好用<span class=\"mojikumi-line-end\">。</span></p>\n<p>思源宋体不支持这一特性<span class=\"mojikumi-line-end\">，</span>只不过有 <a href=\"https://github.com/googlefonts/chws_tool\">chws_tool</a> 可以用来转换<span class=\"mojikumi-line-end\">。</span></p>\n<p>但是<span class=\"mojikumi-line-end\">，</span>chws 不支持行首行尾标点挤压<span class=\"mojikumi-line-end\">，</span>而如果要支持行首行尾挤压<span class=\"mojikumi-line-end\">，</span>就得把支持连续标点挤压的工作做一遍<span class=\"mojikumi-line-start\">（</span>因为要知道哪些标点已经被挤成了半宽哪些只在行首行尾挤成半宽<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>这样一来 chws 就没多大意义了<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"yet-another-mojikumi？\" class=\"heading\"><a href=\"#yet-another-mojikumi？\" class=\"heading-anchor\" aria-label=\"章节： Yet another mojikumi？\" tabindex=\"-1\"></a><span>Yet another mojikumi？</span></h3>\n<p>有一些现成的支持标点挤压的库<span class=\"mojikumi-line-end\">，</span>例如 <a href=\"https://github.com/sivan/heti\">heti</a> 和 <a href=\"https://github.com/ethantw/Han\">Han.css</a><span class=\"mojikumi-line-end\">。</span>但是我有一些需求<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>要能 SSG <span class=\"mojikumi\">（</span>SSR<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>不能在客户端运行<span class=\"mojikumi-line-end\">。</span>最好是能在 remark / rehype 中进行处理<span class=\"mojikumi-line-end\">。</span></li>\n<li>最好是尽量使用 halt 而非 <code>letter<wbr>-<wbr>spacing</code> 和 <code>margin<wbr>-<wbr>left</code><span class=\"mojikumi-line-end\">。</span></li>\n<li>要能添加一些自定义的规则<span class=\"mojikumi-line-end\">，</span>比如对单引号特殊处理<span class=\"mojikumi-line-end\">。</span></li>\n<li>我只需要标点挤压<span class=\"mojikumi-line-end\">，</span>不想要一个 CSS 全家桶<span class=\"mojikumi-line-end\">，</span>或者带有其他功能的 JS<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>现有的库难以同时满足上面这些需求<span class=\"mojikumi-line-end\">，</span>所以我就自己写了<span class=\"mojikumi-line-end\">。</span></p>\n<p>本来想写一个通用的库<span class=\"mojikumi-line-end\">，</span>但通用的逻辑貌似没多少代码<span class=\"mojikumi-line-end\">，</span>不值得写成一个库<span class=\"mojikumi-line-end\">。</span>而我的整个 remark 插件又有点 opinionated<span class=\"mojikumi-line-end\">，</span>可能不太适合做成库<span class=\"mojikumi-line-start\">（</span><s>懒得做成库</s><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>想用的话可以在遵守 <a href=\"https://github.com/ouuan/iles-blog/blob/master/LICENSE\">AGPL 3.0</a> 的前提下直接复制<span class=\"mojikumi-line-start\">（</span>本文提到的其他代码也是一样<span class=\"mojikumi-line-end\">，</span>当然<span class=\"mojikumi-line-end\">，</span>如果是两三行的代码片段就不至于 AGPL 了<span class=\"mojikumi-line-end\">，</span>简单标一下出处就 OK<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"代码中的-unicode（cjk）的字体\" class=\"heading\"><a href=\"#代码中的-unicode（cjk）的字体\" class=\"heading-anchor\" aria-label=\"章节： 代码中的 Unicode（CJK）的字体\" tabindex=\"-1\"></a><span>代码中的 Unicode<span class=\"mojikumi-line-start\">（</span>CJK<span class=\"mojikumi-line-end\">）</span>的字体</span></h2>\n<p><s>为什么马上要考抽代了你在这更新博客<span class=\"mojikumi-line-end\">，</span>我也很想知道<span class=\"mojikumi-line-start\">（</span></s> 其实是在一个群里看到有人在聊博客的等宽字体<span class=\"mojikumi-line-end\">，</span>然后看了一眼自己的等宽字体<span class=\"mojikumi-line-end\">，</span>差点没想起来这个 trick 在干什么<span class=\"mojikumi-line-end\">。</span></p>\n<p>很多等宽字体是没有 CJK 字形的<span class=\"mojikumi-line-end\">，</span>在 Windows 的默认字体下<span class=\"mojikumi-line-end\">，</span>fallback 到 <code>monospace</code> 时中文会显示为<code style=\"font-family: NSimSun, SimSun, serif;\">宋体</code><span class=\"mojikumi-line-end\">，</span>而一般来说应当是<code>黑体</code><span class=\"mojikumi-line-end\">。</span>所以可以为 Unicode 部分专门指定一个 fallback font<span class=\"mojikumi-line-end\">，</span>通过指定 <code>unicode<wbr>-<wbr>range</code> 来让 ASCII 字符依然 fallback 到 <code>monospace</code><span class=\"mojikumi-line-end\">。</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"css 代码块\" data-v-ad49d235>css</h3><ile-root id=\"ile-24\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-24--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">@font-face</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #80CBC4\">font-family</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Monospace Unicode Fallback</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #80CBC4\">src</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #C5E478\">local</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Noto Sans Mono CJK SC</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">),</span></span>\n<span><span style=\"color: #D6DEEB\">       </span><span style=\"color: #C5E478\">local</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Source Han Mono SC</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">),</span></span>\n<span><span style=\"color: #D6DEEB\">       </span><span style=\"color: #C5E478\">local</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Noto Sans CJK SC</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">),</span></span>\n<span><span style=\"color: #D6DEEB\">       </span><span style=\"color: #C5E478\">local</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Source Han Sans SC</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">),</span></span>\n<span><span style=\"color: #D6DEEB\">       </span><span style=\"color: #C5E478\">local</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Microsoft YaHei</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #80CBC4\">unicode-range</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #82AAFF\">U+1000-fffff</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span>\n<span></span>\n<span><span style=\"color: #C5E478\">:root</span><span style=\"color: #D6DEEB\"> {</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C5E478\">--default-mono-font</span><span style=\"color: #D6DEEB\">: </span><span style=\"color: #7FDBCA\">ui-monospace</span><span style=\"color: #D6DEEB\">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">Monospace Unicode Fallback</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #7FDBCA\">monospace</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #C5E478\">var</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #C5E478\">--default-emoji-font</span><span style=\"color: #D6DEEB\">);</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">@font-face</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #0C969B\">font-family</span><span style=\"color: #403F53\">: </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Monospace Unicode Fallback</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #0C969B\">src</span><span style=\"color: #403F53\">: </span><span style=\"color: #4876D6\">local</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Noto Sans Mono CJK SC</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">),</span></span>\n<span><span style=\"color: #403F53\">       </span><span style=\"color: #4876D6\">local</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Source Han Mono SC</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">),</span></span>\n<span><span style=\"color: #403F53\">       </span><span style=\"color: #4876D6\">local</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Noto Sans CJK SC</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">),</span></span>\n<span><span style=\"color: #403F53\">       </span><span style=\"color: #4876D6\">local</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Source Han Sans SC</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">),</span></span>\n<span><span style=\"color: #403F53\">       </span><span style=\"color: #4876D6\">local</span><span style=\"color: #403F53\">(</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Microsoft YaHei</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #0C969B\">unicode-range</span><span style=\"color: #403F53\">: </span><span style=\"color: #4876D6\">U+1000-fffff</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">}</span></span>\n<span></span>\n<span><span style=\"color: #4876D6\">:root</span><span style=\"color: #403F53\"> {</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">--default-mono-font</span><span style=\"color: #403F53\">: </span><span style=\"color: #0C969B\">ui-monospace</span><span style=\"color: #403F53\">, DejaVu Sans Mono, Noto Sans Mono, SFMono-Regular, Menlo, Monaco, Consolas, </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">Monospace Unicode Fallback</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">, </span><span style=\"color: #0C969B\">monospace</span><span style=\"color: #403F53\">, </span><span style=\"color: #4876D6\">var</span><span style=\"color: #403F53\">(</span><span style=\"color: #4876D6\">--default-emoji-font</span><span style=\"color: #403F53\">);</span></span>\n<span><span style=\"color: #403F53\">}</span></span></code></pre></div></section>",
            "url": "https://ouuan.moe/post/2023/02/typography-tricks",
            "title": "一些博客排版优化小 trick",
            "summary": "\n\n<p>我的博客好像还用了不少奇怪的小 trick 来优化 <span class=\"mojikumi\">（</span><s>hopefully</s><span class=\"mojikumi\">）</span> 排版<span class=\"mojikumi-line-end\">，</span>在这整理一下<span class=\"mojikumi-line-end\">，</span>分享出来<span class=\"mojikumi-line-end\">，</span>也是怕几年<span class=\"mojikumi-line-start\">（</span><s>几天</s><span class=\"mojikumi-line-end\">）</span>后想不起来这些奇怪的东西是在干什么<span class=\"mojikumi-line-end\">。</span></p>\n<p>主要是 text justify 相关和标点挤压相关<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-02-09T15:19:45.000Z",
            "tags": [
                "blog",
                "CSS",
                "Web",
                "经验分享"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/01/ddpp-4",
            "content_html": "\n\n\n\n\n\n\n\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第四章 <span class=\"mojikumi\">“</span>Digital Design Practices<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为数字设计的文档规范<span class=\"mojikumi-line-end\">、</span>初步认识 circuit timing<span class=\"mojikumi-line-end\">、</span>基于 HDL 的数字设计所使用的工具与设计流程<span class=\"mojikumi-line-end\">。</span></p>\n\n<h2 id=\"documentation-standards\" class=\"heading\"><a href=\"#documentation-standards\" class=\"heading-anchor\" aria-label=\"章节： Documentation Standards\" tabindex=\"-1\"></a><span>Documentation Standards</span></h2>\n<p>一个 <dfn>document package</dfn> 通常至少包含以下内容<span class=\"mojikumi-line-end\">：</span></p>\n<dl>\n<dt>specification (<i>spec</i>)</dt>\n<dd>准确地描述系统的所有输入和输出以及功能<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>block diagram</dt>\n<dd>大致描述系统的主要模块之间的连接<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>logic-device description</dt>\n<dd>分别描述每个 <span class=\"mojikumi\">“</span>custom<span class=\"mojikumi\">”</span> logic device 的功能<span class=\"mojikumi-line-end\">，</span>这里 <span class=\"mojikumi\">“</span>custom<span class=\"mojikumi\">”</span> 是与现成的<span class=\"mojikumi-line-end\">、</span>由其他制造商生产的相对<span class=\"mojikumi-line-end\">，</span>例如 ASIC<span class=\"mojikumi-line-end\">、</span>FPGA<span class=\"mojikumi-line-end\">、</span>CPLD 等都是 custom 的<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>schematic diagram</dt>\n<dd>对每个模块的细节描述<span class=\"mojikumi-line-end\">，</span>比 <i>logic diagram</i> 更加细致<span class=\"mojikumi-line-end\">，</span>在 board-level design 中是包括 IC type<span class=\"mojikumi-line-end\">、</span>reference designator<span class=\"mojikumi-line-end\">、</span>signal name<span class=\"mojikumi-line-end\">、</span>pin number 等细节信息的电路图<span class=\"mojikumi-line-end\">，</span>在 FPGA<span class=\"mojikumi-line-end\">、</span>CPLD 中则由 HDL model 来充当这一角色<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>timing diagram</dt>\n<dd>展示各个信号随时间的变化情况<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>circuit description</dt>\n<dd>解释电路的工作原理以及注意事项<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>test plan</dt>\n<dd>如何对系统进行测试<span class=\"mojikumi-line-end\">。</span>\n</dd>\n</dl>\n<p>感觉大致上来说<span class=\"mojikumi-line-end\">，</span>与软件进行类比的话<span class=\"mojikumi-line-end\">，</span>logic-device description 像是组件的 API 文档<span class=\"mojikumi-line-end\">，</span>circuit description 像是代码内的注释<span class=\"mojikumi-line-end\">，</span>block diagram 像是整个程序的结构图<span class=\"mojikumi-line-end\">，</span>schematic 则是<span class=\"mojikumi-line-start\">“</span>代码<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span>总之<span class=\"mojikumi-line-end\">，</span>这个 document package 和软件的文档不一样<span class=\"mojikumi-line-end\">，</span>还包含 schematic 这种具体实现<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"block-diagrams\" class=\"heading\"><a href=\"#block-diagrams\" class=\"heading-anchor\" aria-label=\"章节： Block Diagrams\" tabindex=\"-1\"></a><span>Block Diagrams</span></h3>\n<p>大概就是 DDPP5 Fig.4-1 这种感觉<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-1.2330b557.webp\"><img srcset=\"/assets/ddpp-fig-4-1.9607283c.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-1.9607283c.png\" width=\"914\" height=\"856\" alt=\"block diagram for a shift-and-add multiplier\"></picture></p>\n<p>整个系统被划分为若干 component<span class=\"mojikumi-line-end\">，</span>block diagram 展示它们之间最主要的一些连线而略去细节<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 block diagram 中<span class=\"mojikumi-line-end\">，</span>信号的流动可以是任意方向的<span class=\"mojikumi-line-end\">，</span>不需要都沿一个方向<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"gate-symbols\" class=\"heading\"><a href=\"#gate-symbols\" class=\"heading-anchor\" aria-label=\"章节： Gate Symbols\" tabindex=\"-1\"></a><span>Gate Symbols</span></h3>\n<p>根据 generalized DeMorgan<span class=\"mojikumi-narrow-left\">’</span>s theorem<span class=\"mojikumi-line-end\">，</span>AND<span class=\"mojikumi-line-end\">、</span>OR<span class=\"mojikumi-line-end\">、</span>NAND<span class=\"mojikumi-line-end\">、</span>NOR<span class=\"mojikumi-line-end\">、</span>NOT (inverter)<span class=\"mojikumi-line-end\">、</span>BUFFER (non-inverting buffer) 各自都有两种不同的画法<span class=\"mojikumi-line-end\">，</span>如 DDPP5 Fig.4-4 所示<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-4.93ea8d42.webp\"><img srcset=\"/assets/ddpp-fig-4-4.0796c532.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-4.0796c532.png\" width=\"1324\" height=\"517\" alt=\"在 generalized DeMorgan&#39;s theorem 下等价的 gate symbols\"></picture></p>\n<h3 id=\"signal-names-and-active-levels\" class=\"heading\"><a href=\"#signal-names-and-active-levels\" class=\"heading-anchor\" aria-label=\"章节： Signal Names and Active Levels\" tabindex=\"-1\"></a><span>Signal Names and Active Levels</span></h3>\n<p>为了兼容更多的 HDL 和 EDA<span class=\"mojikumi-line-end\">，</span>signal name 最好不要有特殊字符<span class=\"mojikumi-line-end\">，</span>而是只使用字母<span class=\"mojikumi-line-end\">、</span>数字<span class=\"mojikumi-line-end\">、</span>下划线<span class=\"mojikumi-line-end\">，</span>以字母开头<span class=\"mojikumi-line-end\">。</span></p>\n<p>signal name 往往代表某种状态或某种操作<span class=\"mojikumi-line-end\">，</span>但并不总是在位于 HIGH 时表示相应的意思<span class=\"mojikumi-line-end\">。</span>每个 signal name 会有一个 <dfn>active level</dfn><span class=\"mojikumi-line-end\">，</span><dfn>active-high</dfn> 意味着这个 signal 位于 HIGH 时<span class=\"mojikumi-line-start\">（</span>在 positive-logic 中即为 1 时<span class=\"mojikumi-line-end\">）</span>表示这某种状态或某种操作<span class=\"mojikumi-line-end\">，</span><dfn>active-low</dfn> 则与之相反<span class=\"mojikumi-line-end\">。</span>一个 signal 位于其 active level 时<span class=\"mojikumi-line-end\">，</span>我们说它 is <dfn>asserted</dfn><span class=\"mojikumi-line-end\">，</span>反之则说它 is <dfn>negated</dfn> (<i>deasserted</i>)<span class=\"mojikumi-line-end\">。</span></p>\n<p>signal name 会以某种 naming convention 来表示其 active level<span class=\"mojikumi-line-end\">，</span>DDPP5 采用的 convention 是 active-high 保持不变<span class=\"mojikumi-line-end\">，</span>而 active-low 加上 <code>_L</code> 后缀<span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span><code>READY</code> 为 1 / <code>READY_L</code> 为 0 表示 ready<span class=\"mojikumi-line-end\">，</span><code>READY</code> 为 0 / <code>READY_L</code> 为 1 表示没有 ready<span class=\"mojikumi-line-end\">。</span></p>\n<p>一般来说 active-high 理解起来相对容易<span class=\"mojikumi-line-end\">，</span>但由于性能<span class=\"mojikumi-line-end\">、</span>兼容性等原因也经常会需要 active-low<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"active-levels-for-pins\" class=\"heading\"><a href=\"#active-levels-for-pins\" class=\"heading-anchor\" aria-label=\"章节： Active Levels for Pins\" tabindex=\"-1\"></a><span>Active Levels for Pins</span></h3>\n<p>gate 或其他 logic element 的 pin 上有 inversion bubble 时<span class=\"mojikumi-line-end\">，</span>除了理解成不同的逻辑函数<span class=\"mojikumi-line-end\">，</span>也可以理解成 active-low 的输入/输出<span class=\"mojikumi-line-end\">。</span></p>\n<p>例如<span class=\"mojikumi-line-end\">，</span>AND<span class=\"mojikumi-line-end\">、</span>NAND<span class=\"mojikumi-line-end\">、</span>NOR<span class=\"mojikumi-line-end\">、</span>OR 可以表示四种不同 active level 的 AND<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>DDPP5 Fig.4-6<span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-6.751e7c1c.webp\"><img srcset=\"/assets/ddpp-fig-4-6.ab9cd084.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-6.ab9cd084.png\" width=\"1317\" height=\"134\" alt=\"四种不同 active level 的 AND: AND, NAND, NOR, OR\"></picture></p>\n<p>因为 inverting gate 往往性能更好<span class=\"mojikumi-line-end\">，</span>可以将 noninverting gate 替换为 inverting gate<span class=\"mojikumi-line-end\">，</span>而理解成输入输出的 active level 相反的 noninverting gate<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"bubble-to-bubble-logic-design\" class=\"heading\"><a href=\"#bubble-to-bubble-logic-design\" class=\"heading-anchor\" aria-label=\"章节： Bubble-to-Bubble Logic Design\" tabindex=\"-1\"></a><span>Bubble-to-Bubble Logic Design</span></h3>\n<p>在画电路图时<span class=\"mojikumi-line-end\">，</span>尽量将 active-low 的信号连接到 inversion bubble 上<span class=\"mojikumi-line-end\">，</span>在理解电路时就可以少一些 logical negation<span class=\"mojikumi-line-start\">（</span>本质上是因为 active-low 信号的两侧都有 inversion bubble<span class=\"mojikumi-line-end\">，</span>从而能够消去<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>使电路更好理解<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"constant-logic-signals\" class=\"heading\"><a href=\"#constant-logic-signals\" class=\"heading-anchor\" aria-label=\"章节： Constant Logic Signals\" tabindex=\"-1\"></a><span>Constant Logic Signals</span></h3>\n<p>电路设计中偶尔会用到 constant 0 <span class=\"mojikumi\">（</span><i>ground</i><span class=\"mojikumi\">）</span> 和 constant 1 <span class=\"mojikumi\">（</span><i>power-supply voltage</i><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>在电路图中它们的记号如下图所示<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>DDPP5 Fig.4-9 (b))</p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-9-b.998459d0.webp\"><img srcset=\"/assets/ddpp-fig-4-9-b.84bd89c1.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-9-b.84bd89c1.png\" width=\"502\" height=\"273\" alt=\"constant 0 and 1 inputs with individual gates\"></picture></p>\n<h3 id=\"drawing-layout\" class=\"heading\"><a href=\"#drawing-layout\" class=\"heading-anchor\" aria-label=\"章节： Drawing Layout\" tabindex=\"-1\"></a><span>Drawing Layout</span></h3>\n<p>logic diagram 和 schematic 一般要从左到右画<span class=\"mojikumi-line-end\">，</span>所有输入都在最左侧<span class=\"mojikumi-line-end\">，</span>所有输出都在最右侧<span class=\"mojikumi-line-end\">。</span></p>\n<p>在线路发生交叉时<span class=\"mojikumi-line-end\">，</span>有两种区分重叠和连接的方法<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>连接处打点<span class=\"mojikumi-line-end\">，</span>重叠不打点</li>\n<li>连接都形如 ⟂ / ⊤<span class=\"mojikumi-line-end\">，</span>重叠则形如 +</li>\n</ul>\n<p>由于 schematic 需要很多细节<span class=\"mojikumi-line-end\">，</span>一张图可能画不下<span class=\"mojikumi-line-end\">，</span>有两种处理方式<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>分为多张并列的图<span class=\"mojikumi-line-end\">，</span>标注出跨越两张图的连线<span class=\"mojikumi-line-end\">。</span></li>\n<li>将图组织为树状<span class=\"mojikumi-line-start\">（</span>与 Web 前端的 component 类似<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>树根与 block diagram 类似<span class=\"mojikumi-line-end\">。</span>图中的 component 可以是另一张 schematic<span class=\"mojikumi-line-end\">，</span>也可以是 standard logic device 或者 HDL model<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h3 id=\"buses\" class=\"heading\"><a href=\"#buses\" class=\"heading-anchor\" aria-label=\"章节： Buses\" tabindex=\"-1\"></a><span>Buses</span></h3>\n<p>为了方便画图<span class=\"mojikumi-line-end\">，</span>多个并列的信号可以画成一个 <dfn>bus</dfn><span class=\"mojikumi-line-end\">。</span></p>\n<p>bus 的名字一般形如 <code>ADDR[15:0]</code><span class=\"mojikumi-line-end\">，</span>表示 <code>ADDR15</code><span class=\"mojikumi-line-end\">、</span><code>ADDR14</code><span class=\"mojikumi-line-end\">、</span>……<span class=\"mojikumi-line-end\">、</span><code>ADDR1</code><span class=\"mojikumi-line-end\">、</span><code>ADDR0</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>在图上 bus 用一条较粗的线表示<span class=\"mojikumi-line-end\">，</span>从这条粗线上连出一条细线表示从中 <span class=\"mojikumi\">“</span>pull<span class=\"mojikumi\">”</span> 出单独一个信号<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"additional-schematic-information\" class=\"heading\"><a href=\"#additional-schematic-information\" class=\"heading-anchor\" aria-label=\"章节： Additional Schematic Information\" tabindex=\"-1\"></a><span>Additional Schematic Information</span></h3>\n<p>在 board-level design 中<span class=\"mojikumi-line-end\">，</span>一个 schematic 在电路图的基础上还需要标明 IC type<span class=\"mojikumi-line-end\">、</span>reference designator<span class=\"mojikumi-line-end\">、</span>pin number 等信息<span class=\"mojikumi-line-end\">，</span>用来精确地描述电路<span class=\"mojikumi-line-end\">。</span></p>\n<p>其中<span class=\"mojikumi-line-end\">，</span>IC type 描述了 IC 的功能<span class=\"mojikumi-line-end\">，</span><dfn>reference designator</dfn> 用来在一类 IC 中指定特定的一个实例<span class=\"mojikumi-line-end\">，</span><dfn>pin number</dfn> 用来指定从哪连到哪<span class=\"mojikumi-line-end\">。</span></p>\n<p>全都标上长这样<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>DDPP5 Fig.4-18<span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-18.957dcbfd.webp\"><img srcset=\"/assets/ddpp-fig-4-18.e9c4823e.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-18.e9c4823e.png\" width=\"980\" height=\"645\" alt=\"schematic diagram for a circuit using several SSI parts\"></picture></p>\n<h2 id=\"circuit-timing\" class=\"heading\"><a href=\"#circuit-timing\" class=\"heading-anchor\" aria-label=\"章节： Circuit Timing\" tabindex=\"-1\"></a><span>Circuit Timing</span></h2>\n<p>在时序电路中<span class=\"mojikumi-line-end\">，</span>电路由一个 clock 控制<span class=\"mojikumi-line-end\">，</span>而 clock 的频率会根据完成一步操作在最坏情况下的用时来制订<span class=\"mojikumi-line-end\">，</span>所以计算<span class=\"mojikumi-line-end\">、</span>优化电路的 timing 对电路的性能和正确性都非常重要<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"timing-diagrams\" class=\"heading\"><a href=\"#timing-diagrams\" class=\"heading-anchor\" aria-label=\"章节： Timing Diagrams\" tabindex=\"-1\"></a><span>Timing Diagrams</span></h3>\n<p><i>timing diagram</i> 用来展示电路里各个信号随时间变化的情况<span class=\"mojikumi-line-end\">，</span>如 DDPP5 Fig.4-19 (b)(c) 所示<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-19-bc.303e1075.webp\"><img srcset=\"/assets/ddpp-fig-4-19-bc.010519a3.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-19-bc.010519a3.png\" width=\"907\" height=\"729\" alt=\"(b) 展示 causality 和 propagation delay 的 timing diagram (c) 展示 minimum / maximum delay 的 timing diagram\"></picture></p>\n<p>信号的转变不是瞬间发生的<span class=\"mojikumi-line-end\">，</span>从一个状态到另一个状态的用时称作 <dfn>transition time</dfn><span class=\"mojikumi-line-end\">，</span>从 LOW 到 HIGH 的用时叫做 <dfn>rise time</dfn><span class=\"mojikumi-line-end\">，</span>从 HIGH 到 LOW 的用时叫做 <dfn>fall time</dfn><span class=\"mojikumi-line-end\">。</span></p>\n<p>在图 (b) 中<span class=\"mojikumi-line-end\">，</span>不同的箭头用来表示 transition 之间的 causality <span class=\"mojikumi\">（</span>因果关系<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>有因果关系的 transition 并不是立刻一个接着一个发生<span class=\"mojikumi-line-end\">，</span>而是会有 <i>delay</i><span class=\"mojikumi-line-end\">，</span>不同的信号<span class=\"mojikumi-line-end\">、</span>路径会有不同的 delay<span class=\"mojikumi-line-end\">。</span>delay 一般是指两个 transition 各自中点的距离<span class=\"mojikumi-line-end\">。</span></p>\n<p>很多因素都会对 delay 造成影响<span class=\"mojikumi-line-end\">，</span>所以 delay 一般不是单个数字<span class=\"mojikumi-line-end\">，</span>而是一个区间<span class=\"mojikumi-line-end\">。</span>图 (c) 中标明了 minimum delay 和 maximum delay<span class=\"mojikumi-line-end\">。</span></p>\n<p>有时候 timing diagram 不需要区分 rise 和 fall<span class=\"mojikumi-line-end\">，</span>例如用来存储数据的信号<span class=\"mojikumi-line-end\">，</span>就可以如 DDPP5 Fig.4-20 (a) 这样画<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-20-a.b0a1e1fd.webp\"><img srcset=\"/assets/ddpp-fig-4-20-a.8ccddcf9.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-20-a.8ccddcf9.png\" width=\"799\" height=\"365\" alt=\"不区分 rise 和 fall 的 timing diagram\"></picture></p>\n<p>可以将一个 bus 画在一起<span class=\"mojikumi-line-end\">，</span>也可以用数字标注 bus 的取值<span class=\"mojikumi-line-end\">，</span>如 DDPP5 Fig.4-20 (b) 所示<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-4-20-b.97c7ef5b.webp\"><img srcset=\"/assets/ddpp-fig-4-20-b.d8170ed4.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-4-20-b.d8170ed4.png\" width=\"794\" height=\"229\" alt=\"将 bus 画在一起的 timing diagram\"></picture></p>\n<h3 id=\"propagation-delay\" class=\"heading\"><a href=\"#propagation-delay\" class=\"heading-anchor\" aria-label=\"章节： Propagation Delay\" tabindex=\"-1\"></a><span>Propagation Delay</span></h3>\n<p><dfn>propagation delay</dfn> 指的是电路的某个输入发生改变后沿着某个路径产生某个输出的 delay<span class=\"mojikumi-line-end\">，</span>一般记作 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mrow><mi mathvariant=\"normal\">p</mi><mi mathvariant=\"normal\">X</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">t_{\\mathrm{pX}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9012em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">pX</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>其中 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">X</mi></mrow><annotation encoding=\"application/x-tex\">\\mathrm{X}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathrm\">X</span></span></span></span></span> 用来标识这个路径<span class=\"mojikumi-line-end\">。</span></p>\n<p>影响 propagation delay 的因素有很多<span class=\"mojikumi-line-end\">，</span>例如<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>Power-supply voltage: 包括标定的电压<span class=\"mojikumi-line-end\">，</span>以及小的电压波动</li>\n<li>Temperature: 包括环境温度和电路工作产生的热量</li>\n<li>Output loading: 电路的输出可能与后续电路的很多个输入相连<span class=\"mojikumi-line-end\">，</span>连接到的输入越多<span class=\"mojikumi-line-end\">，</span>将信号传递过去就用时越长</li>\n<li>Input rise and fall times: 如果输入的 transition 慢<span class=\"mojikumi-line-end\">，</span>也会计入 propagation delay</li>\n<li>Transition direction: 有时 rise 和 fall 的用时会不同</li>\n<li>Speed-of-light delays: 如果电路的物理尺寸大<span class=\"mojikumi-line-end\">，</span>或者电路速度非常快<span class=\"mojikumi-line-end\">，</span>光速的限制就不能忽略</li>\n<li>Noise and crosstalk: 环境中的各种干扰<span class=\"mojikumi-line-end\">，</span>以及相邻线路之间的干扰</li>\n<li>Manufacturing tolerances: 元件被制造出来的时候可能有细微的差异</li>\n</ul>\n<p>一般来说<span class=\"mojikumi-line-end\">，</span>计算 propagation delay 可以不考虑这么多因素<span class=\"mojikumi-line-end\">，</span>而只需根据生产商提供的元件的 <span class=\"mojikumi\">“</span>maximum<span class=\"mojikumi\">”</span> <span class=\"mojikumi\">“</span>typical<span class=\"mojikumi\">”</span> <span class=\"mojikumi\">“</span>minimum<span class=\"mojikumi\">”</span> propagation delay 来进行计算<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果电路有多个输入输出<span class=\"mojikumi-line-end\">，</span>就会有很多条路径需要计算 delay<span class=\"mojikumi-line-end\">。</span></p>\n<a id=\"glitch-与-delay\" name=\"glitch-与-delay\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h4 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>glitch 与 delay</span></h4><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>第三章中提到的 <a href=\"/post/2023/01/ddpp-3#timing-hazards\">glitch</a> 是否实际发生<span class=\"mojikumi-line-end\">，</span>与电路的 delay 密切相关<span class=\"mojikumi-line-end\">。</span></p></div></div></aside>\n<h3 id=\"timing-specifications\" class=\"heading\"><a href=\"#timing-specifications\" class=\"heading-anchor\" aria-label=\"章节： Timing Specifications\" tabindex=\"-1\"></a><span>Timing Specifications</span></h3>\n<p>生产商一般会提供元件在某种条件下每个路径<span class=\"mojikumi-line-end\">、</span>每种 transition 方向的 propagation delay 的范围<span class=\"mojikumi-line-end\">，</span>一般会提供 maximum delay 和 minimum delay<span class=\"mojikumi-line-end\">，</span>也可能提供一个 <span class=\"mojikumi\">“</span>typical<span class=\"mojikumi\">”</span> delay<span class=\"mojikumi-line-end\">。</span></p>\n<p>一般情况下<span class=\"mojikumi-line-end\">，</span>maximum delay 是最重要的<span class=\"mojikumi-line-end\">，</span>minimum delay 只在少数情况下需要考虑<span class=\"mojikumi-line-end\">，</span>而依赖于 typical delay 是不靠谱的<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"timing-analysis-tools\" class=\"heading\"><a href=\"#timing-analysis-tools\" class=\"heading-anchor\" aria-label=\"章节： Timing Analysis Tools\" tabindex=\"-1\"></a><span>Timing Analysis Tools</span></h3>\n<p>在复杂的电路中<span class=\"mojikumi-line-end\">，</span>往往需要借助 EDA tool 来计算 timing<span class=\"mojikumi-line-end\">。</span>比起手动计算<span class=\"mojikumi-line-end\">，</span>EDA 可能会利用元件附带的比 min/max delay 更加详细的信息来更加精确地计算 delay<span class=\"mojikumi-line-end\">。</span>可以使用模拟器<span class=\"mojikumi-line-end\">，</span>手动设计输入<span class=\"mojikumi-line-end\">，</span>来计算 delay<span class=\"mojikumi-line-end\">。</span>也可以使用 timing analysis program<span class=\"mojikumi-line-end\">，</span>来自动计算出所有可能的 delay<span class=\"mojikumi-line-end\">。</span></p>\n<p>在设计的不同阶段可能会对 timing 进行多次估计和计算<span class=\"mojikumi-line-end\">，</span>在设计基本完成时如果发现 propagation delay 不符合设计要求<span class=\"mojikumi-line-end\">，</span>可能需要进行调整<span class=\"mojikumi-line-end\">，</span>例如针对 critical path 进行线路优化<span class=\"mojikumi-line-end\">，</span>将 critical path 上的元件尽量放在相邻的位置<span class=\"mojikumi-line-end\">，</span>将 high-fanout 的信号复制几分来减轻 output load……这样对 timing 进行调整的过程可能会反复进行很多遍<span class=\"mojikumi-line-end\">，</span>被称作 <dfn>timing closure</dfn><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"hdl-based-digital-design\" class=\"heading\"><a href=\"#hdl-based-digital-design\" class=\"heading-anchor\" aria-label=\"章节： HDL-Based Digital Design\" tabindex=\"-1\"></a><span>HDL-Based Digital Design</span></h2>\n<h3 id=\"eda-tool-suites-for-hdls\" class=\"heading\"><a href=\"#eda-tool-suites-for-hdls\" class=\"heading-anchor\" aria-label=\"章节： EDA Tool Suites for HDLs\" tabindex=\"-1\"></a><span>EDA Tool Suites for HDLs</span></h3>\n<dl>\n<dt>text editor</dt>\n<dd>包含代码高亮等功能的 HDL source file 编辑器<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>compiler</dt>\n<dd>检查代码中的语法错误<span class=\"mojikumi-line-end\">，</span>将 HDL 编译为 RTL <span class=\"mojikumi\">（</span>register-transfer language<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>synthesizer (synthesis tool)</dt>\n<dd>将 RTL design synthesis 到某个具体的 hardware technology 上<span class=\"mojikumi-line-end\">，</span>通常分为若干步骤<span class=\"mojikumi-line-end\">：</span>\n<ol>\n<li>mapping: 将 RTL design 对应到具体的 hardware element</li>\n<li>placement: 在 FPGA / CPLD 设计中<span class=\"mojikumi-line-end\">，</span>为每个 element 选择具体的 programmable resource instance<span class=\"mojikumi-line-end\">；</span>在 ASIC 设计中<span class=\"mojikumi-line-end\">，</span>为各种 basic building block 安排位置</li>\n<li>routing: 在 FPGA / ASIC 设计中<span class=\"mojikumi-line-end\">，</span>在 element 之间连线<span class=\"mojikumi-line-start\">（</span>CPLD 中连线是固定的<span class=\"mojikumi-line-end\">，</span>要根据连线选择 programmable resource<span class=\"mojikumi-line-end\">）</span></li>\n</ol>\n</dd>\n<dt>simulator</dt>\n<dd>对给定的 HDL model 和随时间变化的输入<span class=\"mojikumi-line-end\">，</span>计算出随时间变化的输出<span class=\"mojikumi-line-end\">。</span>输入可以是手动编辑的<span class=\"mojikumi-line-end\">，</span>由 <i>test bench</i> 生成的<span class=\"mojikumi-line-end\">，</span>或者通过 <i>waveform editor</i> 编辑的<span class=\"mojikumi-line-end\">。</span>输出可以是波形图或者列表<span class=\"mojikumi-line-end\">，</span>还可能包含警告<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>template generator</dt>\n<dd>生成常用的代码模板<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>schematic viewer</dt>\n<dd>由 HDL model <span class=\"mojikumi\">（</span>RTL<span class=\"mojikumi\">）</span> 或 synthesized result 生成 schematic diagram<span class=\"mojikumi-line-end\">，</span>synthesis 前后的 schematic diagram 可能会有很大的不同<span class=\"mojikumi-line-end\">，</span>但功能是一致的<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>chip viewer</dt>\n<dd>查看 synthesized result 中的物理布局和连线<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>constraints editor</dt>\n<dd>给 synthesizer 调参<span class=\"mojikumi-line-end\">，</span>例如设置 timing 要求<span class=\"mojikumi-line-end\">，</span>调整优化目标<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>timing analyzer</dt>\n<dd>计算某些或全部路径的 delay<span class=\"mojikumi-line-end\">。</span>\n</dd>\n<dt>back annotator</dt>\n<dd>将 timing analyzer 的计算结果插入到 HDL model 中<span class=\"mojikumi-line-end\">，</span>以在 simulation 中展现出 timing<span class=\"mojikumi-line-end\">。</span>\n</dd>\n</dl>\n<h3 id=\"hdl-based-design-flow\" class=\"heading\"><a href=\"#hdl-based-design-flow\" class=\"heading-anchor\" aria-label=\"章节： HDL-Based Design Flow\" tabindex=\"-1\"></a><span>HDL-Based Design Flow</span></h3>\n<ol>\n<li>specification / hierarchy / block diagram</li>\n<li>coding</li>\n<li>compilation</li>\n<li>simulation / functional verification / pre-fitting timing verification</li>\n<li>mapping</li>\n<li>fitting / place &#x26; route</li>\n<li>post-fitting timing verification</li>\n</ol>\n<p>其中<span class=\"mojikumi-line-end\">，</span>前四步被称作 <dfn>front-end steps</dfn><span class=\"mojikumi-line-end\">，</span>后三步被称作 <dfn>back-end steps</dfn><span class=\"mojikumi-line-end\">。</span></p>\n<p>设计过程一般不会是一步一步顺着来的<span class=\"mojikumi-line-end\">，</span>而是会不断反复<span class=\"mojikumi-line-end\">。</span>为了少折腾<span class=\"mojikumi-line-end\">，</span>第一步中总体设计的合理性<span class=\"mojikumi-line-end\">，</span>以及第四步中进入 back-end steps 前的测试<span class=\"mojikumi-line-end\">，</span>都非常重要<span class=\"mojikumi-line-end\">。</span>由于精确的 timing 计算依赖于具体的 fitting<span class=\"mojikumi-line-end\">，</span>在第七步发现 timing 不符合要求而推倒重来也是很有可能的<span class=\"mojikumi-line-end\">。</span></p>",
            "url": "https://ouuan.moe/post/2023/01/ddpp-4",
            "title": "DDPP 第四章学习笔记",
            "summary": "\n\n\n\n\n\n\n\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第四章 <span class=\"mojikumi\">“</span>Digital Design Practices<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为数字设计的文档规范<span class=\"mojikumi-line-end\">、</span>初步认识 circuit timing<span class=\"mojikumi-line-end\">、</span>基于 HDL 的数字设计所使用的工具与设计流程<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-02-07T07:58:32.000Z",
            "tags": [
                "ddpp",
                "学习笔记"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/01/string-prototype-replace",
            "content_html": "<p>tl;dr: <code>replace</code> 的第二个参数应当使用字面量或函数<span class=\"mojikumi-line-end\">，</span>不应使用带变量的字符串表达式<span class=\"mojikumi-line-end\">，</span>否则可能发生意想不到的错误替换<span class=\"mojikumi-line-end\">。</span></p>\n\n<h2 id=\"string-prototype-replace-的第二个参数\" class=\"heading\"><a href=\"#string-prototype-replace-的第二个参数\" class=\"heading-anchor\" aria-label=\"章节： String.prototype.replace 的第二个参数\" tabindex=\"-1\"></a><span>String.prototype.replace 的第二个参数</span></h2>\n<p>(reference: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_the_replacement\"><code>String<wbr>.<wbr>prototype<wbr>.<wbr>replace<wbr>()</code> - JavaScript | MDN</a>)</p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"javascript 代码块\" data-v-ad49d235>javascript</h3><ile-root id=\"ile-25\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-25--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #82AAFF\">replace</span><span style=\"color: #D6DEEB\">(</span><span style=\"color: #D7DBE0\">pattern</span><span style=\"color: #D6DEEB\">, </span><span style=\"color: #D7DBE0\">replacement</span><span style=\"color: #D6DEEB\">);</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #4876D6\">replace</span><span style=\"color: #403F53\">(pattern, replacement);</span></span></code></pre></div></section>\n<p>第二个参数 <code>replacement</code> 可以是字符串或函数<span class=\"mojikumi-line-end\">，</span>如果是函数<span class=\"mojikumi-line-end\">，</span>则由匹配信息作为参数计算出 replacement<span class=\"mojikumi-line-end\">，</span>如果是字符串<span class=\"mojikumi-line-end\">，</span>则可以使用一些 special replacement pattern<span class=\"mojikumi-line-end\">：</span></p>\n<div class=\"overflow-auto my-6\"><table>\n<thead>\n<tr>\n<th align=\"center\">Pattern</th>\n<th align=\"center\">Inserts</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>$$</code></td>\n<td align=\"center\">Inserts a <code>\"$\"</code>.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>$&#x26;</code></td>\n<td align=\"center\">Inserts the matched substring.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>$`</code></td>\n<td align=\"center\">Inserts the portion of the string that precedes the matched substring.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>$'</code></td>\n<td align=\"center\">Inserts the portion of the string that follows the matched substring.</td>\n</tr>\n<tr>\n<td align=\"center\"><code>$n</code></td>\n<td align=\"center\">Inserts the <code>n</code>th (1-indexed) capturing group where <code>n</code> is a positive integer less than 100.</td>\n</tr>\n<tr>\n<td align=\"center\"><code class=\"important-whitespace-nowrap\">$&lt;Name&gt;</code></td>\n<td align=\"center\">Inserts the named capturing group where <code>Name</code> is the group name.</td>\n</tr>\n</tbody>\n</table></div>\n<h2 id=\"使用变量作为-replacement-带来的问题\" class=\"heading\"><a href=\"#使用变量作为-replacement-带来的问题\" class=\"heading-anchor\" aria-label=\"章节： 使用变量作为 replacement 带来的问题\" tabindex=\"-1\"></a><span>使用变量作为 replacement 带来的问题</span></h2>\n<p>我实际遇到的问题是 <a href=\"https://github.com/ElMassimo/iles/issues/224\">iles#224</a><span class=\"mojikumi-line-end\">，</span>由于使用了模板字符串作为 replacement<span class=\"mojikumi-line-end\">，</span>在变量中包含上面这些 special replacement pattern 时<span class=\"mojikumi-line-end\">，</span>就会错误地替换<span class=\"mojikumi-line-end\">。</span></p>\n<p>解决方法也很简单<span class=\"mojikumi-line-end\">，</span>将含变量的表达式改成函数<span class=\"mojikumi-line-start\">（</span>前面加上 <code>() => </code><span class=\"mojikumi-line-end\">）</span>就可以了<span class=\"mojikumi-line-end\">：</span><a href=\"https://stackoverflow.com/questions/28102491/javascript-better-way-to-escape-dollar-signs-in-the-string-used-by-string-prot\">regex - javascript - Better Way to Escape Dollar Signs in the String Used By <code>String<wbr>.<wbr>prototype<wbr>.<wbr>replace</code> - Stack Overflow</a><span class=\"mojikumi-line-end\">。</span></p>\n<p>因为解决的代价非常小<span class=\"mojikumi-line-end\">，</span>虽然有的时候根据代码逻辑可以推断出 replacement 不含 <code>$</code><span class=\"mojikumi-line-end\">，</span>依然可以认为<span class=\"mojikumi-line-end\">，</span>凡是 replacement 需要用到变量的<span class=\"mojikumi-line-end\">，</span>都应当替换成函数<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"使用-eslint-检测这一问题\" class=\"heading\"><a href=\"#使用-eslint-检测这一问题\" class=\"heading-anchor\" aria-label=\"章节： 使用 ESLint 检测这一问题\" tabindex=\"-1\"></a><span>使用 ESLint 检测这一问题</span></h2>\n<p><a href=\"https://github.com/ouuan/eslint-config/commit/166e332dbdf8dc2ab9ff918302ada13fbd487ead\">写了个</a> <a href=\"https://eslint.org/docs/latest/rules/no-restricted-syntax\"><code>no<wbr>-<wbr>restricted<wbr>-<wbr>syntax</code></a> 的配置<span class=\"mojikumi-line-end\">：</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h3 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"javascript 代码块\" data-v-ad49d235>javascript</h3><ile-root id=\"ile-26\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-26--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #D6DEEB\">{</span></span>\n<span><span style=\"color: #D6DEEB\">  rules: {</span></span>\n<span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">no-restricted-syntax</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">: [</span></span>\n<span><span style=\"color: #D6DEEB\">      </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">error</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      {</span></span>\n<span><span style=\"color: #D6DEEB\">        selector: </span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #ECC48D\">CallExpression[callee.property.name=&#39;replace&#39;] &gt; .arguments:nth-child(2):not(Literal):not(ArrowFunctionExpression):not(FunctionExpression)</span><span style=\"color: #D9F5DD\">&quot;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">        message: </span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #ECC48D\">Only literals and functions are permitted as the 2nd argument of String.prototype.replace. Use a function that returns the expression instead.</span><span style=\"color: #D9F5DD\">&#39;</span><span style=\"color: #D6DEEB\">,</span></span>\n<span><span style=\"color: #D6DEEB\">      },</span></span>\n<span><span style=\"color: #D6DEEB\">    ],</span></span>\n<span><span style=\"color: #D6DEEB\">  },</span></span>\n<span><span style=\"color: #D6DEEB\">}</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #403F53\">{</span></span>\n<span><span style=\"color: #403F53\">  rules: {</span></span>\n<span><span style=\"color: #403F53\">    </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">no-restricted-syntax</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">: [</span></span>\n<span><span style=\"color: #403F53\">      </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">error</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      {</span></span>\n<span><span style=\"color: #403F53\">        selector: </span><span style=\"color: #111111\">&quot;</span><span style=\"color: #C96765\">CallExpression[callee.property.name=&#39;replace&#39;] &gt; .arguments:nth-child(2):not(Literal):not(ArrowFunctionExpression):not(FunctionExpression)</span><span style=\"color: #111111\">&quot;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">        message: </span><span style=\"color: #111111\">&#39;</span><span style=\"color: #C96765\">Only literals and functions are permitted as the 2nd argument of String.prototype.replace. Use a function that returns the expression instead.</span><span style=\"color: #111111\">&#39;</span><span style=\"color: #403F53\">,</span></span>\n<span><span style=\"color: #403F53\">      },</span></span>\n<span><span style=\"color: #403F53\">    ],</span></span>\n<span><span style=\"color: #403F53\">  },</span></span>\n<span><span style=\"color: #403F53\">}</span></span></code></pre></div></section>\n<p>因为只是分析 AST<span class=\"mojikumi-line-end\">，</span>有很多情况会误报<span class=\"mojikumi-line-end\">，</span>例如 replacement 是一个函数名<span class=\"mojikumi-line-end\">，</span>但实际代码应该很少出现这样的情况<span class=\"mojikumi-line-end\">，</span>真遇到了的话再套一层函数就 ok 了<span class=\"mojikumi-line-end\">，</span>实在不行还能用注释 disable 掉 lint<span class=\"mojikumi-line-end\">。</span></p>\n<p>没研究过<span class=\"mojikumi-line-end\">，</span>不知道写 ESLint plugin 能不能更加准确地检测<span class=\"mojikumi-line-end\">，</span><s>但是差不多得了</s><span class=\"mojikumi-line-start\">（</span></p>",
            "url": "https://ouuan.moe/post/2023/01/string-prototype-replace",
            "title": "String.prototype.replace 与隐藏的“$”",
            "summary": "<p>tl;dr: <code>replace</code> 的第二个参数应当使用字面量或函数<span class=\"mojikumi-line-end\">，</span>不应使用带变量的字符串表达式<span class=\"mojikumi-line-end\">，</span>否则可能发生意想不到的错误替换<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-01-29T12:16:32.000Z",
            "tags": [
                "JavaScript",
                "问题解决记录"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/01/ddpp-3",
            "content_html": "\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第三章 <span class=\"mojikumi\">“</span>Switching Algebra and Combinational Logic<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为逻辑代数<span class=\"mojikumi-line-end\">、</span>逻辑代数在电路中的使用及化简<span class=\"mojikumi-line-end\">、</span>timing hazard<span class=\"mojikumi-line-end\">。</span></p>\n\n<h2 id=\"switching-algebra\" class=\"heading\"><a href=\"#switching-algebra\" class=\"heading-anchor\" aria-label=\"章节： Switching Algebra\" tabindex=\"-1\"></a><span>Switching Algebra</span></h2>\n<p>这一节基本上就是离散数学 (1) 开头两章的内容<span class=\"mojikumi-line-end\">，</span>术语和记号有很多不同<span class=\"mojikumi-line-end\">，</span><s>幸好忘的差不多了<span class=\"mojikumi-line-end\">，</span>不然都要搞混了</s><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"记号\" class=\"heading\"><a href=\"#记号\" class=\"heading-anchor\" aria-label=\"章节： 记号\" tabindex=\"-1\"></a><span>记号</span></h3>\n<ul>\n<li>AND<span class=\"mojikumi-line-end\">：</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X\\ \\cdot\\ Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span></li>\n<li><span class=\"inline-block w-3\"></span>OR<span class=\"mojikumi-line-end\">：</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>+</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">X + Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span></span></li>\n<li>NOT<span class=\"mojikumi-line-end\">：</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li>AND 的优先级高于 OR</li>\n</ul>\n<p><span class=\"mojikumi-line-start\">（</span>yysy 我还是更喜欢 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∨</mo><mo separator=\"true\">,</mo><mo>∧</mo></mrow><annotation encoding=\"application/x-tex\">\\lor, \\land</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.75em;vertical-align:-0.1944em;\"></span><span class=\"mord\">∨</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∧</span></span></span></span></span><span class=\"mojikumi-line-end\">，</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord\">⋅</span></span></span></span></span> 也还行<span class=\"mojikumi-line-end\">，</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span></span></span></span></span> 真的有点难以接受<span class=\"mojikumi\">。</span><span class=\"mojikumi\">）</span><wbr><span class=\"mojikumi-line-start\">（</span><s>它们明明是对偶的怎么搞得像个环一样<span class=\"mojikumi-line-end\">。</span></s><span class=\"mojikumi\">）</span><wbr><span class=\"mojikumi-line-start\">（</span>主要还是下面这些定理用加号看起来真的好怪<span class=\"mojikumi\">。</span><span class=\"mojikumi\">）</span><wbr><span class=\"mojikumi-line-start\">（</span>异或不是还号称二进制加法吗<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<h3 id=\"公理\" class=\"heading\"><a href=\"#公理\" class=\"heading-anchor\" aria-label=\"章节： 公理\" tabindex=\"-1\"></a><span>公理</span></h3>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A1)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo mathvariant=\"normal\">≠</mo><mn>1</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>X</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A1D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo mathvariant=\"normal\">≠</mo><mn>0</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>X</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A2)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>=</mo><mn>0</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A2D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>=</mo><mn>1</mn><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A3)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A3D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A4)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A4D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A5)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>0</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mn>1</mn><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(A5D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>+</mo><mn>0</mn><mo>=</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{rl}\n\\text{(A1)} &#x26; X \\ne 1 \\implies X = 0 \\\\\n\\text{(A1D)} &#x26; X \\ne 0 \\implies X = 1 \\\\\\\\\n\\text{(A2)} &#x26; X = 0 \\implies X' = 1 \\\\\n\\text{(A2D)} &#x26; X = 1 \\implies X' = 0 \\\\\\\\\n\\text{(A3)} &#x26; 0 \\ \\cdot\\  0 = 0 \\\\\n\\text{(A3D)} &#x26; 1 + 1 = 1 \\\\\\\\\n\\text{(A4)} &#x26; 1 \\ \\cdot\\  1 = 1 \\\\\n\\text{(A4D)} &#x26; 0 + 0 = 0 \\\\\\\\\n\\text{(A5)} &#x26; 0 \\ \\cdot\\  1 = 1 \\ \\cdot\\  0 = 0 \\\\\n\\text{(A5D)} &#x26; 1 + 0 = 0 + 1 = 1\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:16.8em;vertical-align:-8.15em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.65em;\"><span style=\"top:-10.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A1)</span></span></span></span><span style=\"top:-9.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A1D)</span></span></span></span><span style=\"top:-8.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-7.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A2)</span></span></span></span><span style=\"top:-6.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A2D)</span></span></span></span><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A3)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A3D)</span></span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A4)</span></span></span></span><span style=\"top:1.19em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A4D)</span></span></span></span><span style=\"top:2.39em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:3.59em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A5)</span></span></span></span><span style=\"top:4.79em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(A5D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.65em;\"><span style=\"top:-10.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-9.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-7.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-6.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-0.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:1.19em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:3.59em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span><span style=\"top:4.79em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:8.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></div>\n<h3 id=\"定理\" class=\"heading\"><a href=\"#定理\" class=\"heading-anchor\" aria-label=\"章节： 定理\" tabindex=\"-1\"></a><span>定理</span></h3>\n<p>中文名来自<span class=\"mojikumi-line-start\">《</span>数理逻辑与集合论<span class=\"mojikumi-line-start\">（</span>第二版<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">》</span>2.2 节<span class=\"mojikumi-line-start\">“</span>等值公式<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">。</span></p>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T1)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mn>0</mn><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T1D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>1</mn><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Identities（同一律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T2)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mn>1</mn><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T2D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mn>0</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Null elements（零律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T3)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T3D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Idempotency（幂等律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"1em\"></mspace><mtext> (T4)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Involution（双重否定律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T5)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T5D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Complements（补余律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T6)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mi>Y</mi><mo>=</mo><mi>Y</mi><mo>+</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T6D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mo>=</mo><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Commutativity（交换律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T7)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>Z</mi><mo>=</mo><mi>X</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T7D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mo>=</mo><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Associativity（结合律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T8)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mtext> </mtext><mtext> </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T8D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>Y</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Z</mi><mtext> </mtext><mtext> </mtext><mo>=</mo><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Distributivity（分配律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T9)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext>(T9D)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Covering（吸收律）</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T10)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>Y</mi><mtext> </mtext><mtext> </mtext><mo>+</mo><mtext> </mtext><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mtext> </mtext><mtext> </mtext><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T10D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Combining</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T11)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mi>Z</mi><mo>+</mo><mi>Y</mi><mo>⋅</mo><mi>Z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo>=</mo><mtext> </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mi>Z</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T11D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi>Y</mi><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mo>=</mo><mtext> </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⋅</mo><mo stretchy=\"false\">(</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><mi>Z</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Consensus</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T12)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mo>+</mo><mi>X</mi><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T12D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mo>=</mo><mi>X</mi></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Generalized idempotency</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T13)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mtext>  </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><mtext>  </mtext><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>X</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mo lspace=\"0em\" rspace=\"0em\">=</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> </mtext><mtext> </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><mo>⋯</mo><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T13D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">(</mo><mi>X</mi><mo>+</mo><mi>X</mi><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>X</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mo lspace=\"0em\" rspace=\"0em\">=</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> </mtext><mtext> </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mtext> </mtext><mo>⋯</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>DeMorgan’s theorem</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>（摩根律）</mtext></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mspace width=\"0.5em\"></mspace><mtext> (T14)</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">[</mo><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mo>+</mo><mo separator=\"true\">,</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo stretchy=\"false\">)</mo><msup><mo stretchy=\"false\">]</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mo lspace=\"0em\" rspace=\"0em\">=</mo></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> </mtext><mi>F</mi><mo stretchy=\"false\">(</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo separator=\"true\">,</mo><msubsup><mi>X</mi><mn>2</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msubsup><mi>X</mi><mi>n</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo separator=\"true\">,</mo><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mo separator=\"true\">,</mo><mo>+</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Generalized</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>DeMorgan’s theorem</mtext></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{ll}\n\n\\begin{array}{rl}\n\\enspace\\text{(T1)} &#x26; X + 0 = X \\\\\n\\enspace\\text{(T1D)} &#x26; X \\ \\cdot\\  1 = X\n\\end{array}\n&#x26; \\text{Identities（同一律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T2)} &#x26; X + 1 = 1 \\\\\n\\enspace\\text{(T2D)} &#x26; X \\ \\cdot\\  0 = 0\n\\end{array}\n&#x26; \\text{Null elements（零律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T3)} &#x26; X + X = X \\\\\n\\enspace\\text{(T3D)} &#x26; X \\ \\cdot\\  X = X\n\\end{array}\n&#x26; \\text{Idempotency（幂等律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\quad\\ \\text{(T4)} &#x26; (X')' = X\n\\end{array}\n&#x26; \\text{Involution（双重否定律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T5)} &#x26; X + X' = 1 \\\\\n\\enspace\\text{(T5D)} &#x26; X \\ \\cdot\\  X' = 0\n\\end{array}\n&#x26; \\text{Complements（补余律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T6)} &#x26; X + Y = Y + X \\\\\n\\enspace\\text{(T6D)} &#x26; X \\ \\cdot\\  Y = Y \\ \\cdot\\  X\n\\end{array}\n&#x26; \\text{Commutativity（交换律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T7)} &#x26; (X + Y) + Z = X + (Y + Z) \\\\\n\\enspace\\text{(T7D)} &#x26; (X \\ \\cdot\\  Y) \\ \\cdot\\  Z = X \\ \\cdot\\  (Y \\ \\cdot\\  Z)\n\\end{array}\n&#x26; \\text{Associativity（结合律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T8)} &#x26; X \\ \\cdot\\  (Y + Z) = \\,\\: X \\ \\cdot\\  Y \\,\\: + \\,\\: X \\ \\cdot\\  Z \\,\\: \\\\\n\\enspace\\text{(T8D)} &#x26; X + \\,\\: Y \\ \\cdot\\  Z \\,\\: = (X + Y) \\ \\cdot\\  (X + Z)\n\\end{array}\n&#x26; \\text{Distributivity（分配律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\text{(T9)} &#x26; X + \\,\\: X \\ \\cdot\\  Y \\,\\: = X \\\\\n\\enspace\\text{(T9D)} &#x26; X \\ \\cdot\\  (X + Y) = X\n\\end{array}\n&#x26; \\text{Covering（吸收律）}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\text{(T10)} &#x26; \\,\\: X \\ \\cdot\\  Y \\,\\: + \\,\\: X \\ \\cdot\\  Y' \\,\\: = X \\\\\n\\text{(T10D)} &#x26; (X + Y) \\ \\cdot\\  (X + Y') = X\n\\end{array}\n&#x26; \\text{Combining}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\text{(T11)} &#x26; \\begin{aligned} &#x26; X \\cdot Y + X' \\cdot Z + Y \\cdot Z \\\\[-0.2em] =\\ &#x26; X \\cdot Y + X' \\cdot Z \\end{aligned} \\\\\n\\text{(T11D)} &#x26; \\begin{aligned} &#x26; (X + Y) \\cdot (X' + Z) \\cdot (Y + Z) \\\\[-0.2em] =\\ &#x26; (X + Y) \\cdot (X' + Z) \\end{aligned}\n\\end{array}\n&#x26; \\text{Consensus}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\text{(T12)}  &#x26; X + X + \\cdots + X = X \\\\\n\\text{(T12D)} &#x26; X \\ \\cdot\\  X \\ \\cdot\\ \\cdots\\ \\cdot\\  X = X\n\\end{array}\n&#x26; \\text{Generalized idempotency}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\text{(T13)} &#x26;\n\\begin{aligned}\n&#x26; (X \\ \\ \\cdot\\  X \\ \\ \\cdot\\ \\cdots\\ \\cdot\\  X)' \\\\[-0.2em]\n= &#x26; \\,\\: X' + X' + \\cdots + X'\n\\end{aligned}\n\\\\\n\\text{(T13D)} &#x26;\n\\begin{aligned}\n&#x26; (X + X + \\cdots + X)' \\\\[-0.2em]\n= &#x26; \\,\\: X' \\cdot\\  X' \\cdot\\  \\cdots \\ \\cdot\\  X'\n\\end{aligned}\n\\end{array}\n&#x26; \\begin{array}{c} \\text{DeMorgan’s theorem} \\\\ \\text{（摩根律）} \\end{array}\n\\\\\\\\\n\n\\begin{array}{rl}\n\\enspace\\ \\text{(T14)} &#x26;\n\\begin{aligned}\n &#x26; [F(X_1, X_2, \\ldots, X_n, +, \\ \\cdot\\ )]' \\\\[-0.2em]\n=&#x26;\\ F(X_1', X_2', \\ldots, X_n', \\ \\cdot\\ , +)\n\\end{aligned}\n\\end{array}\n&#x26; \\begin{array}{c} \\text{Generalized} \\\\ \\text{DeMorgan’s theorem} \\end{array}\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:54.81em;vertical-align:-27.155em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:27.655em;\"><span style=\"top:-31.255em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T1)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T1D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-29.465em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-27.655em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T2)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T2D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-25.865em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-24.055em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T3)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T3D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-22.265em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-21.055em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\"> </span><span class=\"mord text\"><span class=\"mord\">(T4)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.85em;\"><span style=\"top:-3.01em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-19.855em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-18.045em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T5)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T5D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-16.255em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-14.445em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T6)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T6D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-12.655em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-10.845em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T7)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T7D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-9.055em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-7.245em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T8)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T8D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-5.455em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.645em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T9)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mord text\"><span class=\"mord\">(T9D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:-1.855em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.045em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T10)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T10D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:1.745em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:5.155em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span style=\"top:-5.05em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T11)</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T11D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span style=\"top:-5.05em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\"> </span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span><span class=\"mspace\"> </span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:8.545em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:10.355em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T12)</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T12D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:12.145em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:15.555em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span style=\"top:-5.05em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T13)</span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T13D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.05em;\"><span style=\"top:-5.05em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.55em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:18.945em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"></span></span><span style=\"top:20.955em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.65em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mspace\" style=\"margin-right:0.5em;\"></span><span class=\"mspace\"> </span><span class=\"mord text\"><span class=\"mord\">(T14)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.65em;\"><span class=\"pstrut\" style=\"height:3.65em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mrel\">=</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.65em;\"><span style=\"top:-3.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">⋅</span><span class=\"mspace\"> </span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.51em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\"> </span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8019em;\"><span style=\"top:-2.453em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">⋅</span><span class=\"mspace\"> </span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">+</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:27.155em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:27.655em;\"><span style=\"top:-31.255em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Identities</span><span class=\"mord cjk_fallback\">（同一律）</span></span></span></span><span style=\"top:-27.655em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Null elements</span><span class=\"mord cjk_fallback\">（零律）</span></span></span></span><span style=\"top:-24.055em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Idempotency</span><span class=\"mord cjk_fallback\">（幂等律）</span></span></span></span><span style=\"top:-21.055em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Involution</span><span class=\"mord cjk_fallback\">（双重否定律）</span></span></span></span><span style=\"top:-18.045em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Complements</span><span class=\"mord cjk_fallback\">（补余律）</span></span></span></span><span style=\"top:-14.445em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Commutativity</span><span class=\"mord cjk_fallback\">（交换律）</span></span></span></span><span style=\"top:-10.845em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Associativity</span><span class=\"mord cjk_fallback\">（结合律）</span></span></span></span><span style=\"top:-7.245em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Distributivity</span><span class=\"mord cjk_fallback\">（分配律）</span></span></span></span><span style=\"top:-3.645em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Covering</span><span class=\"mord cjk_fallback\">（吸收律）</span></span></span></span><span style=\"top:-0.045em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Combining</span></span></span></span><span style=\"top:5.155em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Consensus</span></span></span></span><span style=\"top:10.355em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Generalized idempotency</span></span></span></span><span style=\"top:15.555em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">DeMorgan’s theorem</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord cjk_fallback\">（摩根律）</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span><span style=\"top:20.955em;\"><span class=\"pstrut\" style=\"height:5.05em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Generalized</span></span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">DeMorgan’s theorem</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:27.155em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></div>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.16em\" columnalign=\"right left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>Shannon’s expansion theorems</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T15)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mtext> </mtext><msub><mi>X</mi><mn>1</mn></msub><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mtext> </mtext><mo>⋅</mo><mtext> </mtext><mi>F</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext>(T15D)</mtext></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">[</mo><msub><mi>X</mi><mn>1</mn></msub><mo>+</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>⋅</mo><mo stretchy=\"false\">[</mo><msubsup><mi>X</mi><mn>1</mn><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msubsup><mo>+</mo><mi>F</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{array}{rl}\n&#x26; \\text{Shannon’s expansion theorems} \\\\[0.3em]\n\\text{(T15)} &#x26; F(X_1, X_2, \\ldots, X_n) = \\ X_1 \\ \\cdot\\  F(1, X_2, \\ldots, X_n) + X_1' \\ \\cdot\\  F(0, X_2, \\ldots, X_n) \\\\\n\\text{(T15D)} &#x26; F(X_1, X_2, \\ldots, X_n) = [X_1 + F(1, X_2, \\ldots, X_n)] \\cdot [X_1' + F(0, X_2, \\ldots, X_n)]\n\\end{array}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:3.9em;vertical-align:-1.7em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2em;\"><span style=\"top:-4.36em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.86em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T15)</span></span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">(T15D)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2em;\"><span style=\"top:-4.36em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Shannon’s expansion theorems</span></span></span></span><span style=\"top:-2.86em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.66em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)]</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-2.4519em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span></span></span></span></span></span></span></div>\n<p><span class=\"mojikumi-line-start\">（</span><s>草<span class=\"mojikumi-line-end\">，</span>对齐好累<span class=\"mojikumi-line-end\">，</span>我为什么要浪费这个时间<span class=\"mojikumi-line-end\">。</span></s><span class=\"mojikumi-line-end\">）</span></p>\n<h3 id=\"duality\" class=\"heading\"><a href=\"#duality\" class=\"heading-anchor\" aria-label=\"章节： Duality\" tabindex=\"-1\"></a><span>Duality</span></h3>\n<p>将一个等式中所有的 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span> 换成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span><span class=\"mojikumi-line-end\">、</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 换成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></span><span class=\"mojikumi-line-end\">、</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span></span></span></span></span> 换成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord\">⋅</span></span></span></span></span><span class=\"mojikumi-line-end\">、</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord\">⋅</span></span></span></span></span> 换成 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>等式依然成立<span class=\"mojikumi-line-end\">。</span></p>\n<p>上面的定理中带 <span class=\"mojikumi\">“</span>D<span class=\"mojikumi\">”</span> 的都是上一条的对偶<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"standard-representations-of-logic-functions\" class=\"heading\"><a href=\"#standard-representations-of-logic-functions\" class=\"heading-anchor\" aria-label=\"章节： Standard Representations of Logic Functions\" tabindex=\"-1\"></a><span>Standard Representations of Logic Functions</span></h3>\n<p>这里需要翻出来我离散 (1) 写的 <a href=\"https://ouuan.github.io/truth-table-generator/\">真值表生成器</a><span class=\"mojikumi-line-start\">（</span>其实可以去加上 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">+</span></span></span></span></span> 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding=\"application/x-tex\">\\cdot</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord\">⋅</span></span></span></span></span> 作为 alias<span class=\"mojikumi-line-end\">，</span>但如果要加 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow></mrow><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的话会很麻烦所以干脆不加了吧<span class=\"mojikumi-line-start\">（</span></p>\n<p>logic function 有若干精确的标准表示方法<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>真值表</li>\n<li>canonical sum: 主析取范式<span class=\"mojikumi-line-end\">，</span>极小项 (minterm) 的和</li>\n<li>使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo></mrow><annotation encoding=\"application/x-tex\">\\sum</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span></span></span></span></span> 表示的 minterm list</li>\n<li>canonical product: 主合取范式<span class=\"mojikumi-line-end\">，</span>极大项 (maxterm) 的和</li>\n<li>使用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∏</mo></mrow><annotation encoding=\"application/x-tex\">\\prod</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span></span></span></span></span> 表示的 maxterm list</li>\n<li>Verilog <code>case</code> 语句</li>\n</ul>\n<p>这里用 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∏</mo></mrow><annotation encoding=\"application/x-tex\">\\prod</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span></span></span></span></span> 表示 maxterm list 的下标比离散 (1) 讲的舒服多了<span class=\"mojikumi-line-end\">：</span>minterm 的 index 就是哪组变量取值下表达式值为 1<span class=\"mojikumi-line-end\">，</span>maxterm 的 index 就是哪组变量取值下表达式为 0<span class=\"mojikumi-line-end\">，</span>所以两种范式的下标刚好是补集<span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span>有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi></mrow><annotation encoding=\"application/x-tex\">X, Y, Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span></span></span></span></span> 三个变量<span class=\"mojikumi-line-end\">，</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X' \\cdot Y \\cdot Z'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的下标是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span></span><span class=\"mojikumi-line-end\">，</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><mi>Y</mi><mo>+</mo><msup><mi>Z</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">X' + Y + Z'</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8352em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span> 的下标是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">5</span></span></span></span></span><span class=\"mojikumi-line-end\">；</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi></mrow></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>6</mn><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><msup><mi>Y</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mi>Z</mi><mo>+</mo><msup><mi>X</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>+</mo><mi>X</mi><mo>⋅</mo><mi>Y</mi><mo>⋅</mo><msup><mi>Z</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><msub><mo>∏</mo><mrow><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi></mrow></msub><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>7</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{X,Y,Z}(1,2,6) = X' \\cdot Y' \\cdot Z + X' \\cdot Y \\cdot Z' + X \\cdot Y \\cdot Z' = \\prod_{X,Y,Z}(0,3,4,5,7)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1786em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">Z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">6</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8352em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7519em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1786em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">Z</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">7</span><span class=\"mclose\">)</span></span></span></span></span><span class=\"mojikumi-line-end\">。</span></p>\n<p>Verilog 的 <code>case</code> 语句大概是这个样子<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>虽然还完全没学 Verilog<span class=\"mojikumi-line-end\">，</span>但我感觉 Shiki 自带的 system-verilog 高亮看起来就比 verilog 正确许多<span class=\"mojikumi-line-end\">，</span>以后可能也用 system-verilog 的高亮了<span class=\"mojikumi-line-end\">）</span></p>\n<section class=\"code-block relative my-6 shadow\" itemprop=\"hasPart\" itemscope itemtype=\"https://schema.org/SoftwareSourceCode\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" itemprop=\"programmingLanguage\" aria-label=\"system-verilog 代码块\" data-v-ad49d235>system-verilog</h4><ile-root id=\"ile-27\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-27--></div><div class=\"light:hidden\" itemprop=\"text\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><code><span><span style=\"color: #C792EA\">case</span><span style=\"color: #D6DEEB\"> (</span><span style=\"color: #C792EA\">{</span><span style=\"color: #82AAFF\">X</span><span style=\"color: #D6DEEB\">,</span><span style=\"color: #82AAFF\">Y</span><span style=\"color: #D6DEEB\">,</span><span style=\"color: #82AAFF\">Z</span><span style=\"color: #C792EA\">}</span><span style=\"color: #D6DEEB\">)</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">,</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #D6DEEB\">,</span><span style=\"color: #F78C6C\">6</span><span style=\"color: #C792EA\">:</span><span style=\"color: #D6DEEB\">    </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #C792EA\">default:</span><span style=\"color: #D6DEEB\">  </span><span style=\"color: #82AAFF\">F</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #D6DEEB\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #D6DEEB\">;</span></span>\n<span><span style=\"color: #C792EA\">endcase</span></span></code></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><code><span><span style=\"color: #994CC3\">case</span><span style=\"color: #403F53\"> (</span><span style=\"color: #994CC3\">{</span><span style=\"color: #4876D6\">X</span><span style=\"color: #403F53\">,</span><span style=\"color: #4876D6\">Y</span><span style=\"color: #403F53\">,</span><span style=\"color: #4876D6\">Z</span><span style=\"color: #994CC3\">}</span><span style=\"color: #403F53\">)</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">,</span><span style=\"color: #AA0982\">2</span><span style=\"color: #403F53\">,</span><span style=\"color: #AA0982\">6</span><span style=\"color: #994CC3\">:</span><span style=\"color: #403F53\">    </span><span style=\"color: #4876D6\">F</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">1</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #403F53\">  </span><span style=\"color: #994CC3\">default:</span><span style=\"color: #403F53\">  </span><span style=\"color: #4876D6\">F</span><span style=\"color: #403F53\"> </span><span style=\"color: #994CC3\">=</span><span style=\"color: #403F53\"> </span><span style=\"color: #AA0982\">0</span><span style=\"color: #403F53\">;</span></span>\n<span><span style=\"color: #994CC3\">endcase</span></span></code></pre></div></section>\n<h2 id=\"combinational-circuit-analysis\" class=\"heading\"><a href=\"#combinational-circuit-analysis\" class=\"heading-anchor\" aria-label=\"章节： Combinational-Circuit Analysis\" tabindex=\"-1\"></a><span>Combinational-Circuit Analysis</span></h2>\n<p>这一节就是说给你一个电路图怎么搞出它的 logic function<span class=\"mojikumi-line-end\">。</span>其实没啥好说的<span class=\"mojikumi-line-end\">，</span>就<span class=\"mojikumi-line-start\">（</span>按拓扑序<span class=\"mojikumi-line-end\">）</span>一个一个 gate 递推就行<span class=\"mojikumi-line-end\">，</span>可以用真值表也可以用逻辑表达式<span class=\"mojikumi-line-end\">。</span></p>\n<p>有一个小 trick<span class=\"mojikumi-line-end\">：</span>DeMorgan<span class=\"mojikumi-narrow-left\">’</span>s theorem 在电路图中表现为<span class=\"mojikumi-line-end\">，</span>将 inversion bubble 换到另一侧<span class=\"mojikumi-line-start\">（</span>输入 / 输出<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>并且改变 gate 的类型<span class=\"mojikumi-line-start\">（</span>AND / OR<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>这样的话<span class=\"mojikumi-line-end\">，</span>如果两个 inversion bubble 在一条 wire 上就可以消掉<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"combinational-circuit-synthesis\" class=\"heading\"><a href=\"#combinational-circuit-synthesis\" class=\"heading-anchor\" aria-label=\"章节： Combinational-Circuit Synthesis\" tabindex=\"-1\"></a><span>Combinational-Circuit Synthesis</span></h2>\n<p>在 digital design 中<span class=\"mojikumi\">，</span><wbr><span class=\"mojikumi-line-start\">“</span>Synthesis<span class=\"mojikumi\">”</span> 有若干种含义<span class=\"mojikumi-line-start\">（</span>例如从 HDL 到 FPGA<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>而在这一节只是指从 formal description 到 gate-level circuit<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"circuit-descriptions-and-designs\" class=\"heading\"><a href=\"#circuit-descriptions-and-designs\" class=\"heading-anchor\" aria-label=\"章节： Circuit Descriptions and Designs\" tabindex=\"-1\"></a><span>Circuit Descriptions and Designs</span></h3>\n<p>自然语言描述 → 逻辑表达式 / 真值表<span class=\"mojikumi-line-start\">（</span>canonical sum / product<span class=\"mojikumi\">）</span> → 电路</p>\n<p>很多时候写出逻辑表达式会比列出真值表简单一些<span class=\"mojikumi-line-end\">，</span>但在面对较为复杂的逻辑关系时<span class=\"mojikumi-line-end\">，</span>列出真值表可以强制设计师考虑到每种情况<span class=\"mojikumi-line-end\">，</span>从而避免漏掉 corner case<span class=\"mojikumi-line-end\">。</span></p>\n<p>一个输出是某个逻辑表达式的电路被称作 <i>realize</i> 了这个表达式<span class=\"mojikumi-line-end\">，</span>是这个表达式的 <i>realization</i> 或者 <i>implementation</i><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"circuit-manipulations\" class=\"heading\"><a href=\"#circuit-manipulations\" class=\"heading-anchor\" aria-label=\"章节： Circuit Manipulations\" tabindex=\"-1\"></a><span>Circuit Manipulations</span></h3>\n<p>在多数电路技术<span class=\"mojikumi-line-start\">（</span>包括 CMOS<span class=\"mojikumi-line-end\">）</span>中<span class=\"mojikumi-line-end\">，</span>NAND / NOR 比 AND / OR 效率更高<span class=\"mojikumi-line-end\">，</span>所以一般会修改电路来尽量使用 inverting gate 而非 noninverting gate<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>在 wire 上移动 inversion bubble<span class=\"mojikumi-line-start\">（</span>从上一个输出移到下一个输入<span class=\"mojikumi-line-end\">）</span></li>\n<li>在 wire 的两侧同时加上 inversion bubble<span class=\"mojikumi-line-start\">（</span>或者 NOT gate<span class=\"mojikumi-line-end\">）</span></li>\n<li>消除同一根 wire 上的两个 inversion bubble</li>\n<li>将 inversion bubble 换到另一侧<span class=\"mojikumi-line-start\">（</span>输入 / 输出<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>并且改变 gate 的类型<span class=\"mojikumi-line-start\">（</span>AND / OR<span class=\"mojikumi-line-end\">）</span></li>\n</ul>\n<h3 id=\"combinational-circuit-minimization\" class=\"heading\"><a href=\"#combinational-circuit-minimization\" class=\"heading-anchor\" aria-label=\"章节： Combinational-Circuit Minimization\" tabindex=\"-1\"></a><span>Combinational-Circuit Minimization</span></h3>\n<p>一般情况下<span class=\"mojikumi-line-end\">，</span>逻辑表达式的化简主要用的是定理 T10<span class=\"mojikumi-line-start\">（</span>Combining<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>就是在 sum of products 中找到仅有一项相反的两个 product 将它们合并<span class=\"mojikumi-line-end\">，</span>最终得到的也是一个 sum of products<span class=\"mojikumi-line-end\">，</span>实现为 2-level<span class=\"mojikumi-line-start\">（</span>first-level 计算 product<span class=\"mojikumi-line-end\">，</span>second-level 计算 sum<span class=\"mojikumi-line-end\">）</span>的电路<span class=\"mojikumi-line-end\">。</span></p>\n<p>product of sums 电路是对偶的<span class=\"mojikumi-line-end\">，</span>就不重复了<span class=\"mojikumi-line-end\">，</span>下文也是一样<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"karnaugh-maps\" class=\"heading\"><a href=\"#karnaugh-maps\" class=\"heading-anchor\" aria-label=\"章节： Karnaugh Maps\" tabindex=\"-1\"></a><span>Karnaugh Maps</span></h3>\n<p>如 DDPP5 Figure 3-23 所示<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-3-23.15ec6efa.webp\"><img srcset=\"/assets/ddpp-fig-3-23.43ab9a40.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-3-23.43ab9a40.png\" width=\"1235\" height=\"457\" alt=\"2-variable, 3-variable, and 4-variable Karnaugh maps\"></picture></p>\n<p>在 Karnaugh map 中<span class=\"mojikumi-line-end\">，</span>每一个表示一个 minterm<span class=\"mojikumi-line-end\">，</span>相邻<span class=\"mojikumi-line-start\">（</span>包括跨过边界到另一侧的相邻<span class=\"mojikumi-line-end\">）</span>的格子仅有一位相反<span class=\"mojikumi-line-end\">，</span>所以边长为 1 / 2 / 4 的矩形可以合并<span class=\"mojikumi-line-end\">。</span></p>\n<p>选出若干矩形<span class=\"mojikumi-line-end\">，</span>恰好覆盖所有输出为 1 的格子<span class=\"mojikumi-line-end\">，</span>就可以化简逻辑表达式<span class=\"mojikumi-line-end\">。</span></p>\n<p>如果一个矩形覆盖的全是 1<span class=\"mojikumi-line-end\">，</span>并且是极大的<span class=\"mojikumi-line-start\">（</span>在其对应的 product 中减少任何一个输入都会使其覆盖到 0<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>就称作一个 <i>prime implicant</i><span class=\"mojikumi-line-end\">。</span>最简的逻辑表达式是若干 prime implicant 的 sum<span class=\"mojikumi-line-end\">。</span></p>\n<p>有的函数的 Karnaugh map 非常分散<span class=\"mojikumi-line-start\">（</span>例如 parity function<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>没有连成一块的 1<span class=\"mojikumi-line-end\">，</span>就需要多级而非 2-level 的电路来进行化简<span class=\"mojikumi-line-end\">。</span></p>\n<p>在 FPGA 中<span class=\"mojikumi-line-end\">，</span>输入数量较少的电路都是通过 lookup table (LUT) 而非 gate-level circuit 来实现<span class=\"mojikumi-line-end\">，</span>只需真值表就可以<span class=\"mojikumi-line-end\">。</span>但复杂的电路需要由多个 LUT 组合起来<span class=\"mojikumi-line-end\">，</span>此时逻辑表达式的化简依然有用<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"timing-hazards\" class=\"heading\"><a href=\"#timing-hazards\" class=\"heading-anchor\" aria-label=\"章节： Timing Hazards\" tabindex=\"-1\"></a><span>Timing Hazards</span></h2>\n<p>真实的电路中会有 delay<span class=\"mojikumi-line-end\">，</span>而上面研究的都是 combinational logic circuit 的 <i>steady-state behavior</i><span class=\"mojikumi-line-end\">，</span>没有考虑到 <i>transient behavior</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>因为 delay 的存在<span class=\"mojikumi-line-end\">，</span>可能会发生这样的情况<span class=\"mojikumi-line-end\">：</span>输入发生了改变<span class=\"mojikumi-line-end\">，</span>稳态下的输出不变<span class=\"mojikumi-line-end\">，</span>但在一瞬间内输出发生了变化<span class=\"mojikumi-line-start\">（</span>产生了一个 short pulse<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>这样的 pulse 被称作 <i>glitch</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>如果一个电路有产生 glitch 的可能性<span class=\"mojikumi-line-end\">，</span>则称这个电路存在 <i>hazard</i><span class=\"mojikumi-line-end\">。</span>实际物理电路的 delay 大小等因素难以控制<span class=\"mojikumi-line-end\">，</span>所以这里只是考虑产生 glitch 的可能性<span class=\"mojikumi-line-end\">，</span>而非实际是否有 glitch 产生<span class=\"mojikumi-line-start\">（</span>有点类似于并发编程中要保证所有可能的执行顺序下都不出错<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"static-hazards\" class=\"heading\"><a href=\"#static-hazards\" class=\"heading-anchor\" aria-label=\"章节： Static Hazards\" tabindex=\"-1\"></a><span>Static Hazards</span></h3>\n<p><i>static-1 hazard</i><span class=\"mojikumi-line-end\">：</span>稳态输出是 1<span class=\"mojikumi-line-end\">，</span>改变某一个输入后稳态输出还是 1<span class=\"mojikumi-line-end\">，</span>但这一个输入改变时可能会短暂地输出 0<span class=\"mojikumi-line-end\">。</span>static-0 hazard 是类似的<span class=\"mojikumi-line-end\">。</span></p>\n<p>书上给了个例子<span class=\"mojikumi-line-end\">，</span>但这个其实很好理解<span class=\"mojikumi-line-end\">，</span>就是电路的一个输入作为多个 gate 的输入<span class=\"mojikumi-line-end\">，</span>而这些 gate 的输出变化得有快有慢<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"finding-static-hazards-using-maps\" class=\"heading\"><a href=\"#finding-static-hazards-using-maps\" class=\"heading-anchor\" aria-label=\"章节： Finding Static Hazards Using Maps\" tabindex=\"-1\"></a><span>Finding Static Hazards Using Maps</span></h3>\n<p>正常的 sum of products 电路中不会有 static-0 hazard<span class=\"mojikumi-line-end\">，</span>可能有 static-1 hazard<span class=\"mojikumi-line-end\">。</span></p>\n<p>可以用 Karnaugh map 来找到 hazard<span class=\"mojikumi-line-end\">：</span>如果两个相邻的 1 没有被同一个 gate 覆盖<span class=\"mojikumi-line-end\">，</span>从其中一个变为另一个时就可能产生 glitch<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>因为极端情况下可能所有覆盖原来那一格的 gate 先全部变为 0<span class=\"mojikumi-line-end\">，</span>覆盖后来那一格的 gate 才变为 1<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>消除 hazard 就是用冗余的 gate 来覆盖这样的相邻的 1<span class=\"mojikumi-line-end\">，</span>类似于定理 T11<span class=\"mojikumi-line-start\">（</span>Consensus<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"dynamic-hazards\" class=\"heading\"><a href=\"#dynamic-hazards\" class=\"heading-anchor\" aria-label=\"章节： Dynamic Hazards\" tabindex=\"-1\"></a><span>Dynamic Hazards</span></h3>\n<p>如果变化一个输入时可能产生不止一次 glitch<span class=\"mojikumi-line-end\">，</span>就称作 <i>dynamic hazard</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>一个正常的 2-level sum of products / product of sums 电路中不会有 dynamic hazard<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"designing-hazard-free-circuits\" class=\"heading\"><a href=\"#designing-hazard-free-circuits\" class=\"heading-anchor\" aria-label=\"章节： Designing Hazard-Free Circuits\" tabindex=\"-1\"></a><span>Designing Hazard-Free Circuits</span></h3>\n<p>在多数电路中<span class=\"mojikumi-line-start\">（</span>尤其是 synchronous digital system 中<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>hazard 不会造成什么影响<span class=\"mojikumi-line-end\">。</span>但在某些电路<span class=\"mojikumi-line-start\">（</span>asynchronous sequential circuits<span class=\"mojikumi-line-end\">）</span>中<span class=\"mojikumi-line-end\">，</span>需要避免 hazard 的存在<span class=\"mojikumi-line-end\">。</span></p>\n<p>在一般的电路中消除 hazard 是复杂的<span class=\"mojikumi-line-end\">，</span>而在 sum of products 中<span class=\"mojikumi-line-end\">，</span>可以用 Karnaugh map 或者取遍所有 prime implicant<span class=\"mojikumi-line-start\">（</span>称作 <i>complete sum</i><span class=\"mojikumi-line-end\">）</span>来消除 hazard<span class=\"mojikumi-line-end\">。</span></p>",
            "url": "https://ouuan.moe/post/2023/01/ddpp-3",
            "title": "DDPP 第三章学习笔记",
            "summary": "\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第三章 <span class=\"mojikumi\">“</span>Switching Algebra and Combinational Logic<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为逻辑代数<span class=\"mojikumi-line-end\">、</span>逻辑代数在电路中的使用及化简<span class=\"mojikumi-line-end\">、</span>timing hazard<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-01-29T07:52:32.000Z",
            "tags": [
                "ddpp",
                "学习笔记"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/01/ddpp-2",
            "content_html": "\n\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第二章 <span class=\"mojikumi\">“</span>Number Systems and Codes<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为一些常用的编码以及纠错码的原理<span class=\"mojikumi-line-end\">。</span></p>\n\n<p>开头整数编码的内容很多是 <a href=\"/post/2022/09/csapp-2\">CS:APP 第二章</a> 讲过的<span class=\"mojikumi-line-end\">，</span>也有一些新内容<span class=\"mojikumi-line-end\">，</span>但基本上都是标星的可选内容<span class=\"mojikumi-line-end\">，</span>我看是看了但懒得写笔记了<span class=\"mojikumi-line-start\">（</span></p>\n<hr>\n<p>一套编码被称作一个 <i>code</i><span class=\"mojikumi-line-end\">，</span>一个 code 中的单个合法编码<span class=\"mojikumi-line-start\">（</span>二进制串<span class=\"mojikumi-line-end\">）</span>被称作一个 <i>code word</i><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"gray-code\" class=\"heading\"><a href=\"#gray-code\" class=\"heading-anchor\" aria-label=\"章节： Gray Code\" tabindex=\"-1\"></a><span>Gray Code</span></h2>\n<p>Gray code 的性质<span class=\"mojikumi-line-end\">：</span>相邻两个数的 code word 只有一位不同<span class=\"mojikumi-line-end\">，</span>且 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 的 code word 中只有一个 1<span class=\"mojikumi-line-start\">（</span>也就是说 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit Gray code 的首尾也只有一位不同<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<a id=\"4-bit-gray-code\" name=\"4-bit-gray-code\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><details class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><summary class=\"p-3 flex justify-between items-center cursor-pointer\" data-v-a2ab257f><h3 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>4-bit Gray code</span></h3><span class=\"details-icon text-5\" data-v-a2ab257f></span></summary><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><section class=\"code-block relative my-6 shadow\" data-v-ad49d235><div class=\"h-6 items-center rd-t-1 bg-area px-4 dark:bg-#2A313A media-screen:important-flex\" style=\"display:none;\" data-v-ad49d235><h4 class=\"text-3 text-footer\" aria-label=\"plain text 代码块\" data-v-ad49d235>plain text</h4><ile-root id=\"ile-28\"><button title=\"复制到剪贴板\" class=\"copy-button b-footer text-footer\" data-v-9288569d><span class=\"i-mdi-content-copy\" data-v-9288569d></span><span class=\"sr-only\" role=\"status\" data-v-9288569d></span></button></ile-root><!--ISLAND_HYDRATION_PLACEHOLDER_ile-28--></div><div class=\"light:hidden\" data-v-ad49d235><pre class=\"shiki dark\" style=\"background-color: #011627\" tabindex=\"0\"><samp><span><span style=\"color: #d6deeb\"> 0: 0000</span></span>\n<span><span style=\"color: #d6deeb\"> 1: 0001</span></span>\n<span><span style=\"color: #d6deeb\"> 2: 0011</span></span>\n<span><span style=\"color: #d6deeb\"> 3: 0010</span></span>\n<span><span style=\"color: #d6deeb\"> 4: 0110</span></span>\n<span><span style=\"color: #d6deeb\"> 5: 0111</span></span>\n<span><span style=\"color: #d6deeb\"> 6: 0101</span></span>\n<span><span style=\"color: #d6deeb\"> 7: 0100</span></span>\n<span><span style=\"color: #d6deeb\"> 8: 1100</span></span>\n<span><span style=\"color: #d6deeb\"> 9: 1101</span></span>\n<span><span style=\"color: #d6deeb\">10: 1111</span></span>\n<span><span style=\"color: #d6deeb\">11: 1110</span></span>\n<span><span style=\"color: #d6deeb\">12: 1010</span></span>\n<span><span style=\"color: #d6deeb\">13: 1011</span></span>\n<span><span style=\"color: #d6deeb\">14: 1001</span></span>\n<span><span style=\"color: #d6deeb\">15: 1000</span></span></samp></pre></div><div class=\"light:important-block\" style=\"display:none;\" data-v-ad49d235><pre class=\"shiki light\" style=\"background-color: #FBFBFB\" tabindex=\"0\"><samp><span><span style=\"color: #403f53\"> 0: 0000</span></span>\n<span><span style=\"color: #403f53\"> 1: 0001</span></span>\n<span><span style=\"color: #403f53\"> 2: 0011</span></span>\n<span><span style=\"color: #403f53\"> 3: 0010</span></span>\n<span><span style=\"color: #403f53\"> 4: 0110</span></span>\n<span><span style=\"color: #403f53\"> 5: 0111</span></span>\n<span><span style=\"color: #403f53\"> 6: 0101</span></span>\n<span><span style=\"color: #403f53\"> 7: 0100</span></span>\n<span><span style=\"color: #403f53\"> 8: 1100</span></span>\n<span><span style=\"color: #403f53\"> 9: 1101</span></span>\n<span><span style=\"color: #403f53\">10: 1111</span></span>\n<span><span style=\"color: #403f53\">11: 1110</span></span>\n<span><span style=\"color: #403f53\">12: 1010</span></span>\n<span><span style=\"color: #403f53\">13: 1011</span></span>\n<span><span style=\"color: #403f53\">14: 1001</span></span>\n<span><span style=\"color: #403f53\">15: 1000</span></span></samp></pre></div></section></div></details></aside>\n<p>递归构造<span class=\"mojikumi-line-end\">：</span></p>\n<ol>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span>-bit Gray code: 0 是 0<span class=\"mojikumi-line-end\">，</span>1 是 1</li>\n<li><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>-bit Gray code:\n<ul>\n<li>前 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 个数和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit Gray code 相同<span class=\"mojikumi-line-start\">（</span>开头加上 0<span class=\"mojikumi-line-end\">）</span></li>\n<li>后 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 个数是把 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit Gray code 逆序排列再在开头加上 1</li>\n</ul>\n</li>\n</ol>\n<p>直接计算单个数的 Gray code<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>递归就能直接计算<span class=\"mojikumi-line-end\">，</span><s>相信大家都会做 <a href=\"https://uoj.ac/problem/488\">NOIPD1T1</a> 吧<span class=\"mojikumi-line-end\">，</span>记得开 <code>unsigned long long</code></s><span class=\"mojikumi-line-start\">（</span></li>\n<li>也可以这么算<span class=\"mojikumi-line-end\">：</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 的 Gray code 第 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> 位为 1 当且仅当 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 的二进制中第 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> 位和第 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7429em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 位不同</li>\n</ul>\n<p>书中描述了一个使用场景<span class=\"mojikumi-line-end\">：</span>一个磁盘的每个扇区需要编码<span class=\"mojikumi-line-end\">，</span>从扇区上读取若干 bits 来识别当前处于哪个扇区<span class=\"mojikumi-line-end\">，</span>在两个相邻扇区的交界处可能有部分 bits 来自其中一个扇区<span class=\"mojikumi-line-end\">，</span>另外的 bits 来自另一个扇区<span class=\"mojikumi-line-end\">，</span>Gray code 可以使最终读取到的结果一定是这两个扇区之一<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"codes-for-actions-conditions-and-states\" class=\"heading\"><a href=\"#codes-for-actions-conditions-and-states\" class=\"heading-anchor\" aria-label=\"章节： Codes for Actions, Conditions, and States\" tabindex=\"-1\"></a><span>Codes for Actions, Conditions, and States</span></h2>\n<p>说白了就是如何编码一个 enum<span class=\"mojikumi-line-end\">。</span>不同的编码方式有各自的特点<span class=\"mojikumi-line-end\">，</span>可以从编码长度<span class=\"mojikumi-line-end\">、</span>电路开销<span class=\"mojikumi-line-end\">、</span>设计难度<span class=\"mojikumi-line-end\">、</span>可纠错性等角度考虑<span class=\"mojikumi-line-end\">，</span>选择最合适的编码方式<span class=\"mojikumi-line-end\">，</span>或者组合使用多种编码方式<span class=\"mojikumi-line-end\">。</span></p>\n<ul>\n<li>顺着编码为二进制可以使编码长度最短<span class=\"mojikumi-line-start\">（</span><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌈</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mi>n</mi><mo stretchy=\"false\">⌉</mo></mrow><annotation encoding=\"application/x-tex\">\\lceil \\log_2 n \\rceil</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⌈</span><span class=\"mop\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.207em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">⌉</span></span></span></span></span><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></li>\n<li><i>1-out-of-n-code</i><span class=\"mojikumi-line-end\">：</span>合法的 code word 只有一位是 1<span class=\"mojikumi-line-end\">，</span>每个 enum 对应某一位为 1<span class=\"mojikumi-line-end\">。</span>例如<span class=\"mojikumi-line-end\">，</span>控制哪个灯开时<span class=\"mojikumi-line-end\">，</span>这种编码方式无需再有电路来选择要开的灯<span class=\"mojikumi-line-end\">，</span>直接将编码的每一位连到一盏灯就可以了<span class=\"mojikumi-line-end\">。</span></li>\n<li><i>m-out-of-n-code</i><span class=\"mojikumi-line-end\">：</span>合法的 code word 恰有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></span> 位是 1<span class=\"mojikumi-line-end\">。</span>要检测一个 code word<span class=\"mojikumi-line-end\">，</span>只需使用一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span></span>-input AND gate<span class=\"mojikumi-line-end\">，</span>电路较为简单<span class=\"mojikumi-line-end\">。</span>而 code word 总数有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">(</mo><mfrac linethickness=\"0px\"><mi>n</mi><mi>m</mi></mfrac><mo fence=\"true\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\binom nm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7454em;\"><span style=\"top:-2.355em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.144em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>也很多<span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<h2 id=\"n-cubes-and-distance\" class=\"heading\"><a href=\"#n-cubes-and-distance\" class=\"heading-anchor\" aria-label=\"章节： n-Cubes and Distance\" tabindex=\"-1\"></a><span>n-Cubes and Distance</span></h2>\n<p>以 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> 个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit 二进制串作为顶点<span class=\"mojikumi-line-end\">，</span>在只有一个 bit 不同的串之间连边<span class=\"mojikumi-line-end\">，</span>得到的图被称作 <i><span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-cube</i><span class=\"mojikumi-line-end\">，</span>可以画成一个<span class=\"mojikumi-line-start\">（</span>超<span class=\"mojikumi-line-end\">）</span>立方体<span class=\"mojikumi\">：</span><wbr><span class=\"mojikumi-line-start\">（</span>DDPP5 Figure 2-8<span class=\"mojikumi-line-end\">）</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-2-8.a7fd31fd.webp\"><img srcset=\"/assets/ddpp-fig-2-8.8dc5d6f5.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-2-8.8dc5d6f5.png\" width=\"1213\" height=\"827\" alt=\"n-cubes for n = 1, 2, 3, and 4.\"></picture></p>\n<p>图上两个二进制串之间的距离被称作 <i>Hamming distance</i><span class=\"mojikumi-line-end\">，</span>表示两个串中不相同的位数<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"codes-for-detecting-and-correcting-errors\" class=\"heading\"><a href=\"#codes-for-detecting-and-correcting-errors\" class=\"heading-anchor\" aria-label=\"章节： Codes for Detecting and Correcting Errors\" tabindex=\"-1\"></a><span>Codes for Detecting and Correcting Errors</span></h2>\n<p>实际存储<span class=\"mojikumi-line-end\">、</span>传输编码时<span class=\"mojikumi-line-end\">，</span>可能会发生错误<span class=\"mojikumi-line-end\">。</span>错误的具体行为可以由 <i>error model</i> 刻画<span class=\"mojikumi-line-end\">。</span>最简单的 error model 是 <i>independent error model</i><span class=\"mojikumi-line-end\">，</span>即每个错误只独立地改变编码中的一位<span class=\"mojikumi-line-end\">，</span>多位同时发生错误的概率比一位发生错误的概率小得多<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"error-detecting-codes\" class=\"heading\"><a href=\"#error-detecting-codes\" class=\"heading-anchor\" aria-label=\"章节： Error-Detecting Codes\" tabindex=\"-1\"></a><span>Error-Detecting Codes</span></h3>\n<p>对于一个 code<span class=\"mojikumi-line-end\">，</span>不是 code word 的二进制串称作 <i>noncode word</i><span class=\"mojikumi-line-end\">。</span></p>\n<p><i>error-detecting code</i> 具有这样的性质<span class=\"mojikumi-line-end\">：</span>任何一个 code word 在任意修改一位后都会得到一个 noncode word<span class=\"mojikumi-line-end\">。</span></p>\n<p>使用 error-detecting code 时<span class=\"mojikumi-line-end\">，</span>可以认为只要是 code word 都没有发生错误<span class=\"mojikumi-line-end\">，</span>noncode word 则一定发生了错误<span class=\"mojikumi-line-end\">。</span></p>\n<p>一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit error-detecting code 是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-cube 的一个点独立集<span class=\"mojikumi-line-end\">，</span>也就是说任意两个 code word 的 Hamming distance 都至少为 2<span class=\"mojikumi-line-end\">。</span></p>\n<p>奇偶性可以用来设计 error-detecting code<span class=\"mojikumi-line-end\">：</span>任给一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>-bit code<span class=\"mojikumi-line-end\">，</span>将第 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 位设为前 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 位中 1 的个数的奇偶性<span class=\"mojikumi-line-start\">（</span>称作 <i>parity bit</i><span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>则可以得到一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>-bit error-detecting code<span class=\"mojikumi-line-end\">。</span>这样的编码称作 <i>1-bit parity code</i><span class=\"mojikumi-line-end\">，</span>若 code word 都有偶数个 1 则称作 <i>even-parity code</i><span class=\"mojikumi-line-end\">，</span>有奇数个 1 则称作 <i>odd-parity code</i><span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"error-correcting-and-multiple-error-detecting-codes\" class=\"heading\"><a href=\"#error-correcting-and-multiple-error-detecting-codes\" class=\"heading-anchor\" aria-label=\"章节： Error-Correcting and Multiple-Error-Detecting Codes\" tabindex=\"-1\"></a><span>Error-Correcting and Multiple-Error-Detecting Codes</span></h3>\n<p>如果一个 code 中两个 code word 的最小 Hamming distance 有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>c</mi><mo>+</mo><mi>d</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2c+d+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>则可以对最多 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span></span> 位的错误进行纠正<span class=\"mojikumi-line-end\">，</span>并且检测到最多 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">c+d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span></span> 位的错误<span class=\"mojikumi-line-start\">（</span>一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>+</mo><mi>d</mi><mo>+</mo><mn>1</mn><mo>∼</mo><mn>2</mn><mi>c</mi><mo>+</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">c+d+1 \\sim 2c+d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span></span> 位的错误会被认为是来自另一个方向的错误而被错误地纠正<span class=\"mojikumi-line-end\">，</span>从而不能被检测到<span class=\"mojikumi-line-end\">；</span>可以选择少纠错几位来检测到更多位的错误<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span></p>\n<p>纠错就是找到和一个 noncode word 的 Hamming distance 最小的唯一一个 code word<span class=\"mojikumi-line-end\">，</span>进行纠错的硬件被称作 error-correcting decoder<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"hamming-codes\" class=\"heading\"><a href=\"#hamming-codes\" class=\"heading-anchor\" aria-label=\"章节： Hamming Codes\" tabindex=\"-1\"></a><span>Hamming Codes</span></h3>\n<p><i>Hamming code</i> 是一种通用的最小距离为 3 的编码<span class=\"mojikumi-line-end\">。</span>一个有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span> 个 check bit 的 Hamming code 最多可以存储 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^n-n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 个 information bit<span class=\"mojikumi-line-end\">，</span>从而总共有 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span> 个 bit<span class=\"mojikumi-line-end\">。</span></p>\n<p>一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2^n-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>-bit Hamming code 的 bit 依次编号为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>∼</mo><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1 \\sim 2^n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7477em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>编号为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">1, 2, 4, \\ldots, 2^{n-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span></span> 的 bit 是 check bit<span class=\"mojikumi-line-end\">。</span>每个 check bit 代表一个 group<span class=\"mojikumi-line-end\">，</span>编号为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span> 的 check bit 所代表的 group 包含的是编号的二进制中包含 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span> 的所有 bit<span class=\"mojikumi-line-end\">。</span>check bit 的取值使得每个 group 都含偶数个 1<span class=\"mojikumi-line-end\">。</span></p>\n<p>实际使用的 Hamming code 往往会将 check bit 移到末尾<span class=\"mojikumi-line-end\">，</span>例如一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>15</mn></mrow><annotation encoding=\"application/x-tex\">15</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">15</span></span></span></span></span>-bit Hamming code 中 bit 的编号依次为 15, 14, 13, 12, 11, 10, 9, 7, 6, 5, 3, 8, 4, 2, 1<span class=\"mojikumi-line-end\">。</span></p>\n<p>因为每个 bit 都至少属于一个 group<span class=\"mojikumi-line-end\">，</span>改变一个 bit 会得到 noncode word<span class=\"mojikumi-line-end\">。</span>改变编号为 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span> 的两个 bit 时<span class=\"mojikumi-line-end\">，</span>会改变 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span></span> 异或 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span> 对应的 group<span class=\"mojikumi-line-end\">，</span>所以改变两个 bit 会得到 noncode word<span class=\"mojikumi-line-end\">。</span>所以 Hamming code 中两个 code word 的 Hamming distance 至少为 3<span class=\"mojikumi-line-end\">。</span></p>\n<p>纠错时<span class=\"mojikumi-line-end\">，</span>只要将错误的 check bit 的编号或起来就可以得到错误的 bit 的编号<span class=\"mojikumi-line-end\">。</span></p>\n<p>可以通过增加一个 parity bit 来得到一个最小距离为 4 的 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span>-bit extended Hamming code<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"crc-codes\" class=\"heading\"><a href=\"#crc-codes\" class=\"heading-anchor\" aria-label=\"章节： CRC Codes\" tabindex=\"-1\"></a><span>CRC Codes</span></h3>\n<p><i>cyclic-redundancy-check (CRC) codes</i> 是一种得到广泛应用的 error-correcting code<span class=\"mojikumi-line-end\">，</span>例如被用在文件系统和网络通信中<span class=\"mojikumi-line-end\">，</span>它可以检测到成团出现的多位错误<span class=\"mojikumi-line-end\">，</span>在一些场景中这种错误比随机出现的错误概率更高<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"two-dimensional-codes\" class=\"heading\"><a href=\"#two-dimensional-codes\" class=\"heading-anchor\" aria-label=\"章节： Two-Dimensional Codes\" tabindex=\"-1\"></a><span>Two-Dimensional Codes</span></h3>\n<p>如 DDPP5 Figure 2-14 (a) 所示<span class=\"mojikumi-line-end\">：</span></p>\n<p><picture><source type=\"image/webp\" srcset=\"/assets/ddpp-fig-2-14-a.6b397e71.webp\"><img srcset=\"/assets/ddpp-fig-2-14-a.ecefd691.png\" loading=\"lazy\" src=\"/assets/ddpp-fig-2-14-a.ecefd691.png\" width=\"776\" height=\"529\" alt=\"所有 bits 排列成一个矩阵，矩阵被划分为四个部分: information bits, checks on rows, checks on columns, checks on checks.\"></picture></p>\n<p>选择 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{row}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">row</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{col}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">col</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 两种编码方式<span class=\"mojikumi-line-end\">，</span>设置 checks on rows 使得 information bits 所在的每一行都是一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{row}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">row</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class=\"mojikumi-line-end\">，</span>设置 checks on columns 使得 information bits 所在的每一列都是一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{col}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">col</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class=\"mojikumi-line-end\">，</span>而 checks on checks 则可以选择<span class=\"mojikumi-line-end\">，</span>要么每一行都是一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{row}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">row</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class=\"mojikumi-line-end\">，</span>要么每一列都是一个 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{col}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">col</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 的 code word<span class=\"mojikumi-line-end\">。</span></p>\n<p>这样得到的 <i>two-dimensional code</i> 的最小距离是 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">r</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{row}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\" style=\"margin-right:0.01389em;\">row</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 和 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mrow><mi mathvariant=\"normal\">c</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">l</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">C_{\\mathrm{col}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">col</span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span> 的乘积<span class=\"mojikumi-line-end\">，</span>所以 two-dimensional code 也被叫做 <i>product code</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>RAID 就可以看作使用了 two-dimensional code<span class=\"mojikumi-line-end\">：</span>每块数据盘内的每个 block 都有 CRC code<span class=\"mojikumi-line-end\">，</span>还有一块硬盘用来存所有数据盘的 parity bits<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"checksum-codes\" class=\"heading\"><a href=\"#checksum-codes\" class=\"heading-anchor\" aria-label=\"章节： Checksum Codes\" tabindex=\"-1\"></a><span>Checksum Codes</span></h3>\n<p>parity bit 可以看作是 bits 在模 2 意义下的和<span class=\"mojikumi-line-end\">，</span>可以推广为 <i>checksum</i><span class=\"mojikumi-line-end\">。</span></p>\n<p>例如<span class=\"mojikumi-line-end\">，</span>模 256 意义下<span class=\"mojikumi-line-end\">，</span>可以计算 bytes 的和<span class=\"mojikumi-line-end\">，</span>来检测 bytes 的错误<span class=\"mojikumi-line-end\">。</span></p>\n<p>除了改变模数<span class=\"mojikumi-line-end\">，</span>还可以改变计算方式<span class=\"mojikumi-line-end\">，</span>例如使用 ones<span class=\"mojikumi-narrow-left\">’</span> complement 加法来计算模 255 或 65535 意义下的 checksum<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"m-out-of-n-codes\" class=\"heading\"><a href=\"#m-out-of-n-codes\" class=\"heading-anchor\" aria-label=\"章节： m-out-of-n Codes\" tabindex=\"-1\"></a><span>m-out-of-n Codes</span></h3>\n<p><a href=\"#codes-for-actions-conditions-and-states\">m-out-of-n code</a> 的最小距离为 2<span class=\"mojikumi-line-end\">，</span>并且能够检测到 <i>unidirectional multiple errors</i><span class=\"mojikumi-line-end\">，</span>即所有错误都是 0 变 1 或 1 变 0 的改变多位的错误<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"codes-for-transmitting-and-storing-serial-data\" class=\"heading\"><a href=\"#codes-for-transmitting-and-storing-serial-data\" class=\"heading-anchor\" aria-label=\"章节： Codes for Transmitting and Storing Serial Data\" tabindex=\"-1\"></a><span>Codes for Transmitting and Storing Serial Data</span></h2>\n<ul>\n<li>parallel data transmission: 一个 data word 的所有 bit 同时传输</li>\n<li>serial data transmission: 一个 bit 一个 bit 传输</li>\n</ul>\n<p>在某些场景下<span class=\"mojikumi-line-end\">，</span>serial data transmission 可以减少线路开销<span class=\"mojikumi-line-end\">，</span>或者减少一些设计上的困难<span class=\"mojikumi-line-end\">。</span></p>\n<p>最基本的 serial data transmission 需要三个信号<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>CLOCK: 将时间划分为一个个 <i>bit cell</i><span class=\"mojikumi-line-end\">，</span>标识出每个 bit 所处的时间范围</li>\n<li>SERDATA: 实际传输的数据<span class=\"mojikumi-line-end\">，</span>具体内容依 <i>line code</i> 而定</li>\n<li>SYNC: 用来标识 bit 的 significance<span class=\"mojikumi-line-end\">，</span>例如传输 bytes 时用来标记每个 byte 的开头</li>\n</ul>\n<p>实际上<span class=\"mojikumi-line-end\">，</span>也可以选择合适的 line code 从而只需传输一个信号<span class=\"mojikumi-line-end\">，</span>从数据信号中读取出 CLOCK 和 SYNC 的信息<span class=\"mojikumi-line-end\">。</span></p>\n<a id=\"serial-line-codes\" name=\"serial-line-codes\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-gray-2 dark:bg-gray-11 b-gray-6\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h3 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-timer-sand text-gray\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>WIP: </span><span data-v-a2ab257f>Serial Line Codes</span></h3><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><p>Serial Line Codes 这一节我感觉有些地方没完全理解<span class=\"mojikumi-line-end\">，</span>也有和 Wikipedia 有出入的地方<span class=\"mojikumi-line-end\">，</span>也标星了<span class=\"mojikumi-line-end\">，</span>感觉后面不一定用得上<span class=\"mojikumi-line-end\">，</span>就先咕了<span class=\"mojikumi-line-end\">。</span></p></div></div></aside>",
            "url": "https://ouuan.moe/post/2023/01/ddpp-2",
            "title": "DDPP 第二章学习笔记",
            "summary": "\n\n<p><a href=\"https://wakerly.org/DDPP/\">DDPP5</a> 第二章 <span class=\"mojikumi\">“</span>Number Systems and Codes<span class=\"mojikumi\">”</span> 的学习笔记<span class=\"mojikumi-line-end\">。</span></p>\n<p>本章的主要内容为一些常用的编码以及纠错码的原理<span class=\"mojikumi-line-end\">。</span></p>\n",
            "date_modified": "2023-01-24T14:37:12.000Z",
            "tags": [
                "ddpp",
                "学习笔记"
            ]
        },
        {
            "id": "https://ouuan.moe/post/2023/01/glyph-segregator",
            "content_html": "<p>当你看到 <a href=\"https://ayu.land/webfont\">一种很新的中文字体网页嵌入方案</a><span class=\"mojikumi-line-end\">，</span>但是懒得优化 DP<span class=\"mojikumi-line-end\">，</span>也不会进化算法<span class=\"mojikumi-line-end\">，</span>你可以……</p>\n<p>整一个<a href=\"https://github.com/ouuan/glyph-segregator\"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class=\"mojikumi-line-start\">（</span></p>\n\n<p><s>这就是你 <a href=\"/post/2023/01/ddpp\">开坑 DDPP</a> 不填的理由吗</s></p>\n<h2 id=\"背景\" class=\"heading\"><a href=\"#背景\" class=\"heading-anchor\" aria-label=\"章节： 背景\" tabindex=\"-1\"></a><span>背景</span></h2>\n<p>前不久看到 <a href=\"https://ayu.land/webfont\">一种很新的中文字体网页嵌入方案</a><span class=\"mojikumi-line-end\">，</span>还想着没必要做这种优化<span class=\"mojikumi-line-end\">，</span>毕竟按 Google Fonts 进行子集化就可以做到每页 1MB 左右<span class=\"mojikumi-line-end\">，</span>按现代的网速不会有太大问题<span class=\"mojikumi-line-end\">，</span>用 devtools 开节流试了下看起来也还行<span class=\"mojikumi-line-end\">。</span></p>\n<p>然后我回家了<span class=\"mojikumi-line-end\">，</span>离开了校园网<span class=\"mojikumi-line-end\">。</span>虽然自定义域名的 Cloudflare Pages 还能访问<span class=\"mojikumi-line-end\">，</span>但速度暂且不论<span class=\"mojikumi-line-end\">，</span>丢包率就很有点恐怖<span class=\"mojikumi-line-end\">，</span>经常页面加载一半就卡住了<span class=\"mojikumi-line-end\">。</span></p>\n<p>再然后<span class=\"mojikumi-line-end\">，</span>Google Fonts 里 Noto Serif SC 的 unicode range 不含单引号<span class=\"mojikumi-line-start\">（</span>和撇号是同一个字符<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>导致 <a href=\"/post/2023/01/ddpp\">DDPP 序</a> 里引用的那段话的撇号在我的手机上显示成了很宽的另一种字体<span class=\"mojikumi-line-end\">，</span>才让我<a href=\"https://github.com/ouuan/iles-blog/commit/080bd7112f88d2eae1e86594f8820c0c517e37ce\">发现这个问题</a><span class=\"mojikumi-line-end\">。</span>为了以后能及时发现这种问题<span class=\"mojikumi-line-end\">，</span>我就设置了不使用本地字体直接使用 web font 的 Stylus<span class=\"mojikumi-line-end\">。</span></p>\n<p>恐怖的丢包率<span class=\"mojikumi-line-end\">，</span>加上自己亲身体验 web font 加载<span class=\"mojikumi-line-end\">，</span>让我意识到了<span class=\"mojikumi-line-end\">，</span>在国内普通网络环境下<span class=\"mojikumi-line-end\">，</span>如果你的设备没有安装思源宋体<span class=\"mojikumi-line-end\">，</span>访问我的博客会是多么难受<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"主体思路\" class=\"heading\"><a href=\"#主体思路\" class=\"heading-anchor\" aria-label=\"章节： 主体思路\" tabindex=\"-1\"></a><span>主体思路</span></h2>\n<p><span class=\"mojikumi-line-start\">“</span>另一种<span class=\"mojikumi-line-end\">”</span>的主体思路<a href=\"https://ayu.land/webfont#principle\">和<span class=\"mojikumi-line-start\">“</span>一种<span class=\"mojikumi-line-end\">”</span>是一样的</a><span class=\"mojikumi-line-end\">，</span>就是把字体划分成常用字和非常用字<span class=\"mojikumi-line-end\">。</span>但是<span class=\"mojikumi-line-start\">“</span>一种<span class=\"mojikumi-line-end\">”</span>在这之后选择了使用动态规划 + 进化算法来对常用字进行进一步的拆分<span class=\"mojikumi\">，</span><wbr><span class=\"mojikumi-line-start\">“</span>另一种<span class=\"mojikumi-line-end\">”</span>所做的优化则基于这样一个观察<span class=\"mojikumi-line-end\">：</span>虽然一个博客有一堆页面<span class=\"mojikumi-line-end\">，</span>但 80% 的人只会访问 20% 的页面<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>一个字体是否常用<span class=\"mojikumi-line-end\">，</span>不仅要看出现在几个页面<span class=\"mojikumi-line-end\">，</span>还要看出现在哪些页面<span class=\"mojikumi-line-end\">。</span></p>\n<p>这时候<span class=\"mojikumi-line-end\">，</span><s>一直充当<a href=\"https://busuanzi.ibruce.info/\">不蒜子</a>平替<span class=\"mojikumi-line-start\">（</span>哪平价了啊<span class=\"mojikumi-line-end\">）</span>的</s> Plausible Analytics 就发挥作用了<span class=\"mojikumi-line-end\">：</span>近段时间的页面访问量可以用来估计每个页面被访问的概率<span class=\"mojikumi-line-end\">，</span>为常用字的划分提供可靠的数据支撑<span class=\"mojikumi-line-end\">。</span></p>\n<p>一旦估计出了每个页面的被访问概率<span class=\"mojikumi-line-end\">，</span>就可以对每个 glyph 分别计算出<span class=\"mojikumi-line-end\">，</span>如果在每一个使用了它的页面上都加载一遍<span class=\"mojikumi-line-end\">，</span>期望代价是多少<span class=\"mojikumi-line-end\">，</span>也就是使用了它的所有页面的被访问概率之和<span class=\"mojikumi-line-end\">。</span>如果这个数大于 1<span class=\"mojikumi-line-end\">，</span>就设为常用<span class=\"mojikumi-line-end\">，</span>否则设为不常用<span class=\"mojikumi-line-end\">。</span></p>\n<p>这个思路还是非常简单的<span class=\"mojikumi-line-end\">，</span>可以说只是<span class=\"mojikumi-line-start\">“</span>结合实际<span class=\"mojikumi-line-end\">，</span>采取启发式方法<span class=\"mojikumi\">”</span><span class=\"mojikumi-line-end\">，</span>也称不上是一种新的方案<span class=\"mojikumi-line-start\">（</span></p>\n<h2 id=\"具体实现\" class=\"heading\"><a href=\"#具体实现\" class=\"heading-anchor\" aria-label=\"章节： 具体实现\" tabindex=\"-1\"></a><span>具体实现</span></h2>\n<p>虽然思路简单<span class=\"mojikumi-line-end\">，</span>但实现起来还是有点复杂的<span class=\"mojikumi-line-end\">，</span>坑有点多<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"获取页面使用的字体\" class=\"heading\"><a href=\"#获取页面使用的字体\" class=\"heading-anchor\" aria-label=\"章节： 获取页面使用的字体\" tabindex=\"-1\"></a><span>获取页面使用的字体</span></h3>\n<p>如果整个页面都使用一种字体<span class=\"mojikumi-line-end\">，</span>直接看 HTML 里有哪些中文就差不多了<span class=\"mojikumi-line-end\">，</span>但我不仅<span class=\"font-sans\">非正文用的是黑体</span><span class=\"mojikumi-line-end\">，</span><span class=\"font-kai\">引用块还是楷体</span><span class=\"mojikumi-line-end\">，</span>说不定在哪冒出来个<code>等宽</code>或者 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX公式</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX\\text{公式}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8988em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6833em;\"><span style=\"top:-2.905em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4678em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">公式</span></span></span></span></span></span><span class=\"mojikumi-line-end\">，</span>有时候还会<strong>加粗</strong><span class=\"mojikumi-line-end\">，</span>更别提心情好的时候会像这段一样直接塞 <code>&#x3C;span class=\"\"></code> 来修改样式<span class=\"mojikumi-line-end\">。</span></p>\n<p>一开始我通过 <a href=\"https://github.com/Munter/subfont\">subfont</a> 找到了 <a href=\"https://github.com/assetgraph/font-tracer\">assetgraph/font-tracer</a><span class=\"mojikumi-line-end\">，</span>但这个 font-tracer 就两个 star<span class=\"mojikumi-line-end\">，</span>没有文档<span class=\"mojikumi-line-end\">，</span><a href=\"https://github.com/assetgraph/assetgraph\">AssetGraph</a> 又是一个 12 年前的老项目<span class=\"mojikumi-line-end\">，</span>连 Definitely Typed 都没有<span class=\"mojikumi-line-end\">，</span>试了一下完全用不会<span class=\"mojikumi-line-end\">。</span></p>\n<p>想了想<span class=\"mojikumi-line-end\">，</span>最靠谱的还是直接交给浏览器来处理<span class=\"mojikumi-line-end\">，</span>所以就用 <a href=\"https://github.com/puppeteer/puppeteer\">puppeteer</a> 了<span class=\"mojikumi-line-end\">。</span>目前采用的算法是<span class=\"mojikumi-line-end\">：</span>遍历 <code>&#x3C;body></code><span class=\"mojikumi-line-end\">，</span>跳过 <code>&#x3C;script></code> 和 <code>&#x3C;style></code> 子树<span class=\"mojikumi-line-end\">，</span>找到所有 <a href=\"https://developer.mozilla.org/docs/Web/API/Text\">Text 节点</a><span class=\"mojikumi-line-end\">，</span>再加上所有 <code>&#x3C;img></code> 的 <code>alt</code> 属性<span class=\"mojikumi-line-end\">。</span>找到节点后<span class=\"mojikumi-line-end\">，</span>可以用 <a href=\"https://developer.mozilla.org/docs/Web/API/Window/getComputedStyle\"><code class=\"break-all\">getComputedStyle</code></a> 获取 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 等信息<span class=\"mojikumi-line-end\">。</span></p>\n<p>因为要处理很多页面<span class=\"mojikumi-line-end\">，</span>也要花一点时间<span class=\"mojikumi-line-end\">，</span>所以用了 <a href=\"https://github.com/thomasdondorf/puppeteer-cluster\">puppeteer-cluster</a> 来并行处理<span class=\"mojikumi\">。</span><wbr><span class=\"mojikumi-line-start\">（</span>不知道为什么<span class=\"mojikumi-line-end\">，</span>在 vitest 和 iles 中运行时<span class=\"mojikumi-line-end\">，</span>不加参数会报错<span class=\"mojikumi-line-end\">，</span>而加了 <code>--<wbr>no<wbr>-<wbr>sandbox<wbr> --<wbr>no<wbr>-<wbr>zygote</code> 之后并行的优化效果就差一些<span class=\"mojikumi\">。</span><span class=\"mojikumi-line-end\">）</span></p>\n<p>代码<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/glyph-segregator/blob/master/src/getPagesFontInfo.ts\"><code class=\"break-all\">getPagesFontInfo.ts</code></a></p>\n<h3 id=\"字体匹配\" class=\"heading\"><a href=\"#字体匹配\" class=\"heading-anchor\" aria-label=\"章节： 字体匹配\" tabindex=\"-1\"></a><span>字体匹配</span></h3>\n<p><a href=\"https://www.w3.org/TR/css-fonts-4/#font-style-matching\">完整的字体匹配</a>是非常复杂的<span class=\"mojikumi-line-end\">，</span>我也没找到相关的库<span class=\"mojikumi-line-end\">，</span>就自己写了一个简陋的只匹配完整 <code>font<wbr>-<wbr>family</code> 和 <code>font<wbr>-<wbr>weight</code> 的算法<span class=\"mojikumi-line-end\">。</span></p>\n<p>其实一般 <code>font<wbr>-<wbr>weight</code> 也就 400 和 700<span class=\"mojikumi-line-end\">，</span>但我还是实现了一个 <a href=\"https://developer.mozilla.org/docs/Web/CSS/font-weight#fallback_weights\">完整的 <code>font<wbr>-<wbr>weight</code> fallback</a><span class=\"mojikumi-line-end\">。</span></p>\n<p>代码<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/glyph-segregator/blob/master/src/matchFonts.ts\"><code>matchFonts<wbr>.<wbr>ts</code></a></p>\n<h3 id=\"常用字体划分\" class=\"heading\"><a href=\"#常用字体划分\" class=\"heading-anchor\" aria-label=\"章节： 常用字体划分\" tabindex=\"-1\"></a><span>常用字体划分</span></h3>\n<p>最关键的这一步实现起来是最简单的<span class=\"mojikumi-line-end\">，</span>因为是纯算法的<span class=\"mojikumi-line-end\">，</span>不涉及到可怕的 Web<span class=\"mojikumi-line-start\">（</span></p>\n<p>代码<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/glyph-segregator/blob/master/src/getCommonGlyphs.ts\"><code>getCommonGlyphs<wbr>.<wbr>ts</code></a></p>\n<h3 id=\"生成字体文件和-font-face\" class=\"heading\"><a href=\"#生成字体文件和-font-face\" class=\"heading-anchor\" aria-label=\"章节： 生成字体文件和 @font-face\" tabindex=\"-1\"></a><span>生成字体文件和 @font-face</span></h3>\n<p>我使用的是 <a href=\"https://github.com/papandreou/subset-font\">subset-font</a> 来生成字体子集文件<span class=\"mojikumi-line-end\">。</span></p>\n<p>这一步最大的困难<span class=\"mojikumi-line-end\">，</span>是正确地写出 <code>@font-face</code><span class=\"mojikumi-line-end\">。</span></p>\n<p>一开始我是给常用字 (common) 和非常用字 (unique) 不同的 <code>font<wbr>-<wbr>family</code><span class=\"mojikumi-line-end\">，</span>然后发现<span class=\"mojikumi-line-end\">，</span>在特殊情况下<span class=\"mojikumi-line-start\">（</span>幸好我的博客文章列表就触发了这个问题<span class=\"mojikumi-line-end\">，</span>不然真没想到<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">，</span>某个字的常规样式属于 common 而粗体属于 unique<span class=\"mojikumi-line-end\">，</span>由于 <code>font<wbr>-<wbr>family</code> 里 common 排在 unique 前面<span class=\"mojikumi-line-end\">，</span>就会匹配到常规样式<span class=\"mojikumi-line-end\">，</span>而加载不出粗体<span class=\"mojikumi-line-end\">。</span></p>\n<p>为了解决这个问题<span class=\"mojikumi-line-end\">，</span>common 和 unique 需要使用同一个 <code>font<wbr>-<wbr>family</code><span class=\"mojikumi-line-end\">。</span>因为用过 Google Fonts 子集划分方案<span class=\"mojikumi-line-end\">，</span>我知道有不同 <code>unicode<wbr>-<wbr>range</code> 的 <code>@font-face</code> 是可以组合在一起的<span class=\"mojikumi-line-end\">，</span>难道我需要计算出精确的 <code>unicode<wbr>-<wbr>range</code> 写在 CSS 里？</p>\n<p>为此<span class=\"mojikumi-line-end\">，</span>我粗略地读了半天<span class=\"mojikumi-line-start\">（</span><s>这两个词不冲突</s><span class=\"mojikumi-line-end\">）</span><a href=\"https://www.w3.org/TR/css-fonts-4/\">CSS Fonts Module Level 4 W3C Working Draft</a><span class=\"mojikumi-line-end\">，</span>发现它说<span class=\"mojikumi-line-end\">，</span><code>unicode<wbr>-<wbr>range</code> 可以比真实的 character map 大很多<span class=\"mojikumi-line-end\">，</span>若干 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 也可以相交<span class=\"mojikumi-line-end\">。</span>但是<span class=\"mojikumi-line-end\">，</span>它没说两个 <code>@font-face</code> 能不能除了 <code>src</code> 啥都一样<span class=\"mojikumi-line-end\">，</span><a href=\"https://www.w3.org/TR/css-fonts-4/#composite-fonts\">而只说了</a><span class=\"mojikumi-line-end\">：</span></p>\n<blockquote>\n<p>Multiple @font-face rules with different unicode ranges for the same family and style descriptor values can be used to create composite fonts that mix the glyphs from different fonts for different scripts.</p>\n</blockquote>\n<p>我也不敢依赖于实验结果<span class=\"mojikumi-line-end\">，</span>就没做实验<span class=\"mojikumi-line-end\">，</span>直接加上了粗略但是保证 common 和 unique 不相同的 <code>unicode<wbr>-<wbr>range</code><span class=\"mojikumi-line-end\">，</span>具体来说就是 0 到最大的 code point<span class=\"mojikumi-line-end\">。</span></p>\n<p>这里从 0 开始也是有一定原因的<span class=\"mojikumi-line-end\">：</span>我在看 specification 的时候注意到一个奇怪的东西叫 <a href=\"https://www.w3.org/TR/css-fonts-4/#first-available-font\"><i>first available font</i></a><span class=\"mojikumi-line-end\">，</span>虽然没太看懂具体是什么意思<span class=\"mojikumi-line-end\">，</span>但大致上感觉最好是让 <code>unicode<wbr>-<wbr>range</code> 包含空格<span class=\"mojikumi-line-end\">，</span>为了保险就从 0 开始了<span class=\"mojikumi-line-end\">。</span></p>\n<p>最后还有一个坑<span class=\"mojikumi-line-end\">：</span>如果 composite font 中两个 <code>@font-face</code> 的 <code>unicode<wbr>-<wbr>range</code> 相交<span class=\"mojikumi-line-end\">，</span>给交集内的字符匹配字体时<span class=\"mojikumi-line-end\">，</span>会按出现位置的逆序进行匹配<span class=\"mojikumi-line-end\">。</span></p>\n<p>这能有什么坑呢<span class=\"mojikumi-line-start\">（</span><span class=\"mojikumi-line-end\">，</span>如果不动手试一试真的很难想到.. 按照整体的设计<span class=\"mojikumi-line-end\">，</span>访问一个页面时很有可能是 common 字体已经缓存好了<span class=\"mojikumi-line-end\">，</span>需要下载 unique 字体<span class=\"mojikumi-line-end\">，</span>如果 unique 的 <code>@font-face</code> 放在 common 的后面<span class=\"mojikumi-line-end\">，</span>就会优先匹配<span class=\"mojikumi-line-end\">，</span>从而阻塞住已经缓存的 common 字体<span class=\"mojikumi-line-end\">，</span>整个页面都要等 unique 下载好才切换字体<span class=\"mojikumi-line-end\">，</span>而不是先显示 common 再显示剩下的 unique<span class=\"mojikumi-line-end\">。</span>当然<span class=\"mojikumi-line-end\">，</span>反过来的话<span class=\"mojikumi-line-end\">，</span>unique 也会等 common<span class=\"mojikumi-line-end\">，</span>但这样一般来说是更好的<span class=\"mojikumi-line-end\">。</span></p>\n<p>还有一些细节优化<span class=\"mojikumi-line-end\">：</span></p>\n<ul>\n<li>生成 unique 字体文件时<span class=\"mojikumi-line-end\">，</span>文件名里有 hash 就够了<span class=\"mojikumi-line-end\">，</span>不要再添加和页面有关的信息<span class=\"mojikumi-line-end\">，</span>这样的话如果两个页面刚好 unique glyph 集合相同就可以共用一个字体文件<span class=\"mojikumi-line-end\">。</span></li>\n<li>如果一个页面一个 common glyph 都没用<span class=\"mojikumi-line-end\">，</span>就可以不添加 common font 的 <code>@font-face</code><span class=\"mojikumi-line-end\">。</span></li>\n</ul>\n<p>代码<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/glyph-segregator/blob/master/src/generateFontFiles.ts\"><code class=\"break-all\">generateFontFiles.ts</code></a></p>\n<h3 id=\"将-css-写入-html-文件\" class=\"heading\"><a href=\"#将-css-写入-html-文件\" class=\"heading-anchor\" aria-label=\"章节： 将 CSS 写入 HTML 文件\" tabindex=\"-1\"></a><span>将 CSS 写入 HTML 文件</span></h3>\n<p>虽然也有想过直接找到 <code>&#x3C;/head></code> 文本替换<span class=\"mojikumi-line-end\">，</span>但为了靠谱还是用的 <a href=\"https://github.com/jsdom/jsdom\"><code>jsdom</code></a><span class=\"mojikumi-line-end\">。</span></p>\n<p>这部分的代码是最短的<span class=\"mojikumi-line-end\">：</span><a href=\"https://github.com/ouuan/glyph-segregator/blob/master/src/injectCSS.ts\"><code>injectCSS<wbr>.<wbr>ts</code></a></p>\n<h3 id=\"给项目起名\" class=\"heading\"><a href=\"#给项目起名\" class=\"heading-anchor\" aria-label=\"章节： 给项目起名\" tabindex=\"-1\"></a><span>给项目起名</span></h3>\n<p>主体思路是把 glyph 分成两类分别对待<span class=\"mojikumi-line-end\">，</span>就很有 segregate 的感觉<span class=\"mojikumi-line-start\">（</span></p>\n<p>主要还是因为刚写了一个 <a href=\"/post/2022/11/csapp-9#segregated-fit\">segregated fit</a> 印象比较深刻<span class=\"mojikumi-line-end\">，</span>所以就取了这么个名字<span class=\"mojikumi-line-end\">。</span></p>\n<h3 id=\"在博客中使用\" class=\"heading\"><a href=\"#在博客中使用\" class=\"heading-anchor\" aria-label=\"章节： 在博客中使用\" tabindex=\"-1\"></a><span>在博客中使用</span></h3>\n<p>就是 <a href=\"https://iles-docs.netlify.app/config#ssg-onsiterendered\">从 iles 获取页面信息</a><span class=\"mojikumi-line-end\">，</span>从 <a href=\"https://plausible.io/docs/stats-api#get-apiv1statsbreakdown\">Plausible Stats API</a> 获取访问量<span class=\"mojikumi-line-end\">，</span>调用 <a href=\"https://vitejs.dev/guide/api-javascript.html#preview\">Vite API</a> 跑一个 preview server<span class=\"mojikumi-line-end\">，</span>然后调用 <code>glyph<wbr>-<wbr>segregator</code><span class=\"mojikumi-line-end\">。</span>直接看<a href=\"https://github.com/ouuan/iles-blog/commit/695f8b22ca3a791ceeb5440e81a6fa377b50bb3b#diff-ca899b3bf20a893bb3dfb058072a2b279953ce008f562727ad74a76d520be662\">代码</a>吧<span class=\"mojikumi-line-end\">。</span></p>\n<p>访问概率的计算方式是<span class=\"mojikumi-line-end\">，</span>看每个页面近 90 天的访客数<span class=\"mojikumi-line-end\">，</span>加一后除以其中最高的加二<span class=\"mojikumi-line-start\">（</span>其实这个加一加二基本没啥用<span class=\"mojikumi\">）</span><span class=\"mojikumi-line-end\">。</span>用最高页面访客数而非实际总访客数作分母<span class=\"mojikumi-line-end\">，</span>是想在算法的基础上更加偏向于划分到常用字一些<span class=\"mojikumi-line-end\">，</span>稍微优化一点访问页面较多的访客的体验<span class=\"mojikumi-line-end\">，</span>也可以少一次 API 查询<span class=\"mojikumi-line-end\">。</span></p>\n<p>更新常用字集合用的是 <a href=\"https://github.com/ouuan/iles-blog/blob/master/.github/workflows/update-fonts.yml\">scheduled GitHub Actions</a><span class=\"mojikumi-line-end\">，</span>在 Docker 里跑是因为 <a href=\"https://stackoverflow.com/questions/74332455/connection-refused-for-local-server-in-github-actions-workflow/74341376\">Connection refused for local server in github actions workflow</a><span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"实际效果\" class=\"heading\"><a href=\"#实际效果\" class=\"heading-anchor\" aria-label=\"章节： 实际效果\" tabindex=\"-1\"></a><span>实际效果</span></h2>\n<p>整个 <code>glyphSegregator</code> 用时 40s 左右<span class=\"mojikumi-line-end\">，</span>glyph 数量和 common font file size (woff2) 如表所示<span class=\"mojikumi-line-end\">：</span></p>\n<div class=\"overflow-auto my-6\"><table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">Noto Serif SC Regular</th>\n<th align=\"center\">Noto Serif SC Bold</th>\n<th align=\"center\">LXGW WenKai Regular</th>\n<th align=\"center\">LXGW WenKai Bold</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><span class=\"whitespace-nowrap\">common</span></td>\n<td align=\"center\">575 (162.7KiB)</td>\n<td align=\"center\">25 (8.5KiB)</td>\n<td align=\"center\">37 (5.2KiB)</td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\">unique</td>\n<td align=\"center\">2311</td>\n<td align=\"center\">1536</td>\n<td align=\"center\">161</td>\n<td align=\"center\">0</td>\n</tr>\n</tbody>\n</table></div>\n<p>首页只需加载两个 Regular 的 common font<span class=\"mojikumi-line-end\">，</span>每个页面需要加载的字体文件总大小缩减到了原来使用子集化的 1/4 左右<span class=\"mojikumi-line-end\">，</span>并且加载的字体文件数量从 10~30 个缩减到了 2~6 个<span class=\"mojikumi-line-end\">。</span></p>\n<p>作为对比<span class=\"mojikumi-line-end\">，</span>如果出现在两个页面就设为常用字<span class=\"mojikumi-line-end\">，</span>Noto Serif SC Regular 的 common 有 299KiB<span class=\"mojikumi-line-end\">，</span>出现在三个页面则是 227KiB<span class=\"mojikumi-line-end\">。</span></p>\n<h2 id=\"后记：font-subsetting-与-kerning\" class=\"heading\"><a href=\"#后记：font-subsetting-与-kerning\" class=\"heading-anchor\" aria-label=\"章节： 后记：font subsetting 与 kerning\" tabindex=\"-1\"></a><span>后记<span class=\"mojikumi-line-end\">：</span>font subsetting 与 kerning</span></h2>\n<p>因为通过 Stylus 设置了不使用本地字体<span class=\"mojikumi-line-end\">，</span>我可以轻松地在本地字体和 web font 之间切换<span class=\"mojikumi-line-end\">。</span>然后我就偶然发现<span class=\"mojikumi-line-end\">，</span>切换时一些标题发生了字符的偏移<span class=\"mojikumi-line-end\">。</span>原因也很简单<span class=\"mojikumi-line-end\">，</span>就是相邻的两个字符本来有 kerning (字距调整)<span class=\"mojikumi-line-end\">，</span>但它们被划分到了不同的子集中<span class=\"mojikumi-line-end\">，</span>生成字体子集时就丢失了 kerning 信息<span class=\"mojikumi-line-end\">。</span></p>\n<p>我在 glyph-segregator 中 <a href=\"https://github.com/ouuan/glyph-segregator/commit/ae3ddd5cbb91f0eb6bbfec7071ee408c28b36dec\">添加了 <code class=\"break-all\">alwaysCommonGlyphs</code> 选项</a><span class=\"mojikumi-line-start\">（</span>ASCII 字符总是设为 common<span class=\"mojikumi-line-end\">，</span>如果需要处理非 ASCII 字符的 kerning 也可以修改设置<span class=\"mojikumi-line-end\">，</span>但我的博客就假设只有 ASCII 字符会遇到这个问题<span class=\"mojikumi-line-end\">）</span>来解决这一问题<span class=\"mojikumi-line-end\">。</span>最好的解决方案是真的去看一下字体里有哪些 kerning 信息然后相应地处理<span class=\"mojikumi-line-end\">，</span>但是差不多得了<span class=\"mojikumi-line-start\">（</span></p>\n<a id=\"font-kerning-示例\" name=\"font-kerning-示例\" aria-hidden=\"true\"></a>\n<aside role=\"note\" data-v-a2ab257f><div class=\"shadow-md rd-1 b-l-6 my-6 bg-blue-1 dark:bg-blue-9 b-blue\" data-v-a2ab257f><div class=\"p-3 flex justify-between items-center\" data-v-a2ab257f><h3 class=\"flex items-center gap-1 font-bold\" data-v-a2ab257f><span class=\"text-5 i-mdi-pencil text-blue\" data-v-a2ab257f></span><span class=\"sr-only\" data-v-a2ab257f>Note: </span><span data-v-a2ab257f>font kerning 示例</span></h3><!--v-if--></div><div class=\"overflow-auto rd-br-1 bg-card px-6 dark:bg-bghover\" data-v-a2ab257f><ul>\n<li>有 kerning: <span style=\"font-kerning: normal; font-size: 2rem;\">TAVeYoW</span></li>\n<li>没 kerning: <span style=\"font-kerning: none; font-size: 2rem;\">TAVeYoW</span></li>\n</ul></div></div></aside>\n<p>后记的后记<span class=\"mojikumi-line-end\">：</span>还是改成了<a href=\"https://github.com/ouuan/glyph-segregator/commit/e955eb1c935d77adf0e4bcb5c870fee0614801b6\">即使未被使用也添加进 common glyph set</a><span class=\"mojikumi-line-end\">，</span>否则如果新加一个 always common 的 glyph<span class=\"mojikumi-line-end\">，</span>为了让它 common<span class=\"mojikumi-line-end\">，</span>就会改变 common glyph set<span class=\"mojikumi-line-end\">，</span>导致 cache 失效<span class=\"mojikumi-line-end\">。</span>这里有一定的 trade-off<span class=\"mojikumi-line-end\">，</span>要在 cache 失效 / 多塞一些未被使用的 glyph / kerning 挂掉之间进行选择<span class=\"mojikumi-line-end\">，</span>我还是选择了多塞一些未被使用的 glyph<span class=\"mojikumi-line-end\">，</span>毕竟整个 ASCII 也没多大<span class=\"mojikumi-line-end\">。</span>最好是借助人类智慧来预测一下哪些 glyph 更有可能在未来被添加而放进 common glyph set 里<span class=\"mojikumi-line-end\">，</span>其他 glyph 就只有使用了才放<span class=\"mojikumi-line-end\">，</span>但是差不多得了<span class=\"mojikumi-line-start\">（</span></p>",
            "url": "https://ouuan.moe/post/2023/01/glyph-segregator",
            "title": "另一种很新的中文字体网页嵌入方案",
            "summary": "<p>当你看到 <a href=\"https://ayu.land/webfont\">一种很新的中文字体网页嵌入方案</a><span class=\"mojikumi-line-end\">，</span>但是懒得优化 DP<span class=\"mojikumi-line-end\">，</span>也不会进化算法<span class=\"mojikumi-line-end\">，</span>你可以……</p>\n<p>整一个<a href=\"https://github.com/ouuan/glyph-segregator\"><em>另</em>一种很新的中文字体网页嵌入方案</a><span class=\"mojikumi-line-start\">（</span></p>\n",
            "date_modified": "2023-01-19T13:15:05.000Z",
            "tags": [
                "blog",
                "Web",
                "项目开发"
            ]
        }
    ]
}